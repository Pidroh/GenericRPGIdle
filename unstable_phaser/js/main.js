(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Achievement = function(id,name,description,image) {
	this.conditions = [];
	this.id = id;
	this.name = name;
	this.description = description;
	this.image = image;
};
$hxClasses["Achievement"] = Achievement;
Achievement.__name__ = "Achievement";
Achievement.prototype = {
	__class__: Achievement
};
var AchievementGroup = function() {
	this.achievements = [];
};
$hxClasses["AchievementGroup"] = AchievementGroup;
AchievementGroup.__name__ = "AchievementGroup";
AchievementGroup.prototype = {
	__class__: AchievementGroup
};
var AchievementLogic = function() { };
$hxClasses["AchievementLogic"] = AchievementLogic;
AchievementLogic.__name__ = "AchievementLogic";
AchievementLogic.isLocked = function(a,pers) {
	if(pers.achievs.h[a.id] == null) {
		return true;
	}
	if(pers.achievs.h[a.id].state == Achievement.LOCKED) {
		return true;
	}
	return false;
};
AchievementLogic.unlock = function(a,pers) {
	if(pers.achievs.h[a.id] == null) {
		var v = null;
		pers.achievs.h[a.id] = v;
		var p = { state : Achievement.UNLOCKED};
		pers.achievs.h[a.id] = p;
	} else {
		pers.achievs.h[a.id].state = Achievement.UNLOCKED;
	}
};
AchievementLogic.canUnlock = function(a,data) {
	var _g = 0;
	var _g1 = a.conditions;
	while(_g < _g1.length) {
		var condition = _g1[_g];
		++_g;
		var pass = ConditionChecker.Check(condition,data.data);
		if(!pass) {
			return false;
		}
	}
	return true;
};
var AchievementGroupHolder = function(dimensionId) {
	this.achievements = new AchievementGroup();
	this.dimensionId = dimensionId;
};
$hxClasses["AchievementGroupHolder"] = AchievementGroupHolder;
AchievementGroupHolder.__name__ = "AchievementGroupHolder";
AchievementGroupHolder.prototype = {
	__class__: AchievementGroupHolder
};
var AchievementModelData = function() {
	this.achievements = [];
};
$hxClasses["AchievementModelData"] = AchievementModelData;
AchievementModelData.__name__ = "AchievementModelData";
AchievementModelData.prototype = {
	__class__: AchievementModelData
};
var AchievementModel = function() {
	this.unlockedAchievements = [];
	this.modelData = new AchievementModelData();
};
$hxClasses["AchievementModel"] = AchievementModel;
AchievementModel.__name__ = "AchievementModel";
AchievementModel.prototype = {
	createAchievements: function() {
		var as = new AchievementGroup();
		var a = new Achievement("main1","Beginner's Door","Clear your first area",Sprite.create("achiev_a1",64,64));
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region0",2));
		as.achievements.push(a);
		var a = new Achievement("main2","Death to the Boss","Get through your first boss",Sprite.create("achiev_a2",64,64));
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region0",6));
		as.achievements.push(a);
		var a = new Achievement("main3","A bit of experience","Get through 20 areas",Sprite.create("achiev_a3",64,64));
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region0",21));
		as.achievements.push(a);
		var a = new Achievement("challenge1","Step of Glory A","Clear Area 5 of Wolf Fields ",Sprite.create("achiev_e1",64,64));
		as.achievements.push(a);
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region1",6));
		var a = new Achievement("challenge2","Step of Glory B","Clear Area 10 of Tonberry's Lair",Sprite.create("achiev_e2",64,64));
		as.achievements.push(a);
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region2",11));
		var a = new Achievement("challenge3","Step of Glory C","Clear Area 15 of Altar Cave",Sprite.create("achiev_e3",64,64));
		a.conditions.push(Condition.createWithKeyAndData(ConditionType.largerOrEqual,"maxarea_region3",16));
		as.achievements.push(a);
		var agh = new AchievementGroupHolder(GRIConfigurer.DIMENSION_ID_LAGRIMA);
		agh.achievements = as;
		this.modelData.achievements.push(agh);
	}
	,update: function() {
		var achievementData = this.modelData.achievementData;
		var _g_current = 0;
		var _g_array = this.modelData.achievements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var groupIndex = _g1_key;
			var agh = _g1_value;
			if(agh.dimensionId == this.dimensionId) {
				var _g2_current = 0;
				var _g2_array = agh.achievements.achievements;
				while(_g2_current < _g2_array.length) {
					var _g3_value = _g2_array[_g2_current];
					var _g3_key = _g2_current++;
					var index = _g3_key;
					var value = _g3_value;
					if(AchievementLogic.isLocked(value,achievementData)) {
						if(AchievementLogic.canUnlock(value,this.modelData.globalData)) {
							AchievementLogic.unlock(value,achievementData);
						}
					} else if(this.unlockedAchievements.indexOf(value.id) != -1 == false) {
						this.unlockedAchievements.push(value.id);
					}
				}
			}
		}
	}
	,__class__: AchievementModel
};
var AdvancedArray = function() {
};
$hxClasses["AdvancedArray"] = AdvancedArray;
AdvancedArray.__name__ = "AdvancedArray";
AdvancedArray.prototype = {
	getFreeElementIndex: function(array) {
		var _g_current = 0;
		var _g_array = array;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value == null) {
				return index;
			}
		}
		array.push(null);
		return array.length - 1;
	}
	,checkArray: function(arg0) {
		if(arg0 == null) {
			return [];
		}
		return arg0;
	}
	,getElement: function(index,arg0) {
		while(arg0.length <= index) arg0.push(null);
		return arg0[index];
	}
	,setElement: function(index,arg0,arg2) {
		arg0[index] = arg2;
		return arg2;
	}
	,freeUpTrailingNull: function(arg0) {
		var reduceAmount = 0;
		var _g = 0;
		var _g1 = arg0.length;
		while(_g < _g1) {
			var i = _g++;
			if(arg0[arg0.length - i - 1] == null) {
				++reduceAmount;
			} else {
				break;
			}
		}
		arg0.length -= reduceAmount;
	}
	,getNumberOfNotNullElement: function(arg0) {
		var a = 0;
		var _g_current = 0;
		var _g_array = arg0;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				++a;
			}
		}
		return a;
	}
	,__class__: AdvancedArray
};
var ArrayOfArray = function() {
	this.arrays = [];
};
$hxClasses["ArrayOfArray"] = ArrayOfArray;
ArrayOfArray.__name__ = "ArrayOfArray";
ArrayOfArray.prototype = {
	getList: function(list) {
		return this.arrays[list];
	}
	,get_length: function() {
		return this.arrays.length;
	}
	,getElement: function(list,index) {
		return this.arrays[list][index];
	}
	,setElement: function(list,index,element) {
		this.arrays[list][index] = element;
		return element;
	}
	,adjustLength: function(length) {
		while(this.arrays.length < length) this.arrays.push([]);
	}
	,adjustLengthOfList: function(list,length) {
		while(this.arrays[list].length < length) this.arrays[list].push(null);
	}
	,pushElement: function(list,element) {
		this.arrays[list].push(element);
	}
	,__class__: ArrayOfArray
	,__properties__: {get_length:"get_length"}
};
var ArraysUtilities = function() { };
$hxClasses["ArraysUtilities"] = ArraysUtilities;
ArraysUtilities.__name__ = "ArraysUtilities";
ArraysUtilities.copyContentIntArray = function(target,source) {
	target.length = 0;
	var _g_current = 0;
	var _g_array = source;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		target.push(value);
	}
};
ArraysUtilities.trimNullArray = function(a) {
	var trimPoint = -1;
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(a[i] == null) {
			if(trimPoint == -1) {
				trimPoint = i;
			}
		} else {
			trimPoint = -1;
		}
	}
	if(trimPoint > 0) {
		a.length = trimPoint;
	}
};
var spine_attachments_AttachmentLoader = function() { };
$hxClasses["spine.attachments.AttachmentLoader"] = spine_attachments_AttachmentLoader;
spine_attachments_AttachmentLoader.__name__ = "spine.attachments.AttachmentLoader";
spine_attachments_AttachmentLoader.__isInterface__ = true;
spine_attachments_AttachmentLoader.prototype = {
	__class__: spine_attachments_AttachmentLoader
};
var AttachmentLoaderX = function() {
};
$hxClasses["AttachmentLoaderX"] = AttachmentLoaderX;
AttachmentLoaderX.__name__ = "AttachmentLoaderX";
AttachmentLoaderX.__interfaces__ = [spine_attachments_AttachmentLoader];
AttachmentLoaderX.prototype = {
	newRegionAttachment: function(skin,name,path) {
		var attachment = new spine_attachments_RegionAttachment(name);
		return attachment;
	}
	,newMeshAttachment: function(skin,name,path) {
		var attachment = new spine_attachments_MeshAttachment(name);
		return attachment;
	}
	,newBoundingBoxAttachment: function(skin,name) {
		return new spine_attachments_BoundingBoxAttachment(name);
	}
	,newClippingAttachment: function(skin,name) {
		return new spine_attachments_ClippingAttachment(name);
	}
	,newPathAttachment: function(skin,name) {
		return new spine_attachments_PathAttachment(name);
	}
	,newPointAttachment: function(skin,name) {
		return new spine_attachments_PointAttachment(name);
	}
	,__class__: AttachmentLoaderX
};
var seedyrng_GeneratorInterface = function() { };
$hxClasses["seedyrng.GeneratorInterface"] = seedyrng_GeneratorInterface;
seedyrng_GeneratorInterface.__name__ = "seedyrng.GeneratorInterface";
seedyrng_GeneratorInterface.__isInterface__ = true;
seedyrng_GeneratorInterface.prototype = {
	__class__: seedyrng_GeneratorInterface
	,__properties__: {get_usesAllBits:"get_usesAllBits",set_state:"set_state",get_state:"get_state",set_seed:"set_seed",get_seed:"get_seed"}
};
var seedyrng_Random = function(seed,generator) {
	if(seed == null) {
		var this1 = new haxe__$Int64__$_$_$Int64(seedyrng_Random.randomSystemInt(),seedyrng_Random.randomSystemInt());
		seed = this1;
	}
	if(generator == null) {
		generator = new seedyrng_Xorshift128Plus();
	}
	this.generator = generator;
	this.set_seed(seed);
};
$hxClasses["seedyrng.Random"] = seedyrng_Random;
seedyrng_Random.__name__ = "seedyrng.Random";
seedyrng_Random.__interfaces__ = [seedyrng_GeneratorInterface];
seedyrng_Random.randomSystemInt = function() {
	var value = Std.random(255) << 24 | Std.random(255) << 16 | Std.random(255) << 8 | Std.random(255);
	return value;
};
seedyrng_Random.prototype = {
	get_seed: function() {
		return this.generator.get_seed();
	}
	,set_seed: function(value) {
		return this.generator.set_seed(value);
	}
	,get_state: function() {
		return this.generator.get_state();
	}
	,set_state: function(value) {
		return this.generator.set_state(value);
	}
	,get_usesAllBits: function() {
		return this.generator.get_usesAllBits();
	}
	,nextInt: function() {
		return this.generator.nextInt();
	}
	,nextFullInt: function() {
		if(this.generator.get_usesAllBits()) {
			return this.generator.nextInt();
		} else {
			var num1 = this.generator.nextInt();
			var num2 = this.generator.nextInt();
			num2 = num2 >>> 16 | num2 << 16;
			return num1 ^ num2;
		}
	}
	,setStringSeed: function(seed) {
		this.setBytesSeed(haxe_io_Bytes.ofString(seed));
	}
	,setBytesSeed: function(seed) {
		var hash = haxe_crypto_Sha1.make(seed);
		this.set_seed(hash.getInt64(0));
	}
	,random: function() {
		var upper = this.nextFullInt() & 2097151;
		var lower = this.nextFullInt();
		var lhs = upper * Math.pow(2,32);
		var floatNum = UInt.toFloat(lower) + lhs;
		var result = floatNum * Math.pow(2,-53);
		return result;
	}
	,randomInt: function(lower,upper) {
		return Math.floor(this.random() * (upper - lower + 1)) + lower;
	}
	,uniform: function(lower,upper) {
		return this.random() * (upper - lower) + lower;
	}
	,choice: function(array) {
		return array[this.randomInt(0,array.length - 1)];
	}
	,shuffle: function(array) {
		var _g = 0;
		var _g1 = array.length - 1;
		while(_g < _g1) {
			var index = _g++;
			var randIndex = this.randomInt(index,array.length - 1);
			var tempA = array[index];
			var tempB = array[randIndex];
			array[index] = tempB;
			array[randIndex] = tempA;
		}
	}
	,__class__: seedyrng_Random
	,__properties__: {get_usesAllBits:"get_usesAllBits",set_state:"set_state",get_state:"get_state",set_seed:"set_seed",get_seed:"get_seed"}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
Math.__name__ = "Math";
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var seedyrng_Xorshift128Plus = function() {
	this._currentAvailable = false;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	this.set_seed(this1);
};
$hxClasses["seedyrng.Xorshift128Plus"] = seedyrng_Xorshift128Plus;
seedyrng_Xorshift128Plus.__name__ = "seedyrng.Xorshift128Plus";
seedyrng_Xorshift128Plus.__interfaces__ = [seedyrng_GeneratorInterface];
seedyrng_Xorshift128Plus.prototype = {
	get_usesAllBits: function() {
		return false;
	}
	,get_seed: function() {
		return this._seed;
	}
	,set_seed: function(value) {
		var b_high = 0;
		var b_low = 0;
		if(!(value.high != b_high || value.low != b_low)) {
			var this1 = new haxe__$Int64__$_$_$Int64(0,1);
			value = this1;
		}
		this._seed = value;
		this._state0 = value;
		this._state1 = seedyrng_Xorshift128Plus.SEED_1;
		this._currentAvailable = false;
		return value;
	}
	,get_state: function() {
		var bytes = new haxe_io_Bytes(new ArrayBuffer(33));
		bytes.setInt64(0,this._seed);
		bytes.setInt64(8,this._state0);
		bytes.setInt64(16,this._state1);
		bytes.b[24] = this._currentAvailable ? 1 : 0;
		if(this._currentAvailable) {
			bytes.setInt64(25,this._current);
		}
		return bytes;
	}
	,set_state: function(value) {
		if(value.length != 33) {
			throw haxe_Exception.thrown("Wrong state size " + value.length);
		}
		this._seed = value.getInt64(0);
		this._state0 = value.getInt64(8);
		this._state1 = value.getInt64(16);
		this._currentAvailable = value.b[24] == 1;
		if(this._currentAvailable) {
			this._current = value.getInt64(25);
		}
		return value;
	}
	,stepNext: function() {
		var x = this._state0;
		var y = this._state1;
		this._state0 = y;
		var b = 23;
		b &= 63;
		var b1;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high,x.low);
			b1 = this1;
		} else if(b < 32) {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high << b | x.low >>> 32 - b,x.low << b);
			b1 = this1;
		} else {
			var this1 = new haxe__$Int64__$_$_$Int64(x.low << b - 32,0);
			b1 = this1;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(x.high ^ b1.high,x.low ^ b1.low);
		x = this1;
		var a_high = x.high ^ y.high;
		var a_low = x.low ^ y.low;
		var b = 17;
		b &= 63;
		var b1;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high,x.low);
			b1 = this1;
		} else if(b < 32) {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high >> b,x.high << 32 - b | x.low >>> b);
			b1 = this1;
		} else {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high >> 31,x.high >> b - 32);
			b1 = this1;
		}
		var a_high1 = a_high ^ b1.high;
		var a_low1 = a_low ^ b1.low;
		var b = 26;
		b &= 63;
		var b1;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(y.high,y.low);
			b1 = this1;
		} else if(b < 32) {
			var this1 = new haxe__$Int64__$_$_$Int64(y.high >> b,y.high << 32 - b | y.low >>> b);
			b1 = this1;
		} else {
			var this1 = new haxe__$Int64__$_$_$Int64(y.high >> 31,y.high >> b - 32);
			b1 = this1;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(a_high1 ^ b1.high,a_low1 ^ b1.low);
		this._state1 = this1;
		var a = this._state1;
		var high = a.high + y.high | 0;
		var low = a.low + y.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		this._current = this1;
	}
	,nextInt: function() {
		if(this._currentAvailable) {
			this._currentAvailable = false;
			return this._current.low;
		} else {
			this.stepNext();
			this._currentAvailable = true;
			return this._current.high;
		}
	}
	,__class__: seedyrng_Xorshift128Plus
	,__properties__: {get_usesAllBits:"get_usesAllBits",set_state:"set_state",get_state:"get_state",set_seed:"set_seed",get_seed:"get_seed"}
};
var Generation = function(seed) {
};
$hxClasses["Generation"] = Generation;
Generation.__name__ = "Generation";
Generation.GenerateNumber = function(seed,min,max) {
};
Generation.GenerateRepetitions = function(seed,procUnits,range) {
	var purs = [];
	Generation.random.setStringSeed(seed);
	var _g_current = 0;
	var _g_array = procUnits;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var repetitions = RandomExtender.Range(Generation.random,range);
		var _g = 0;
		var _g1 = repetitions;
		while(_g < _g1) {
			var i = _g++;
			var pur = new ProceduralUnitRepeated();
			pur.position = i;
			pur.total = repetitions;
			pur.proceduralUnit = value;
			pur.randomExtra.push(Generation.random.randomInt(0,1000));
			pur.randomExtra.push(Generation.random.randomInt(0,1000));
			pur.randomExtra.push(Generation.random.randomInt(0,1000));
			purs.push(pur);
		}
	}
	return purs;
};
Generation.Generate = function(seed,maxChar1,maxChar2,repetition,response,skipCharacteristicsFirstRound) {
	Generation.random.setStringSeed(seed);
	if(response == null) {
		var response1 = [];
	}
	var responseAux = [];
	var _g = 0;
	var _g1 = repetition;
	while(_g < _g1) {
		var rep = _g++;
		var _g2 = 0;
		var _g3 = maxChar1;
		while(_g2 < _g3) {
			var c1 = _g2++;
			if(skipCharacteristicsFirstRound != null && repetition == 0 && skipCharacteristicsFirstRound.indexOf(c1) != -1) {
				continue;
			}
			var _g4 = 0;
			var _g5 = maxChar2;
			while(_g4 < _g5) {
				var c2 = _g4++;
				var pu = new ProceduralUnit();
				pu.characteristics[0] = c1;
				pu.characteristics[1] = c2;
				pu.repeat = rep;
				responseAux.push(pu);
			}
		}
		Generation.random.shuffle(responseAux);
		var _g6 = 0;
		while(_g6 < responseAux.length) {
			var unit = responseAux[_g6];
			++_g6;
			response.push(unit);
		}
		responseAux.length = 0;
	}
	return response;
};
Generation.prototype = {
	__class__: Generation
};
var ProceduralUnit = function() {
	this.repeat = 0;
	this.characteristics = [];
};
$hxClasses["ProceduralUnit"] = ProceduralUnit;
ProceduralUnit.__name__ = "ProceduralUnit";
ProceduralUnit.prototype = {
	__class__: ProceduralUnit
};
var ProceduralUnitRepeated = function() {
	this.randomExtra = [];
	this.total = 0;
	this.position = 0;
};
$hxClasses["ProceduralUnitRepeated"] = ProceduralUnitRepeated;
ProceduralUnitRepeated.__name__ = "ProceduralUnitRepeated";
ProceduralUnitRepeated.prototype = {
	__class__: ProceduralUnitRepeated
};
var BattleConstants = function() { };
$hxClasses["BattleConstants"] = BattleConstants;
BattleConstants.__name__ = "BattleConstants";
var RegionType = $hxEnums["RegionType"] = { __ename__:true,__constructs__:null
	,PROCEDURAL: {_hx_name:"PROCEDURAL",_hx_index:0,__enum__:"RegionType",toString:$estr}
	,CHALLENGE: {_hx_name:"CHALLENGE",_hx_index:1,__enum__:"RegionType",toString:$estr}
	,SEMIPROCEDURAL: {_hx_name:"SEMIPROCEDURAL",_hx_index:2,__enum__:"RegionType",toString:$estr}
};
RegionType.__constructs__ = [RegionType.PROCEDURAL,RegionType.CHALLENGE,RegionType.SEMIPROCEDURAL];
var CounterAttackData = function() {
	this.attributeInfluenceOnCounterPower = new haxe_ds_StringMap();
	this.element = null;
};
$hxClasses["CounterAttackData"] = CounterAttackData;
CounterAttackData.__name__ = "CounterAttackData";
CounterAttackData.prototype = {
	__class__: CounterAttackData
};
var CounterAttackBuffer = function(actor,counter) {
	this.actor = null;
	this.actor = actor;
	this.counterId = counter;
};
$hxClasses["CounterAttackBuffer"] = CounterAttackBuffer;
CounterAttackBuffer.__name__ = "CounterAttackBuffer";
CounterAttackBuffer.prototype = {
	__class__: CounterAttackBuffer
};
var BattleManagerConfiguration = function() {
	this.itemLevelLimit = true;
	this.equipDropChance = 15;
	this.equipDropChance_Rare = 10;
	this.regions = [];
};
$hxClasses["BattleManagerConfiguration"] = BattleManagerConfiguration;
BattleManagerConfiguration.__name__ = "BattleManagerConfiguration";
BattleManagerConfiguration.prototype = {
	__class__: BattleManagerConfiguration
};
var Prize = function() {
	this.resourcePrize = null;
	this.equipments = null;
	this.xp = 0;
};
$hxClasses["Prize"] = Prize;
Prize.__name__ = "Prize";
Prize.prototype = {
	__class__: Prize
};
var AreaData = function() {
	this.externalClearConditions = [];
};
$hxClasses["AreaData"] = AreaData;
AreaData.__name__ = "AreaData";
AreaData.prototype = {
	setEnemyInfo: function(enemyInfo) {
		this.enemy = enemyInfo;
		return this;
	}
	,__class__: AreaData
};
var RegionData = function(type) {
	this.levelOffset = 0;
	this.areaDatas = [];
	this.regionPrize = null;
	this.actorSheet = null;
	this.conditionArea = -1;
	this.conditionRegion = -1;
	this.type = type;
};
$hxClasses["RegionData"] = RegionData;
RegionData.__name__ = "RegionData";
RegionData.regionWithPrize = function(type,prize) {
	var cr = new RegionData(type);
	cr.regionPrize = prize;
	return cr;
};
RegionData.challengeRegion = function(conditionRegion,conditionArea,actorSheet,regionPrize) {
	var cr = new RegionData(RegionType.CHALLENGE);
	cr.actorSheet = actorSheet;
	cr.regionPrize = regionPrize;
	cr.conditionArea = conditionArea;
	cr.conditionRegion = conditionRegion;
	return cr;
};
RegionData.prototype = {
	__class__: RegionData
};
var ArrayHelper = function() { };
$hxClasses["ArrayHelper"] = ArrayHelper;
ArrayHelper.__name__ = "ArrayHelper";
ArrayHelper.InsertOnEmpty = function(ele,array) {
	if(array.indexOf(null) != -1) {
		var id = array.indexOf(null);
		array[id] = ele;
		return id;
	}
	array.push(ele);
	return array.length - 1;
};
var BattleManager = function() {
	this.timeGetRate = 1;
	this.timePeriodOverwrite = -1;
	this.heroMaxLevel = 99999;
	this.battleSkillsAccessible = true;
	this.autoSellNormal = false;
	this.automaticEnemyCreation = true;
	this.counterAttackBuffered = [];
	this.counterAttackDatas = [];
	this.achievementModel = new AchievementModel();
	this.global = new GlobalData();
	this.enemyAreaFromProcedural = new EnemyAreaFromProceduralUnitRepetition();
	this.equipmentToDiscard = [];
	this.volatileAttributeAux = [];
	this.volatileAttributeList = ["MP","Life","MPRechargeCount","SpeedCount",BattleConstants.damageLastTurn];
	this.skillSlotUnlocklevel = [2,7,22,35];
	this.itemDropAux = [];
	this.regionRequirements = [0];
	this.playerActions = new haxe_ds_StringMap();
	this.events = [];
	this.turnSpeedCount = 1000;
	this.externalStatBonuses = new haxe_ds_StringMap();
	this.battlePrizeAccess = new AdvancedArray();
	this.statCopyAux = new haxe_ds_StringMap();
	this.fixedRandom = new seedyrng_Random();
	this.random = new seedyrng_Random();
	this.equipMaxPerType = 100;
	this.timePeriod = 0.7;
	this.volatileEnemyItemLevelBonus = 0;
	this.volatileEnemyItemDropChanceBonus = 0;
	this.volatileEnemyXPBonusAdd = 0;
	this.volatileEnemyXPBonus = 0;
	this.statsToShowActors = [[],[]];
	this.timeCount = 0;
	this.turnList = [];
	this.autoAdvanceRequest = false;
	this.prestiged = false;
	this.notificationControl = new NotificationControl();
	this.canLevelUp = false;
	this.canAdvance = false;
	this.canRetreat = false;
	this.dirty = false;
	this.heroConditionalBonus = [];
	this.currencyModel = new CurrencyModel(null);
	this.balancing = { timeToKillFirstEnemy : 5, timeForFirstAreaProgress : 20, timeForFirstLevelUpGrind : 90, areaBonusXPPercentOfFirstLevelUp : 60};
	this.achievementModel.createAchievements();
	var bm = this;
	this.enemyAreaFromProcedural.enemySheets.push({ speciesMultiplier : null, speciesLevelStats : null, speciesAdd : null});
	this.enemyAreaFromProcedural.equipments.push(null);
	var tmp = this.enemyAreaFromProcedural.enemySheets;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.6;
	_g.h["Speed"] = 1.3;
	_g.h["LifeMax"] = 0.85;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.6;
	tmp.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}});
	this.enemyAreaFromProcedural.equipments.push(null);
	var tmp = this.enemyAreaFromProcedural.enemySheets;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 2;
	_g.h["Speed"] = 0.3;
	_g.h["LifeMax"] = 1.2;
	var _g1 = new haxe_ds_StringMap();
	_g1.h[BattleConstants.PIERCING] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Speed"] = 0.08;
	_g2.h["Defense"] = 0.1;
	tmp.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	this.enemyAreaFromProcedural.equipments.push(null);
	var tmp = this.enemyAreaFromProcedural.enemySheets;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.9;
	_g.h["Speed"] = 0.5;
	_g.h["LifeMax"] = 1.4;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 1;
	_g1.h[BattleConstants.SAFEGUARD] = 40;
	_g1.h["thunder-damage"] = 140;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.3;
	_g2.h["Speed"] = 0;
	tmp.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	this.enemyAreaFromProcedural.equipments.push(null);
	this.enemyAreaFromProcedural.equipments.push(null);
	var tmp = this.enemyAreaFromProcedural.equipments;
	var _g = new haxe_ds_StringMap();
	_g.h["thunder-damage"] = 250;
	_g.h["fire-damage"] = 30;
	tmp.push({ type : 0, seen : 2, requiredAttributes : null, attributes : _g, outsideSystems : null});
	var tmp = this.enemyAreaFromProcedural.equipments;
	var _g = new haxe_ds_StringMap();
	_g.h["fire-damage"] = 250;
	_g.h["ice-damage"] = 30;
	tmp.push({ type : 0, seen : 2, requiredAttributes : null, attributes : _g, outsideSystems : null});
	var tmp = this.enemyAreaFromProcedural.equipments;
	var _g = new haxe_ds_StringMap();
	_g.h["ice-damage"] = 250;
	_g.h["thunder-damage"] = 30;
	tmp.push({ type : 0, seen : 2, requiredAttributes : null, attributes : _g, outsideSystems : null});
	var pus = [];
	var pu = new ProceduralUnit();
	pu.characteristics.push(0);
	pu.characteristics.push(0);
	pu.repeat = 0;
	pus.push(pu);
	var pu = new ProceduralUnit();
	pu.characteristics.push(1);
	pu.characteristics.push(0);
	pu.repeat = 0;
	pus.push(pu);
	pus = Generation.Generate("w1",8,1,3,pus,[0,1]);
	var purs = Generation.GenerateRepetitions("w1",pus,{ min : 3, max : 6});
	this.enemyAreaFromProcedural.units = purs;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["Life"] = 20;
	_g.h["LifeMax"] = 20;
	_g.h["Speed"] = 20;
	_g.h["SpeedCount"] = 0;
	_g.h[BattleConstants.DEATHBLOOD] = 0;
	var stats = _g;
	var w = { worldVersion : 30312, hero : { level : 1, attributesBase : null, equipment : null, xp : null, attributesCalculated : stats, reference : new ActorReference(0,0), viewAux : 0}, enemy : null, maxArea : 1, necessaryToKillInArea : 0, killedInArea : [0,0], prestigeTimes : 0, timeCount : 0, playerTimesKilled : 0, battleArea : 0, battleAreaRegion : 0, battleAreaRegionMax : 1, playerActions : new haxe_ds_StringMap(), recovering : false, sleeping : false, veteranLevel : 0, regionProgress : []};
	this.wdata = w;
	this.counterAttackDatas.push(null);
	var ctd = new CounterAttackData();
	ctd.element = "fire";
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 50;
	ctd.attributeInfluenceOnCounterPower = _g;
	this.counterAttackDatas.push(ctd);
	var ctd = new CounterAttackData();
	ctd.element = "ice";
	var _g = new haxe_ds_StringMap();
	_g.h["Defense"] = 120;
	ctd.attributeInfluenceOnCounterPower = _g;
	this.counterAttackDatas.push(ctd);
	var ctd = new CounterAttackData();
	ctd.element = "thunder";
	var _g = new haxe_ds_StringMap();
	_g.h[BattleConstants.damageLastTurn] = 100;
	ctd.attributeInfluenceOnCounterPower = _g;
	this.counterAttackDatas.push(ctd);
	var ctd = new CounterAttackData();
	ctd.element = null;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 100;
	ctd.attributeInfluenceOnCounterPower = _g;
	this.counterAttackDatas.push(ctd);
	this.ReinitGameValues();
	this.ChangeBattleArea(0);
	var v = this.wdata.hero.attributesCalculated.h["LifeMax"];
	this.wdata.hero.attributesCalculated.h["Life"] = v;
};
$hxClasses["BattleManager"] = BattleManager;
BattleManager.__name__ = "BattleManager";
BattleManager.IsLimitBreakable = function(e,wdata) {
	if(e.type == 2) {
		return false;
	}
	var level = wdata.equipLevels[e.outsideSystems.h["level"]];
	return level.limitbreak < 3;
};
BattleManager.IsUpgradable = function(e,wdata) {
	if(e.type == 2) {
		return false;
	}
	var level = wdata.equipLevels[e.outsideSystems.h["level"]];
	var maxLevel = level.limitbreak * 3 + 3;
	var upgradable = level.level < maxLevel;
	return upgradable;
};
BattleManager.GetLimitBreakCost = function(e,wdata) {
	return ((BattleManager.GetCost(e,wdata) + 1) / 5 | 0) * 3;
};
BattleManager.GetSellPrize = function(e,wdata) {
	return BattleManager.GetCost(e,wdata) / 5 | 0;
};
BattleManager.GetCost = function(e,wdata) {
	var genLevel = 1;
	if(e.generationLevel >= 0) {
		genLevel = e.generationLevel;
	}
	if(e.generationPrefixMod >= 0) {
		genLevel += 5;
	}
	if(e.generationSuffixMod >= 0) {
		genLevel += 5;
	}
	return (genLevel / 5 | 0) * 5 + 5;
};
BattleManager.CanUpgrade = function(e,wdata) {
	if(BattleManager.IsUpgradable(e,wdata) == false) {
		return false;
	}
	return BattleManager.GetCost(e,wdata) <= wdata.currency.currencies.h["Lagrima"].value;
};
BattleManager.CanLimitBreak = function(e,wdata) {
	if(BattleManager.IsLimitBreakable(e,wdata) == false) {
		return false;
	}
	return BattleManager.GetLimitBreakCost(e,wdata) <= wdata.currency.currencies.h["Lagrima Stone"].value;
};
BattleManager.LimitBreak = function(e,wdata) {
	var cost = BattleManager.GetLimitBreakCost(e,wdata);
	wdata.currency.currencies.h["Lagrima Stone"].value -= cost;
	var level = wdata.equipLevels[e.outsideSystems.h["level"]];
	level.limitbreak++;
};
BattleManager.Upgrade = function(e,wdata,bm) {
	var cost = BattleManager.GetCost(e,wdata);
	wdata.currency.currencies.h["Lagrima"].value -= cost;
	var level = wdata.equipLevels[e.outsideSystems.h["level"]];
	level.level++;
	if(BattleManager.IsUpgradable(e,wdata) == false) {
		var bonus = BattleManager.GetLimitBreakCost(e,wdata) / 3 | 0;
		wdata.currency.currencies.h["Lagrima Stone"].value += bonus;
		var e1 = bm.AddEvent(EventTypes.EquipMaxed);
		e1.data = bonus;
		e1.dataString = "Lagrima Stone";
	}
	if(Object.prototype.hasOwnProperty.call(e.attributes.h,"Attack")) {
		var tmp = "Attack";
		var v = e.attributes.h[tmp] + 1;
		e.attributes.h[tmp] = v;
	}
	if(Object.prototype.hasOwnProperty.call(e.attributes.h,"MagicAttack")) {
		var tmp = "MagicAttack";
		var v = e.attributes.h[tmp] + 1;
		e.attributes.h[tmp] = v;
	}
	if(e.type == 1) {
		if(e.attributes.h["LifeMax"] >= 0 == false) {
			e.attributes.h["LifeMax"] = 0;
		}
		var _g = e.attributes;
		var v = _g.h["LifeMax"] + 2;
		_g.h["LifeMax"] = v;
	}
	if(level.level % 3 != 0) {
		if(Object.prototype.hasOwnProperty.call(e.attributes.h,"Defense")) {
			var tmp = "Defense";
			var v = e.attributes.h[tmp] + 1;
			e.attributes.h[tmp] = v;
		}
		if(Object.prototype.hasOwnProperty.call(e.attributes.h,"MagicDefense")) {
			var tmp = "MagicDefense";
			var v = e.attributes.h[tmp] + 1;
			e.attributes.h[tmp] = v;
		}
	}
};
BattleManager.prototype = {
	GetAttribute: function(actor,label) {
		var i = actor.attributesCalculated.h[label];
		if(i < 0) {
			i = 0;
		}
		return i;
	}
	,useHP: function(actor,hpCost) {
		var hp = actor.attributesCalculated.h[BattleConstants.LIFE];
		hp -= hpCost;
		if(hp < 1) {
			hp = 1;
		}
		actor.attributesCalculated.h[BattleConstants.LIFE] = hp;
	}
	,UseMP: function(actor,mpCost,event) {
		if(event == null) {
			event = true;
		}
		var mp = actor.attributesCalculated.h["MP"];
		mp -= mpCost;
		if(mp <= 0) {
			mp = 0;
			actor.attributesCalculated.h["MPRechargeCount"] = 0;
			if(event) {
				var ev = this.AddEvent(EventTypes.MPRunOut);
				ev.origin = this.wdata.hero.reference;
			}
		}
		actor.attributesCalculated.h["MP"] = mp;
	}
	,UseSkill: function(skill,actor,activeStep) {
		if(activeStep == null) {
			activeStep = false;
		}
		var id = skill.id;
		var skillBase = this.GetSkillBase(id);
		if(skillBase.turnRecharge > 0) {
			if(actor.turnRecharge == null) {
				actor.turnRecharge = [];
			}
			actor.turnRecharge[actor.usableSkills.indexOf(skill)] = skillBase.turnRecharge;
		}
		if(activeStep == false && skillBase.activeEffect != null) {
			this.scheduledSkill = skill;
			return;
		}
		if(actor == this.wdata.hero) {
			this.timeCount = 0;
		}
		var executedEffects = 0;
		var efs = skillBase.effects;
		if(activeStep) {
			efs = skillBase.activeEffect;
		}
		var skillUsed = false;
		var _g = 0;
		while(_g < efs.length) {
			var ef = efs[_g];
			++_g;
			var targets = [];
			if(ef.target == Target.SELF) {
				targets.push(actor);
			}
			if(ef.target == Target.ENEMY) {
				if(this.wdata.hero == actor) {
					if(this.wdata.enemy == null || this.wdata.enemy.attributesCalculated.h["LifeMax"] == 0) {
						if(this.automaticEnemyCreation) {
							this.CreateAreaEnemy();
						} else {
							continue;
						}
					}
					targets.push(this.wdata.enemy);
				} else {
					targets.push(this.wdata.hero);
				}
			}
			++executedEffects;
			if(skillUsed == false) {
				skillUsed = true;
				var mpCost = skillBase.mpCost;
				if(mpCost > 0) {
					this.UseMP(actor,mpCost);
				}
				if(skillBase.hpCost > 0) {
					this.useHP(actor,skillBase.hpCost);
				}
				var ev = this.AddEvent(EventTypes.SkillUse);
				ev.origin = this.wdata.hero.reference;
				ev.dataString = skill.id;
			}
			ef.effectExecution(this,skill.level,actor,targets,skill.id);
		}
	}
	,Heal: function(target,lifeMaxPercentage,rawBonus,skillId) {
		if(rawBonus == null) {
			rawBonus = 0;
		}
		if(lifeMaxPercentage == null) {
			lifeMaxPercentage = 0;
		}
		var lifem = target.attributesCalculated.h["LifeMax"];
		var life = target.attributesCalculated.h["Life"];
		var healAmountRaw = rawBonus + (lifeMaxPercentage * lifem / 100 | 0);
		life += healAmountRaw;
		if(life > lifem) {
			life = lifem;
		}
		target.attributesCalculated.h["Life"] = life;
		var ev = this.AddEvent(EventTypes.heal);
		ev.data = healAmountRaw;
		ev.dataString = skillId;
	}
	,getGeneralJson: function() {
		if(this.generalSaveData == null) {
			return null;
		}
		if(this.generalSaveData.automaticZoom != true && this.generalSaveData.automaticZoom != false) {
			this.generalSaveData.automaticZoom = true;
		}
		if(this.notificationControl.notifications == null) {
			this.notificationControl.notifications = { notifications : []};
		}
		this.generalSaveData.notification = this.notificationControl.notifications;
		return JsonMainTypes.jsonwritergeneral.write(this.generalSaveData);
	}
	,loadGeneralJson: function(json,worldVersion) {
		if(worldVersion <= 3003) {
			json = null;
		}
		if(json == null) {
			if(this.notificationControl.notifications == null) {
				this.notificationControl.notifications = { notifications : []};
			}
			this.generalSaveData = { achievementData : { achievs : null}, mouseWheelSensibility : 5, masterVolume : 50, sfxVolume : 100, musicVolume : 100, language : 0, automaticZoom : true, notification : this.notificationControl.notifications};
			this.generalSaveData.achievementData = { achievs : new haxe_ds_StringMap()};
		} else {
			this.generalSaveData = JsonMainTypes.jsonparsergeneral.fromJson(json);
			this.notificationControl.notifications = this.generalSaveData.notification;
		}
		if(worldVersion <= 30310) {
			this.generalSaveData.automaticZoom = true;
			this.generalSaveData.musicVolume = 100;
			this.generalSaveData.sfxVolume = 100;
			this.generalSaveData.masterVolume = 50;
		}
		if(this.notificationControl.notifications == null) {
			this.notificationControl.notifications = { notifications : []};
		}
		Local.language = this.generalSaveData.language;
		this.achievementModel.modelData.achievementData = this.generalSaveData.achievementData;
		this.achievementModel.modelData.globalData = this.global;
		if(this.generalSaveData.mouseWheelSensibility > 0 == false) {
			this.generalSaveData.mouseWheelSensibility = 1;
		}
	}
	,RemoveBuffs: function(defender,keepDebuffs) {
		if(keepDebuffs == null) {
			keepDebuffs = true;
		}
		if(keepDebuffs == false) {
			defender.buffs.length = 0;
		} else {
			var i = 0;
			while(i < defender.buffs.length) {
				if(defender.buffs[i].debuff == true) {
					++i;
					continue;
				}
				HxOverrides.remove(defender.buffs,defender.buffs[i]);
			}
		}
		this.RecalculateAttributes(defender);
		this.AddEvent(EventTypes.BuffRemoval).origin = defender.reference;
	}
	,requestPrizeCollection: function() {
		this.wdata.battlePrizes = this.battlePrizeAccess.checkArray(this.wdata.battlePrizes);
		var _g_current = 0;
		var _g_array = this.wdata.battlePrizes;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null && value.status == BattlePrizeStatus.PROCESSED) {
				value.status = BattlePrizeStatus.CONSUME_REQUEST_AUTO;
			}
		}
	}
	,RefreshCalculatedTurnOrder: function() {
		this.turnList.length = 0;
		var hero = this.wdata.hero;
		var enemy = this.wdata.enemy;
		if(enemy == null) {
			return;
		}
		if(enemy.attributesCalculated.h["Life"] == 0) {
			return;
		}
		var countH = hero.attributesCalculated.h["SpeedCount"];
		var countE = enemy.attributesCalculated.h["SpeedCount"];
		var _g = 0;
		while(_g < 10000) {
			var i = _g++;
			var actorAct = -1;
			var actorView = -1;
			var bActor = hero;
			var count = countH;
			count += bActor.attributesCalculated.h["Speed"];
			if(actorAct == -1) {
				if(count > this.turnSpeedCount) {
					actorAct = 0;
					actorView = bActor.viewAux;
					count -= this.turnSpeedCount;
				}
			}
			countH = count;
			var bActor1 = hero;
			var count1 = countH;
			bActor1 = enemy;
			count1 = countE;
			count1 += bActor1.attributesCalculated.h["Speed"];
			if(actorAct == -1) {
				if(count1 > this.turnSpeedCount) {
					actorAct = 1;
					actorView = bActor1.viewAux;
					count1 -= this.turnSpeedCount;
				}
			}
			countE = count1;
			if(actorAct >= 0) {
				this.turnList.push(actorView);
			}
			if(this.turnList.length >= 6) {
				break;
			}
		}
	}
	,copyActorStatsToAux: function(actor) {
		this.statCopyAux.h = Object.create(null);
		var h = actor.attributesCalculated.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
			this.statCopyAux.h[key1] = value;
		}
		return this.statCopyAux;
	}
	,getStatsIfEquipped: function(actor,equipPos) {
		var es = actor.equipmentSets[actor.chosenEquipSet].equipmentSlots;
		var e = actor.equipment[equipPos];
		var type = e.type;
		var original = es[type];
		es[type] = equipPos;
		this.RecalculateAttributes(actor);
		var statAux = this.copyActorStatsToAux(actor);
		es[type] = original;
		this.RecalculateAttributes(actor);
		return statAux;
	}
	,getStatsIfSet: function(actor,setPos) {
		var original = actor.chosenEquipSet;
		actor.chosenEquipSet = setPos;
		this.RecalculateAttributes(actor);
		var statAux = this.copyActorStatsToAux(actor);
		actor.chosenEquipSet = original;
		this.RecalculateAttributes(actor);
		return statAux;
	}
	,AttackExecute: function(attacker,defender,attackRate,skillId,attackBonus,defenseRate,magicAttack,element,attackerStatInfluence,attackerText,defenderText) {
		if(magicAttack == null) {
			magicAttack = false;
		}
		if(defenseRate == null) {
			defenseRate = 100;
		}
		this.lastActiveActor = attacker;
		var gEvent = this.AddEvent(EventTypes.ActorAttack);
		var enchant = attacker.attributesCalculated.h["enchant-fire"];
		if(enchant > 0) {
			magicAttack = true;
			attackBonus += enchant;
		}
		if(element != null) {
			var elementDmg = element + "-damage";
			if(Object.prototype.hasOwnProperty.call(defender.attributesCalculated.h,elementDmg)) {
				var baseDmg = defender.attributesCalculated.h[elementDmg];
				attackRate = attackRate * baseDmg / 100 | 0;
			}
			var elementAtk = element + "-boost";
			if(Object.prototype.hasOwnProperty.call(attacker.attributesCalculated.h,elementAtk)) {
				var baseDmg = attacker.attributesCalculated.h[elementAtk];
				attackRate = attackRate * baseDmg / 100 | 0;
			}
		}
		var bloodDecrease = 0;
		if(attacker.attributesCalculated.h["Blood"] > 0) {
			var blood = attacker.attributesCalculated.h["Blood"];
			var bloodMul = 100;
			if(attacker.attributesCalculated.h["Bloodthirst"] > 0) {
				bloodMul += attacker.attributesCalculated.h["Bloodthirst"];
			}
			attackBonus += blood;
			attackRate += (blood * 5 + 10) * bloodMul / 100 | 0;
			var life = attacker.attributesCalculated.h["Life"];
			var decrease = attacker.attributesCalculated.h["LifeMax"] * blood / 100 | 0;
			if(decrease < 1) {
				decrease = 1;
			}
			if(decrease >= life - 1) {
				decrease = life - 1;
			}
			bloodDecrease = decrease;
			life -= decrease | 0;
			attacker.attributesCalculated.h["Life"] = life;
		}
		var deathBlood = attacker.attributesCalculated.h[BattleConstants.DEATHBLOOD];
		if(deathBlood > 0) {
			var life = attacker.attributesCalculated.h["Life"];
			var active = false;
			if(life <= BattleConstants.DEATHBLOOD_LIFE_VALUE) {
				active = true;
			} else {
				var lifeMax = attacker.attributesCalculated.h["LifeMax"];
				if(life * 100 / lifeMax <= BattleConstants.DEATHBLOOD_LIFERATIO_VALUE) {
					active = true;
				}
			}
			if(active) {
				attackRate += deathBlood;
			}
		}
		if(attacker.attributesCalculated.h["Antibuff"] > 0) {
			this.RemoveBuffs(defender);
		}
		var counterAttackHappen = false;
		var counterAttack = -1;
		if(magicAttack == false) {
			var attackPierce = attacker.attributesCalculated.h["Piercing"];
			if(attackPierce > 0 == true) {
				if(defender.attributesCalculated.h["Safeguard"] > 0) {
					attackPierce -= defender.attributesCalculated.h["Safeguard"];
				}
				if(attackPierce > 0) {
					defenseRate -= attackPierce;
				}
			}
			counterAttack = defender.attributesCalculated.h["Counterattack"];
		}
		if(counterAttack > 0) {
			counterAttackHappen = true;
		}
		if(defenseRate < 0) {
			defenseRate = 0;
		}
		var attack = 0;
		var defense = 0;
		if(magicAttack) {
			attack = attacker.attributesCalculated.h["MagicAttack"];
			defense = defender.attributesCalculated.h["MagicDefense"];
		} else {
			attack = attacker.attributesCalculated.h["Attack"];
			defense = defender.attributesCalculated.h["Defense"];
		}
		attack = attackRate * attack / 100 + attackBonus;
		if(attackerStatInfluence != null) {
			var h = attackerStatInfluence.h;
			var _g_h = h;
			var _g_keys = Object.keys(h);
			var _g_length = _g_keys.length;
			var _g_current = 0;
			while(_g_current < _g_length) {
				var key = _g_keys[_g_current++];
				var _g1_key = key;
				var _g1_value = _g_h[key];
				var statName = _g1_key;
				var value = _g1_value;
				var attr = attacker.attributesCalculated.h[statName];
				attack += value * attr / 100;
			}
		}
		var damage = attack - defense * defenseRate / 100 | 0;
		var damageRawPercentMultiplier = 100;
		var veteran = attacker.attributesCalculated.h["Veteran"];
		if(veteran > 0 == true) {
			damageRawPercentMultiplier += veteran;
		}
		damage = damageRawPercentMultiplier * damage / 100 | 0;
		if(damage < 0) {
			damage = 0;
		}
		var _g = defender.attributesCalculated;
		var v = _g.h["Life"] - damage;
		_g.h["Life"] = v;
		defender.attributesCalculated.h[BattleConstants.damageLastTurn] = damage;
		var defenderDead = false;
		if(defender.attributesCalculated.h["Life"] <= 0) {
			defender.attributesCalculated.h["Life"] = 0;
			defenderDead = true;
		}
		if(defenderDead == false && counterAttackHappen) {
			var counterB = new CounterAttackBuffer(defender.reference,counterAttack);
			var nullIndex = -1;
			var _g_current = 0;
			var _g_array = this.counterAttackBuffered;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value == null) {
					nullIndex = index;
				}
			}
			if(nullIndex >= 0) {
				this.counterAttackBuffered[nullIndex] = counterB;
			} else {
				this.counterAttackBuffered.push(counterB);
			}
		}
		if(damage >= 1) {
			var _g = 0;
			var _g1 = defender.buffs;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				if(b.noble == true) {
					b.duration = 0;
				}
			}
		}
		gEvent.origin = attacker.reference;
		gEvent.target = defender.reference;
		gEvent.data = damage;
		gEvent.data2 = bloodDecrease;
		gEvent.dataString = attackerText;
		gEvent.dataString2 = defenderText;
		gEvent.dataString3 = skillId;
		var hero = this.wdata.hero;
		var enemy = this.wdata.enemy;
		if(enemy.attributesCalculated.h["Life"] <= 0) {
			this.areaProgress(this.wdata.enemy);
		}
		if(hero.attributesCalculated.h["Life"] <= 0) {
			this.wdata.recovering = true;
			this.wdata.enemy = null;
			var e = this.AddEvent(EventTypes.ActorDead);
			e.origin = hero.reference;
			this.wdata.playerTimesKilled++;
		}
	}
	,ForceSkillSetDrop: function(enemyLevel,dropperReference,ss,event) {
		if(event == null) {
			event = true;
		}
		var scalingStats = new haxe_ds_StringMap();
		switch(this.random.randomInt(0,2)) {
		case 0:
			scalingStats.h["Attack"] = 0.3;
			break;
		case 1:
			scalingStats.h["Defense"] = 0.3;
			break;
		case 2:
			scalingStats.h["Speed"] = 0.1;
			break;
		}
		var itemB = { type : 2, statMultipliers : null, scalingStats : scalingStats, statAdd : null, name : null, abbrev : null, dropRequirement : { minEnemyLevel : 0, maxEnemyLevel : 999999}};
		if(this.wdata.skillSets == null) {
			this.wdata.skillSets = [];
		}
		var skillSetPos = ArrayHelper.InsertOnEmpty(ss,this.wdata.skillSets);
		this.DropItem(itemB,-1,skillSetPos,enemyLevel,dropperReference,event,false);
	}
	,ResetEquipToBaseLevel: function(equipment,level) {
		var baseItem = equipment.generationBaseItem;
		if(baseItem >= 0) {
			var ib = this.itemBases[baseItem];
			if(ib != null) {
				var h = ib.scalingStats.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var key = _g_keys[_g_current++];
					var _g1_key = key;
					var _g1_value = _g_h[key];
					var key1 = _g1_key;
					var value = _g1_value;
					var v = value * level | 0;
					equipment.attributes.h[key1] = v;
				}
				equipment.generationLevel = 1;
				return true;
			}
			return false;
		}
		return false;
	}
	,createAreaGoEvent: function(region,area) {
		var d = new Data();
		d.intData = region;
		d.intData2 = area;
		d.stringData = BattleConstants.DATAEVENT_CHANGEAREA;
		return d;
	}
	,DropItemOrSkillSet: function(itemDropProbability,skillSetDropProbability,enemyLevel,dropperReference) {
		if(skillSetDropProbability == null) {
			skillSetDropProbability = 2;
		}
		var baseItem = -1;
		var itemB = null;
		if(this.random.randomInt(0,1000) < skillSetDropProbability * 10) {
			var skillPosArray = [];
			var baseLevel = 1;
			var maxLevel = 1;
			var maxNSkills = 2;
			if(enemyLevel > 10) {
				maxNSkills = 3;
			}
			if(enemyLevel > 50) {
				maxLevel = 2;
			}
			if(enemyLevel > 70) {
				maxNSkills = 4;
			}
			if(enemyLevel > 150) {
				maxLevel = 4;
			}
			var numberOfSkills = this.random.randomInt(1,maxNSkills);
			var _g = 0;
			var _g1 = numberOfSkills;
			while(_g < _g1) {
				var s = _g++;
				var skill = this.random.randomInt(0,this.skillBases.length - 1 - s);
				while(skillPosArray.indexOf(skill) != -1) ++skill;
				skillPosArray[s] = skill;
			}
			var ss = { skills : [], active : true};
			var _g = 0;
			var _g1 = skillPosArray.length;
			while(_g < _g1) {
				var j = _g++;
				var level = baseLevel;
				level = this.random.randomInt(baseLevel,maxLevel);
				if(j >= 2) {
					level = maxLevel + 1;
				}
				if(j >= 3) {
					level = maxLevel + 2;
				}
				var sp = skillPosArray[j];
				ss.skills.push({ id : this.skillBases[sp].id, level : level});
			}
			this.ForceSkillSetDrop(enemyLevel,dropperReference,ss);
			return;
		}
		if(this.random.randomInt(0,100) < itemDropProbability) {
			this.itemDropAux.length = 0;
			var _g_current = 0;
			var _g_array = this.itemBases;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var dr = value.dropRequirement;
				if(enemyLevel >= dr.minEnemyLevel && enemyLevel <= dr.maxEnemyLevel) {
					this.itemDropAux.push(index);
				}
			}
			baseItem = this.itemDropAux[this.random.randomInt(0,this.itemDropAux.length - 1)];
			itemB = this.itemBases[baseItem];
			this.DropItem(itemB,baseItem,-1,enemyLevel,dropperReference,true,this.autoSellNormal);
		}
	}
	,DropItem: function(itemB,baseItem,skillSetPos,enemyLevel,dropperReference,event,autoSellNormalItem) {
		if(autoSellNormalItem == null) {
			autoSellNormalItem = false;
		}
		if(event == null) {
			event = true;
		}
		var rareDropChance = 0;
		if(this.config != null) {
			rareDropChance = this.config.equipDropChance_Rare;
		}
		var dropRare = this.random.randomInt(0,100) < rareDropChance;
		if(dropRare == false && autoSellNormalItem) {
			if(event) {
				var e = this.AddEvent(EventTypes.AutoSell);
			}
			return;
		}
		var prefixPos = -1;
		var prefixSeed = -1;
		var suffixPos = -1;
		var suffixSeed = -1;
		if(dropRare) {
			this.itemDropAux.length = 0;
			if(this.modBases == null) {
				return;
			}
			var _g_current = 0;
			var _g_array = this.modBases;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var dr = value.dropRequirement;
				if(enemyLevel >= dr.minEnemyLevel && enemyLevel <= dr.maxEnemyLevel) {
					this.itemDropAux.push(index);
				}
			}
			if(this.itemDropAux.length > 0) {
				var modType = this.random.randomInt(0,2);
				var prefixExist = modType == 0 || modType == 2;
				var suffixExist = modType == 1 || modType == 2;
				if(prefixExist) {
					prefixPos = this.itemDropAux[this.random.randomInt(0,this.itemDropAux.length - 1)];
					prefixSeed = this.random.nextInt();
				}
				if(suffixExist) {
					suffixPos = this.itemDropAux[this.random.randomInt(0,this.itemDropAux.length - 1)];
					suffixSeed = this.random.nextInt();
				}
			}
		}
		this.DropItemDecidedMod(itemB,baseItem,skillSetPos,enemyLevel,prefixPos,suffixPos,dropperReference,event,autoSellNormalItem,prefixSeed,suffixSeed);
	}
	,DropItemDecidedMod: function(itemB,baseItem,skillSetPos,enemyLevel,prefixPos,suffixPos,dropperReference,event,autoSellNormalItem,prefixSeed,suffixSeed) {
		if(suffixSeed == null) {
			suffixSeed = 1;
		}
		if(prefixSeed == null) {
			prefixSeed = 1;
		}
		if(autoSellNormalItem == null) {
			autoSellNormalItem = false;
		}
		if(event == null) {
			event = true;
		}
		var e = null;
		var stat = new haxe_ds_StringMap();
		var statVar = new haxe_ds_StringMap();
		var mul = new haxe_ds_StringMap();
		var mulVar = new haxe_ds_StringMap();
		var genLevel = enemyLevel | 0;
		if(this.config != null) {
			if(this.config.itemLevelLimit) {
				genLevel = enemyLevel / 3 | 0;
			}
		}
		if(genLevel < 1) {
			genLevel = 1;
		}
		var minLevel = (genLevel + 1) / 2 - 3 | 0;
		if(minLevel < 1) {
			minLevel = 1;
		}
		var maxLevel = genLevel / 2 + 2 | 0;
		var level = this.random.randomInt(minLevel,maxLevel);
		if(itemB.scalingStats != null) {
			var h = itemB.scalingStats.h;
			var s_h = h;
			var s_keys = Object.keys(h);
			var s_length = s_keys.length;
			var s_current = 0;
			while(s_current < s_length) {
				var key = s_keys[s_current++];
				var s_key = key;
				var s_value = s_h[key];
				var vari = 100;
				statVar.h[s_key] = vari;
				var value = s_value * vari * level;
				if(value < 100) {
					value = 100;
				}
				var v = value / 100 | 0;
				stat.h[s_key] = v;
			}
		}
		if(itemB.statAdd != null) {
			var h = itemB.statAdd.h;
			var s_h = h;
			var s_keys = Object.keys(h);
			var s_length = s_keys.length;
			var s_current = 0;
			while(s_current < s_length) {
				var key = s_keys[s_current++];
				var s_key = key;
				var s_value = s_h[key];
				if(Object.prototype.hasOwnProperty.call(stat.h,s_key)) {
					var _g = s_key;
					var _g1 = stat;
					var v = _g1.h[_g] + s_value;
					_g1.h[_g] = v;
				} else {
					var v1 = s_value;
					stat.h[s_key] = v1;
				}
			}
		}
		if(itemB.statMultipliers != null) {
			var h = itemB.statMultipliers.h;
			var s_h = h;
			var s_keys = Object.keys(h);
			var s_length = s_keys.length;
			var s_current = 0;
			while(s_current < s_length) {
				var key = s_keys[s_current++];
				var s_key = key;
				var s_value = s_h[key];
				var vari = 100;
				mulVar.h[s_key] = vari;
				var min = s_value.min;
				var max = s_value.max;
				var range = max - min;
				var v = min + range * vari / 100 | 0;
				mul.h[s_key] = v;
			}
		}
		if(prefixPos < 0 == false) {
			var tmp = this.modBases[prefixPos];
			var this1 = new haxe__$Int64__$_$_$Int64(prefixSeed >> 31,prefixSeed);
			this.AddMod(tmp,stat,mul,this1);
		}
		if(suffixPos < 0 == false) {
			var tmp = this.modBases[suffixPos];
			var this1 = new haxe__$Int64__$_$_$Int64(suffixSeed >> 31,suffixSeed);
			this.AddMod(tmp,stat,mul,this1);
		}
		var h = mul.h;
		var m_h = h;
		var m_keys = Object.keys(h);
		var m_length = m_keys.length;
		var m_current = 0;
		while(m_current < m_length) {
			var key = m_keys[m_current++];
			var m_key = key;
			var m_value = m_h[key];
			if(m_value % 5 != 0) {
				var v = ((m_value + 4) / 5 | 0) * 5;
				mul.h[m_key] = v;
			}
		}
		var outsideSystem = new haxe_ds_StringMap();
		if(this.wdata.equipLevels == null) {
			this.wdata.equipLevels = [];
		}
		if(skillSetPos >= 0) {
			outsideSystem.h["skillset"] = skillSetPos;
		}
		var v = ArrayHelper.InsertOnEmpty({ level : 0, limitbreak : 0, ascension : 0, active : true},this.wdata.equipLevels);
		outsideSystem.h["level"] = v;
		e = { type : itemB.type, seen : 0, requiredAttributes : null, attributes : stat, generationVariations : statVar, generationLevel : level, generationBaseItem : baseItem, attributeMultiplier : mul, generationVariationsMultiplier : mulVar, generationSuffixMod : suffixPos, generationPrefixMod : prefixPos, generationSuffixModSeed : suffixSeed, generationPrefixModSeed : prefixSeed, outsideSystems : outsideSystem};
		this.AddEquip(e,event,dropperReference);
	}
	,clearExternalConditionArea: function() {
		var areaData = this.getAreaData();
		if(areaData != null) {
			if(areaData.externalClearConditions.length > 0) {
				if(this.wdata.maxArea == this.wdata.battleArea) {
					this.wdata.maxArea++;
					return;
				}
			}
		}
		haxe_Log.trace("ERROR!! NOT EXTERNAL CONDITION AREA ",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 935, className : "BattleManager", methodName : "clearExternalConditionArea"});
	}
	,AddEquip: function(e,event,dropperReference) {
		var addedIndex = -1;
		var amountAlready = 0;
		var _g = 0;
		var _g1 = this.wdata.hero.equipment;
		while(_g < _g1.length) {
			var equip = _g1[_g];
			++_g;
			if(e.type == equip.type) {
				++amountAlready;
			}
		}
		if(amountAlready >= this.equipMaxPerType) {
			if(event) {
				var ev = this.AddEvent(EventTypes.EquipFullFail);
				ev.data = e.type;
			}
			return;
		}
		var _g = 0;
		var _g1 = this.wdata.hero.equipment.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.wdata.hero.equipment[i] == null) {
				this.wdata.hero.equipment[i] = e;
				addedIndex = i;
				break;
			}
		}
		if(addedIndex < 0) {
			this.wdata.hero.equipment.push(e);
			addedIndex = this.wdata.hero.equipment.length - 1;
		}
		if(event) {
			var e1 = this.AddEvent(EventTypes.EquipDrop);
			e1.data = addedIndex;
			e1.origin = dropperReference;
		}
		this.notificationControl.addNotification(BattleConstants.EQUIPMENT_TAB_ID,-99999);
		this.notificationControl.addNotification(BattleConstants.EQUIPMENT_VIEW_ID_PART,addedIndex);
		if(amountAlready >= this.equipMaxPerType - 1) {
			if(event) {
				var ev = this.AddEvent(EventTypes.EquipFullJustNow);
				ev.data = e.type;
			}
		}
	}
	,AddBuff: function(buff,actor) {
		var addBuff = true;
		if(buff.debuff == true) {
			var debpro = actor.attributesCalculated.h["DebuffProtection"];
			if(debpro > 0) {
				if(this.random.randomInt(1,100) < debpro) {
					this.AddEvent(EventTypes.DebuffBlock).origin = actor.reference;
					return;
				}
			}
		}
		var _g = 0;
		var _g1 = actor.buffs.length;
		while(_g < _g1) {
			var bi = _g++;
			var b = actor.buffs[bi];
			if(b.uniqueId == buff.uniqueId) {
				addBuff = false;
				if(b.strength < buff.strength) {
					actor.buffs[bi] = buff;
					break;
				}
				if(b.strength == buff.strength && b.duration < buff.duration) {
					actor.buffs[bi] = buff;
					break;
				}
			}
		}
		if(addBuff) {
			actor.buffs.push(buff);
		}
		var ev = this.AddEvent(EventTypes.BuffRefresh);
		ev.target = actor.reference;
		ev.dataString = buff.uniqueId;
		ev.data = 1;
		if(buff.debuff) {
			ev.data = BattleConstants.DEBUFF;
		}
		this.RecalculateAttributes(actor);
	}
	,GetSkillBase: function(id) {
		var _g = 0;
		var _g1 = this.skillBases;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.id == id) {
				return s;
			}
		}
		return null;
	}
	,ChangeBattleArea: function(area) {
		var regionData = null;
		if(this.config != null) {
			regionData = this.config.regions[this.wdata.battleAreaRegion];
		} else {
			return;
		}
		if(this.wdata.killedInArea[this.wdata.battleArea] >= this.wdata.necessaryToKillInArea) {
			this.wdata.killedInArea[this.wdata.battleArea] = 0;
		}
		this.wdata.battleArea = area;
		this.wdata.necessaryToKillInArea = 0;
		while(this.wdata.killedInArea.length <= area) this.wdata.killedInArea.push(0);
		var e = this.AddEvent(EventTypes.AreaEnter);
		e.data = this.wdata.battleAreaRegion;
		e.data2 = this.wdata.battleArea;
		var initialEnemyToKill = this.balancing.timeForFirstAreaProgress / this.balancing.timeToKillFirstEnemy | 0;
		if(this.isBattleArea()) {
			this.wdata.necessaryToKillInArea = initialEnemyToKill + ((area - 1) * initialEnemyToKill * 0.3 | 0);
			if(this.wdata.necessaryToKillInArea > initialEnemyToKill * 14) {
				this.wdata.necessaryToKillInArea = initialEnemyToKill * 14;
			}
			var fRand = this.fixedRandom;
			var x = area + 1;
			var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
			fRand.set_seed(this1);
			if(area > 8) {
				var mul = fRand.random() * 1.5 + 0.5;
				this.wdata.necessaryToKillInArea = this.wdata.necessaryToKillInArea * mul | 0;
			} else if(area > 4) {
				var mul = fRand.random() * 0.2 + 0.5;
				this.wdata.necessaryToKillInArea = this.wdata.necessaryToKillInArea * mul | 0;
			}
			if(this.enemyAreaFromProcedural != null && this.wdata.battleAreaRegion == 0) {
				var eAI = this.enemyAreaFromProcedural.GetEnemyAreaInformation(area - 1);
				if(eAI.nEnemies > 0) {
					this.wdata.necessaryToKillInArea = eAI.nEnemies;
				}
			}
			if(regionData.type == RegionType.SEMIPROCEDURAL) {
				var eAI = this.config.regions[this.wdata.battleAreaRegion].areaDatas[this.wdata.battleArea].enemy;
				if(eAI.nEnemies > 0) {
					this.wdata.necessaryToKillInArea = eAI.nEnemies;
				}
			}
			if(regionData.type == RegionType.CHALLENGE) {
				this.wdata.necessaryToKillInArea = 3;
			}
			if(this.PlayerFightMode()) {
				if(this.automaticEnemyCreation) {
					this.CreateAreaEnemy();
				}
			}
		} else {
			this.wdata.enemy = null;
		}
		ResourceLogic.recalculateScalingResource(this.wdata.battleArea,this.areaBonus);
		this.dirty = true;
	}
	,recalculateTurnSpeedCount: function() {
		var speedH = this.wdata.hero.attributesCalculated.h["Speed"];
		this.turnSpeedCount = speedH * 15 - 1;
		if(this.wdata.enemy != null) {
			var speedE = this.wdata.enemy.attributesCalculated.h["Speed"];
			if(speedE > speedH) {
				this.turnSpeedCount = speedE * 15 - 1;
			}
		}
	}
	,PlayerFightMode: function() {
		if(this.wdata.recovering != true) {
			return this.wdata.sleeping != true;
		} else {
			return false;
		}
	}
	,CalculateHeroMaxLevel: function() {
		return this.heroMaxLevel;
	}
	,isXPCap: function() {
		if(this.wdata.hero.xp.value > 99999999) {
			return true;
		}
		return false;
	}
	,AwardXP: function(xpPlus,type) {
		if(this.wdata.hero.level < this.CalculateHeroMaxLevel() && this.isXPCap() == false) {
			xpPlus += xpPlus * this.wdata.prestigeTimes * this.GetXPBonusOnPrestige() | 0;
			xpPlus += this.GetXPAddBonusOnPrestige();
			this.wdata.hero.xp.value += xpPlus;
			var e = this.AddEvent(EventTypes.GetXP);
			e.data = xpPlus;
			e.dataString = type;
		}
	}
	,GetMaxLevelBonusOnPrestige: function() {
		return 10;
	}
	,GetXPBonusOnPrestige: function() {
		return 0.15;
	}
	,GetXPAddBonusOnPrestige: function() {
		return this.wdata.prestigeTimes * 3;
	}
	,GetLevelRequirementForPrestige: function() {
		var furtherBonus = 0;
		if(this.wdata.prestigeTimes > 1) {
			furtherBonus = this.wdata.prestigeTimes - 1;
		}
		return 75 + this.wdata.prestigeTimes * (100 + 80 * furtherBonus);
	}
	,CreateEnemy: function(region,area) {
		var enemyLevel = area;
		enemyLevel += this.config.regions[region].levelOffset;
		var sheet = this.config.regions[region].actorSheet;
		var regionType = this.config.regions[region].type;
		var areaInfo = null;
		if(regionType == RegionType.SEMIPROCEDURAL) {
			areaInfo = this.config.regions[region].areaDatas[area].enemy;
		}
		if(regionType == RegionType.PROCEDURAL && this.enemyAreaFromProcedural != null && this.enemyAreaFromProcedural.units != null) {
			areaInfo = this.enemyAreaFromProcedural.GetEnemyAreaInformation(area - 1);
		}
		if(regionType == RegionType.CHALLENGE) {
			var oldLevel = enemyLevel;
			enemyLevel = 0;
			var _g = 0;
			var _g1 = oldLevel;
			while(_g < _g1) {
				var i = _g++;
				enemyLevel = enemyLevel * 1.2 | 0;
				enemyLevel += 8;
				enemyLevel += i * 8;
			}
		}
		if(this.enemyAreaInformationOverwrite != null) {
			areaInfo = this.enemyAreaInformationOverwrite;
		}
		var enemy = this.createEnemyFromAreaInfo(areaInfo,enemyLevel,sheet);
		return enemy;
	}
	,createEnemyFromAreaInfo: function(areaInfo,enemyLevel,sheet) {
		var enemy;
		var equipment = null;
		var viewOverride = -1;
		if(areaInfo != null) {
			sheet = areaInfo.sheet;
			enemyLevel += areaInfo.level;
			equipment = areaInfo.equipment;
			viewOverride = areaInfo.viewOverride;
		}
		var timeToKillEnemy = this.balancing.timeToKillFirstEnemy;
		var initialAttackHero = 1;
		var heroAttackTime = this.timePeriod * 2;
		var heroDPS = initialAttackHero / heroAttackTime;
		var initialLifeEnemy = heroDPS * timeToKillEnemy | 0;
		var enemyLife = initialLifeEnemy + (enemyLevel - 1) * initialLifeEnemy;
		var enemyAttack = 1 + (enemyLevel - 1);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = enemyAttack;
		_g.h["Life"] = enemyLife;
		_g.h["LifeMax"] = enemyLife;
		_g.h["Speed"] = 20;
		_g.h["SpeedCount"] = 0;
		_g.h["Defense"] = 0;
		_g.h["MagicDefense"] = 0;
		_g.h["Piercing"] = 0;
		var stats2 = _g;
		enemy = { level : 1 + enemyLevel, attributesBase : stats2, equipment : [], xp : null, attributesCalculated : stats2, reference : new ActorReference(1,0), buffs : [], usableSkills : [], viewAux : 1};
		if(equipment != null) {
			var equipSlots = [];
			var _g1_current = 0;
			var _g1_array = equipment;
			while(_g1_current < _g1_array.length) {
				var _g2_value = _g1_array[_g1_current];
				var _g2_key = _g1_current++;
				var index = _g2_key;
				var value = _g2_value;
				enemy.equipment.push(value);
				equipSlots.push(index);
			}
			enemy.equipmentSets = [{ equipmentSlots : equipSlots}];
			enemy.chosenEquipSet = 0;
		}
		if(sheet != null) {
			var mul = sheet.speciesMultiplier;
			if(mul != null) {
				var h = mul.attributesBase.h;
				var p_h = h;
				var p_keys = Object.keys(h);
				var p_length = p_keys.length;
				var p_current = 0;
				while(p_current < p_length) {
					var key = p_keys[p_current++];
					var p_key = key;
					var p_value = p_h[key];
					var mul = p_value;
					var value = enemy.attributesBase.h[p_key] * mul | 0;
					enemy.attributesBase.h[p_key] = value;
					enemy.attributesCalculated.h[p_key] = value;
				}
			}
			if(sheet.speciesAdd != null) {
				var h = sheet.speciesAdd.h;
				var p_h = h;
				var p_keys = Object.keys(h);
				var p_length = p_keys.length;
				var p_current = 0;
				while(p_current < p_length) {
					var key = p_keys[p_current++];
					var p_key = key;
					var p_value = p_h[key];
					var add = p_value;
					if(Object.prototype.hasOwnProperty.call(enemy.attributesBase.h,p_key) == false) {
						enemy.attributesBase.h[p_key] = add;
						enemy.attributesCalculated.h[p_key] = add;
					} else {
						var _g = p_key;
						var _g1 = enemy.attributesBase;
						var v = _g1.h[_g] + add;
						_g1.h[_g] = v;
						var _g2 = p_key;
						var _g3 = enemy.attributesCalculated;
						var v1 = _g3.h[_g2] + add;
						_g3.h[_g2] = v1;
					}
				}
			}
			if(sheet.speciesLevelStats != null) {
				var h = sheet.speciesLevelStats.attributesBase.h;
				var p_h = h;
				var p_keys = Object.keys(h);
				var p_length = p_keys.length;
				var p_current = 0;
				while(p_current < p_length) {
					var key = p_keys[p_current++];
					var p_key = key;
					var p_value = p_h[key];
					var addLevel = p_value;
					var value = enemy.attributesBase.h[p_key] + addLevel * enemyLevel | 0;
					enemy.attributesBase.h[p_key] = value;
					enemy.attributesCalculated.h[p_key] = value;
				}
			}
			if(sheet.initialBuff != null) {
				var b = Reflect.copy(sheet.initialBuff);
				this.AddBuff(b,enemy);
			}
			if(sheet.viewAux >= 0) {
				enemy.viewAux = sheet.viewAux;
			}
			if(viewOverride >= 0) {
				enemy.viewAux = viewOverride;
			}
		}
		this.RecalculateAttributes(enemy);
		if(enemy.attributesCalculated.h["LifeMax"] <= 1) {
			enemy.attributesCalculated.h["LifeMax"] = 1;
		}
		var v = enemy.attributesCalculated.h["LifeMax"];
		enemy.attributesCalculated.h["Life"] = v;
		return enemy;
	}
	,CreateAreaEnemy: function() {
		this.wdata.enemy = this.CreateEnemy(this.wdata.battleAreaRegion,this.wdata.battleArea);
		var e = this.AddEvent(EventTypes.ActorAppear);
		e.origin = this.wdata.enemy.reference;
		if(this.wdata.hero.attributesCalculated.h["Speed"] > this.wdata.enemy.attributesCalculated.h["Speed"]) {
			var v = this.turnSpeedCount;
			this.wdata.hero.attributesCalculated.h["SpeedCount"] = v;
		} else {
			this.wdata.hero.attributesCalculated.h["SpeedCount"] = 0;
		}
		var speedH = this.wdata.hero.attributesCalculated.h["Speed"];
		this.turnSpeedCount = speedH * 15 - 1;
		if(this.wdata.enemy != null) {
			var speedE = this.wdata.enemy.attributesCalculated.h["Speed"];
			if(speedE > speedH) {
				this.turnSpeedCount = speedE * 15 - 1;
			}
		}
	}
	,getRegionProgress: function(region) {
		this.CheckRegionNull(region);
		return this.wdata.regionProgress[region];
	}
	,getEquipmentGenLevelWithBonus: function(e) {
		if(e == null) {
			return -1;
		}
		var level = this.wdata.equipLevels[e.outsideSystems.h["level"]];
		if(level.genLevelBonus > 0 == false) {
			level.genLevelBonus = 0;
		}
		return e.generationLevel + level.genLevelBonus;
	}
	,getUpgradeLevelCost: function(e) {
		if(e == null) {
			return -1;
		}
		var level = this.wdata.equipLevels[e.outsideSystems.h["level"]];
		if(level.genLevelBonus > 0 == false) {
			level.genLevelBonus = 0;
		}
		var max = this.getUpgradeLevelMaxBonusLevel(e);
		var ratio = level.genLevelBonus / max;
		var cost = 20 + level.genLevelBonus * 10;
		if(ratio > 0.6) {
			cost *= 2;
		}
		if(ratio > 0.9) {
			cost *= 2;
		}
		return cost;
	}
	,getUpgradeLevelMaxBonusLevel: function(e) {
		var maxLevel = e.generationLevel * 2 + 7;
		var resultMaxLevel = maxLevel + e.generationLevel;
		var finalMaxBonusLevel = Math.ceil(resultMaxLevel / 10) * 10 - e.generationLevel;
		return finalMaxBonusLevel;
	}
	,canUpgradeLevelOfEquipmentInSlot: function(money,slot) {
		var eId = this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[slot];
		if(eId >= 0) {
			var e = this.wdata.hero.equipment[eId];
			if(e != null) {
				if(this.getEquipmentBonusLevel(e) >= this.getUpgradeLevelMaxBonusLevel(e)) {
					return false;
				}
				return this.getUpgradeLevelCost(e) <= money;
			}
		}
		return false;
	}
	,getEquipmentBonusLevel: function(e) {
		var level = this.wdata.equipLevels[e.outsideSystems.h["level"]];
		if(level.genLevelBonus > 0 == false) {
			level.genLevelBonus = 0;
		}
		return level.genLevelBonus;
	}
	,getEquipmentInSlot: function(slot,set) {
		if(set == null) {
			set = -1;
		}
		if(set < 0) {
			set = this.wdata.hero.chosenEquipSet;
		}
		var equipId = this.wdata.hero.equipmentSets[set].equipmentSlots[slot];
		if(equipId < 0) {
			return null;
		}
		return this.wdata.hero.equipment[equipId];
	}
	,upgradeLevelOfEquipmentInSlot: function(slot) {
		var e = this.getEquipmentInSlot(slot);
		this.upgradeLevel(e);
	}
	,upgradeLevel: function(e) {
		var level = this.wdata.equipLevels[e.outsideSystems.h["level"]];
		if(level.genLevelBonus > 0 == false) {
			level.genLevelBonus = 0;
		}
		level.genLevelBonus++;
		var genItem = e.generationBaseItem;
		if(genItem >= 0 == false) {
			genItem = 0;
		}
		var h = this.itemBases[genItem].scalingStats.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
			if(Object.prototype.hasOwnProperty.call(e.attributes.h,key1)) {
				var _g = key1;
				var _g1 = e.attributes;
				var v = _g1.h[_g] + (value | 0);
				_g1.h[_g] = v;
			} else {
				var v1 = value | 0;
				e.attributes.h[key1] = v1;
			}
		}
	}
	,ReinitGameValues: function() {
		var _gthis = this;
		this.testInitializeRetentionWorldVersion(this.wdata);
		if(this.wdata.equipLevels == null) {
			this.wdata.equipLevels = [];
		}
		if(this.wdata.skillSets == null) {
			this.wdata.skillSets = [];
		}
		if(this.wdata.userId == null) {
			var tmp = HxOverrides.dateStr(new Date()) + " ";
			var tmp1 = this.random.randomInt(1,99999);
			this.wdata.userId = tmp + tmp1;
			haxe_Log.trace("reinit user id",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 1703, className : "BattleManager", methodName : "ReinitGameValues"});
		}
		if(this.wdata.timesReviewed >= 0 == false) {
			this.wdata.timesReviewed = 0;
		}
		if(this.wdata.currency == null) {
			var _g = new haxe_ds_StringMap();
			_g.h["Lagrima"] = { value : 0, visible : false};
			_g.h["Lagrima Stone"] = { value : 0, visible : false};
			this.wdata.currency = { currencies : _g};
		}
		this.currencyModel.currencyHolder = this.wdata.currency;
		this.currencyModel.initializeCurrency(BattleConstants.CURRENCY_TIME,100);
		if(this.wdata.battleAreaRegion < 0) {
			this.wdata.battleAreaRegion = 0;
		}
		if(this.wdata.hero.equipmentSets == null) {
			this.wdata.hero.equipmentSets = [];
			this.wdata.hero.chosenEquipSet = 0;
		}
		if(this.wdata.hero.viewAux >= 0 == false) {
			this.wdata.hero.viewAux = 0;
		}
		while(this.wdata.hero.equipmentSets.length < BattleManager.NUMBER_OF_EQUIPMENT_SETS) this.wdata.hero.equipmentSets.push({ equipmentSlots : [-1,-1,-1]});
		if(this.wdata.hero.equipment != null) {
			while(this.wdata.hero.equipment.indexOf(null) != -1) this.DiscardSingleEquipment(this.wdata.hero.equipment.indexOf(null));
			if(this.wdata.equipLevels == null && this.wdata.hero.equipment.length > 0) {
				this.wdata.equipLevels = [];
			}
			var _g_current = 0;
			var _g_array = this.wdata.hero.equipment;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var e = value;
				if(value.outsideSystems == null) {
					value.outsideSystems = new haxe_ds_StringMap();
				}
				if(Object.prototype.hasOwnProperty.call(value.outsideSystems.h,"level") == false) {
					var index1 = ArrayHelper.InsertOnEmpty({ level : 0, limitbreak : 0, ascension : 0, active : true},this.wdata.equipLevels);
					value.outsideSystems.h["level"] = index1;
				}
				this.wdata.equipLevels[value.outsideSystems.h["level"]].active = true;
				if(Object.prototype.hasOwnProperty.call(value.outsideSystems.h,"skillset")) {
					this.wdata.skillSets[value.outsideSystems.h["skillset"]].active = true;
				}
			}
			if(this.wdata.equipLevels != null) {
				var _g = 0;
				var _g1 = this.wdata.equipLevels.length;
				while(_g < _g1) {
					var i = _g++;
					if(this.wdata.equipLevels[i] != null && !this.wdata.equipLevels[i].active) {
						this.wdata.equipLevels[i] = null;
					}
				}
				ArraysUtilities.trimNullArray(this.wdata.equipLevels);
			}
			if(this.wdata.skillSets != null) {
				var _g = 0;
				var _g1 = this.wdata.skillSets.length;
				while(_g < _g1) {
					var i = _g++;
					if(this.wdata.skillSets[i] != null && this.wdata.skillSets[i].active == false) {
						this.wdata.skillSets[i] = null;
					}
				}
				ArraysUtilities.trimNullArray(this.wdata.skillSets);
			}
		}
		if(this.wdata.regionProgress == null) {
			this.wdata.regionProgress = [];
		}
		var _g = 0;
		var _g1 = this.wdata.regionProgress.length;
		while(_g < _g1) {
			var i = _g++;
			this.CheckRegionNull(i);
			var r = this.wdata.regionProgress[i];
			if(r.maxArea >= 1 == false) {
				r.maxArea = 1;
			}
			if(r.maxAreaOnPrestigeRecord == null) {
				r.maxAreaOnPrestigeRecord = [];
			}
		}
		if(this.wdata.maxArea >= 1 == false) {
			this.wdata.maxArea = 1;
		}
		if(this.wdata.battleAreaRegionMax >= 1 == false) {
			this.wdata.battleAreaRegionMax = 1;
		}
		if(this.wdata.prestigeTimes >= 0 == false) {
			this.wdata.prestigeTimes = 0;
		}
		if(this.wdata.hero.buffs != null == false) {
			this.wdata.hero.buffs = [];
		}
		if(this.wdata.hero.usableSkills != null == false) {
			this.wdata.hero.usableSkills = [];
		}
		if(this.wdata.enemy != null) {
			if(this.wdata.enemy.buffs != null == false) {
				this.wdata.enemy.buffs = [];
			}
		}
		var addAction = function(id,action,callback) {
			var w = _gthis.wdata;
			if(Object.prototype.hasOwnProperty.call(_gthis.wdata.playerActions.h,id) == false) {
				_gthis.wdata.playerActions.h[id] = action;
				if(callback != null) {
					var v = { actionData : w.playerActions.h[id], actualAction : callback};
					_gthis.playerActions.h[id] = v;
				}
			}
		};
		var createAction = function() {
			var a = { visible : false, enabled : false, mode : 0, timesUsed : 0};
			return a;
		};
		addAction("sleep",{ visible : false, enabled : false, timesUsed : 0, mode : 0},function(a) {
			_gthis.sleepToggle();
		});
		addAction("advance",{ visible : true, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("autoadvance",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("autorepeat",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("retreat",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("levelup",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("tabequipment",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("tabvillage",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("tabmemory",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("tabregion",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("tabcharacter",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("equipset_menu",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("equipset_battle",{ visible : false, enabled : false, timesUsed : 0, mode : 0},null);
		addAction("repeat",createAction(),function(a) {
			_gthis.wdata.killedInArea[_gthis.wdata.battleArea] = 0;
		});
		addAction("prestige",createAction(),function(a) {
			_gthis.PrestigeExecute();
		});
		var buttonId = 0;
		addAction("battleaction_" + 0,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[0];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 1;
		addAction("battleaction_" + 1,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[1];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 2;
		addAction("battleaction_" + 2,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[2];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 3;
		addAction("battleaction_" + 3,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[3];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 4;
		addAction("battleaction_" + 4,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[4];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 5;
		addAction("battleaction_" + 5,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[5];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var buttonId = 6;
		addAction("battleaction_" + 6,createAction(),function(struct) {
			var skill = _gthis.wdata.hero.usableSkills[6];
			_gthis.UseSkill(skill,_gthis.wdata.hero);
		});
		var _g = new haxe_ds_StringMap();
		_g.h["Life"] = 20;
		_g.h["LifeMax"] = 20;
		_g.h["Speed"] = 20;
		_g.h["SpeedCount"] = 0;
		_g.h["Attack"] = 1;
		_g.h["Defense"] = 0;
		_g.h["MagicAttack"] = 1;
		_g.h["MagicDefense"] = 0;
		_g.h["Piercing"] = 0;
		_g.h["Regen"] = 0;
		_g.h["enchant-fire"] = 0;
		_g.h["MP"] = 0;
		_g.h["MPMax"] = 100;
		_g.h["MPRecharge"] = 100;
		_g.h["MPRechargeCount"] = 10000;
		_g.h["Veteran"] = 0;
		_g.h[BattleConstants.counterAttack] = 0;
		this.wdata.hero.attributesBase = _g;
		var valueXP = 0;
		if(this.wdata.hero.xp != null) {
			valueXP = this.wdata.hero.xp.value;
		}
		var timeLevelUpGrind = this.balancing.timeForFirstLevelUpGrind;
		var initialEnemyXP = 2;
		var initialXPToLevelUp = this.balancing.timeForFirstLevelUpGrind * initialEnemyXP / this.balancing.timeToKillFirstEnemy | 0;
		this.wdata.hero.xp = ResourceLogic.getExponentialResource(1.25,1,initialXPToLevelUp,200000);
		this.wdata.hero.xp.value = valueXP;
		if(this.wdata.hero.xp.value < 0) {
			this.wdata.hero.xp.value = 0;
		}
		this.recalculateMaxXP();
		this.areaBonus = ResourceLogic.getExponentialResource(1.05,1,initialXPToLevelUp * this.balancing.areaBonusXPPercentOfFirstLevelUp / 100 | 0,15000);
		if(this.wdata.hero.equipment == null) {
			this.wdata.hero.equipment = [];
		}
		if(this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots == null) {
			this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots = [-1,-1,-1];
		}
		this.RecalculateAttributes(this.wdata.hero);
	}
	,recalculateMaxXP: function() {
		ResourceLogic.recalculateScalingResource(this.wdata.hero.level,this.wdata.hero.xp);
		if(this.wdata.hero.xp.calculatedMax >= this.wdata.hero.xp.cap || this.wdata.hero.xp.calculatedMax < 0) {
			this.wdata.hero.xp.calculatedMax = 200000 + this.wdata.hero.level * 1000;
		}
	}
	,PrestigeExecute: function() {
		this.prestiged = true;
		this.wdata.enemy = null;
		this.wdata.hero.level = 1;
		this.wdata.hero.xp.value = 0;
		var hero = this.wdata.hero;
		var v = hero.attributesCalculated.h["LifeMax"];
		hero.attributesCalculated.h["Life"] = v;
		this.recalculateMaxXP();
		var _g = 0;
		var _g1 = this.wdata.regionProgress.length;
		while(_g < _g1) {
			var i = _g++;
			this.wdata.regionProgress[i].maxAreaOnPrestigeRecord.push(this.wdata.regionProgress[i].maxArea);
			this.wdata.regionProgress[i].area = 0;
			this.wdata.regionProgress[i].maxArea = 1;
			this.wdata.regionProgress[i].amountEnemyKilledInArea = 0;
			this.wdata.killedInArea = [0];
		}
		this.wdata.battleAreaRegion = 0;
		this.wdata.battleArea = 0;
		this.wdata.maxArea = 1;
		this.wdata.battleAreaRegionMax = 1;
		this.wdata.prestigeTimes++;
		this.wdata.currency.currencies.h["Lagrima"].value = 0;
		this.wdata.currency.currencies.h["Lagrima Stone"].value = 0;
		this.RecalculateAttributes(this.wdata.hero);
		var i = 0;
		while(i < this.wdata.hero.equipment.length) {
			var equipKept = false;
			var _g = 0;
			var _g1 = this.wdata.hero.equipmentSets.length;
			while(_g < _g1) {
				var j = _g++;
				if(this.wdata.hero.equipmentSets[j].equipmentSlots.indexOf(i) != -1) {
					var e = this.wdata.hero.equipment[i];
					if(e != null) {
						var reset = this.ResetEquipToBaseLevel(e,1);
						if(reset == false) {
							var h = e.attributes.h;
							var s_h = h;
							var s_keys = Object.keys(h);
							var s_length = s_keys.length;
							var s_current = 0;
							while(s_current < s_length) {
								var s = s_keys[s_current++];
								var v = e.attributes.h[s] * 0.2 | 0;
								e.attributes.h[s] = v;
							}
						}
						if(e.attributeMultiplier != null) {
							var h1 = e.attributeMultiplier.h;
							var _g2_h = h1;
							var _g2_keys = Object.keys(h1);
							var _g2_length = _g2_keys.length;
							var _g2_current = 0;
							while(_g2_current < _g2_length) {
								var key = _g2_keys[_g2_current++];
								var _g3_key = key;
								var _g3_value = _g2_h[key];
								var key1 = _g3_key;
								var value = _g3_value;
								if(value > 100) {
									var v1 = (value - 100) * 0.7 + 100 | 0;
									e.attributeMultiplier.h[key1] = v1;
								}
							}
						}
						if(e.outsideSystems != null) {
							if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"level")) {
								var levelId = e.outsideSystems.h["level"];
								if(levelId >= 0) {
									var el = this.wdata.equipLevels[levelId];
									el.ascension = 0;
									el.level = 0;
									el.limitbreak = 0;
									el.genLevelBonus = 0;
								}
							}
						}
					}
					equipKept = true;
					break;
				}
			}
			if(equipKept == false) {
				this.DiscardSingleEquipment(i);
				--i;
			}
			++i;
		}
	}
	,CheckRegionNull: function(region) {
		if(this.wdata.regionProgress[region] == null) {
			this.wdata.regionProgress[region] = { area : 0, maxArea : 1, amountEnemyKilledInArea : 0, maxAreaRecord : 1, maxAreaOnPrestigeRecord : [], seen : 0};
		}
	}
	,changeRegion: function(region) {
		this.wdata.battleAreaRegion = region;
		this.CheckRegionNull(region);
		this.ChangeBattleArea(this.wdata.regionProgress[region].area);
		this.wdata.maxArea = this.wdata.regionProgress[region].maxArea;
		this.wdata.killedInArea[this.wdata.battleArea] = this.wdata.regionProgress[region].amountEnemyKilledInArea;
	}
	,advance: function() {
		if(this.autoAdvanceRequest) {
			if(this.wdata.battleArea < this.wdata.maxArea) {
				this.ChangeBattleArea(this.wdata.battleArea + 1);
			}
			this.autoAdvanceRequest = false;
			return;
		}
		if(this.autoRepeatRequest) {
			this.wdata.killedInArea[this.wdata.battleArea] = 0;
			this.autoRepeatRequest = false;
		}
		var hero = this.wdata.hero;
		var enemy = this.wdata.enemy;
		var killedInArea = this.wdata.killedInArea;
		var battleArea = this.wdata.battleArea;
		var areaComplete = killedInArea[battleArea] >= this.wdata.necessaryToKillInArea;
		var attackHappen = true;
		if(areaComplete) {
			this.wdata.enemy = null;
			attackHappen = false;
		}
		if(this.isBattleArea() && this.PlayerFightMode() && areaComplete != true) {
			var createAreaEnemy = false;
			if(enemy == null) {
				createAreaEnemy = true;
				enemy = this.wdata.enemy;
				attackHappen = false;
			} else if(enemy.attributesCalculated.h["Life"] <= 0) {
				attackHappen = false;
				createAreaEnemy = true;
			}
			if(createAreaEnemy && this.automaticEnemyCreation) {
				this.CreateAreaEnemy();
			}
		}
		if(this.PlayerFightMode() == false || enemy == null) {
			var _g = 0;
			var _g1 = this.counterAttackBuffered.length;
			while(_g < _g1) {
				var i = _g++;
				this.counterAttackBuffered[i] = null;
			}
			if(this.wdata.hero.buffs.length > 0) {
				this.wdata.hero.buffs.length = 0;
			}
			attackHappen = false;
			var chargeMultiplier = 3;
			var max = 99999;
			var restMultiplier = 1;
			var _g = 0;
			while(_g < 3) {
				var i = _g++;
				var valueK = "Life";
				var valueMaxK = "LifeMax";
				if(i == 1) {
					valueK = "MP";
					valueMaxK = "MPMax";
				}
				if(i == 2) {
					valueK = "MPRechargeCount";
					valueMaxK = null;
					max = 10000;
					restMultiplier = 500;
				}
				var value = this.wdata.hero.attributesCalculated.h[valueK];
				if(valueMaxK != null) {
					max = this.wdata.hero.attributesCalculated.h[valueMaxK];
				}
				value += max * 0.15 | 0;
				if(this.wdata.sleeping) {
					value += max * 0.3 | 0;
				}
				if(value > max) {
					value = max;
				}
				this.wdata.hero.attributesCalculated.h[valueK] = value;
			}
		}
		var _g = 0;
		while(_g < 2) {
			var i = _g++;
			var actor = this.wdata.hero;
			if(i == 1) {
				actor = this.wdata.enemy;
			}
			if(actor == null) {
				continue;
			}
			var regen = actor.attributesCalculated.h["Regen"];
			if(regen > 0) {
				var recovery = regen * actor.attributesCalculated.h["LifeMax"] / 100;
				if(recovery < 1) {
					recovery = 1;
				}
				var _g1 = actor.attributesCalculated;
				var v = _g1.h["Life"] + (recovery | 0);
				_g1.h["Life"] = v;
			}
			if(actor.attributesCalculated.h["Life"] > actor.attributesCalculated.h["LifeMax"]) {
				var v1 = actor.attributesCalculated.h["LifeMax"];
				actor.attributesCalculated.h["Life"] = v1;
			}
		}
		if(attackHappen) {
			var counterAttackBufferPos = -1;
			var _g1_current = 0;
			var _g1_array = this.counterAttackBuffered;
			while(_g1_current < _g1_array.length) {
				var _g2_value = _g1_array[_g1_current];
				var _g2_key = _g1_current++;
				var index = _g2_key;
				var value = _g2_value;
				if(value != null) {
					counterAttackBufferPos = index;
				}
			}
			if(counterAttackBufferPos >= 0) {
				var bufferC = this.counterAttackBuffered[counterAttackBufferPos];
				var counterD = this.counterAttackDatas[bufferC.counterId];
				var attacker = this.wdata.hero;
				var defender = this.wdata.enemy;
				if(bufferC.actor.type != 0) {
					attacker = this.wdata.enemy;
					defender = this.wdata.hero;
				}
				this.AttackExecute(attacker,defender,100,null,0,100,false,counterD.element,counterD.attributeInfluenceOnCounterPower,"Counter");
				this.counterAttackBuffered[counterAttackBufferPos] = null;
				return;
			}
			var attacker = null;
			var defender = null;
			var decided = false;
			attacker = hero;
			defender = enemy;
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				var bActor = hero;
				var _g1 = bActor.attributesCalculated;
				var v = _g1.h["SpeedCount"] + bActor.attributesCalculated.h["Speed"];
				_g1.h["SpeedCount"] = v;
				var sc = bActor.attributesCalculated.h["SpeedCount"];
				if(decided == false) {
					if(bActor.attributesCalculated.h["SpeedCount"] > this.turnSpeedCount) {
						var v1 = bActor.attributesCalculated.h["SpeedCount"] - this.turnSpeedCount;
						bActor.attributesCalculated.h["SpeedCount"] = v1;
						decided = true;
					}
				}
				var bActor1 = hero;
				bActor1 = enemy;
				var _g2 = bActor1.attributesCalculated;
				var v2 = _g2.h["SpeedCount"] + bActor1.attributesCalculated.h["Speed"];
				_g2.h["SpeedCount"] = v2;
				var sc1 = bActor1.attributesCalculated.h["SpeedCount"];
				if(decided == false) {
					if(bActor1.attributesCalculated.h["SpeedCount"] > this.turnSpeedCount) {
						var v3 = bActor1.attributesCalculated.h["SpeedCount"] - this.turnSpeedCount;
						bActor1.attributesCalculated.h["SpeedCount"] = v3;
						attacker = enemy;
						defender = hero;
						decided = true;
					}
				}
				if(decided) {
					break;
				}
			}
			if(attacker == this.wdata.hero && this.scheduledSkill != null) {
				this.UseSkill(this.scheduledSkill,attacker,true);
				this.scheduledSkill = null;
			} else {
				this.AttackExecute(attacker,defender,100,null,0,100,attacker.attributesCalculated.h[BattleConstants.MAGICAL] > 0);
			}
			if(attacker.turnRecharge != null) {
				var _g = 0;
				var _g1 = attacker.turnRecharge.length;
				while(_g < _g1) {
					var i = _g++;
					if(attacker.turnRecharge[i] > 0) {
						attacker.turnRecharge[i]--;
					}
				}
			}
			var _g = 0;
			var _g1 = attacker.buffs.length;
			while(_g < _g1) {
				var b = _g++;
				var bu = attacker.buffs[b];
				if(attacker.buffs[b] != null) {
					bu.duration -= 1;
				}
			}
			this.CheckRemoveMod(attacker);
			this.CheckRemoveMod(defender);
		} else if(this.wdata.hero.turnRecharge != null) {
			this.wdata.hero.turnRecharge.length = 0;
		}
	}
	,CheckRemoveMod: function(actor) {
		var attackerBuffChanged = false;
		var _g = 0;
		var _g1 = actor.buffs.length;
		while(_g < _g1) {
			var b = _g++;
			var bu = actor.buffs[b];
			if(bu.duration <= 0) {
				attackerBuffChanged = true;
				actor.buffs[b] = null;
			}
		}
		while(HxOverrides.remove(actor.buffs,null)) {
		}
		if(attackerBuffChanged) {
			this.RecalculateAttributes(actor);
		}
	}
	,AddMod: function(modBase,statAdd,statMul,seed) {
		var mulAdd = modBase.statMultipliers;
		var rand = this.fixedRandom;
		rand.set_seed(seed);
		if(mulAdd != null) {
			var h = mulAdd.h;
			var m_h = h;
			var m_keys = Object.keys(h);
			var m_length = m_keys.length;
			var m_current = 0;
			while(m_current < m_length) {
				var key = m_keys[m_current++];
				var m_key = key;
				var m_value = m_h[key];
				var val = mulAdd.h[m_key].max;
				if(Object.prototype.hasOwnProperty.call(statMul.h,m_key)) {
					var v = statMul.h[m_key] * val / 100 | 0;
					statMul.h[m_key] = v;
				} else {
					statMul.h[m_key] = val;
				}
			}
		}
		if(modBase.statAdds != null) {
			var h = modBase.statAdds.h;
			var m_h = h;
			var m_keys = Object.keys(h);
			var m_length = m_keys.length;
			var m_current = 0;
			while(m_current < m_length) {
				var key = m_keys[m_current++];
				var m_key = key;
				var m_value = m_h[key];
				var val = modBase.statAdds.h[m_key].max;
				if(Object.prototype.hasOwnProperty.call(statAdd.h,m_key)) {
					var v = statAdd.h[m_key] + val | 0;
					statAdd.h[m_key] = v;
				} else {
					statAdd.h[m_key] = val;
				}
			}
		}
	}
	,LimitBreakEquipment: function(pos) {
		var e = this.wdata.hero.equipment[pos];
		BattleManager.LimitBreak(e,this.wdata);
	}
	,ChangeEquipmentSet: function(pos) {
		this.wdata.hero.chosenEquipSet = pos;
		this.RecalculateAttributes(this.wdata.hero);
	}
	,UpgradeOrLimitBreakEquipment: function(pos) {
		var e = this.wdata.hero.equipment[pos];
		if(BattleManager.IsUpgradable(e,this.wdata)) {
			BattleManager.Upgrade(e,this.wdata,this);
		} else {
			BattleManager.LimitBreak(e,this.wdata);
		}
		this.RecalculateAttributes(this.wdata.hero);
	}
	,DiscardSingleEquipment: function(pos) {
		var e = this.wdata.hero.equipment[pos];
		HxOverrides.remove(this.wdata.hero.equipment,e);
		var _g = 0;
		var _g1 = this.wdata.hero.equipmentSets.length;
		while(_g < _g1) {
			var j = _g++;
			var _g2 = 0;
			var _g3 = this.wdata.hero.equipmentSets[j].equipmentSlots.length;
			while(_g2 < _g3) {
				var i = _g2++;
				if(this.wdata.hero.equipmentSets[j].equipmentSlots[i] >= pos) {
					this.wdata.hero.equipmentSets[j].equipmentSlots[i]--;
				}
			}
		}
		if(e != null) {
			this.equipmentToDiscard.push(e);
		}
	}
	,SellSingleEquipment: function(pos) {
		var prize = BattleManager.GetSellPrize(this.wdata.hero.equipment[pos],this.wdata);
		this.DiscardSingleEquipment(pos);
		this.wdata.currency.currencies.h["Lagrima"].value += prize;
	}
	,SellEquipment: function(pos) {
		this.SellSingleEquipment(pos);
		this.RecalculateAttributes(this.wdata.hero);
	}
	,ToggleEquipped: function(pos) {
		var slot = this.wdata.hero.equipment[pos].type;
		if(this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[slot] == pos) {
			if(slot != 2) {
				this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[slot] = -1;
			}
		} else {
			this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[slot] = pos;
		}
		this.RecalculateAttributes(this.wdata.hero);
	}
	,IsEquipped: function(pos,anySet) {
		if(anySet == null) {
			anySet = true;
		}
		if(anySet) {
			var _g = 0;
			var _g1 = this.wdata.hero.equipmentSets.length;
			while(_g < _g1) {
				var i = _g++;
				if(this.wdata.hero.equipmentSets[i].equipmentSlots.indexOf(pos) != -1) {
					return true;
				}
			}
			return false;
		} else {
			return this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots.indexOf(pos) != -1;
		}
	}
	,hasEquipmentOfType: function(type) {
		var _g = 0;
		var _g1 = this.wdata.hero.equipment;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.type == type) {
				return true;
			}
		}
		return false;
	}
	,AddEvent: function(eventType) {
		var e = new GameEvent(eventType);
		this.events.push(e);
		return e;
	}
	,BaseInformationFormattedString: function() {
		var hero = this.wdata.hero;
		var maxArea = this.wdata.maxArea;
		var battleArea = this.wdata.battleArea;
		var enemy = this.wdata.enemy;
		var level = hero.level;
		var xp = hero.xp.value;
		var xpmax = hero.xp.calculatedMax;
		var baseInfo = this.CharacterBaseInfoFormattedString(hero);
		var areaText = "";
		var battleAreaShow = battleArea + 1;
		var maxAreaShow = maxArea + 1;
		if(maxArea > 0) {
			areaText = "Area: " + battleAreaShow + " / " + maxAreaShow;
		}
		var output = "" + areaText + "\n\n\n\nPlayer \n\tlevel: " + level + "\n\txp: " + xp + " / " + xpmax + "\n" + baseInfo;
		baseInfo = this.CharacterBaseInfoFormattedString(enemy);
		output += "\n\n";
		output += "Enemy\n" + baseInfo;
		return output;
	}
	,CharacterBaseInfoFormattedString: function(actor) {
		var life = actor.attributesCalculated.h["Life"];
		var lifeM = actor.attributesCalculated.h["LifeMax"];
		var attack = actor.attributesCalculated.h["Attack"];
		return "\t Life: " + life + " / " + lifeM + "\n\tAttack: " + attack;
	}
	,isTriggeredByEvent: function(trigger) {
		var _g_current = 0;
		var _g_array = this.events;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(trigger.necessaryType == value.type) {
				if(trigger.necessaryData != GameEventTrigger.IGNORE && trigger.necessaryData != value.data) {
					continue;
				}
				if(trigger.necessaryData2 != GameEventTrigger.IGNORE && trigger.necessaryData2 != value.data2) {
					continue;
				}
				return true;
			}
		}
		return false;
	}
	,processEvents: function(eventDataHolder) {
		var _g_current = 0;
		var _g_array = eventDataHolder.dataEvents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.stringData == BattleConstants.DATAEVENT_CHANGEAREA) {
				this.changeRegion(value.intData);
				this.ChangeBattleArea(value.intData2);
			}
			if(value.stringData == BattleConstants.DATAEVENT_REGIONUNLOCK) {
				var region = value.intData;
				while(this.wdata.regionProgress.length <= region) this.wdata.regionProgress.push({ area : 0, maxArea : 1, amountEnemyKilledInArea : -1, maxAreaRecord : -1, maxAreaOnPrestigeRecord : [], seen : 0});
				this.wdata.regionProgress[region].seen = 1;
			}
		}
	}
	,update: function(delta) {
		if(this.wdata.battleAreaRegion >= this.config.regions.length) {
			this.changeRegion(this.config.regions.length - 1);
		}
		this.timeCount += delta;
		this.RefreshCalculatedTurnOrder();
		var statsToShowHero = this.statsToShowActors[0];
		var statsToShowEnemy = this.statsToShowActors[1];
		statsToShowHero.length = 0;
		statsToShowEnemy.length = 0;
		statsToShowHero.push(BattleConstants.ATTACK);
		statsToShowHero.push(BattleConstants.MAGICATTACK);
		statsToShowHero.push(BattleConstants.PIERCING);
		statsToShowHero.push(BattleConstants.SAFEGUARD);
		var showDefense = true;
		if(this.wdata.enemy != null) {
			if(this.wdata.enemy.attributesCalculated.h[BattleConstants.MAGICAL] > 0) {
				showDefense = false;
				statsToShowEnemy.push(BattleConstants.MAGICATTACK);
			} else {
				statsToShowEnemy.push(BattleConstants.ATTACK);
			}
			statsToShowEnemy.push(BattleConstants.DEFENSE);
			statsToShowEnemy.push(BattleConstants.MAGICDEFENSE);
			statsToShowEnemy.push(BattleConstants.PIERCING);
			statsToShowEnemy.push(BattleConstants.SAFEGUARD);
			statsToShowEnemy.push(BattleConstants.FIREDAMAGE);
			statsToShowEnemy.push(BattleConstants.ICEDAMAGE);
			statsToShowEnemy.push(BattleConstants.THUNDERDAMAGE);
		}
		if(showDefense == true) {
			statsToShowHero.push(BattleConstants.DEFENSE);
		} else {
			statsToShowHero.push(BattleConstants.MAGICDEFENSE);
		}
		var v = this.wdata.maxArea;
		this.global.data.h["maxarea"] = v;
		var v = this.wdata.hero.level;
		this.global.data.h["herolevel"] = v;
		var _g_current = 0;
		var _g_array = this.wdata.regionProgress;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				var v = value.maxAreaRecord;
				this.global.data.h["maxarea_region" + index] = v;
			}
		}
		this.achievementModel.update();
		var _g = 0;
		var _g1 = this.equipmentToDiscard;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.outsideSystems != null) {
				if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"skillset")) {
					var skillsetpos = e.outsideSystems.h["skillset"];
					this.wdata.skillSets[skillsetpos] = null;
				}
				if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"level")) {
					var level = e.outsideSystems.h["level"];
					this.wdata.equipLevels[level] = null;
				}
			}
		}
		this.equipmentToDiscard.length = 0;
		if(this.wdata.regionProgress == null) {
			this.wdata.regionProgress = [];
		}
		while(this.wdata.regionProgress.length <= this.wdata.battleAreaRegion) this.wdata.regionProgress.push({ area : 0, maxArea : 1, amountEnemyKilledInArea : -1, maxAreaRecord : -1, maxAreaOnPrestigeRecord : [], seen : 0});
		this.wdata.regionProgress[this.wdata.battleAreaRegion].area = this.wdata.battleArea;
		var recalculate = false;
		if(this.wdata.regionProgress[this.wdata.battleAreaRegion].maxArea != this.wdata.maxArea) {
			recalculate = true;
			this.wdata.regionProgress[this.wdata.battleAreaRegion].maxArea = this.wdata.maxArea;
		}
		var _g = 0;
		var _g1 = this.wdata.regionProgress;
		while(_g < _g1.length) {
			var rp = _g1[_g];
			++_g;
			if(rp != null) {
				if(rp.maxArea > rp.maxAreaRecord) {
					rp.maxAreaRecord = rp.maxArea;
					recalculate = true;
				}
			}
		}
		if(this.isBattleArea() == false) {
			var areaData = this.getAreaData();
			var autoClearOfArea = true;
			if(areaData != null) {
				if(areaData.externalClearConditions.length > 0) {
					autoClearOfArea = false;
				}
			}
			if(autoClearOfArea && this.wdata.maxArea == this.wdata.battleArea) {
				this.wdata.maxArea++;
			}
		}
		if(recalculate) {
			this.RecalculateAttributes(this.wdata.hero);
		}
		this.wdata.regionProgress[this.wdata.battleAreaRegion].amountEnemyKilledInArea = this.wdata.killedInArea[this.wdata.battleArea];
		var _g4_current = 0;
		var _g4_array = this.config.regions;
		while(_g4_current < _g4_array.length) {
			var _g5_value = _g4_array[_g4_current];
			var _g5_key = _g4_current++;
			var index = _g5_key;
			var reg = _g5_value;
			if(this.wdata.regionProgress.length <= index) {
				this.wdata.regionProgress.push({ area : 0, maxArea : 1, amountEnemyKilledInArea : -1, maxAreaRecord : -1, maxAreaOnPrestigeRecord : [], seen : 0});
			}
			var progress = this.wdata.regionProgress[index];
			if(progress.seen > 0 == false) {
				if(reg.conditionRegion >= 0) {
					var maxArea = this.wdata.regionProgress[reg.conditionRegion].maxArea;
					if(maxArea > reg.conditionArea) {
						progress.seen = 1;
						this.AddEvent(EventTypes.RegionUnlock).data = index;
					}
				}
			}
		}
		var maxArea = this.wdata.maxArea;
		var reg = this.config.regions[this.wdata.battleAreaRegion].areaDatas;
		if(reg != null && reg.length > 0) {
			if(maxArea > reg.length - 1) {
				maxArea = reg.length - 1;
			}
		}
		this.canAdvance = this.wdata.battleArea < maxArea;
		this.canRetreat = this.wdata.battleArea > 0;
		this.canLevelUp = this.wdata.hero.xp.value >= this.wdata.hero.xp.calculatedMax && this.wdata.hero.level < this.CalculateHeroMaxLevel();
		var hasEquipment = this.wdata.hero.equipment.length > 1;
		var lu = this.wdata.playerActions.h["tabequipment"];
		lu.enabled = hasEquipment;
		lu.visible = lu.enabled || lu.visible;
		var lu = this.wdata.playerActions.h["tabvillage"];
		lu.enabled = this.wdata.hero.level > 1 || lu.enabled;
		lu.visible = lu.enabled || lu.visible;
		var lu = this.wdata.playerActions.h["tabregion"];
		lu.enabled = true;
		lu.visible = true;
		var lu = this.wdata.playerActions.h["tabcharacter"];
		lu.enabled = true;
		lu.visible = this.canLevelUp || lu.visible || this.wdata.hero.level > 1;
		var lu = this.wdata.playerActions.h["equipset_menu"];
		lu.enabled = true;
		lu.visible = this.wdata.hero.equipment.length > 10 || lu.visible;
		var lu = this.wdata.playerActions.h["equipset_battle"];
		lu.enabled = true;
		lu.visible = this.wdata.hero.equipment.length > 10 || lu.visible;
		var lu = this.wdata.playerActions.h["levelup"];
		lu.enabled = this.canLevelUp;
		lu.visible = this.canLevelUp;
		var lu = this.wdata.playerActions.h["prestige"];
		lu.enabled = this.wdata.hero.level >= this.GetLevelRequirementForPrestige();
		lu.visible = lu.enabled || lu.visible || this.wdata.hero.level >= this.GetLevelRequirementForPrestige() - 10;
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			var buttonId = i;
			var lu = this.wdata.playerActions.h["battleaction_" + i];
			var skillUsable = false;
			var skillVisible = false;
			var skillButtonMode = 0;
			if(this.wdata.hero.level < this.skillSlotUnlocklevel[i]) {
				skillButtonMode = 1;
			}
			if(this.wdata.hero.usableSkills[i] != null) {
				var sb = this.GetSkillBase(this.wdata.hero.usableSkills[i].id);
				if(this.wdata.hero.level >= this.skillSlotUnlocklevel[i]) {
					if(this.wdata.hero.attributesCalculated.h["MPRechargeCount"] >= 10000 && sb.mpCost > 0) {
						skillUsable = true;
					}
				}
				if(sb.mpCost <= 0 && sb.hpCost > 0) {
					if(this.wdata.hero.attributesCalculated.h[BattleConstants.LIFE] > sb.hpCost) {
						skillUsable = true;
					}
				}
				if(i == 0 || this.wdata.hero.level >= this.skillSlotUnlocklevel[i - 1]) {
					skillVisible = true;
				}
				if(sb.turnRecharge > 0) {
					if(this.wdata.hero.turnRecharge == null) {
						this.wdata.hero.turnRecharge = [];
					}
					if(this.wdata.hero.turnRecharge.length > i) {
						if(this.wdata.hero.turnRecharge[i] > 0) {
							skillUsable = false;
						}
					}
				}
				if(!this.battleSkillsAccessible) {
					skillUsable = false;
				}
				if(skillUsable && skillVisible && this.wdata.enemy == null) {
					var efs = sb.effects;
					if(efs == null) {
						efs = sb.activeEffect;
					}
					var _g1 = 0;
					while(_g1 < efs.length) {
						var e = efs[_g1];
						++_g1;
						if(e.target == Target.ENEMY) {
							skillUsable = false;
							break;
						}
					}
				}
				if(skillUsable && skillVisible && this.wdata.killedInArea[this.wdata.battleArea] >= this.wdata.necessaryToKillInArea) {
					skillUsable = false;
					var efs1 = sb.effects;
					if(efs1 == null) {
						efs1 = sb.activeEffect;
					}
				}
			}
			if(this.scheduledSkill != null) {
				skillUsable = false;
				if(this.scheduledSkill == this.wdata.hero.usableSkills[i]) {
					skillButtonMode = 2;
				}
			}
			lu.enabled = skillUsable;
			lu.visible = skillVisible;
			lu.mode = skillButtonMode;
		}
		var lu = this.wdata.playerActions.h["advance"];
		lu.visible = this.canAdvance || lu.visible;
		lu.enabled = this.canAdvance;
		var lu = this.wdata.playerActions.h["autoadvance"];
		lu.visible = this.wdata.maxArea > 10 || lu.visible;
		lu.enabled = this.wdata.hero.level >= 15 || lu.enabled;
		var lu = this.wdata.playerActions.h["autorepeat"];
		lu.visible = this.wdata.maxArea > 5 || lu.visible;
		lu.enabled = this.wdata.hero.level >= 10 || lu.enabled;
		var lu = this.wdata.playerActions.h["retreat"];
		lu.enabled = this.canRetreat;
		lu.visible = lu.enabled || lu.visible;
		var lu = this.wdata.playerActions.h["repeat"];
		lu.enabled = this.wdata.maxArea > this.wdata.battleArea && this.wdata.killedInArea[this.wdata.battleArea] > 0;
		lu.visible = lu.enabled || lu.visible;
		var lu = this.wdata.playerActions.h["sleep"];
		if(this.wdata.sleeping == true) {
			lu.mode = 1;
			lu.enabled = true;
		} else {
			lu.mode = 0;
			lu.enabled = this.wdata.recovering == false;
		}
		lu.visible = lu.enabled || lu.visible;
		if(this.wdata.recovering && this.wdata.hero.attributesCalculated.h["Life"] >= this.wdata.hero.attributesCalculated.h["LifeMax"]) {
			var v = this.wdata.hero.attributesCalculated.h["LifeMax"];
			this.wdata.hero.attributesCalculated.h["Life"] = v;
			this.wdata.recovering = false;
		}
		var mrc = this.wdata.hero.attributesCalculated.h["MPRechargeCount"];
		if(mrc < 10000) {
			mrc += this.wdata.hero.attributesCalculated.h["MPRecharge"] * delta * 5 | 0;
			this.wdata.hero.attributesCalculated.h["MPRechargeCount"] = mrc;
			if(mrc >= 10000) {
				var v = this.wdata.hero.attributesCalculated.h["MPMax"];
				this.wdata.hero.attributesCalculated.h["MP"] = v;
			}
		}
		if(this.PlayerFightMode() && this.wdata.enemy != null) {
			this.currencyModel.addFloat(BattleConstants.CURRENCY_TIME,delta * this.timeGetRate);
		}
		var timePeriodUsed = this.timePeriod;
		if(this.timePeriodOverwrite >= 0) {
			timePeriodUsed = this.timePeriodOverwrite;
		}
		if(this.timeCount >= timePeriodUsed) {
			this.timePeriodOverwrite = -1;
			this.timeCount = 0;
			var tmp = this.turnList[0] == this.turnList[1];
			this.advance();
			var _g = 0;
			var _g1 = this.counterAttackBuffered;
			while(_g < _g1.length) {
				var buffer = _g1[_g];
				++_g;
				if(buffer != null) {
					this.timePeriodOverwrite = this.timePeriod;
					break;
				}
			}
		}
		if(this.dirty) {
			this.dirty = false;
		}
		return null;
	}
	,DefaultConfiguration: function() {
	}
	,getPlayerTimesKilled: function() {
		return this.wdata.playerTimesKilled;
	}
	,RetreatArea: function() {
		if(this.wdata.battleArea > 0) {
			this.ChangeBattleArea(this.wdata.battleArea - 1);
		}
	}
	,LevelUp: function() {
		if(this.canLevelUp) {
			this.ForceLevelUp();
		}
	}
	,ForceLevelUp: function() {
		var hero = this.wdata.hero;
		hero.xp.value -= hero.xp.calculatedMax;
		hero.level++;
		this.AddEvent(EventTypes.ActorLevelUp);
		this.RecalculateAttributes(hero);
		this.recalculateMaxXP();
		var v = hero.attributesCalculated.h["LifeMax"];
		hero.attributesCalculated.h["Life"] = v;
		var v = hero.attributesCalculated.h["MPMax"];
		hero.attributesCalculated.h["MP"] = v;
		hero.attributesCalculated.h["MPRechargeCount"] = 10000;
	}
	,GetRegionBonusLevel: function(i) {
		this.CheckRegionNull(i);
		if(this.config.regions[i] == null) {
			return 0;
		}
		var prize = this.config.regions[i].regionPrize;
		var pro = this.wdata.regionProgress[i];
		var bonusLevel = 0;
		if(prize.statBonus != null) {
			if(pro.maxArea >= 2) {
				bonusLevel += pro.maxArea - 1;
			}
			var _g = 0;
			var _g1 = pro.maxAreaOnPrestigeRecord;
			while(_g < _g1.length) {
				var maxAreaPrestiges = _g1[_g];
				++_g;
				if(maxAreaPrestiges >= 2) {
					bonusLevel += maxAreaPrestiges - 1;
				}
			}
			return bonusLevel;
		}
		return -1;
	}
	,RecalculateAttributes: function(actor,equipCalculation,buffCalculation,conditionalBonus) {
		if(buffCalculation == null) {
			buffCalculation = true;
		}
		if(equipCalculation == null) {
			equipCalculation = true;
		}
		var _g = 0;
		var _g1 = this.volatileAttributeList.length;
		while(_g < _g1) {
			var i = _g++;
			this.volatileAttributeAux[i] = actor.attributesCalculated.h[this.volatileAttributeList[i]];
			if(this.volatileAttributeAux[i] >= 0 == false) {
				this.volatileAttributeAux[i] = 0;
			}
		}
		if(actor == this.wdata.hero) {
			if(conditionalBonus == null) {
				conditionalBonus = this.heroConditionalBonus;
			}
			var skillSetPos = this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[2];
			if(skillSetPos >= 0) {
				var e = this.wdata.hero.equipment[skillSetPos];
				if(e != null && e.type == 2) {
					var skillSet = this.wdata.skillSets[e.outsideSystems.h["skillset"]];
					this.wdata.hero.usableSkills = skillSet.skills;
				}
			}
		}
		if(actor.attributesBase == actor.attributesCalculated) {
			actor.attributesCalculated = new haxe_ds_StringMap();
		}
		actor.attributesCalculated.h = Object.create(null);
		if(actor == this.wdata.hero) {
			var actor1 = actor.attributesBase;
			var _g = new haxe_ds_StringMap();
			_g.h["Attack"] = 1;
			_g.h["LifeMax"] = 3;
			_g.h["Life"] = 3;
			_g.h["Speed"] = 0;
			_g.h["Defense"] = 0;
			_g.h["MagicAttack"] = 1;
			_g.h["MagicDefense"] = 0;
			_g.h["SpeedCount"] = 0;
			_g.h["Piercing"] = 0;
			_g.h["MPMax"] = 2;
			AttributeLogic.Add(actor1,_g,actor.level,actor.attributesCalculated);
		} else {
			var h = actor.attributesBase.h;
			var _g2_h = h;
			var _g2_keys = Object.keys(h);
			var _g2_length = _g2_keys.length;
			var _g2_current = 0;
			while(_g2_current < _g2_length) {
				var key = _g2_keys[_g2_current++];
				var _g3_key = key;
				var _g3_value = _g2_h[key];
				var key1 = _g3_key;
				var value = _g3_value;
				actor.attributesCalculated.h[key1] = value;
			}
		}
		if(actor == this.wdata.hero) {
			var _g = 0;
			var _g1 = this.wdata.regionProgress.length;
			while(_g < _g1) {
				var i = _g++;
				var bonusLevel = this.GetRegionBonusLevel(i);
				if(bonusLevel > 0) {
					var prize = this.config.regions[i].regionPrize;
					AttributeLogic.Add(actor.attributesCalculated,prize.statBonus,bonusLevel,actor.attributesCalculated);
				}
			}
			AttributeLogic.Add(actor.attributesCalculated,this.externalStatBonuses,1,actor.attributesCalculated);
			var v = this.wdata.veteranLevel;
			actor.attributesCalculated.h["Veteran"] = v;
		}
		if(actor.attributesCalculated.h["Veteran"] > 0 == false) {
			actor.attributesCalculated.h["Veteran"] = 0;
		}
		if(equipCalculation) {
			if(actor.equipmentSets != null) {
				if(actor.equipmentSets[actor.chosenEquipSet].equipmentSlots != null) {
					var _g = 0;
					var _g1 = actor.equipmentSets[actor.chosenEquipSet].equipmentSlots;
					while(_g < _g1.length) {
						var es = _g1[_g];
						++_g;
						var e = actor.equipment[es];
						if(e != null) {
							AttributeLogic.Add(actor.attributesCalculated,e.attributes,1,actor.attributesCalculated);
						}
					}
				}
			}
			if(conditionalBonus != null) {
				var _g2_current = 0;
				var _g2_array = conditionalBonus;
				while(_g2_current < _g2_array.length) {
					var _g3_value = _g2_array[_g2_current];
					var _g3_key = _g2_current++;
					var index = _g3_key;
					var value = _g3_value;
					var condition = value.condition;
					if(this.testConditionGroup(condition)) {
						var _g4_current = 0;
						var _g4_array = value.AttributeBonuses;
						while(_g4_current < _g4_array.length) {
							var _g5_value = _g4_array[_g4_current];
							var _g5_key = _g4_current++;
							var atpos = _g5_key;
							var atv = _g5_value;
							if(atv.attributes != null) {
								AttributeLogic.Add(actor.attributesCalculated,atv.attributes,1,actor.attributesCalculated);
							}
						}
					}
				}
			}
		}
		if(buffCalculation) {
			var _g = 0;
			var _g1 = actor.buffs;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				if(b.addStats != null) {
					AttributeLogic.Add(actor.attributesCalculated,b.addStats,1,actor.attributesCalculated);
				}
			}
		}
		if(equipCalculation) {
			if(actor.equipmentSets != null) {
				if(actor.equipmentSets[actor.chosenEquipSet].equipmentSlots != null) {
					var _g = 0;
					var _g1 = actor.equipmentSets[actor.chosenEquipSet].equipmentSlots;
					while(_g < _g1.length) {
						var es = _g1[_g];
						++_g;
						var e = actor.equipment[es];
						if(e != null) {
							if(e.attributeMultiplier != null) {
								var h = e.attributeMultiplier.h;
								var a_h = h;
								var a_keys = Object.keys(h);
								var a_length = a_keys.length;
								var a_current = 0;
								while(a_current < a_length) {
									var key = a_keys[a_current++];
									var a_key = key;
									var a_value = a_h[key];
									var v = actor.attributesCalculated.h[a_key] * a_value / 100 | 0;
									actor.attributesCalculated.h[a_key] = v;
								}
							}
						}
					}
				}
			}
			if(conditionalBonus != null) {
				var _g2_current = 0;
				var _g2_array = conditionalBonus;
				while(_g2_current < _g2_array.length) {
					var _g3_value = _g2_array[_g2_current];
					var _g3_key = _g2_current++;
					var index = _g3_key;
					var value = _g3_value;
					var condition = value.condition;
					if(this.testConditionGroup(condition)) {
						var _g4_current = 0;
						var _g4_array = value.AttributeBonuses;
						while(_g4_current < _g4_array.length) {
							var _g5_value = _g4_array[_g4_current];
							var _g5_key = _g4_current++;
							var atpos = _g5_key;
							var atv = _g5_value;
							var h = atv.attributeMultiplier.h;
							var a_h = h;
							var a_keys = Object.keys(h);
							var a_length = a_keys.length;
							var a_current = 0;
							while(a_current < a_length) {
								var key = a_keys[a_current++];
								var a_key = key;
								var a_value = a_h[key];
								var v = actor.attributesCalculated.h[a_key] * a_value / 100 | 0;
								actor.attributesCalculated.h[a_key] = v;
							}
						}
					}
				}
			}
		}
		if(buffCalculation) {
			var _g = 0;
			var _g1 = actor.buffs;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				if(b.mulStats != null) {
					var h = b.mulStats.h;
					var a_h = h;
					var a_keys = Object.keys(h);
					var a_length = a_keys.length;
					var a_current = 0;
					while(a_current < a_length) {
						var key = a_keys[a_current++];
						var a_key = key;
						var a_value = a_h[key];
						var v = actor.attributesCalculated.h[a_key] * a_value / 100 | 0;
						actor.attributesCalculated.h[a_key] = v;
					}
				}
			}
		}
		var _g = 0;
		var _g1 = this.volatileAttributeList.length;
		while(_g < _g1) {
			var i = _g++;
			var v = this.volatileAttributeAux[i];
			actor.attributesCalculated.h[this.volatileAttributeList[i]] = v;
		}
	}
	,AdvanceArea: function() {
		this.ChangeBattleArea(this.wdata.battleArea + 1);
	}
	,DiscardWorseEquipment: function() {
		var i = 0;
		var times = 0;
		while(i < this.wdata.hero.equipment.length) {
			++times;
			if(times > 500) {
				haxe_Log.trace("LOOP SCAPE",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3054, className : "BattleManager", methodName : "DiscardWorseEquipment"});
				break;
			}
			var e = this.wdata.hero.equipment[i];
			if(e == null) {
				++i;
				continue;
			}
			if(e.type == 2) {
				++i;
				continue;
			}
			var j = i + 1;
			var times2 = 0;
			while(j < this.wdata.hero.equipment.length) {
				++times2;
				if(times2 > 500) {
					haxe_Log.trace("LOOP SCAPE 2",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3071, className : "BattleManager", methodName : "DiscardWorseEquipment"});
					break;
				}
				var e2 = this.wdata.hero.equipment[j];
				if(e2 == null) {
					++j;
					continue;
				}
				if(e.type != e2.type) {
					++j;
					continue;
				}
				var r = this.CompareEquipmentStrength(e,e2);
				if(r == 1 || r == 0) {
					var continueHappen = false;
					var _g = 0;
					var _g1 = this.wdata.hero.equipmentSets;
					while(_g < _g1.length) {
						var set = _g1[_g];
						++_g;
						if(set.equipmentSlots.indexOf(j) != -1) {
							++j;
							continueHappen = true;
							break;
						}
					}
					if(continueHappen) {
						continue;
					}
					this.SellSingleEquipment(j);
					continue;
				}
				if(r == 2) {
					var continueHappen1 = false;
					var _g2 = 0;
					var _g3 = this.wdata.hero.equipmentSets;
					while(_g2 < _g3.length) {
						var set1 = _g3[_g2];
						++_g2;
						if(set1.equipmentSlots.indexOf(i) != -1) {
							++j;
							continueHappen1 = true;
							break;
						}
					}
					if(continueHappen1) {
						continue;
					}
					this.SellSingleEquipment(i);
					--i;
					break;
				}
				++j;
			}
			++i;
		}
	}
	,CompareEquipmentStrength: function(e1,e2) {
		var e1Superior = 0;
		var e2Superior = 0;
		if(e1.generationBaseItem > e2.generationBaseItem) {
			e1Superior = 1;
		}
		if(e1.generationBaseItem < e2.generationBaseItem) {
			e2Superior = 1;
		}
		if(e1.outsideSystems != null && e1.outsideSystems.h["level"] >= 0 == true) {
			var e1level = this.wdata.equipLevels[e1.outsideSystems.h["level"]].level;
			if(e1level > 0) {
				return -1;
			}
		}
		if(e2.outsideSystems != null && e2.outsideSystems.h["level"] >= 0 == true) {
			var e2level = this.wdata.equipLevels[e1.outsideSystems.h["level"]].level;
			if(e2level > 0) {
				return -1;
			}
		}
		var mapAttr1 = e1.attributes;
		var mapAttr2 = e2.attributes;
		var h = mapAttr1.h;
		var attrKey_h = h;
		var attrKey_keys = Object.keys(h);
		var attrKey_length = attrKey_keys.length;
		var attrKey_current = 0;
		while(attrKey_current < attrKey_length) {
			var attrKey = attrKey_keys[attrKey_current++];
			if(Object.prototype.hasOwnProperty.call(mapAttr2.h,attrKey)) {
				if(mapAttr1.h[attrKey] > mapAttr2.h[attrKey]) {
					e1Superior = 1;
				}
				if(mapAttr1.h[attrKey] < mapAttr2.h[attrKey]) {
					e2Superior = 1;
				}
			} else if(mapAttr1.h[attrKey] > 0) {
				e1Superior = 1;
			} else {
				e2Superior = 1;
			}
			if(e1Superior == 1 && e2Superior == 1) {
				return -1;
			}
		}
		var h = mapAttr2.h;
		var attrKey_h = h;
		var attrKey_keys = Object.keys(h);
		var attrKey_length = attrKey_keys.length;
		var attrKey_current = 0;
		while(attrKey_current < attrKey_length) {
			var attrKey = attrKey_keys[attrKey_current++];
			if(Object.prototype.hasOwnProperty.call(mapAttr1.h,attrKey)) {
				if(mapAttr1.h[attrKey] > mapAttr2.h[attrKey]) {
					e1Superior = 1;
				}
				if(mapAttr1.h[attrKey] < mapAttr2.h[attrKey]) {
					e2Superior = 1;
				}
			} else if(mapAttr2.h[attrKey] > 0) {
				e2Superior = 1;
			} else {
				e1Superior = 1;
			}
			if(e1Superior == 1 && e2Superior == 1) {
				return -1;
			}
		}
		var mapAttr1 = e1.attributeMultiplier;
		var mapAttr2 = e2.attributeMultiplier;
		if(mapAttr1 != null || mapAttr2 != null) {
			if(mapAttr2 == null) {
				mapAttr2 = new haxe_ds_StringMap();
			}
			if(mapAttr1 == null) {
				mapAttr1 = new haxe_ds_StringMap();
			}
			var h = mapAttr1.h;
			var attrKey_h = h;
			var attrKey_keys = Object.keys(h);
			var attrKey_length = attrKey_keys.length;
			var attrKey_current = 0;
			while(attrKey_current < attrKey_length) {
				var attrKey = attrKey_keys[attrKey_current++];
				if(Object.prototype.hasOwnProperty.call(mapAttr2.h,attrKey)) {
					if(mapAttr1.h[attrKey] > mapAttr2.h[attrKey]) {
						e1Superior = 1;
					}
					if(mapAttr1.h[attrKey] < mapAttr2.h[attrKey]) {
						e2Superior = 1;
					}
				} else {
					if(mapAttr1.h[attrKey] > 100) {
						e1Superior = 1;
					}
					if(mapAttr1.h[attrKey] < 100) {
						e2Superior = 1;
					}
				}
				if(e1Superior == 1 && e2Superior == 1) {
					return -1;
				}
			}
			var h = mapAttr2.h;
			var attrKey_h = h;
			var attrKey_keys = Object.keys(h);
			var attrKey_length = attrKey_keys.length;
			var attrKey_current = 0;
			while(attrKey_current < attrKey_length) {
				var attrKey = attrKey_keys[attrKey_current++];
				if(Object.prototype.hasOwnProperty.call(mapAttr1.h,attrKey)) {
					if(mapAttr1.h[attrKey] > mapAttr2.h[attrKey]) {
						e1Superior = 1;
					}
					if(mapAttr1.h[attrKey] < mapAttr2.h[attrKey]) {
						e2Superior = 1;
					}
				} else {
					if(mapAttr2.h[attrKey] > 100) {
						e2Superior = 1;
					}
					if(mapAttr2.h[attrKey] < 100) {
						e1Superior = 1;
					}
				}
				if(e1Superior == 1 && e2Superior == 1) {
					return -1;
				}
			}
		}
		if(e1Superior == 1 && e2Superior == 0) {
			return 1;
		}
		if(e1Superior == 0 && e2Superior == 1) {
			return 2;
		}
		return 0;
	}
	,GetJsonPersistentData: function() {
		return JsonMainTypes.jsonwriterwdata.write(this.wdata);
	}
	,testInitializeRetentionWorldVersion: function(loadedWdata) {
		if(loadedWdata.retention == null) {
			loadedWdata.retention = { gameStartVersion : loadedWdata.worldVersion, gameStartDate : HxOverrides.dateStr(new Date()), latestDayRetention : 0, reportedRollingRetention : []};
			haxe_Log.trace(loadedWdata.retention.gameStartDate,{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3264, className : "BattleManager", methodName : "testInitializeRetentionWorldVersion"});
			this.AddEvent(EventTypes.GameStartOnVersion).data = loadedWdata.worldVersion;
		}
		try {
			HxOverrides.strDate(loadedWdata.retention.gameStartDate);
		} catch( _g ) {
			var tmp = HxOverrides.dateStr(new Date());
			loadedWdata.retention.gameStartDate = tmp;
			haxe_Log.trace("SYSTEM: Buggy date fix!",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3271, className : "BattleManager", methodName : "testInitializeRetentionWorldVersion"});
		}
	}
	,sendJsonLegacy: function(jsonString) {
		return JsonX.parse(jsonString);
	}
	,SendJsonPersistentData: function(jsonString,verbose) {
		if(verbose == null) {
			verbose = true;
		}
		var loadedWdata = null;
		try {
			loadedWdata = JsonMainTypes.jsonparserwdata.fromJson(jsonString);
			if(loadedWdata == null) {
				haxe_Log.trace("SYSTEM: save corrupted! ",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3286, className : "BattleManager", methodName : "SendJsonPersistentData"});
				haxe_Log.trace(jsonString,{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3287, className : "BattleManager", methodName : "SendJsonPersistentData"});
				jsonString = StringTools.replace(jsonString,"undefined","null");
				loadedWdata = JsonMainTypes.jsonparserwdata.fromJson(jsonString);
				if(loadedWdata == null) {
					ErrorX.errorMessage = "SAVE CORRUPTED\n" + jsonString;
					if(JsonMainTypes.jsonparserwdata.errors.length > 0) {
						haxe_Log.trace(json2object_ErrorUtils.convertErrorArray(JsonMainTypes.jsonparserwdata.errors),{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3294, className : "BattleManager", methodName : "SendJsonPersistentData"});
						haxe_Log.trace(jsonString,{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3295, className : "BattleManager", methodName : "SendJsonPersistentData"});
					}
					return false;
				} else {
					haxe_Log.trace("SYSTEM: save restored! ",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3299, className : "BattleManager", methodName : "SendJsonPersistentData"});
				}
			}
			if(loadedWdata.worldVersion <= 3003) {
				haxe_Log.trace("SYSTEM: legacy save detected",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3304, className : "BattleManager", methodName : "SendJsonPersistentData"});
				loadedWdata = this.sendJsonLegacy(jsonString);
			}
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace("ERROR: load save failed ",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3309, className : "BattleManager", methodName : "SendJsonPersistentData"});
			haxe_Log.trace(e.get_message(),{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3310, className : "BattleManager", methodName : "SendJsonPersistentData"});
			ErrorX.exception = e;
			return false;
		}
		this.testInitializeRetentionWorldVersion(loadedWdata);
		if(loadedWdata.veteranLevel > 0 == false) {
			loadedWdata.veteranLevel = 0;
		}
		if(loadedWdata.worldVersion < 301) {
			loadedWdata.worldVersion = this.wdata.worldVersion;
			loadedWdata.sleeping = loadedWdata.sleeping == true;
		}
		if(loadedWdata.worldVersion >= 601 == false) {
			loadedWdata.regionProgress = [];
			loadedWdata.regionProgress.push({ area : loadedWdata.battleArea, maxArea : loadedWdata.maxArea, amountEnemyKilledInArea : loadedWdata.killedInArea[loadedWdata.battleArea], maxAreaRecord : loadedWdata.maxArea, maxAreaOnPrestigeRecord : [], seen : 2});
			loadedWdata.battleAreaRegion = 0;
			loadedWdata.battleArea = 0;
		}
		if(loadedWdata.worldVersion > 30100 == false) {
			var _g_current = 0;
			var _g_array = loadedWdata.regionProgress;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				value.seen = 2;
			}
		}
		if(loadedWdata.worldVersion >= 30160 == false) {
			var hasChallengeAreaInThisSave = false;
			var _g_current = 0;
			var _g_array = loadedWdata.regionProgress;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var region = this.config.regions[index];
				if(region.type == RegionType.CHALLENGE) {
					hasChallengeAreaInThisSave = true;
					value.area = 0;
					value.maxArea = 1;
					if(value.maxAreaOnPrestigeRecord != null) {
						value.maxAreaOnPrestigeRecord.length = 0;
					}
					value.maxAreaRecord = 0;
					value.amountEnemyKilledInArea = 0;
				}
			}
			loadedWdata.prestigeTimes = 0;
			loadedWdata.veteranLevel += 10;
			if(hasChallengeAreaInThisSave) {
				loadedWdata.battleArea = 0;
				loadedWdata.battleAreaRegion = 0;
			}
			this.AddEvent(EventTypes.SoulCrushWipeData);
		}
		if(loadedWdata.worldVersion != this.wdata.worldVersion) {
			loadedWdata.enemy = null;
		}
		loadedWdata.worldVersion = this.wdata.worldVersion;
		this.wdata = loadedWdata;
		if(this.wdata.battleArea >= this.wdata.killedInArea.length) {
			this.wdata.battleArea = this.wdata.killedInArea.length - 1;
		}
		if(this.wdata.maxArea >= this.wdata.killedInArea.length) {
			this.wdata.maxArea = this.wdata.killedInArea.length - 1;
		}
		this.ReinitGameValues();
		return true;
	}
	,testConditionGroup: function(cond) {
		var _g_current = 0;
		var _g_array = cond.conditions;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(this.testCondition(value) == false) {
				return false;
			}
		}
		return true;
	}
	,testCondition: function(cond) {
		if(cond.cType == BMConditionType.CURRENT_SET_NUMBER) {
			return this.wdata.hero.chosenEquipSet == cond.data1;
		}
		if(cond.cType == BMConditionType.ITEM_IN_SLOT_IS_OF_ITEM_TYPE) {
			var ePos = this.wdata.hero.equipmentSets[this.wdata.hero.chosenEquipSet].equipmentSlots[cond.data1];
			var e = this.wdata.hero.equipment[ePos];
			if(e == null) {
				return false;
			}
			if(e.generationBaseItem == cond.data2) {
				return true;
			}
			return false;
		}
		haxe_Log.trace("ERROR: condition check ignored",{ fileName : "Sources\\GRI\\logic/BattleManager.hx", lineNumber : 3416, className : "BattleManager", methodName : "testCondition"});
		return false;
	}
	,isBattleArea: function() {
		if(this.config == null) {
			return false;
		}
		var region = this.wdata.battleAreaRegion;
		var area = this.wdata.battleArea;
		return this.isBattleAreaVerify(region,area);
	}
	,isBattleAreaVerify: function(region,area) {
		if(this.config == null) {
			return false;
		}
		if(this.config.regions[region].type == RegionType.SEMIPROCEDURAL && this.config.regions[region].areaDatas[area].enemy == null) {
			return false;
		}
		return area > 0;
	}
	,getAreaData: function() {
		var region = this.wdata.battleAreaRegion;
		if(this.config == null) {
			return null;
		}
		if(this.config.regions[region].type == RegionType.SEMIPROCEDURAL) {
			return this.config.regions[region].areaDatas[this.wdata.battleArea];
		}
		return null;
	}
	,isProgressingOnBattleArea: function() {
		if(this.isBattleArea()) {
			if(this.wdata.killedInArea[this.wdata.battleArea] < this.wdata.necessaryToKillInArea) {
				return true;
			}
		}
		return false;
	}
	,isLevelCap: function() {
		return this.wdata.hero.level >= this.CalculateHeroMaxLevel();
	}
	,sleepToggle: function() {
		this.wdata.enemy = null;
		this.wdata.sleeping = !this.wdata.sleeping;
	}
	,hasEnemyAlive: function() {
		if(this.wdata.enemy != null) {
			return this.wdata.enemy.attributesCalculated.h["Life"] > 0;
		} else {
			return false;
		}
	}
	,forceAreaProgress: function() {
		this.areaProgress(null);
	}
	,getCurrentRegion: function() {
		return this.config.regions[this.wdata.battleAreaRegion];
	}
	,areaProgress: function(actorKilled) {
		var enemy = actorKilled;
		var killedInArea = this.wdata.killedInArea;
		var battleArea = this.wdata.battleArea;
		var areaComplete = killedInArea[battleArea] >= this.wdata.necessaryToKillInArea;
		if(killedInArea[battleArea] == null) {
			killedInArea[battleArea] = 0;
		}
		killedInArea[battleArea]++;
		if(enemy != null) {
			if(this.config.regions[this.wdata.battleAreaRegion].type != RegionType.CHALLENGE) {
				this.DropItemOrSkillSet(this.config.equipDropChance + this.volatileEnemyItemDropChanceBonus,1,enemy.level + this.volatileEnemyItemLevelBonus,enemy.reference);
			}
			var e = this.AddEvent(EventTypes.ActorDead);
			e.origin = enemy.reference;
			var baseXP = enemy.level;
			var uncappedXP = baseXP;
			if(this.volatileEnemyXPBonus == 0) {
				var cap1 = 50;
				if(baseXP > cap1) {
					baseXP = cap1 + ((baseXP - cap1) / 2 | 0);
				}
				var cap1 = 100;
				if(baseXP > cap1) {
					baseXP = cap1 + ((baseXP - cap1) / 2 | 0);
				}
			}
			var xpGain = (baseXP * (100 + this.volatileEnemyXPBonus) / 100 | 0) + this.volatileEnemyXPBonusAdd;
			this.AwardXP(xpGain,null);
		}
		var regionPrize = this.config.regions[this.wdata.battleAreaRegion].regionPrize;
		if(killedInArea[battleArea] >= this.wdata.necessaryToKillInArea) {
			this.AddEvent(EventTypes.AreaComplete).data = this.wdata.battleArea;
			if(this.wdata.maxArea == this.wdata.battleArea) {
				if(regionPrize.xpPrize == true) {
					var areaForBonus = this.wdata.battleArea;
					ResourceLogic.recalculateScalingResource(areaForBonus,this.areaBonus);
					var xpPlus = this.areaBonus.calculatedMax;
					if(xpPlus >= this.areaBonus.cap) {
						xpPlus = areaForBonus * 50 + this.areaBonus.cap;
					}
					this.AwardXP(xpPlus,"special");
				}
				if(regionPrize.statBonus != null) {
					var h = regionPrize.statBonus.h;
					var su_h = h;
					var su_keys = Object.keys(h);
					var su_length = su_keys.length;
					var su_current = 0;
					while(su_current < su_length) {
						var key = su_keys[su_current++];
						var su_key = key;
						var su_value = su_h[key];
						var e = this.AddEvent(EventTypes.statUpgrade);
						e.dataString = su_key;
						e.data = su_value;
					}
					this.AddEvent(EventTypes.PermanentStatUpgrade);
				}
				this.wdata.maxArea++;
				this.AddEvent(EventTypes.AreaUnlock).data = this.wdata.maxArea;
				killedInArea[this.wdata.maxArea] = 0;
			}
			if(this.wdata.hero.turnRecharge == null) {
				this.wdata.hero.turnRecharge = [];
			}
			if(this.wdata.autoAdvance) {
				this.autoAdvanceRequest = true;
				this.wdata.hero.turnRecharge.length = 0;
			}
			if(this.wdata.autoRepeat) {
				this.autoRepeatRequest = true;
				this.wdata.hero.turnRecharge.length = 0;
			}
		}
	}
	,enemyDiedThisFrame: function() {
		var _g_current = 0;
		var _g_array = this.events;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.type == EventTypes.ActorDead && value.origin.type == 1) {
				return true;
			}
		}
		return false;
	}
	,getDefaultEnemyAreaInformationInCurrentArea: function() {
		var area = this.wdata.battleArea;
		if(!this.isBattleAreaVerify(this.wdata.battleAreaRegion,area)) {
			return null;
		}
		var rd = this.config.regions[this.wdata.battleAreaRegion];
		if(rd.type == RegionType.PROCEDURAL) {
			var eafp = this.enemyAreaFromProcedural;
			var eai = eafp.GetEnemyAreaInformation(area - 1);
			return eai;
		}
		if(rd.type == RegionType.SEMIPROCEDURAL) {
			var areaD = rd.areaDatas[area];
			var eai = areaD.enemy;
			return eai;
		}
		return null;
	}
	,addBattlePrize: function(type,extraId,amount) {
		this.wdata.battlePrizes = this.battlePrizeAccess.checkArray(this.wdata.battlePrizes);
		var nNotNull = this.battlePrizeAccess.getNumberOfNotNullElement(this.wdata.battlePrizes);
		if(nNotNull > 7) {
			var diff = nNotNull - 7;
			var _g_current = 0;
			var _g_array = this.wdata.battlePrizes;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value != null) {
					if(diff > 0) {
						if(value.status == BattlePrizeStatus.PROCESSED) {
							--diff;
							value.status = BattlePrizeStatus.CONSUME_REQUEST_AUTO;
						}
					} else {
						break;
					}
				}
			}
		}
		var slot = this.battlePrizeAccess.getFreeElementIndex(this.wdata.battlePrizes);
		this.wdata.battlePrizes[slot] = { type : type, status : BattlePrizeStatus.NEW, optionalId : extraId, amount : amount};
	}
	,freeBattlePrize: function(index) {
		this.wdata.battlePrizes[index] = null;
		this.battlePrizeAccess.freeUpTrailingNull(this.wdata.battlePrizes);
	}
	,isHeroAlive: function() {
		return this.wdata.hero.attributesCalculated.h["Life"] > 0;
	}
	,__class__: BattleManager
};
var ButtonBinding = function(button,key) {
	this.button = button;
	this.key = key;
};
$hxClasses["ButtonBinding"] = ButtonBinding;
ButtonBinding.__name__ = "ButtonBinding";
ButtonBinding.prototype = {
	__class__: ButtonBinding
};
var ButtonBindingGroup = function(bindings) {
	this.bindings = bindings;
};
$hxClasses["ButtonBindingGroup"] = ButtonBindingGroup;
ButtonBindingGroup.__name__ = "ButtonBindingGroup";
ButtonBindingGroup.prototype = {
	__class__: ButtonBindingGroup
};
var Buttons = function() {
	this.buttonsUp = [];
	this.buttonsDown = [];
	this.buttonsPressed = [];
};
$hxClasses["Buttons"] = Buttons;
Buttons.__name__ = "Buttons";
Buttons.prototype = {
	__class__: Buttons
};
var KeyboardToButtonsLogic = function() { };
$hxClasses["KeyboardToButtonsLogic"] = KeyboardToButtonsLogic;
KeyboardToButtonsLogic.__name__ = "KeyboardToButtonsLogic";
KeyboardToButtonsLogic.processKeyToButton = function(bindings,buttons,keys) {
	var _g_current = 0;
	var _g_array = keys;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var key = _g1_value;
		var _g2_current = 0;
		var _g2_array = bindings.bindings;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var index2 = _g3_key;
			var binding = _g3_value;
			if(binding.key == key) {
				if(buttons.indexOf(binding.button) != -1 == false) {
					buttons.push(binding.button);
				}
			}
		}
	}
};
KeyboardToButtonsLogic.process = function(bindings) {
	var keys = Keyboard.keyboard.charsDown;
	var buttons = Buttons.buttons.buttonsDown;
	KeyboardToButtonsLogic.processKeyToButton(bindings,buttons,keys);
	KeyboardToButtonsLogic.processKeyToButton(bindings,Buttons.buttons.buttonsPressed,Keyboard.keyboard.charsPressed);
	KeyboardToButtonsLogic.processKeyToButton(bindings,Buttons.buttons.buttonsUp,Keyboard.keyboard.charsUp);
};
KeyboardToButtonsLogic.endButtonFrame = function() {
	Buttons.buttons.buttonsDown.length = 0;
	Buttons.buttons.buttonsPressed.length = 0;
	Buttons.buttons.buttonsUp.length = 0;
};
var ColorUtils = function() { };
$hxClasses["ColorUtils"] = ColorUtils;
ColorUtils.__name__ = "ColorUtils";
ColorUtils.getColorFromSpineColor = function(color) {
	return ColorUtils.getColorFromRGBFloat(color.r,color.g,color.b);
};
ColorUtils.getColorFromRGBFloat = function(r,g,b) {
	var r1 = r * 255 | 0;
	var g1 = g * 255 | 0;
	var b1 = b * 255 | 0;
	return r1 << 16 | g1 << 8 | b1;
};
var ConditionType = $hxEnums["ConditionType"] = { __ename__:true,__constructs__:null
	,largerOrEqual: {_hx_name:"largerOrEqual",_hx_index:0,__enum__:"ConditionType",toString:$estr}
};
ConditionType.__constructs__ = [ConditionType.largerOrEqual];
var Condition = function(type,key1,key2,dataNumber) {
	if(dataNumber == null) {
		dataNumber = 0;
	}
	if(type == null) {
		type = ConditionType.largerOrEqual;
	}
	this.data = dataNumber;
	this.type = type;
	this.valueKey = key1;
	this.valueKey2 = key2;
};
$hxClasses["Condition"] = Condition;
Condition.__name__ = "Condition";
Condition.createWithKeyAndData = function(type,valueK,data) {
	var c = new Condition();
	c.type = type;
	c.valueKey = valueK;
	c.data = data;
	return c;
};
Condition.prototype = {
	__class__: Condition
};
var ConditionChecker = function() { };
$hxClasses["ConditionChecker"] = ConditionChecker;
ConditionChecker.__name__ = "ConditionChecker";
ConditionChecker.Check = function(condition,values) {
	var vk = condition.valueKey;
	if(!Object.prototype.hasOwnProperty.call(values.h,vk)) {
		return false;
	}
	var value = values.h[vk];
	return ConditionChecker.checkWithValue(condition,value);
};
ConditionChecker.checkWithValue = function(condition,value) {
	if(condition.type == ConditionType.largerOrEqual) {
		if(value >= condition.data) {
			return true;
		}
	}
	return false;
};
var Requester = function() {
};
$hxClasses["Requester"] = Requester;
Requester.__name__ = "Requester";
Requester.prototype = {
	__class__: Requester
};
var CrossTarget = function() { };
$hxClasses["CrossTarget"] = CrossTarget;
CrossTarget.__name__ = "CrossTarget";
CrossTarget.OpenURL = function(url) {
	window.open(url, '_blank');
};
CrossTarget.toggleFullScreen = function() {
};
CrossTarget.crossPrint = function(s) {
	haxe_Log.trace(s,{ fileName : "Sources\\Reusable/CrossTarget.hx", lineNumber : 35, className : "CrossTarget", methodName : "crossPrint"});
};
CrossTarget.getTextResource = function(s) {
	return haxe_Resource.getString(s);
};
CrossTarget.userExternalFileContent = function() {
	return null;
};
CrossTarget.reload = function() {
	$global.location.reload();
};
CrossTarget.downloadFile = function(filename,text) {
	
        download('bla', 'blu');
    ;
};
CrossTarget.GetLocalStorageItem = function(key,updateLatestSave) {
	if(updateLatestSave == null) {
		updateLatestSave = true;
	}
	var data = "";
	data = js_Browser.getLocalStorage().getItem(key);
	if(updateLatestSave) {
		CrossTarget.latestSave = data;
	}
	return data;
};
CrossTarget.SetLocalStorageItem = function(key,value,updateLatestSave) {
	if(updateLatestSave == null) {
		updateLatestSave = true;
	}
	if(updateLatestSave) {
		CrossTarget.latestSave = value;
	}
	js_Browser.getLocalStorage().setItem(key,value);
	return "";
};
CrossTarget.resetLocalStorage = function(key) {
	CrossTarget.SetLocalStorageItem(key,"");
};
CrossTarget.requestInput = function(prompt,requester) {
	CrossTarget.requesterInput = requester;
	CrossTarget.requestedInput = window.prompt(prompt);
};
CrossTarget.endInputRequest = function() {
	CrossTarget.requesterInput = null;
	CrossTarget.requestedInput = null;
};
CrossTarget.alert = function(arg0) {
	window.alert(Std.string(arg0));
};
CrossTarget.playMusic = function(musicIndex,volume) {
	playMusic(musicIndex, volume);
};
CrossTarget.playSfx = function(audioIndex,volume,loop) {
	playSfx(audioIndex, volume, loop);
};
CrossTarget.stopMusic = function() {
	stopMusic();
};
CrossTarget.stopSfx = function(audioIndex) {
	stopSfx(audioIndex);
};
CrossTarget.loadMusicAndSoundEffectFiles = function(musicFiles,soundEffectFiles) {
	initializeAudioSystem(soundEffectFiles, musicFiles);
};
CrossTarget.audioReady = function() {
	return true;
};
CrossTarget.isMusicPlaying = function() {
	return isMusicPlaying();
};
CrossTarget.setMusicVolume = function(musicId,volume) {
	changeMusicVolume(musicId, volume);
};
var CurrencyMetaInfo = function() {
	this.maxValue = -1;
};
$hxClasses["CurrencyMetaInfo"] = CurrencyMetaInfo;
CurrencyMetaInfo.__name__ = "CurrencyMetaInfo";
CurrencyMetaInfo.prototype = {
	__class__: CurrencyMetaInfo
};
var CurrencyModel = function(currencyHolder) {
	this.currencyMetaInfo = new haxe_ds_StringMap();
	this.currencyBuffer = new haxe_ds_StringMap();
	this.currencyHolder = currencyHolder;
};
$hxClasses["CurrencyModel"] = CurrencyModel;
CurrencyModel.__name__ = "CurrencyModel";
CurrencyModel.prototype = {
	spend: function(currencyKey,amount) {
		this.add(currencyKey,-amount);
	}
	,add: function(currencyKey,amount) {
		var value = this.currencyHolder.currencies.h[currencyKey].value;
		var metaInfo = this.currencyMetaInfo.h[currencyKey];
		var max = 99999999;
		var min = 0;
		if(metaInfo != null && metaInfo.maxValue >= 0) {
			max = metaInfo.maxValue;
		}
		value += amount;
		if(value > max) {
			value = max;
		}
		if(value < min) {
			value = min;
		}
		this.currencyHolder.currencies.h[currencyKey].value = value;
	}
	,addFloat: function(currencyKey,amount) {
		if(Object.prototype.hasOwnProperty.call(this.currencyBuffer.h,currencyKey) == false) {
			this.currencyBuffer.h[currencyKey] = 0;
		}
		var v = this.currencyBuffer.h[currencyKey];
		v += amount;
		if(v > 1) {
			var aInt = Math.ceil(this.currencyBuffer.h[currencyKey]);
			this.add(currencyKey,aInt);
			v -= aInt;
		}
		if(v < -1) {
			var aInt = Math.floor(this.currencyBuffer.h[currencyKey]);
			this.add(currencyKey,aInt);
			v -= aInt;
		}
		this.currencyBuffer.h[currencyKey] = v;
	}
	,canSpend: function(key,cost) {
		return this.currencyHolder.currencies.h[key].value >= cost;
	}
	,initializeCurrency: function(key,setMax) {
		if(setMax == null) {
			setMax = -1;
		}
		if(Object.prototype.hasOwnProperty.call(this.currencyHolder.currencies.h,key) == false) {
			var cp = { value : 0, visible : false};
			this.currencyHolder.currencies.h[key] = cp;
		}
		var mf = this.currencyMetaInfo.h[key];
		if(mf == null) {
			mf = new CurrencyMetaInfo();
			this.currencyMetaInfo.h[key] = mf;
		}
		if(setMax != -1) {
			mf.maxValue = setMax;
		}
	}
	,setMaxCurrency: function(key,maxValue) {
		this.currencyMetaInfo.h[key].maxValue = maxValue;
	}
	,getCurrency: function(key) {
		return this.currencyHolder.currencies.h[key].value;
	}
	,getMax: function(key) {
		return this.currencyMetaInfo.h[key].maxValue;
	}
	,maxAllThatMax: function() {
		var h = this.currencyMetaInfo.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
			if(value.maxValue > 0) {
				this.currencyHolder.currencies.h[key1].value = value.maxValue;
			}
		}
	}
	,__class__: CurrencyModel
};
var EventTransformer = function(origin,response) {
	this.originD = origin;
	this.responseD = response;
};
$hxClasses["EventTransformer"] = EventTransformer;
EventTransformer.__name__ = "EventTransformer";
EventTransformer.prototype = {
	__class__: EventTransformer
};
var Data = function() {
	this.soundData = -99999;
	this.stringData2 = null;
	this.stringData = null;
	this.intData3 = -99999;
	this.intData2 = -99999;
	this.intData = -99999;
};
$hxClasses["Data"] = Data;
Data.__name__ = "Data";
Data.create = function(intData,stringData,intData2,stringData2) {
	if(intData2 == null) {
		intData2 = -99999;
	}
	if(intData == null) {
		intData = -99999;
	}
	var d = new Data();
	d.intData = intData;
	d.stringData = stringData;
	d.intData2 = intData2;
	d.stringData2 = stringData2;
	return d;
};
Data.prototype = {
	__class__: Data
};
var DataEventHolder = function() {
	this.dataEvents = [];
};
$hxClasses["DataEventHolder"] = DataEventHolder;
DataEventHolder.__name__ = "DataEventHolder";
DataEventHolder.prototype = {
	isEqual: function(event1,event2) {
		if(event1.intData == event2.intData) {
			if(event1.intData2 == event2.intData2) {
				if(event1.intData3 == event2.intData3) {
					if(event1.stringData == event2.stringData) {
						if(event1.stringData2 == event2.stringData2) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	,processTransformers: function(eventTransformers) {
		var _g = 0;
		var _g1 = this.dataEvents.length;
		while(_g < _g1) {
			var i = _g++;
			var dataP = this.dataEvents[i];
			var _g_current = 0;
			var _g_array = eventTransformers;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var eve = _g1_value;
				if(this.isEqual(eve.originD,dataP)) {
					this.dataEvents.push(eve.responseD);
				}
			}
		}
	}
	,__class__: DataEventHolder
};
var DefaultButtons = function() { };
$hxClasses["DefaultButtons"] = DefaultButtons;
DefaultButtons.__name__ = "DefaultButtons";
DefaultButtons.createDefaultButtonBindings = function() {
	var bindings = new ButtonBindingGroup([new ButtonBinding(DefaultButtons.UP,119),new ButtonBinding(DefaultButtons.DOWN,115),new ButtonBinding(DefaultButtons.LEFT,97),new ButtonBinding(DefaultButtons.RIGHT,100),new ButtonBinding(DefaultButtons.RIGHT,Keyboard.KEY_RIGHT),new ButtonBinding(DefaultButtons.LEFT,Keyboard.KEY_LEFT),new ButtonBinding(DefaultButtons.UP,Keyboard.KEY_UP),new ButtonBinding(DefaultButtons.DOWN,Keyboard.KEY_DOWN),new ButtonBinding(DefaultButtons.RIGHT,Keyboard.JOY_BUTTON_D_RIGHT),new ButtonBinding(DefaultButtons.LEFT,Keyboard.JOY_BUTTON_D_LEFT),new ButtonBinding(DefaultButtons.UP,Keyboard.JOY_BUTTON_D_UP),new ButtonBinding(DefaultButtons.DOWN,Keyboard.JOY_BUTTON_D_DOWN),new ButtonBinding(DefaultButtons.CONFIRM,Keyboard.JOY_BUTTON_1),new ButtonBinding(DefaultButtons.CANCEL,Keyboard.JOY_BUTTON_2),new ButtonBinding(DefaultButtons.CONFIRM,Keyboard.KEY_ENTER),new ButtonBinding(DefaultButtons.CANCEL,Keyboard.KEY_ESCAPE),new ButtonBinding(DefaultButtons.CONFIRM,Keyboard.KEY_SPACE),new ButtonBinding(DefaultButtons.TABLEFT,113),new ButtonBinding(DefaultButtons.TABRIGHT,101),new ButtonBinding(DefaultButtons.TABLEFTB,122),new ButtonBinding(DefaultButtons.TABRIGHTB,120),new ButtonBinding(DefaultButtons.TABRIGHT,Keyboard.KEY_TAB)]);
	return bindings;
};
var Direction = $hxEnums["Direction"] = { __ename__:true,__constructs__:null
	,NORTH: {_hx_name:"NORTH",_hx_index:0,__enum__:"Direction",toString:$estr}
	,WEST: {_hx_name:"WEST",_hx_index:1,__enum__:"Direction",toString:$estr}
	,SOUTH: {_hx_name:"SOUTH",_hx_index:2,__enum__:"Direction",toString:$estr}
	,EAST: {_hx_name:"EAST",_hx_index:3,__enum__:"Direction",toString:$estr}
};
Direction.__constructs__ = [Direction.NORTH,Direction.WEST,Direction.SOUTH,Direction.EAST];
var DirectionUtils = function() { };
$hxClasses["DirectionUtils"] = DirectionUtils;
DirectionUtils.__name__ = "DirectionUtils";
DirectionUtils.asNumber = function(d) {
	switch(d._hx_index) {
	case 0:
		return 0;
	case 1:
		return 1;
	case 2:
		return 2;
	case 3:
		return 3;
	}
};
DirectionUtils.getOpposite = function(d) {
	if(d == Direction.NORTH) {
		return Direction.SOUTH;
	}
	if(d == Direction.WEST) {
		return Direction.EAST;
	}
	if(d == Direction.SOUTH) {
		return Direction.NORTH;
	}
	if(d == Direction.EAST) {
		return Direction.WEST;
	}
	return Direction.NORTH;
};
var Easings = $hxEnums["Easings"] = { __ename__:true,__constructs__:null
	,BACK_IN: {_hx_name:"BACK_IN",_hx_index:0,__enum__:"Easings",toString:$estr}
	,BACK_OUT: {_hx_name:"BACK_OUT",_hx_index:1,__enum__:"Easings",toString:$estr}
	,EXPO_IN: {_hx_name:"EXPO_IN",_hx_index:2,__enum__:"Easings",toString:$estr}
	,EXPO_OUT: {_hx_name:"EXPO_OUT",_hx_index:3,__enum__:"Easings",toString:$estr}
};
Easings.__constructs__ = [Easings.BACK_IN,Easings.BACK_OUT,Easings.EXPO_IN,Easings.EXPO_OUT];
var Easing = function() { };
$hxClasses["Easing"] = Easing;
Easing.__name__ = "Easing";
Easing.getEasing = function(easing,ratio) {
	switch(easing._hx_index) {
	case 0:
		return Easing.backIn(ratio);
	case 1:
		return Easing.backOut(ratio);
	case 2:
		return Easing.expoIn(ratio);
	case 3:
		return Easing.expoOut(ratio);
	}
};
Easing.backIn = function(ratio,overshoot) {
	if(overshoot == null) {
		overshoot = 1.78;
	}
	if(ratio == 1) {
		return 1;
	}
	return ratio * ratio * ((overshoot + 1.0) * ratio - overshoot);
};
Easing.backOut = function(ratio,overshoot) {
	if(overshoot == null) {
		overshoot = 1.78;
	}
	if(ratio == 0) {
		return 0;
	}
	return --ratio * ratio * ((overshoot + 1) * ratio + overshoot) + 1;
};
Easing.expoIn = function(ratio) {
	var k = ratio;
	if(ratio == 1) {
		return 1;
	}
	if(k == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (k - 1));
	}
};
Easing.expoOut = function(ratio) {
	var k = ratio;
	if(k == 1) {
		return 1;
	} else {
		return 1 - Math.pow(2,-10 * k);
	}
};
var ErrorX = function() { };
$hxClasses["ErrorX"] = ErrorX;
ErrorX.__name__ = "ErrorX";
ErrorX.hasError = function() {
	if(ErrorX.errorMessage == null) {
		return ErrorX.exception != null;
	} else {
		return true;
	}
};
ErrorX.clearError = function() {
	ErrorX.errorMessage = null;
	ErrorX.exception = null;
};
var FileAccessJS = function() { };
$hxClasses["FileAccessJS"] = FileAccessJS;
FileAccessJS.__name__ = "FileAccessJS";
FileAccessJS.createImportElement = function() {
	FileAccessJS.element = window.document.createElement("div");
	var style = "";
	FileAccessJS.element.innerHTML = "<div id ='saveimport' class='saveelement' style = " + style + ">Import Save: <input id='import__' type='file'></input></div>";
	FileAccessJS.element.style.top = "80%";
	FileAccessJS.element.style.left = "30px";
	FileAccessJS.element.style.position = "fixed";
	window.document.body.appendChild(FileAccessJS.element);
};
FileAccessJS.feedSave = function(saveDataContent) {
	if(FileAccessJS.elementExport == null) {
		FileAccessJS.elementExport = window.document.createElement("div");
		window.document.body.appendChild(FileAccessJS.elementExport);
		var element = FileAccessJS.elementExport;
		element.style.top = "85%";
		element.style.left = "30px";
		element.style.position = "fixed";
		element.className = "saveelement";
	}
	var ht = "<a href='data:text/plain;charset=utf-8,";
	ht += saveDataContent;
	ht += "' download='savedata.json'>Export save data</a>";
	FileAccessJS.elementExport.innerHTML = ht;
};
FileAccessJS.saveImportVisibility = function(visible) {
	if(FileAccessJS.element != null) {
		if(visible) {
			FileAccessJS.element.style.visibility = "visible";
		} else {
			FileAccessJS.element.style.visibility = "hidden";
		}
	}
	if(FileAccessJS.elementExport != null) {
		if(visible) {
			FileAccessJS.elementExport.style.visibility = "visible";
		} else {
			FileAccessJS.elementExport.style.visibility = "hidden";
		}
	}
};
var FileUtilities = function() { };
$hxClasses["FileUtilities"] = FileUtilities;
FileUtilities.__name__ = "FileUtilities";
FileUtilities.GetFetchTextContent = function() {
	var fileText = fetchTextContent;
	if(fileText != "") {
		fetchTextContent = "";
	}
	return fileText;
};
FileUtilities.ReadFile = function(file,callback) {
	var fReader = new FileReader();
	fReader.readAsDataURL(file);
	fReader.onloadend = function(event) {
		haxe_Log.trace(event.target.result,{ fileName : "Sources\\JS/FileReader.hx", lineNumber : 23, className : "FileUtilities", methodName : "ReadFile"});
		haxe_Log.trace(event.target.value,{ fileName : "Sources\\JS/FileReader.hx", lineNumber : 24, className : "FileUtilities", methodName : "ReadFile"});
		var content = event.target.result;
		var string = event.target.result;
		if(string.indexOf("data:application/json;base64,") != -1) {
			var savedata = haxe_crypto_Base64.decode(HxOverrides.substr(string,"data:application/json;base64,".length,null));
			callback(savedata.toString());
		} else {
			ErrorX.errorMessage = "Save File not JSON base 64\n" + string;
		}
	};
};
var GRIAchievementView = function(layout) {
	this.elements = [];
	this.layoutId = layout;
};
$hxClasses["GRIAchievementView"] = GRIAchievementView;
GRIAchievementView.__name__ = "GRIAchievementView";
GRIAchievementView.prototype = {
	__class__: GRIAchievementView
};
var GRIAchievementViewLogic = function() { };
$hxClasses["GRIAchievementViewLogic"] = GRIAchievementViewLogic;
GRIAchievementViewLogic.__name__ = "GRIAchievementViewLogic";
GRIAchievementViewLogic.update = function(achievModel,view,griView) {
	var achievementGroups = achievModel.achievements;
	var data = achievModel.achievementData;
	var _g_current = 0;
	var _g_array = achievementGroups;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var achievGroupHolder = _g1_value;
		while(view.elements.length < achievGroupHolder.achievements.achievements.length) {
			var e = griView.uiCreation.createImageElement(null,64,64);
			griView.uiCreation.addElementInLayoutId(e,view.layoutId);
			view.elements.push(e);
		}
	}
	var _g_current = 0;
	var _g_array = achievementGroups;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var achievGroupHolder = _g1_value;
		var achievs = achievGroupHolder.achievements;
		var _g2_current = 0;
		var _g2_array = achievs.achievements;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var index1 = _g3_key;
			var value = _g3_value;
			var e = view.elements[index1];
			e.style.sprite = value.image;
			e.style.alpha = 80;
			var t = "LOCKED";
			if(Object.prototype.hasOwnProperty.call(data.achievs.h,value.id)) {
				if(data.achievs.h[value.id].state == Achievement.UNLOCKED) {
					t = value.name;
					e.style.alpha = 255;
				}
			}
			griView.ui.hover.setHoverGeneric(e,t,value.description);
		}
	}
};
var GRIArcaniaBattleManagerIntegrator = function(arcaniaC) {
	this.volatileMoneyBonus = 0;
	this.battleStat = [];
	this.arcaniaUnits = [];
	this.arcaniaControl = arcaniaC;
	var h = GRIArcaniaBattleManagerIntegrator.arcaniaToBattleManagerStat.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		var ru = this.arcaniaControl.arcaniaModel.runtime.findUnitWithString(key1);
		if(ru == null) {
			continue;
		}
		this.arcaniaUnits.push(ru);
		this.battleStat.push(value);
	}
	this.playerLevel = this.arcaniaControl.arcaniaModel.runtime.findUnitWithString("playerlevel");
	this.playerLevelDimension = this.arcaniaControl.arcaniaModel.runtime.findUnitWithString("playerlevel" + this.arcaniaControl.control.config.dimensionId);
	this.money = this.arcaniaControl.arcaniaModel.runtime.findUnitWithString(GRIArcaniaBattleManagerIntegrator.COIN_ID);
	this.autoSellNormal = this.arcaniaControl.arcaniaModel.runtime.findUnitWithString("autosellnormal");
};
$hxClasses["GRIArcaniaBattleManagerIntegrator"] = GRIArcaniaBattleManagerIntegrator;
GRIArcaniaBattleManagerIntegrator.__name__ = "GRIArcaniaBattleManagerIntegrator";
GRIArcaniaBattleManagerIntegrator.prototype = {
	updateValues: function() {
		var stats = this.arcaniaControl.control.battleManager.externalStatBonuses;
		var change = false;
		var _g_current = 0;
		var _g_array = this.arcaniaUnits;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var previous = stats.h[this.battleStat[index]];
			var newV = this.arcaniaUnits[index].retentionData.amount;
			if(previous != newV) {
				stats.h[this.battleStat[index]] = newV;
				change = true;
			}
		}
		var level = this.arcaniaControl.control.battleManager.wdata.hero.level;
		this.arcaniaControl.arcaniaModel.updateValue(this.playerLevel,level);
		this.arcaniaControl.arcaniaModel.updateValue(this.playerLevelDimension,level);
		if(change) {
			this.arcaniaControl.control.battleManager.RecalculateAttributes(this.arcaniaControl.control.battleManager.wdata.hero);
		}
	}
	,update: function() {
		this.updateValues();
		var bm = this.arcaniaControl.control.battleManager;
		var _g_current = 0;
		var _g_array = bm.events;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.type == EventTypes.ActorDead) {
				if(value.origin.type == 1) {
					var moneyAm = seedyrng_Seedy.randomInt(1,6) * (100 + this.volatileMoneyBonus) / 100 | 0;
					bm.addBattlePrize(BattleConstants.PRIZE_ARCANIA,GRIArcaniaBattleManagerIntegrator.COIN_ID,moneyAm);
				}
			}
		}
		if(bm.wdata.battlePrizes != null) {
			var _g_current = 0;
			var _g_array = bm.wdata.battlePrizes;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value != null) {
					var consuming = value.status == BattlePrizeStatus.CONSUME_REQUEST || value.status == BattlePrizeStatus.CONSUME_REQUEST_AUTO;
					if(consuming && value.type == BattleConstants.PRIZE_ARCANIA) {
						this.arcaniaControl.rewardWithId(value.optionalId,value.amount);
						value.status = BattlePrizeStatus.CONSUMED;
					}
				}
			}
		}
		bm.autoSellNormal = this.autoSellNormal.retentionData.amount > 0;
	}
	,__class__: GRIArcaniaBattleManagerIntegrator
};
var Tag = function() {
	this.visibilityHog = false;
	this.inputHog = false;
	this.visible = true;
};
$hxClasses["Tag"] = Tag;
Tag.__name__ = "Tag";
Tag.prototype = {
	__class__: Tag
};
var Sprite = function(spriteN,imageSize) {
	this.rect = new Rect(0,0,0,0);
	this.spriteName = spriteN;
	this.rect.width = imageSize;
	this.rect.height = imageSize;
};
$hxClasses["Sprite"] = Sprite;
Sprite.__name__ = "Sprite";
Sprite.create = function(spriteN,w,h) {
	var sprite = new Sprite(spriteN,w);
	sprite.rect.height = h;
	return sprite;
};
Sprite.createSubSprite = function(sprite,sx,sy,sw,sh) {
	var sp = new Sprite(sprite.spriteName,0);
	sp.rect.x = sx;
	sp.rect.y = sy;
	sp.rect.width = sw;
	sp.rect.height = sh;
	return sp;
};
Sprite.prototype = {
	__class__: Sprite
};
var GRIView = function() {
	this.timeAccumulated = 0;
	this.mainCharacterName = "You";
	this.spine = new SpineManager();
	this.dialogMiscTag = "dialogmisc";
	this.lootList = new EventView();
	this.tabIds = [];
	this.tabTags = [];
	this.tabMisc = new haxe_ds_ObjectMap();
	this.tabCursorGroup = new CursorGroup(true);
	this.setCursorGroup = new CursorGroup();
	this.dialogCursorGroup = new CursorGroup();
	this.upperCursorGroup = new CursorGroup();
	this.lowerCursorGroup = new CursorGroup();
	this.mainCursorGroup = new CursorGroup();
	this.notifications = new NotificationMessages();
	this.highlightedImages = [];
	this.highlightedButtons = [];
	this.animatorControl = new animation_AnimatorControl();
	this.cursorTransform = new XTransform();
	this.ui = new UIElementManager(6);
	this.uiCreation = new UICreation(this.ui);
	this.simpleMoveEffects = new SimpleMovementEffects(this.uiCreation);
	this.equipView = new GRIViewEquip(this);
	this.cursorGroupConnections();
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheet("fxFire",2,1,12);
	this1.h["fire"] = v;
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.fxIce,4,19,1,20);
	this1.h["ice"] = v;
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.fxThunder,0,13,3,5);
	this1.h["thunder"] = v;
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.fxBuff,0,12,1,13);
	this1.h["buff"] = v;
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.fxDebuff,0,15,1,16);
	this1.h["debuff"] = v;
	var this1 = this.spine.spriteSheets;
	var v = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.fxHeal,2,14,4,4,true);
	this1.h["heal"] = v;
	this.griEffects = new GRIEffects(this.spine,this);
};
$hxClasses["GRIView"] = GRIView;
GRIView.__name__ = "GRIView";
GRIView.prototype = {
	setupAreaMessage: function() {
		var enemyX = 172;
		var enemyY = -105;
		this.areaMessage = this.addText("areamessage","TEST",GRIView.ARCHETYPE_SIMPLE_LARGE,null);
		this.uiCreation.addElement(this.areaMessage);
		this.uiCreation.addWithOffsetAdvanced(this.areaMessage,this.ui.screen,0.5,0.5,0,0,enemyX + 50 - 150,enemyY + 40 - 40);
		var self = this.areaMessage.transform.size;
		self.x = 250;
		self.y = 80;
	}
	,cursorGroupConnections: function() {
		var v = this.upperCursorGroup;
		this.mainCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		var v = this.lowerCursorGroup;
		this.setCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
		this.lowerCursorGroup.directionRelationship(Direction.NORTH,this.mainCursorGroup);
		this.lowerCursorGroup.directionRelationship(Direction.EAST,this.setCursorGroup);
		var v = this.mainCursorGroup;
		this.upperCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
		var v = this.tabCursorGroup;
		this.upperCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		this.setCursorGroup.directionRelationship(Direction.WEST,this.mainCursorGroup);
		this.upperCursorGroup.cancelGroup = this.tabCursorGroup;
		this.mainCursorGroup.cancelGroup = this.tabCursorGroup;
		this.lowerCursorGroup.cancelGroup = this.tabCursorGroup;
	}
	,update: function(miliseconds,mouse) {
		Profiler.start("UIElementManager_update");
		this.ui.Update(miliseconds,mouse);
		Profiler.end("UIElementManager_update");
		Profiler.start("GENUI_update");
		this.ui.genUI.updateAll();
		Profiler.end("GENUI_update");
		this.simpleMoveEffects.update(miliseconds);
		this.notifications.update(miliseconds);
		this.animatorControl.update(miliseconds);
		this.timeAccumulated += miliseconds;
		var _g_current = 0;
		var _g_array = this.highlightedButtons;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var period = 400;
			var active = this.timeAccumulated % period < period / 2;
			if(active) {
				value.style.border = 5;
				value.style.borderColor = GRIView.COLOR_ACTIVE_RED;
				value.style.colorText = GRIView.COLOR_ACTIVE_RED;
			} else {
				value.style.border = 0;
				value.style.colorText = GRIView.COLOR_ACTIVE_PINK;
			}
		}
		var _g_current = 0;
		var _g_array = this.highlightedImages;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var period = 400;
			var active = this.timeAccumulated % period < period / 2;
			if(active) {
				value.style.color = GRIView.COLOR_ACTIVE_RED;
			} else {
				value.style.color = GRIView.COLOR_ACTIVE_PINK;
			}
		}
		this.spine.update(miliseconds / 1000);
		this.griEffects.update();
		var _g = 0;
		var _g1 = this.ui.dataEvents;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(data.stringData == "dialogyes") {
				this.dialogResult = ConfirmResult.YES;
				if(this.automaticCloseDialog) {
					this.automaticCloseDialog = false;
					this.endDialog();
				}
			}
			if(data.stringData == "dialogno") {
				this.dialogResult = ConfirmResult.NO;
				if(this.automaticCloseDialog) {
					this.automaticCloseDialog = false;
					this.endDialog();
				}
			}
			if(this.tabIds.indexOf(data.stringData) != -1) {
				this.showTab(data.stringData);
			}
		}
		var biggest = this.ui.biggestHoveredElement;
		if(biggest != null) {
			var speed = 2.5;
			if(UIElementManager.latestDeviceThatHovered == Device.MOUSE) {
				speed = 300;
			}
			var sizeAdd = 4;
			var targetX = biggest.transform.position.x - sizeAdd / 2;
			var targetY = biggest.transform.position.y - sizeAdd / 2;
			if(this.cursorTransform.position.x != targetX || this.cursorTransform.position.y != targetY) {
				var this1 = this.cursorTransform.position;
				var distance = miliseconds * speed;
				var disX = targetX - this1.x;
				var disY = targetY - this1.y;
				var disSq = disX * disX + disY * disY;
				var reach;
				if(disSq < distance * distance) {
					this1.x = targetX;
					this1.y = targetY;
					reach = true;
				} else {
					var dis = Math.sqrt(disSq);
					var dirX = disX / dis;
					var dirY = disY / dis;
					this1.x += dirX * distance;
					this1.y += dirY * distance;
					reach = false;
				}
				this.cursorMoving = true;
			} else {
				this.cursorMoving = false;
			}
			this.cursorTransform.size.x = biggest.transform.size.x + sizeAdd;
			this.cursorTransform.size.y = biggest.transform.size.y + sizeAdd;
		}
	}
	,showTab: function(tab) {
		var indexOf = this.tabIds.indexOf(tab);
		this.currentTab = this.tabTags[indexOf];
		var tag = this.currentTab;
		this.griEffects.activeTab(this.currentTab);
		this.tabCursorGroup.firstElement = this.ui.getElement(tab);
		var v = null;
		this.tabCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
		var _g_current = 0;
		var _g_array = this.tabTags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.ui.tagVisibility(value,value == tag);
			this.ui.getElement(this.tabIds[index]).selected = value == tag;
		}
		if(this.tabMisc.h.__keys__[tag.__id__] != null) {
			if(this.tabMisc.h[tag.__id__].initialCursorGroup != null) {
				this.ui.enterCursorGroup(this.tabMisc.h[tag.__id__].initialCursorGroup);
				var v = this.tabMisc.h[tag.__id__].initialCursorGroup;
				this.tabCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
			}
		}
	}
	,tabAccessible: function(tab,access) {
		this.ui.elementVisibility(tab,access);
	}
	,removeHighlightButton: function(uiElement) {
		HxOverrides.remove(this.highlightedButtons,uiElement);
		uiElement.style.border = 0;
		uiElement.style.colorText = GRIView.COLOR_ACTIVE_PINK;
	}
	,render: function(buttonBindings) {
		if(this.loading) {
			XTextRender.drawTextSingleLine("LOADING","main16",Renderer.width / 2,Renderer.height / 2,0.5,0.5,GRIView.COLOR_TEXT_NORMAL,null,0,-1);
			return;
		}
		Profiler.start("render0");
		this.ui.renderElementsInLayer(0);
		Profiler.end("render0");
		if(!this.ui.isHoggingVisibility()) {
			this.spine.render(0);
		}
		var biggest = this.ui.biggestHoveredElement;
		if(biggest != null) {
			if(biggest.tags.indexOf(GRIViewTitle.TAG_TITLE_LOGO) == -1) {
				var colorCursor = GRIView.COLOR_DEBUFF;
				if(this.timeAccumulated % 600 < 300) {
					colorCursor = GRIView.COLOR_BACKGROUND;
				}
				if(this.cursorMoving) {
					Renderer.fillRect(this.cursorTransform,colorCursor,null,255);
				}
				Renderer.drawRect(this.cursorTransform,colorCursor,3,null);
			}
		}
		Profiler.start("render1");
		this.ui.renderElementsInLayer(1);
		Profiler.end();
		if(!this.ui.isHoggingVisibility()) {
			this.spine.render(1);
		}
		var map = this.ui.keyboardManager.buttonPressToElementTrigger;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var index = _g1_key;
			var value = _g1_value;
			if(this.ui.isVisible(value) && value.enabled) {
				var _this = value.transform;
				var x = (_this.size.x < 0 ? _this.position.x : _this.position.x + _this.size.x) - 7;
				var _this1 = value.transform;
				var y = (_this1.size.y < 0 ? _this1.position.y : _this1.position.y + _this1.size.y) + 5;
				if(value.transform.size.y < 31) {
					var _this2 = value.transform;
					y = (_this2.size.y < 0 ? _this2.position.y : _this2.position.y + _this2.size.y) + 10;
				}
				Renderer.NinePatchS(new NinePatch(12,"buttonkey",32),x - 16,y - 16,32,32,16777215,12,null);
				var _g = 0;
				var _g1 = buttonBindings.bindings;
				while(_g < _g1.length) {
					var binding = _g1[_g];
					++_g;
					if(binding.button == index) {
						var key1 = binding.key;
						if(key1 < 10000) {
							var fromCode = String.fromCodePoint(key1);
							XTextRender.drawTextSingleLine(fromCode,"main",x,y - 3,0.5,0.5,GRIView.COLOR_TEXT_NORMAL,null,0,-1,255);
						}
					}
				}
			}
		}
		if(this.notifications.isShowing()) {
			var height = 70;
			Renderer.fillRectSimple(GRIView.COLOR_BACKGROUND,0,Renderer.height - height,Renderer.width,height);
			XTextRender.drawTextMultiLine(this.notifications.currentNotification.text,"main14",Renderer.width / 2,Renderer.height - 10,Renderer.width,0.5,1);
		}
	}
	,postRender: function() {
		this.ui.renderElementsInLayer(2);
		if(!this.ui.isHoggingVisibility()) {
			this.spine.render(2);
		}
		this.ui.renderElementsInLayer(3);
		if(!this.ui.isHoggingVisibility()) {
			this.spine.render(3);
		}
		this.ui.renderElementsInLayer(4);
		if(!this.ui.isHoggingVisibility()) {
			this.spine.render(4);
		}
	}
	,backgroundElement: function(layoutId,archetype,tag,fitChildren) {
		if(fitChildren == null) {
			fitChildren = true;
		}
		if(archetype == null) {
			archetype = "";
		}
		var e = new UIElement();
		var margin = null;
		if(archetype == GRIView.ARCHETYPE_BG_DEFAULT) {
			e.style.color = GRIView.COLOR_BACKGROUND_GRAY;
			e.style.border = 2;
			e.style.fill = true;
			margin = new Rect(10,10,10,10);
		}
		if(archetype == GRIView.ARCHETYPE_BG_SIMPLE) {
			e.style.color = GRIView.COLOR_BACKGROUND_GRAY;
			e.style.fill = true;
		}
		if(tag != null) {
			e.tags.push(tag);
		}
		this.uiCreation.addBackground(e,layoutId,margin,fitChildren);
		return e;
	}
	,setupMisc: function() {
		this.uiCreation.tags.length = 0;
		this.uiCreation.activeLayer = GRIView.LAYER_HOVER;
		var bgHover = this.backgroundElement(GRIView.LAYOUT_HOVER,GRIView.ARCHETYPE_BG_DEFAULT,GRIView.TAG_HOVER);
		var header = this.addText("","Header",GRIView.ARCHETYPE_HEADER_HOVER,GRIView.LAYOUT_HOVER,GRIView.TAG_HOVER,true);
		header.textPivot.y = 1;
		var mainText = this.addText("","Info",GRIView.ARCHETYPE_IMPORTANT_TIMID,GRIView.LAYOUT_HOVER,GRIView.TAG_HOVER,true);
		var tmp = this.ui.genUI.getLayout(GRIView.LAYOUT_HOVER);
		this.ui.hover.hoverView = new HoverView(header,mainText,GRIView.LAYOUT_HOVER,GRIView.TAG_HOVER,bgHover,tmp);
		this.ui.tagVisibility(GRIView.TAG_HOVER,false);
		this.actorHoverView = new ActorView(GRIView.LAYOUT_HOVER_ACTOR);
		this.actorHoverView.tagId = GRIView.TAG_HOVER_ACTOR;
		this.backgroundElement(GRIView.LAYOUT_HOVER_ACTOR,GRIView.ARCHETYPE_BG_DEFAULT,GRIView.TAG_HOVER_ACTOR);
		this.ui.tagVisibility(GRIView.TAG_HOVER_ACTOR,false);
		this.uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
		this.uiCreation.tags.length = 0;
		var archetypeFeederror = GRIView.ARCHETYPE_BUTTON_FEEDBACK_LABEL;
		this.errorButton = this.addButton("error","Error",archetypeFeederror,"lowerbuttons");
	}
	,setupTitleTabButtons: function() {
		this.uiCreation.tags.length = 0;
		var button = this.addButton(GRIView.idTabTitle,"Title",GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabTags.push(GRIView.tagTabTitle);
		this.tabIds.push(GRIView.idTabTitle);
		var _g_current = 0;
		var _g_array = this.tabTags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(this.tabMisc.h.__keys__[value.__id__] != null == false) {
				var this1 = this.tabMisc;
				var v = new TabMisc();
				this1.set(value,v);
			}
		}
	}
	,setupTabButtons: function() {
		this.tabRegionButton = this.addButton(GRIView.idTabRegion,Local.getString("Region"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabBattleButton = this.addButton(GRIView.idTabBattle,Local.getString("Battle"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabEquipButton = this.addButton(GRIView.idTabEquip,Local.getString("Equipment"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabVillageButton = this.addButton(GRIView.idTabVillage,Local.getString("Unknown"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabMemoryButton = this.addButton(GRIView.idTabMemory,Local.getString("Memory"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabCharacterButton = this.addButton(GRIView.idTabCharacter,Local.getString("Achievement"),GRIView.ARCHETYPE_BUTTON_TAB,"tabbutton",GRIView.TAG_TAB_BUTTON,this.tabCursorGroup);
		this.tabTags.push(GRIView.tagTabRegion);
		this.tabTags.push(GRIView.tagTabBattle);
		this.tabTags.push(GRIView.tagTabEquip);
		this.tabTags.push(GRIView.tagTabVillage);
		this.tabTags.push(GRIView.tagTabMemory);
		this.tabTags.push(GRIView.tagTabCharacter);
		this.tabIds.push(GRIView.idTabRegion);
		this.tabIds.push(GRIView.idTabBattle);
		this.tabIds.push(GRIView.idTabEquip);
		this.tabIds.push(GRIView.idTabVillage);
		this.tabIds.push(GRIView.idTabMemory);
		this.tabIds.push(GRIView.idTabCharacter);
		var positionY = 34;
		var e = this.uiCreation.addEmptyElement(9999,2,null);
		e.style.fill = true;
		e.style.color = 1783633;
		e.transform.set_y(positionY);
		var _g_current = 0;
		var _g_array = this.tabTags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(this.tabMisc.h.__keys__[value.__id__] != null == false) {
				var this1 = this.tabMisc;
				var v = new TabMisc();
				this1.set(value,v);
			}
		}
	}
	,FeedAreaNames: function(areaNames,currentArea) {
	}
	,setupMiscBattle: function() {
		this.uiCreation.tags.length = 0;
		this.littleBattle = new LittleBattleWidget(this);
		this.uiCreation.tags.push(GRIView.tagTabBattle);
		this.lootList.initEventElements(5,"log",this.uiCreation);
		var e = this.backgroundElement("area",GRIView.ARCHETYPE_BG_SIMPLE,null,false);
		var retreat = this.addButtonImage("retreat",Sprite.create("arrowleft",25,13),GRIView.ARCHETYPE_BUTTON_SMALL,null,null,null,this.upperCursorGroup);
		this.uiCreation.offsetElement(retreat,e,0,0,0,0,false,false);
		var advance = this.addButtonImage("advance",Sprite.create("arrowleft",25,13),GRIView.ARCHETYPE_BUTTON_SMALL,null,null,true,this.upperCursorGroup);
		this.uiCreation.offsetElement(advance,e,1,0,0,0,false,false);
		this.advanceButton = advance;
		this.ui.keyboardManager.buttonPressToElementTrigger.h[DefaultButtons.TABRIGHTB] = advance;
		this.ui.keyboardManager.buttonPressToElementTrigger.h[DefaultButtons.TABLEFTB] = retreat;
		this.advanceButtonImage = this.ui.getElement("advance-image");
		this.upperCursorGroup.firstElement = advance;
		var repeat = this.addButtonImage("repeat",Sprite.create("arrowrepeat",20,17),GRIView.ARCHETYPE_BUTTON_SMALL,"subbuttons",null,true,this.upperCursorGroup);
		var autoRepeat = this.addButtonImage("autorepeat",Sprite.create("arrowrepeatauto",20,17),GRIView.ARCHETYPE_BUTTON_SMALL,"subbuttons",null,true,this.upperCursorGroup);
		this.areaElement = this.addText("areatext","AREA",GRIView.ARCHETYPE_HEADER_TIMID,null,null,false);
		this.areaElement.textPivot.x = 0.5;
		this.areaProgressElement = this.addText("areatext","AREAPROG",GRIView.ARCHETYPE_SIMPLE_TIMID,null,null,false);
		this.uiCreation.addWithOffset(this.areaElement,e,0.5,0,0,2);
		this.uiCreation.addWithOffset(this.areaProgressElement,e,0.5,0,0,15);
		var autoAdv = this.addButtonImage("autoadvance",Sprite.create("arrowlefttriple",30,13),GRIView.ARCHETYPE_BUTTON_SMALL,"subbuttons",null,true,this.upperCursorGroup);
		this.ui.hover.setHoverGeneric(autoAdv,"Auto Advance","Automatically advance to the next area\n once complete",null,"LOCKED","Your level is not high enough to use this");
		this.ui.hover.setHoverGeneric(autoRepeat,"Auto Repeat","Automatically repeat the area once there are no more enemies",null,"LOCKED","Your level is not high enough to use this");
	}
	,setupDialog: function() {
		var e = this.addText("dialogtitle","Title",GRIView.ARCHETYPE_HEADER,"dialogbutton");
		e.textFont = "main16";
		e.tags.push(GRIView.DIALOG_TAG);
		e.textPivot.x = 0.5;
		var textE = this.addText("dialogdesc","Description",GRIView.ARCHETYPE_SIMPLE_MEDIUM,"dialogbutton");
		textE.transform.size.x = GRIConfiguration.MINIMUM_WIDTH - 260;
		textE.tags.push(GRIView.DIALOG_TAG);
		textE.textPivot.x = 0.5;
		var byes = this.addButton("dialogyes","Soul\nCrush","mainbutton","dialogbutton");
		byes.tags.push(GRIView.DIALOG_TAG);
		var bno = this.addButton("dialogno","Cancel","mainbutton","dialogbutton");
		bno.data.soundData = autogen_AllSfx.misc_sfx_ui_cancel;
		bno.tags.push(GRIView.DIALOG_TAG);
		this.dialogCursorGroup.elements.push(byes);
		this.dialogCursorGroup.elements.push(bno);
		GRIView.DIALOG_TAG.visible = false;
	}
	,showDialog: function(warning,automaticClose) {
		if(automaticClose == null) {
			automaticClose = false;
		}
		this.automaticCloseDialog = automaticClose;
		this.ui.elementTextId("dialogdesc",warning.description,true);
		this.ui.elementTextId("dialogtitle",warning.title,true);
		this.ui.elementTextId("dialogyes",warning.buttonYes);
		this.ui.elementTextId("dialogno",warning.buttonFalse);
		this.ui.elementVisibility("dialogno",warning.buttonFalse != null);
		this.ui.hogInput(GRIView.DIALOG_TAG);
		this.ui.hogVisibility(GRIView.DIALOG_TAG);
		this.dialogResult = ConfirmResult.WAIT;
		GRIView.DIALOG_TAG.visible = true;
		this.dialogData = null;
		this.ui.enterCursorGroup(this.dialogCursorGroup);
	}
	,endDialog: function() {
		this.ui.endInputHog();
		this.ui.endVisibilityHog();
		this.dialogResult = ConfirmResult.IDLE;
		GRIView.DIALOG_TAG.visible = false;
		if(this.ui.keyboardManager.currentCursorGroup == this.dialogCursorGroup) {
			this.ui.returnCursorGroup();
		}
	}
	,addText: function(id,label,archetype,layoutId,tag,fitLayoutWidth) {
		if(fitLayoutWidth == null) {
			fitLayoutWidth = false;
		}
		var text = new UIElement();
		text.id = id;
		text.data.stringData = id;
		text.text = label;
		text.transform.size.y = 12;
		if(archetype == GRIView.ARCHETYPE_IMPORTANT_TIMID || archetype == GRIView.ARCHETYPE_SIMPLE_MEDIUM || archetype == GRIView.ARCHETYPE_HEADER_TIMID) {
			text.textFont = "main14";
			var self = text.textPivot;
			self.x = 0;
			self.y = 0.5;
		}
		if(archetype == GRIView.ARCHETYPE_HEADER_MESSAGE) {
			text.textFont = "main";
			var self = text.textPivot;
			self.x = 0.5;
			self.y = 0;
			text.style.colorText = GRIView.COLOR_TEXT_HEADER;
		}
		if(archetype == GRIView.ARCHETYPE_SIMPLE_LARGE) {
			text.textFont = "main16";
		}
		text.style.color = GRIView.COLOR_TEXT_NORMAL;
		if(archetype == GRIView.ARCHETYPE_HEADER) {
			text.textFont = "main16";
			text.transform.size.y = 18;
			var self = text.textPivot;
			self.x = 0;
			self.y = 0.5;
			text.style.color = GRIView.COLOR_TEXT_HEADER;
		}
		if(archetype == GRIView.ARCHETYPE_TEXT_ACTION) {
			text.style.color = GRIView.COLOR_TEXT_ACTION;
		}
		if(tag != null) {
			text.tags.push(tag);
		}
		if(layoutId != null) {
			this.uiCreation.addElementInLayoutId(text,layoutId,fitLayoutWidth);
		}
		return text;
	}
	,addBar: function(x,y,leftText,archetype,tag,parentTag,offsetParent,offsetX,offsetY,sourceOffX,sourceOffY) {
		if(sourceOffY == null) {
			sourceOffY = 0;
		}
		if(sourceOffX == null) {
			sourceOffX = 0;
		}
		if(offsetY == null) {
			offsetY = 0;
		}
		if(offsetX == null) {
			offsetX = 0;
		}
		var w = 230;
		var h = 26;
		var border = 3;
		var BAR_MEDIUM_WIDTH = 120;
		var BAR_SMALL_HEIGHT = 12;
		var colorFill = -1;
		if(archetype == GRIView.ARCHETYPE_BAR_MINI) {
			w = 110;
			h = 9;
			border = 1;
		}
		if(archetype == GRIView.ARCHETYPE_BAR_TIMID) {
			h = 12;
			w = 250;
			border = 3;
			colorFill = GRIView.COLOR_BAR_XP;
		}
		if(archetype == GRIView.ARCHETYPE_BAR_XP2) {
			h = BAR_SMALL_HEIGHT;
			w = BAR_MEDIUM_WIDTH;
			colorFill = GRIView.COLOR_BAR_XP;
			var border1 = 3;
		}
		if(archetype == GRIView.ARCHETYPE_BAR_TIME) {
			h = BAR_SMALL_HEIGHT;
			w = BAR_MEDIUM_WIDTH;
			colorFill = GRIView.COLOR_BAR_TIME;
			var border1 = 3;
		}
		if(archetype == GRIView.ARCHETYPE_BAR_POINT) {
			h = BAR_SMALL_HEIGHT;
			w = BAR_MEDIUM_WIDTH;
			colorFill = GRIView.COLOR_BACKGROUND_GRAY;
			var border1 = 3;
		}
		var barView = { barTag : tag, barMaxSize : w - border * 2};
		var e = new UIElement();
		e.tags.push(tag);
		e.tags.push(parentTag);
		e.transform.set(x,y,w,h);
		e.style.color = GRIView.COLOR_BLACK;
		e.style.fill = true;
		barView.barBack = e;
		if(offsetParent == null) {
			this.uiCreation.addElement(e);
		} else {
			this.uiCreation.addWithOffsetAdvanced(e,offsetParent,offsetX,offsetY,sourceOffX,sourceOffY,e.transform.position.x,e.transform.position.y);
		}
		var e = new UIElement();
		e.tags.push(parentTag);
		e.tags.push(tag);
		e.transform.set(x + border,y + border,w - border * 2,h - border * 2);
		e.style.sprite = GRIView.SPRITE_GREENGRAD;
		if(archetype == "heroBattleMPbar") {
			e.style.sprite = GRIView.SPRITE_BLUEGRAD;
		}
		if(colorFill >= 0) {
			e.style.sprite = null;
			e.style.fill = true;
			e.style.color = colorFill;
		}
		barView.barPortion = e;
		if(offsetParent == null) {
			this.uiCreation.addElement(e);
		} else {
			this.uiCreation.addWithOffsetAdvanced(e,offsetParent,offsetX,offsetY,sourceOffX,sourceOffY,e.transform.position.x,e.transform.position.y);
		}
		var e = new UIElement();
		e.tags.push(parentTag);
		e.tags.push(tag);
		e.transform.set(x + border + 4,y,w,h);
		var self = e.textPivot;
		self.x = 0;
		self.y = 0.5;
		e.text = leftText;
		barView.leftText = e;
		if(offsetParent == null) {
			this.uiCreation.addElement(e);
		} else {
			this.uiCreation.addWithOffsetAdvanced(e,offsetParent,offsetX,offsetY,sourceOffX,sourceOffY,e.transform.position.x,e.transform.position.y);
		}
		var e = new UIElement();
		e.tags.push(parentTag);
		e.tags.push(tag);
		e.transform.set(x,y,w,h);
		e.text = "";
		e.textFont = "main14";
		var self = e.textPivot;
		self.x = 0.5;
		self.y = 0.5;
		if(archetype == GRIView.ARCHETYPE_BAR_TIMID) {
			e.style.color = GRIView.COLOR_TEXT_NORMAL;
			e.textFont = "main";
		}
		barView.mainText = e;
		if(offsetParent == null) {
			this.uiCreation.addElement(e);
		} else {
			this.uiCreation.addWithOffsetAdvanced(e,offsetParent,offsetX,offsetY,sourceOffX,sourceOffY,e.transform.position.x,e.transform.position.y);
		}
		return barView;
	}
	,tabMove: function(tabM) {
		var pos = -1;
		var _g_current = 0;
		var _g_array = this.tabIds;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(this.ui.getElement(value).hovered.state) {
				pos = index;
				break;
			}
		}
		if(pos < 0) {
			pos = this.tabTags.indexOf(this.currentTab);
		}
		pos += tabM;
		while(pos >= this.tabTags.length) pos -= this.tabTags.length;
		while(pos < 0) pos += this.tabTags.length - 1;
		var e = this.ui.getElement(this.tabIds[pos]);
		if(e.visible) {
			if(e.enabled) {
				this.showTab(this.tabIds[pos]);
			} else {
				if(this.ui.keyboardManager.currentCursorGroup != this.tabCursorGroup) {
					this.ui.enterCursorGroup(this.tabCursorGroup);
				}
				this.ui.keyboardManager.cursorThisElement(e);
			}
		} else {
			if(tabM > 0) {
				++tabM;
			} else {
				--tabM;
			}
			this.tabMove(tabM);
		}
	}
	,addButtonImage: function(id,img,archetype,layoutId,tag,horizontalInvert,cursorGroup,widthIcon,heightIcon) {
		if(heightIcon == null) {
			heightIcon = -1;
		}
		if(widthIcon == null) {
			widthIcon = -1;
		}
		if(horizontalInvert == null) {
			horizontalInvert = false;
		}
		var button = new UIElement();
		var button = this.addButton(id,"",archetype,layoutId,tag,cursorGroup);
		var icon = new UIElement();
		icon.id = id + "-image";
		icon.managedState = false;
		icon.style.sprite = img;
		icon.styleHover = new Style();
		icon.styleDisabled = new Style();
		icon.styleSelected = new Style();
		icon.style.color = GRIView.COLOR_ACTIVE_PINK;
		icon.styleDisabled.color = GRIView.COLOR_DISABLED_BUTTON;
		icon.styleSelected.color = GRIView.COLOR_ACTIVE_BLUE;
		icon.styleHover.color = GRIView.COLOR_ACTIVE_BLUE;
		icon.styleHover.sprite = img;
		icon.styleDisabled.sprite = img;
		icon.styleSelected.sprite = img;
		if(tag != null) {
			icon.tags.push(tag);
		}
		icon.transform.size.x = img.rect.width;
		if(horizontalInvert) {
			icon.transform.size.x *= -1;
		}
		icon.transform.size.y = img.rect.height;
		if(widthIcon > 0) {
			icon.transform.size.x = widthIcon;
		}
		if(heightIcon > 0) {
			icon.transform.size.y = heightIcon;
		}
		this.uiCreation.offsetElement(icon,button,0.5,0.5,0,0,false,true);
		this.uiCreation.addElement(icon);
		return button;
	}
	,addButton: function(id,label,archetype,layoutId,tag,cursorGroup) {
		var button = new UIElement();
		button.data.soundData = autogen_AllSfx.misc_sfx_ui_confirm;
		button.hoverSound = autogen_AllSfx.misc_sfx_ui_hover;
		button.id = id;
		button.data.stringData = id;
		button.style.ninePatch = new NinePatch(4,"button9a",32);
		var self = button.transform.size;
		self.x = 145;
		self.y = 45;
		if(archetype == "equipbutton") {
			var self = button.transform.size;
			self.x = 70;
			self.y = 70;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_SMALL) {
			var self = button.transform.size;
			self.x = 45;
			self.y = 30;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_SMALL_LABEL) {
			button.transform.size.y -= 15;
			button.transform.size.x -= 20;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_FEEDBACK_LABEL) {
			button.transform.size.x = 70;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_BATTLE_SKILL) {
			var self = button.transform.size;
			self.x = 42;
			self.y = 42;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_WITH_ICON_16) {
			var self = button.transform.size;
			self.x = 32;
			self.y = 32;
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_MEDIUM) {
			button.textFont = "main14";
			button.transform.size.x += 20;
			button.transform.size.y += 10;
		}
		button.style.colorText = GRIView.COLOR_ACTIVE_PINK;
		button.styleHover = new Style();
		button.styleHover.ninePatch = new NinePatch(4,"button9a",32);
		button.styleHover.colorText = GRIView.COLOR_ACTIVE_PINK2;
		button.styleHover.sprite = Sprite.create("buttonback_h",32,32);
		if(archetype == GRIView.ARCHETYPE_BUTTON_TAB) {
			var self = button.transform.size;
			self.x = 120;
			self.y = 35;
			button.styleHover.ninePatch = null;
			button.style.ninePatch = null;
			button.style.fill = true;
			button.style.color = GRIView.COLOR_BACKGROUND;
			button.styleSelected = new Style();
			button.styleSelected.color = GRIView.COLOR_TAG_HOVER;
			button.styleSelected.sprite = new Sprite("tabback",32);
			button.styleSelectedHover = button.styleHover.clone();
			button.styleSelectedHover.color = 16777215;
		} else {
			button.style.sprite = Sprite.create("buttonback",32,32);
		}
		if(archetype == GRIView.ARCHETYPE_BUTTON_BATTLE) {
			button.style.ninePatch = new NinePatch(4,autogen_GriPngs.battlebutton.spriteName,autogen_GriPngs.battlebutton.rect.width,autogen_GriPngs.battlebutton.rect.height);
			button.style.colorText = GRIView.COLOR_TEXT_ACTION_BATTLE;
		}
		button.text = label;
		button.styleDisabled = new Style();
		button.styleDisabled.border = 2;
		button.styleDisabled.color = GRIView.COLOR_BACKGROUND;
		button.styleDisabled.fill = true;
		button.styleDisabled.borderColor = GRIView.COLOR_DISABLED_BUTTON;
		button.styleDisabled.colorText = GRIView.COLOR_DISABLED_BUTTON;
		button.styleDisabledHover = button.styleDisabled.clone();
		button.styleDisabledHover.sprite = Sprite.create("buttonback_h_disabled",32,32);
		if(button.styleSelected == null) {
			button.styleSelected = new Style();
			button.styleSelected.color = GRIView.COLOR_TAG_HOVER;
			button.styleSelected.ninePatch = new NinePatch(4,"buttonselec9a",32);
			button.styleSelectedHover = button.styleSelected.clone();
			button.styleSelectedHover.sprite = Sprite.create("buttonback_h",32,32);
			button.styleSelected.sprite = Sprite.create("buttonback",32,32);
		}
		if(tag != null) {
			button.tags.push(tag);
		}
		if(button.stylePressed == null) {
			button.stylePressed = new Style();
			button.stylePressed.borderColor = button.style.borderColor;
			button.stylePressed.border = button.style.border;
			button.stylePressed.fill = true;
			button.stylePressed.color = button.style.colorText;
			button.stylePressed.colorText = GRIView.COLOR_BACKGROUND;
		}
		if(layoutId != null) {
			this.uiCreation.addElementInLayoutId(button,layoutId);
		} else {
			this.uiCreation.addElement(button);
		}
		if(cursorGroup != null) {
			cursorGroup.elements.push(button);
		}
		return button;
	}
	,renderError: function(message) {
		XTextRender.drawTextMultiLine(message,"main",4,4,Renderer.width - 20);
	}
	,massClickable: function(arg0,massClickable) {
		if(massClickable) {
			arg0.massEventStartTime = 400;
		} else {
			arg0.massEventStartTime = -1;
		}
	}
	,addHeader: function(layout,tag,text) {
		var l = this.ui.genUI.getLayout(layout);
		var header = this.addText("",text,GRIView.ARCHETYPE_HEADER_LARGE,layout,tag,true);
		header.transform.size.y += 12 - l.layout.separationY;
		if(header.transform.size.x <= 0) {
			header.transform.size.x = 9999;
		}
		header.textPivot.y = 0;
		return header;
	}
	,__class__: GRIView
};
var arcania_logic_ResourceTypeConfiguration = function(name,unlockEvent,selfIsEvent) {
	if(selfIsEvent == null) {
		selfIsEvent = false;
	}
	if(unlockEvent == null) {
		unlockEvent = true;
	}
	this.selfIsEvent = false;
	this.unlockEvent = true;
	this.name = name;
	this.unlockEvent = unlockEvent;
	this.selfIsEvent = selfIsEvent;
};
$hxClasses["arcania.logic.ResourceTypeConfiguration"] = arcania_logic_ResourceTypeConfiguration;
arcania_logic_ResourceTypeConfiguration.__name__ = "arcania.logic.ResourceTypeConfiguration";
arcania_logic_ResourceTypeConfiguration.prototype = {
	__class__: arcania_logic_ResourceTypeConfiguration
};
var arcania_logic_ArcaniaModel = function() {
	this.runningUnitActive = new reusablemodel_BoolProperty();
	this.runtime = new arcania_logic_RuntimeHolder();
};
$hxClasses["arcania.logic.ArcaniaModel"] = arcania_logic_ArcaniaModel;
arcania_logic_ArcaniaModel.__name__ = "arcania.logic.ArcaniaModel";
arcania_logic_ArcaniaModel.prototype = {
	loadJsons: function(jsonActions,jsonResources,jsonEvents,jsonSkills) {
		this.actions = arcania_JsonInterpreter.readActions(jsonActions,this.actions);
		this.resources = arcania_JsonInterpreter.readBasicArray(jsonResources);
		this.events = arcania_JsonInterpreter.readBasicArray(jsonEvents);
		this.skills = arcania_JsonInterpreter.readSkills(jsonSkills,this.actions,this.resources);
	}
	,loadActionJson: function(jsonActions) {
		this.actions = arcania_JsonInterpreter.readActions(jsonActions,this.actions);
	}
	,loadProceduralActions: function(jsonProcedural) {
		this.actions = arcania_JsonInterpreterProcedural.readActions(jsonProcedural,this.actions);
	}
	,loadData: function(persistence) {
		this.persistence = persistence;
		this.runtime.init(this);
		var _g_current = 0;
		var _g_array = this.runtime.unitArrays;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var _g2_current = 0;
			var _g2_array = value;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index2 = _g3_key;
				var value2 = _g3_value;
				var finalV = value2.retentionData.amount;
				this.updateValueWithPrevious(value2,0,finalV);
			}
		}
	}
	,isUnitVisible: function(unit,hideMaxed) {
		if(unit.retentionData.seen == 0) {
			return false;
		}
		if(hideMaxed) {
			var max = unit.getMax();
			if(max >= 0) {
				if(max <= unit.retentionData.amount) {
					return false;
				}
			}
		}
		return true;
	}
	,isRuntimeUnitEnabled: function() {
	}
	,isActionEnabled: function(actionPos,act) {
		if(actionPos == null) {
			actionPos = -1;
		}
		if(act == null) {
			act = this.runtime.actionRuntime[actionPos];
		}
		var cost = act.basicData.cost;
		var enable = true;
		if(!this.meetRequirements(act.basicData.needs,act)) {
			enable = false;
		}
		if(this.canPayCost(cost) == false && act != this.runtime.runningUnit && act.retentionData.progressMiliseconds <= 1) {
			enable = false;
		}
		if(this.canPayCost(act.actionData.run) == false) {
			enable = false;
		}
		if(enable) {
			if(act.basicData.modPerAmount == null || act.basicData.modPerAmount.length == 0) {
				if(this.effectMakesDifference(act.actionData.effect) == false) {
					if(this.effectMakesDifference(act.actionData.basic.result) == false) {
						if(act.actionData.effect != null || act.actionData.basic.result != null) {
							enable = false;
						}
					}
				}
			}
		}
		return enable;
	}
	,updateRunningAndRestingBasedOnEnability: function() {
		if(this.runtime.restingUnit != null) {
			this.runtime.restEnabled = this.isActionEnabled(null,this.runtime.restingUnit);
		}
		if(this.runtime.runningUnit != null) {
			if(this.isActionEnabled(null,this.runtime.runningUnit) == false) {
				var act = this.runtime.runningUnit;
				this.runtime.runningUnit = null;
				if(act != this.runtime.restingUnit) {
					if(this.runtime.restEnabled) {
						this.runtime.runningUnit = this.runtime.restingUnit;
						this.runtime.blockedUnit = act;
					}
				} else if(this.runtime.blockedUnit != null && this.isActionEnabled(null,this.runtime.blockedUnit)) {
					this.runtime.runningUnit = this.runtime.blockedUnit;
				} else {
					this.runtime.runningUnit = null;
				}
				if(act == this.runtime.runningUnit) {
					this.runtime.runningUnit = null;
				}
			}
		}
	}
	,actionIsInstant: function(actionPos) {
		var action = this.runtime.actionRuntime[actionPos];
		if(action.actionData.duration > 0) {
			return false;
		}
		if(action.actionData.perpetual) {
			return false;
		}
		return true;
	}
	,performActionWithRuntimeUnit: function(action) {
		var duration = action.actionData.duration;
		var payForCost = true;
		if(duration <= 0) {
			this.actionComplete(action);
		} else {
			this.runtime.blockedUnit = null;
			if(this.runtime.runningUnit == action) {
				this.runtime.runningUnit = null;
				payForCost = false;
			} else {
				this.runtime.runningUnit = action;
				if(this.runtime.runningUnit.retentionData.progressMiliseconds > 1) {
					payForCost = false;
				}
			}
		}
		if(action.actionData.perpetual && duration <= 0) {
			payForCost = false;
			this.runtime.blockedUnit = null;
			if(this.runtime.runningUnit == action) {
				this.runtime.runningUnit = null;
			} else {
				this.runtime.runningUnit = action;
			}
		}
		if(payForCost) {
			this.applyChange(action.basicData.cost,1);
		}
	}
	,performAction: function(actionPos) {
		var action = this.runtime.actionRuntime[actionPos];
		this.performActionWithRuntimeUnit(action);
	}
	,canPayCost: function(cost) {
		if(cost != null) {
			var _g_current = 0;
			var _g_array = cost;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var id = value.id;
				var runtimeUnit = this.runtime.findUnit(id);
				if(value.amount * -1 > runtimeUnit.retentionData.amount) {
					return false;
				}
			}
		}
		return true;
	}
	,applyChange: function(result,times) {
		if(result != null) {
			var _g_current = 0;
			var _g_array = result;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var id = value.id;
				var runtimeUnit = this.runtime.findUnit(id);
				var previous = runtimeUnit.retentionData.amount;
				var after = previous + value.amount * times;
				var max = runtimeUnit.getMax();
				if(max >= 0) {
					if(after > max) {
						after = max;
					}
				}
				this.updateValue(runtimeUnit,after);
			}
		}
	}
	,update: function(miliseconds) {
		var _this = this.runningUnitActive;
		_this.previousState = _this.state;
		var runningUnitExist = this.runtime.runningUnit != null;
		this.runningUnitActive.state = runningUnitExist;
		if(runningUnitExist) {
			var pm = this.runtime.runningUnit.retentionData.progressMiliseconds;
			var secondsBefore = Math.floor(pm / 1000);
			pm += miliseconds;
			var secondsAfter = Math.floor(pm / 1000);
			if(secondsBefore != secondsAfter) {
				var diff = secondsAfter - secondsBefore;
				if(this.runtime.runningUnit.actionData.effect != null && this.runtime.runningUnit.actionData.duration <= 0) {
					this.updateValue(this.runtime.runningUnit,this.runtime.runningUnit.retentionData.amount + 1);
				}
				this.applyChange(this.runtime.runningUnit.actionData.effect,diff);
				this.applyChange(this.runtime.runningUnit.actionData.run,diff);
			}
			var updateProgress = true;
			if(this.runtime.runningUnit.actionData.duration > 0) {
				if(secondsAfter >= this.runtime.runningUnit.actionData.duration) {
					updateProgress = false;
					this.actionComplete(this.runtime.runningUnit);
					this.runtime.runningUnit.retentionData.progressMiliseconds = 1;
					var oldRU = this.runtime.runningUnit;
					this.runtime.runningUnit = null;
					if(oldRU.actionData.perpetual) {
						if(this.isActionEnabled(null,oldRU)) {
							this.performActionWithRuntimeUnit(oldRU);
						} else if(oldRU != this.runtime.restingUnit) {
							this.runtime.runningUnit = this.runtime.restingUnit;
							this.runtime.blockedUnit = oldRU;
						}
					}
				}
			}
			if(this.runtime.runningUnit != null && updateProgress) {
				this.runtime.runningUnit.retentionData.progressMiliseconds = pm;
			}
		}
		var _g_current = 0;
		var _g_array = this.runtime.unitArrays;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var arrays = _g1_value;
			var _g2_current = 0;
			var _g2_array = arrays;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index2 = _g3_key;
				var value = _g3_value;
				if(value.rateModMili > 0) {
					value.retentionData.rateProgressMicro += miliseconds * value.rateModMili;
					var million = 1000000;
					if(value.retentionData.rateProgressMicro > million) {
						var millionValue = Math.floor(value.retentionData.rateProgressMicro / million);
						value.retentionData.rateProgressMicro -= millionValue * million;
						this.safeIncrease(value,millionValue);
					}
				}
				if(value.requestSpotlightForExternal.isUpdated(this.frameSystem.frame) == false) {
					value.requestSpotlightForExternal.setData(0,this.frameSystem.frame);
				}
				if(value.externalSpotlight == arcania_logic_ArcaniaModel.SPOTLIGHT_ACTION_LOSSES_AND_GAINS) {
					if(value.actionData != null) {
						if(value.basicData.cost != null) {
							var _g4_current = 0;
							var _g4_array = value.basicData.cost;
							while(_g4_current < _g4_array.length) {
								var _g5_value = _g4_array[_g4_current];
								var _g5_key = _g4_current++;
								var index1 = _g5_key;
								var value1 = _g5_value;
								var res = this.findRuntimeUnit(value1.id);
								if(this.isSpotlightUnpayable(res) == false) {
									if(res.retentionData.amount >= value1.amount * -1) {
										res.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST,this.frameSystem.frame);
									} else {
										res.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST_UNPAYABLE,this.frameSystem.frame);
									}
								}
							}
						}
						if(value.actionData.run != null) {
							var _g4_current1 = 0;
							var _g4_array1 = value.actionData.run;
							while(_g4_current1 < _g4_array1.length) {
								var _g5_value1 = _g4_array1[_g4_current1];
								var _g5_key1 = _g4_current1++;
								var index3 = _g5_key1;
								var value2 = _g5_value1;
								var res1 = this.findRuntimeUnit(value2.id);
								if(this.isSpotlightUnpayable(res1) == false) {
									if(res1.retentionData.amount >= value2.amount * -1) {
										res1.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST,this.frameSystem.frame);
									} else {
										res1.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST_UNPAYABLE,this.frameSystem.frame);
									}
								}
							}
						}
						if(value.actionData.basic.result != null) {
							var _g4_current2 = 0;
							var _g4_array2 = value.actionData.basic.result;
							while(_g4_current2 < _g4_array2.length) {
								var _g5_value2 = _g4_array2[_g4_current2];
								var _g5_key2 = _g4_current2++;
								var index4 = _g5_key2;
								var value3 = _g5_value2;
								var res2 = this.findRuntimeUnit(value3.id);
								if(res2.requestSpotlightForExternal._data == 0) {
									res2.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RESULT,this.frameSystem.frame);
								}
							}
						}
						if(value.actionData.effect != null) {
							var _g4_current3 = 0;
							var _g4_array3 = value.actionData.effect;
							while(_g4_current3 < _g4_array3.length) {
								var _g5_value3 = _g4_array3[_g4_current3];
								var _g5_key3 = _g4_current3++;
								var index5 = _g5_key3;
								var value4 = _g5_value3;
								var res3 = this.findRuntimeUnit(value4.id);
								if(res3.requestSpotlightForExternal._data == 0) {
									res3.requestSpotlightForExternal.setData(arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RESULT,this.frameSystem.frame);
								}
							}
						}
					}
				}
				if(value.retentionData.seen == 0) {
					if(this.meetRequirements(value.basicData.requirements,value)) {
						var configuration = arcania_logic_ArcaniaModel.resourceTypeConfiguration[index];
						if(configuration.unlockEvent) {
							if(value.basicData.requirements != null) {
								var resourceTypeName = configuration.name;
								this.addEvent(resourceTypeName + " Unlocked: " + value.basicData.name);
							}
						}
						if(configuration.selfIsEvent) {
							this.runtime.events.push(value);
						}
						value.retentionData.seen = 1;
					}
				}
			}
		}
		var _g_current = 0;
		var _g_array = this.runtime.skillRuntime;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var skill = _g1_value;
			var maxLevel = skill.level.isMaxed();
			skill.xp.forceHide = maxLevel;
			if(maxLevel) {
				skill.xp.basicData.max = 0;
				skill.studySkill.basicData.max = 1;
			} else {
				skill.xp.basicData.max = 100 * Math.pow(1.5,skill.level.retentionData.amount) | 0;
				if(maxLevel == false && skill.xp.isMaxed()) {
					skill.xp.retentionData.amount = 0;
					this.updateValue(skill.level,skill.level.retentionData.amount + 1);
					this.addEvent("Skill Improved",skill.level.basicData.name);
				}
				skill.studySkill.basicData.max = -1;
			}
		}
		this.updateRunningAndRestingBasedOnEnability();
	}
	,isSpotlightUnpayable: function(res) {
		var d = res.requestSpotlightForExternal._data;
		if(d != arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST_UNPAYABLE) {
			return d == arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST_UNPAYABLE;
		} else {
			return true;
		}
	}
	,safeIncrease: function(resource,amount) {
		var newAmount = resource.retentionData.amount + amount;
		var max = resource.getMax();
		if(newAmount > max) {
			newAmount = max;
		}
		this.updateValue(resource,newAmount);
	}
	,effectMakesDifference: function(rc) {
		if(rc != null) {
			var _g_current = 0;
			var _g_array = rc;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var id = value.id;
				var runtimeUnit = this.runtime.findUnit(id);
				var max = runtimeUnit.getMax();
				if(max < 0) {
					return true;
				}
				if(runtimeUnit.retentionData.amount < max) {
					return true;
				}
			}
		}
		return false;
	}
	,meetRequirements: function(arg0,owner) {
		if(arg0 == null) {
			return true;
		}
		var _g_current = 0;
		var _g_array = arg0;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var meet = this.meetRequirement(value,owner);
			if(value.child1 != null) {
				if(value.logicalOperatorWithChildren == arcania_logic_LogicalOperator.AND) {
					if(meet == false) {
						return false;
					}
					meet = meet && this.meetRequirement(value.child1,owner);
				}
				if(value.logicalOperatorWithChildren == arcania_logic_LogicalOperator.OR) {
					if(meet == true) {
						return true;
					}
					meet = meet || this.meetRequirement(value.child1,owner);
				}
			}
			if(meet == false) {
				return false;
			}
		}
		return true;
	}
	,maxResources: function() {
		var _g_current = 0;
		var _g_array = this.runtime.resourceRuntime;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.getMax() > 0) {
				this.updateValue(value,value.getMax());
			}
		}
	}
	,updateValue: function(runtimeUnit,after) {
		this.updateValueWithPrevious(runtimeUnit,runtimeUnit.retentionData.amount,after);
	}
	,updateValueWithPrevious: function(runtimeUnit,previous,after) {
		var delta = after - previous;
		if(delta != 0) {
			this.applyMod(runtimeUnit.basicData.modPerAmount,delta);
		}
		runtimeUnit.retentionData.amount = after;
	}
	,applyMod: function(mods,amount) {
		if(mods == null) {
			return;
		}
		var _g_current = 0;
		var _g_array = mods;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var v = value.value * amount;
			var ru = this.runtime.findUnit(value.targetId);
			switch(value.modType._hx_index) {
			case 0:
				ru.maxMod += v;
				continue;
			case 1:
				var base = value.value;
				var m = Math.pow(base,amount);
				ru.maxModMultiply *= m;
				continue;
			case 2:
				break;
			case 3:
				ru.rateModMili += v;
				continue;
			}
		}
	}
	,meetRequirement: function(value,owner) {
		var unit = this.runtime.findUnit(value.targetId);
		if(unit != owner && unit.retentionData.seen == 0) {
			return false;
		}
		var v1 = unit.retentionData.amount;
		var v2 = value.targetNumber;
		if(value.relationship == arcania_logic_RelationshipComparison.BIGGER) {
			return v1 > v2;
		}
		if(value.relationship == arcania_logic_RelationshipComparison.BIGGEREQUAL) {
			return v1 >= v2;
		}
		if(value.relationship == arcania_logic_RelationshipComparison.EQUAL) {
			return v1 == v2;
		}
		if(value.relationship == arcania_logic_RelationshipComparison.NOT) {
			return v1 != v2;
		}
		if(value.relationship == arcania_logic_RelationshipComparison.SMALLER) {
			return v1 < v2;
		}
		if(value.relationship == arcania_logic_RelationshipComparison.SMALLEREQUAL) {
			return v1 <= v2;
		}
		return true;
	}
	,addEvent: function(name,description) {
		var bd = new arcania_logic_BasicData("",name);
		bd.description = description;
		var ru = new arcania_logic_RuntimeUnit();
		ru.basicData = bd;
		this.runtime.events.push(ru);
	}
	,actionComplete: function(action) {
		var result = action.basicData.result;
		this.updateValue(action,action.retentionData.amount + 1);
		this.applyChange(result,1);
	}
	,getPercentProgress: function(value,acceptNoDuration) {
		var ru = value;
		var d = ru.actionData.duration;
		if(d > 0) {
			var progress = ru.retentionData.progressMiliseconds;
			var percent = progress * 0.1 / d | 0;
			return percent;
		} else if(ru.actionData.perpetual) {
			if(acceptNoDuration) {
				return (ru.retentionData.progressMiliseconds * 0.1 | 0) % 100;
			}
		} else {
			return -1;
		}
		return -1;
	}
	,findRuntimeUnit: function(arg0) {
		return this.runtime.findUnit(arg0);
	}
	,__class__: arcania_logic_ArcaniaModel
};
var GRIArcaniaConstants = function() { };
$hxClasses["GRIArcaniaConstants"] = GRIArcaniaConstants;
GRIArcaniaConstants.__name__ = "GRIArcaniaConstants";
var GRIArcaniaControl = function() {
	this.active = true;
	this.arcaniaModel = new arcania_logic_ArcaniaModel();
	this.arcaniaModel.loadJsons(GRIArcaniaJson.actions,GRIArcaniaJson.resources,GRIArcaniaJson.events,GRIArcaniaJson.skills);
	this.arcaniaModel.loadProceduralActions(GRIArcaniaJson.proceduralactions);
	this.arcaniaModel.loadActionJson(GRIArcaniaJson.actionsLunar);
	this.subsetManager = new GRIArcaniaSubsetManager(this);
};
$hxClasses["GRIArcaniaControl"] = GRIArcaniaControl;
GRIArcaniaControl.__name__ = "GRIArcaniaControl";
GRIArcaniaControl.prototype = {
	loadData: function(pers) {
		if(pers == null) {
			this.noSaveData();
		} else {
			this.arcaniaModel.loadData(pers);
		}
		this.tripleChoiceinteg.setupData();
		this.arcaniaModel.runtime.restingUnit = this.arcaniaModel.runtime.findUnitWithString("sitdown");
	}
	,noSaveData: function() {
		this.loadData({ resources : new haxe_ds_StringMap(), actions : new haxe_ds_StringMap(), events : new haxe_ds_StringMap()});
	}
	,setupUI: function(control) {
		control.view.uiCreation.singleTag(GRIView.tagTabVillage);
		this.control = control;
		this.arcaniaModel.frameSystem = control.frameSystem;
		this.arcaniaView = new GRIArcaniaView(control.view);
		this.arcaniaView.createResourceViews(this.arcaniaModel.resources.length);
		this.arcaniaView.createButtons(this.arcaniaModel.actions.length);
		var _g_current = 0;
		var _g_array = this.arcaniaModel.actions;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.arcaniaView.feedAction(index,value.basic.name,false,false,null,false,false);
		}
		this.battleintegration = new GRIArcaniaBattleManagerIntegrator(this);
	}
	,update: function(miliseconds) {
		var tabActive = GRIView.tagTabVillage.visible;
		if(tabActive) {
			this.control.view.ui.genUI.extendLayoutWidth(GRIArcaniaView.LAYOUT_ACTION,260);
			this.control.view.ui.extendElementHeight(this.arcaniaView.scrollAction.viewport,95);
			this.control.view.ui.extendElementHeight(this.arcaniaView.scrollRes.viewport,95);
		}
		this.arcaniaModel.update(miliseconds);
		this.battleintegration.update();
		this.subsetManager.update();
		var _this = this.arcaniaModel.runningUnitActive;
		if(_this.state != _this.previousState && _this.state == false) {
			this.notificationControl.addNotification(GRIView.idTabVillage,0);
		}
		if(this.control.view.littleBattle != null) {
			if(this.arcaniaModel.runtime.runningUnit != null) {
				var ru = this.arcaniaModel.runtime.runningUnit;
				var d = ru.actionData.duration;
				if(d > 0) {
					var progress = ru.retentionData.progressMiliseconds;
					var percent = progress * 0.1 / d | 0;
					this.control.view.littleBattle.leftText.text = this.arcaniaModel.runtime.runningUnit.basicData.name + (" " + percent + "%");
				} else {
					this.control.view.littleBattle.leftText.text = this.arcaniaModel.runtime.runningUnit.basicData.name;
				}
			} else {
				this.control.view.littleBattle.leftText.text = "";
			}
		}
		var _g_current = 0;
		var _g_array = this.arcaniaModel.runtime.events;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.arcaniaView.log.addLog(value.basicData.name,value.basicData.description);
		}
		this.arcaniaModel.runtime.events.length = 0;
		if(this.active) {
			var _g_current = 0;
			var _g_array = this.control.view.ui.dataEvents;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value.stringData == GRIArcaniaView.DATA_ACTIONPRESS) {
					var actionPos = value.intData;
					this.arcaniaModel.performAction(actionPos);
				}
			}
			if(tabActive) {
				var _g = 0;
				var _g1 = this.arcaniaModel.runtime.resourceRuntime.length;
				while(_g < _g1) {
					var i = _g++;
					var res = this.arcaniaModel.runtime.resourceRuntime[i];
					if(res.basicData.hasAnyTag()) {
						continue;
					}
					this.feedResource(i,res,null);
				}
				var _g = 0;
				var _g1 = this.arcaniaModel.runtime.actionRuntime.length;
				while(_g < _g1) {
					var i = _g++;
					var act = this.arcaniaModel.runtime.actionRuntime[i];
					if(act.basicData.hasAnyTag()) {
						continue;
					}
					var position = act.positionInRuntimeTypeArray;
					var externalSpotlight = 0;
					if(this.arcaniaView.buttons[position].hovered.state) {
						externalSpotlight = arcania_logic_ArcaniaModel.SPOTLIGHT_ACTION_LOSSES_AND_GAINS;
					}
					act.externalSpotlight = externalSpotlight;
					this.feedSingleAction(act);
				}
			}
		}
	}
	,feedResource: function(i,res,view) {
		var amount = res.retentionData.amount;
		var name = res.basicData.name;
		var basicHover = this.getCommonHoverOfRuntimeUnit(res);
		var color = GRIView.COLOR_TEXT_NORMAL;
		if(res.requestSpotlightForExternal._data > 0) {
			color = GRIArcaniaConstants.SPOTLIGHT_TO_COLOR.h[res.requestSpotlightForExternal._data];
		}
		if(i >= 0) {
			this.arcaniaView.feedResource(i,name,basicHover,amount,res.getMax(),res.retentionData.seen > 0 && res.forceHide == false,color);
		} else {
			this.arcaniaView.feedResourceWithView(view,name,basicHover,amount,res.getMax(),res.retentionData.seen > 0,color);
		}
	}
	,feedSingleAction: function(act,overwriteButton) {
		var i = act.positionInRuntimeTypeArray;
		var updateHover = false;
		if(overwriteButton == null) {
			updateHover = this.arcaniaView.buttons[i].hovered.state;
		}
		var name = act.basicData.name;
		var basicHover = null;
		if(updateHover) {
			basicHover = this.getBasicHover(act.basicData);
			basicHover += this.getActionHover(act.actionData);
			basicHover += this.getActionRuntimeHover(act);
		}
		if(overwriteButton == null) {
			this.arcaniaView.feedAction(i,name,this.arcaniaModel.isActionEnabled(i),this.arcaniaModel.isUnitVisible(act,true),basicHover,act == this.arcaniaModel.runtime.runningUnit,this.arcaniaModel.actionIsInstant(i));
		} else {
			this.arcaniaView.feedActionWithButton(overwriteButton,name,this.arcaniaModel.isActionEnabled(i),this.arcaniaModel.isUnitVisible(act,true),basicHover,act == this.arcaniaModel.runtime.runningUnit,this.arcaniaModel.actionIsInstant(i));
		}
	}
	,getStringFromChangeArray: function() {
		return null;
	}
	,getCommonHoverOfRuntimeUnit: function(ru) {
		var hover = this.getBasicHover(ru.basicData);
		if(ru.rateModMili != 0) {
			hover += "\n" + this.getRateAsString(ru);
		}
		return hover;
	}
	,getRateAsString: function(ru) {
		return "" + ru.rateModMili / 1000 + "/s";
	}
	,getBasicHover: function(bd) {
		var s = " ";
		if(bd.description != null) {
			s = "" + bd.description;
		}
		if(bd.boundSkillId >= 0) {
			var skillRuntime = this.arcaniaModel.runtime.skillRuntime[bd.boundSkillId];
			var level = skillRuntime.level.retentionData.amount;
			var name = skillRuntime.level.basicData.name;
			var xp = skillRuntime.xp.retentionData.amount;
			var maxXP = skillRuntime.xp.getMax();
			s += "\n\n" + name + " Level " + level + "\nXP: " + xp + " / " + maxXP;
		}
		if(bd.cost != null) {
			s += "\n\ncost";
			var _g_current = 0;
			var _g_array = bd.cost;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var ru = this.arcaniaModel.runtime.findUnit(value.id);
				var name = ru.basicData.name;
				s += "\n" + name + ": " + -value.amount;
			}
		}
		if(bd.result != null) {
			s += "\n\nresult";
			var _g_current = 0;
			var _g_array = bd.result;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var name = this.arcaniaModel.runtime.findUnit(value.id).basicData.name;
				s += "\n" + name + ": " + value.amount;
			}
		}
		if(bd.modPerAmount != null) {
			s += "\n\nModification";
			var _g_current = 0;
			var _g_array = bd.modPerAmount;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var targetName = this.arcaniaModel.runtime.findUnit(value.targetId).basicData.name;
				if(value.modType == arcania_logic_ModType.MAX) {
					s += "\nMax " + targetName + ": " + value.value;
				}
				if(value.modType == arcania_logic_ModType.EXPONENTIAL_MAX_MULTIPLY) {
					s += "\nMax " + targetName + ": x" + value.value;
				}
				if(value.modType == arcania_logic_ModType.RATE) {
					var rate = value.value / 1000;
					s += "\n" + targetName + ": " + rate + "/s";
				}
			}
		}
		if(bd.needs != null) {
			s += "\n\nNeed";
			var _g_current = 0;
			var _g_array = bd.needs;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var targetId = value.targetId;
				var targetName = this.arcaniaModel.runtime.findUnit(value.targetId).basicData.name;
				var rel = value.relationship;
				s += "\n" + targetName + " " + rel + " " + value.targetNumber;
			}
		}
		return s;
	}
	,getActionRuntimeHover: function(ru) {
		var s = "";
		if(ru.getMax() > 1) {
			var amount = ru.retentionData.amount;
			s += "\nTimes performed: " + amount + " / " + ru.getMax();
		}
		return s;
	}
	,getActionHover: function(act) {
		var s = "";
		if(act.run != null) {
			s += "\n\nRunning Cost: ";
			var _g_current = 0;
			var _g_array = act.run;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var name = this.arcaniaModel.runtime.findUnit(value.id).basicData.name;
				s += "\n" + name + ": " + -value.amount;
			}
		}
		if(act.effect != null) {
			s += "\n\nRunning Effect:";
			var _g_current = 0;
			var _g_array = act.effect;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var name = this.arcaniaModel.runtime.findUnit(value.id).basicData.name;
				s += "\n" + name + ": " + value.amount + "/s";
			}
		}
		if(act.duration > 1) {
			s += "\n\nDuration: " + act.duration + " seconds";
		}
		return s;
	}
	,overlayRender: function() {
		if(this.control != null && this.control.view.currentTab == GRIView.tagTabVillage) {
			var _g_current = 0;
			var _g_array = this.arcaniaModel.runtime.actionRuntime;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value == this.arcaniaModel.runtime.runningUnit) {
					var percent = this.arcaniaModel.getPercentProgress(value,true);
					this.arcaniaView.drawProgressBar(index,percent);
				}
			}
		}
	}
	,reward: function(resource,amount) {
		this.arcaniaModel.safeIncrease(resource,amount);
	}
	,rewardWithId: function(resourceId,amount) {
		this.arcaniaModel.safeIncrease(this.getRuntimeUnit(resourceId),amount);
	}
	,spend: function(resource,amount) {
		var newAmount = resource.retentionData.amount - amount;
		if(newAmount < 0) {
			newAmount = 0;
		}
		this.arcaniaModel.updateValue(resource,newAmount);
	}
	,getRuntimeUnit: function(arg0) {
		return this.arcaniaModel.runtime.findUnitWithString(arg0);
	}
	,checkCondition: function(value) {
		var resKey = value.valueKey2;
		var a = this.getRuntimeUnit(resKey).retentionData.amount;
		return ConditionChecker.checkWithValue(value,a);
	}
	,__class__: GRIArcaniaControl
};
var GRIArcaniaJson = function() { };
$hxClasses["GRIArcaniaJson"] = GRIArcaniaJson;
GRIArcaniaJson.__name__ = "GRIArcaniaJson";
var GRIArcaniaSubsetManager = function(arcaniaControl) {
	this.subsets = [];
	this.control = arcaniaControl;
};
$hxClasses["GRIArcaniaSubsetManager"] = GRIArcaniaSubsetManager;
GRIArcaniaSubsetManager.__name__ = "GRIArcaniaSubsetManager";
GRIArcaniaSubsetManager.prototype = {
	update: function() {
		var _g_current = 0;
		var _g_array = this.subsets;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var visible = value.visible;
			var _g2_current = 0;
			var _g2_array = value.unitsToViews;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index1 = _g3_key;
				var value1 = _g3_value;
				var res = value1.ru;
				if(visible) {
					this.control.feedResource(-1,res,value1.view);
				} else {
					value1.view.visible = false;
				}
			}
		}
	}
	,createSubset: function(layoutId) {
		var subset = new GRIArcaniaControlSubset();
		this.subsets.push(subset);
		subset.layoutId = layoutId;
		return subset;
	}
	,bind: function(subset,ru) {
		var view = this.control.arcaniaView.createResourceView(subset.layoutId,null);
		subset.bind(ru,view);
	}
	,__class__: GRIArcaniaSubsetManager
};
var GRIArcaniaControlSubset = function() {
	this.visible = true;
	this.unitsToViews = [];
};
$hxClasses["GRIArcaniaControlSubset"] = GRIArcaniaControlSubset;
GRIArcaniaControlSubset.__name__ = "GRIArcaniaControlSubset";
GRIArcaniaControlSubset.prototype = {
	bind: function(ru,element) {
		var grutv = new GRIArcaniaUnitToView();
		grutv.ru = ru;
		grutv.view = element;
		this.unitsToViews.push(grutv);
	}
	,__class__: GRIArcaniaControlSubset
};
var GRIArcaniaUnitToView = function() {
};
$hxClasses["GRIArcaniaUnitToView"] = GRIArcaniaUnitToView;
GRIArcaniaUnitToView.__name__ = "GRIArcaniaUnitToView";
GRIArcaniaUnitToView.prototype = {
	__class__: GRIArcaniaUnitToView
};
var arcania_logic_TagPointer = function(tag,pos) {
	this.tag = tag;
	this.pos = pos;
};
$hxClasses["arcania.logic.TagPointer"] = arcania_logic_TagPointer;
arcania_logic_TagPointer.__name__ = "arcania.logic.TagPointer";
arcania_logic_TagPointer.prototype = {
	__class__: arcania_logic_TagPointer
};
var GRIArcaniaTags = function() { };
$hxClasses["GRIArcaniaTags"] = GRIArcaniaTags;
GRIArcaniaTags.__name__ = "GRIArcaniaTags";
var GRIArcaniaView = function(view) {
	this.cursorGroupActions = new CursorGroup();
	this.cursorGroupRes = new CursorGroup();
	this.resourceViews = [];
	this.buttons = [];
	this.view = view;
	view.tabMisc.h[GRIView.tagTabVillage.__id__].initialCursorGroup = this.cursorGroupActions;
	var v = view.tabCursorGroup;
	this.cursorGroupRes.noElementActivateGroup.set(Direction.NORTH,v);
	var v = view.tabCursorGroup;
	this.cursorGroupActions.noElementActivateGroup.set(Direction.NORTH,v);
	view.ui.bindLeftRight(this.cursorGroupRes,this.cursorGroupActions);
	this.log = new GRIArcaniaViewLog(25,view);
	this.scrollAction = view.uiCreation.addScrollToLayout(GRIArcaniaView.LAYOUT_ACTION);
	this.scrollRes = view.uiCreation.addScrollToLayout(GRIArcaniaView.LAYOUT_RESOURCES);
	GRIViewUtilities.addDropShadowToScroll(view.uiCreation,GRIArcaniaView.LAYOUT_ACTION);
	GRIViewUtilities.addDropShadowToScroll(view.uiCreation,GRIArcaniaView.LAYOUT_RESOURCES);
};
$hxClasses["GRIArcaniaView"] = GRIArcaniaView;
GRIArcaniaView.__name__ = "GRIArcaniaView";
GRIArcaniaView.prototype = {
	createResourceViews: function(length) {
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var i = _g++;
			var res = this.createResourceView(GRIArcaniaView.LAYOUT_RESOURCES,GRIArcaniaView.TAG_TAB_ARCANIA);
			this.resourceViews.push(res);
			this.cursorGroupRes.elements.push(res);
		}
	}
	,createResourceView: function(layoutId,tag) {
		var res = this.view.addText("","Resource",GRIView.ARCHETYPE_SIMPLE_MEDIUM,layoutId,tag,true);
		res.transform.size.x -= 40;
		res.transform.size.y = 20;
		res.style.colorText = GRIView.COLOR_TEXT_NORMAL;
		res.style.fill = true;
		res.style.color = 0;
		return res;
	}
	,createButtons: function(length) {
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var i = _g++;
			var button = this.view.addButton("","ACTION",null,GRIArcaniaView.LAYOUT_ACTION,GRIArcaniaView.TAG_TAB_ARCANIA);
			this.buttons.push(button);
			button.data.stringData = GRIArcaniaView.DATA_ACTIONPRESS;
			button.data.intData = i;
			this.cursorGroupActions.elements.push(button);
		}
	}
	,feedResource: function(pos,resourceName,hover,value,maxValue,visible,color) {
		var resView = this.resourceViews[pos];
		this.feedResourceWithView(resView,resourceName,hover,value,maxValue,visible,color);
	}
	,feedResourceWithView: function(resView,resourceName,hover,value,maxValue,visible,color) {
		if(maxValue > 0) {
			resView.text = "" + resourceName + ":  " + value + " / " + maxValue;
		} else {
			resView.text = "" + resourceName + ":  " + value;
		}
		resView.style.colorText = color;
		if(hover != null) {
			this.view.ui.hover.setHoverGeneric(resView,resourceName,hover);
		}
		resView.visible = visible;
		UIElementManager.fitTextHeight(resView);
	}
	,feedAction: function(actionPos,actionName,actionEnabled,actionVisible,hover,selected,massClickable) {
		if(actionPos >= 0) {
			var button = this.buttons[actionPos];
			this.feedActionWithButton(button,actionName,actionEnabled,actionVisible,hover,selected,massClickable);
		}
	}
	,feedActionWithButton: function(button,actionName,actionEnabled,actionVisible,hover,selected,massClickable) {
		button.text = actionName;
		button.enabled = actionEnabled;
		button.visible = actionVisible;
		button.selected = selected;
		this.view.massClickable(button,massClickable);
		if(hover != null) {
			this.view.ui.hover.setHoverGeneric(button,actionName,hover);
		} else {
			this.view.ui.hover.setHoverGeneric(button,actionName,"");
		}
	}
	,drawProgressBar: function(index,percent) {
		var uiE = this.buttons[index];
		this.view.ui.drawBarOnTop(uiE,2,0,9,GRIView.COLOR_BLACK,GRIView.COLOR_ACTIVE_PINK,percent / 100);
	}
	,__class__: GRIArcaniaView
};
var GRIArcaniaViewLog = function(nLogs,view) {
	this.logWidgets = [];
	this.view = view;
	this.layout = view.ui.genUI.getLayout(GRIArcaniaViewLog.LAYOUT_LOG);
	var _g = 0;
	var _g1 = nLogs;
	while(_g < _g1) {
		var i = _g++;
		var lw = view.addText("","",GRIView.ARCHETYPE_SIMPLE_MEDIUM,GRIArcaniaViewLog.LAYOUT_LOG,null,true);
		lw.textPivot.x = 0;
		lw.textPivot.y = 0;
		this.logWidgets.push(lw);
	}
};
$hxClasses["GRIArcaniaViewLog"] = GRIArcaniaViewLog;
GRIArcaniaViewLog.__name__ = "GRIArcaniaViewLog";
GRIArcaniaViewLog.prototype = {
	addLog: function(name,description) {
		var element = this.layout.elements.pop();
		this.layout.elements.splice(0,0,element);
		var text = name;
		if(description != null) {
			text += "   -   " + description;
		}
		this.view.ui.elementText(element,text,true);
	}
	,__class__: GRIArcaniaViewLog
};
var GRIButtons = function() { };
$hxClasses["GRIButtons"] = GRIButtons;
GRIButtons.__name__ = "GRIButtons";
var GRIConfiguration = function(name) {
	this.heroMaxLevel = -1;
	this.heroViewAux = 0;
	this.autoAdvanceExist = true;
	this.eventToStoryTriggers = [];
	this.regionNameList = [];
	this.battleManagerConfiguration = new BattleManagerConfiguration();
	this.generalAllDimensionsSave = 0;
	this.villageDimensionSave = 0;
	this.dimensionId = null;
	this.dimensionSave = -1;
	this.name = name;
	SpriteLibrary.allSprites = autogen_GriPngs.allSprites;
};
$hxClasses["GRIConfiguration"] = GRIConfiguration;
GRIConfiguration.__name__ = "GRIConfiguration";
GRIConfiguration.prototype = {
	addArea: function(regionPos,areaTitle,background,areaDescription,areaMessage,areaMessageProceed,linkToSteam,linkToYuu) {
		if(linkToYuu == null) {
			linkToYuu = false;
		}
		if(linkToSteam == null) {
			linkToSteam = false;
		}
		var listOfAreas = this.regionNameList[regionPos].listOfAreas;
		var ari = new AreaRenderInfo();
		ari.areaName = areaTitle;
		ari.areaDescription = areaDescription;
		ari.backgroundSprite = background;
		ari.areaNoEnemyMessage = areaMessage;
		ari.areaNoEnemyMessageCanProceed = areaMessageProceed;
		ari.linkToSteam = linkToSteam;
		ari.linkToYuu = linkToYuu;
		listOfAreas.push(ari);
		var ad = new AreaData();
		this.battleManagerConfiguration.regions[regionPos].areaDatas.push(ad);
		return ad;
	}
	,addRegion: function(title,regionData,background,lore) {
		var regionRender = new RegionRenderInfo();
		regionRender.regionName = title;
		regionRender.regionDescription = lore;
		regionRender.backgroundSprite = background;
		this.regionNameList.push(regionRender);
		this.battleManagerConfiguration.regions.push(regionData);
		return this.battleManagerConfiguration.regions.length - 1;
	}
	,bindStoryToAreaEntrance: function(regPos,area,storyId) {
		var gameEventTrigger = new GameEventTrigger(EventTypes.AreaEnter);
		gameEventTrigger.necessaryData = regPos;
		gameEventTrigger.necessaryData2 = area;
		this.eventToStoryTriggers.push({ storyId : storyId, eventTrigger : gameEventTrigger});
	}
	,__class__: GRIConfiguration
};
var GRIConfigurer = function(screenWidth,screenHeight) {
	this.resolutionScaling = new ResolutionScaling(GRIConfiguration.MINIMUM_WIDTH,GRIConfiguration.MINIMUM_HEIGHT,true);
	this.desiredMode = -1;
	this.enemies = new EnemySheets();
	this.selectedGRIConfiguration = -1;
	this.dimensions = [];
	this.resolutionScaling.feed(screenWidth,screenHeight);
	this.griControl = new GRIControl(this.resolutionScaling);
	this.dimensions.push(this.setupCrystalRoad());
	this.dimensions.push(GRIConfigurer.setupLagrimaRegions());
	this.griControl.setupTitle(this.dimensions,false);
};
$hxClasses["GRIConfigurer"] = GRIConfigurer;
GRIConfigurer.__name__ = "GRIConfigurer";
GRIConfigurer.setupLagrimaRegions = function() {
	var config = new GRIConfiguration(Local.getString("Play as Lu"));
	config.description_sprite = new Sprite("main_story",512);
	config.description_text = Local.getString("An young girl who adventures across the Lagrima Continent. Has a mysterious connection to Isabel. \n\nA focus on gameplay.");
	config.description_title = "Lu";
	config.mainCharacterName = "Lu";
	config.dimensionId = GRIConfigurer.DIMENSION_ID_LAGRIMA;
	config.storyDataResource = [autogen_GriTxts.story];
	config.dimensionSave = -1;
	config.generalAllDimensionsSave = 1;
	config.addRegion("Lagrima Continent",RegionData.regionWithPrize(RegionType.PROCEDURAL,{ statBonus : null, xpPrize : true}),autogen_GriPngs.back_inside,"A land prime for adventure, full of powerful creatures");
	config.battleManagerConfiguration.equipDropChance = 8;
	config.battleManagerConfiguration.equipDropChance_Rare = 10;
	var enemySheets = [];
	var regionPrizes = [];
	var regionRequirements = [5,9,14,18,26,34,55,75,84,63,23,46,96,16];
	var enemyRegionNames = ["Wolf Fields","Tonberry's Lair","Altar Cave","Bikanel Island","Tartarus","Witchhunter Base","Highsalem","Witchhunter Guild","Mystic Forest","Temple of the Arts","Fire Cavern","Gollund","Thunder Plains","Sochen Cave"];
	var challengeBackgrounds = [[autogen_GriPngs.back_fields],[autogen_GriPngs.back_mountains],[autogen_GriPngs.back_seaside],[autogen_GriPngs.back_desert],[autogen_GriPngs.back_inside],[autogen_GriPngs.back_inside],[autogen_GriPngs.back_streets],[autogen_GriPngs.back_inside],[autogen_GriPngs.back_forest],[autogen_GriPngs.back_inside],[autogen_GriPngs.back_firecavevolcano],[autogen_GriPngs.back_snowmountain],[autogen_GriPngs.back_thunder],[autogen_GriPngs.back_cave]];
	var enemyRegionLores = ["Howling can be heard all over these grassy fields","It is said the Tonberries have left from their old home in Centra","It is said there was a crystal in these caves, but it can no longer be found","A shocking truth was once revealed in this desert","Said to be the place in hell where the Gods lock their enemies","A branch of the Witchhunter Guild. They'll do anything to kill magic users","A powerful sorcerer group has set home in this abandoned village","One of the main buildings owned by the Witchhunter Guild","A soothing forest filled with beautiful butterflies","A Temple located in the old Kingdom of Fabul","It is said that powerful mercenaries train here","A small cave in a city of miners, surrounded by snow","There was a legend of a warrior that dodged 200 lightning bolts","Once home of the mandragoras, now only pumpkins remain"];
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.55;
	_g.h["Speed"] = 3.3;
	_g.h["LifeMax"] = 1.6;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}});
	var _g = new haxe_ds_StringMap();
	_g.h["Speed"] = 1;
	_g.h["LifeMax"] = 3;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 4;
	_g.h["Speed"] = 0.09;
	_g.h["LifeMax"] = 4;
	var _g1 = new haxe_ds_StringMap();
	_g1.h[BattleConstants.PIERCING] = 90;
	_g1.h["ice-damage"] = 40;
	_g1.h["fire-damage"] = 140;
	_g1.h["thunder-damage"] = 90;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Speed"] = 0.05;
	_g2.h["Defense"] = 0.3;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["LifeMax"] = 2;
	_g.h["Bloodthirst"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.4;
	_g.h["Speed"] = 0.15;
	_g.h["LifeMax"] = 5;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 5;
	_g1.h[BattleConstants.PIERCING] = 90;
	_g1.h[BattleConstants.SAFEGUARD] = 50;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 1;
	_g2.h["Speed"] = 0.05;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Defense"] = 1;
	_g.h["LifeMax"] = 3;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.4;
	_g.h["Speed"] = 1.1;
	_g.h["LifeMax"] = 1.7;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Piercing"] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.2;
	_g2.h["Speed"] = 0.1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["Speed"] = 1;
	_g.h["LifeMax"] = 3;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 12;
	_g.h["Speed"] = 3.5;
	_g.h["LifeMax"] = 0.4;
	var _g1 = new haxe_ds_StringMap();
	_g1.h[BattleConstants.PIERCING] = 120;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0;
	_g2.h["Speed"] = 1.5;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["Speed"] = 1;
	_g.h[BattleConstants.DEATHBLOOD] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.5;
	_g.h["Speed"] = 2.9;
	_g.h["LifeMax"] = 2;
	_g.h["Defense"] = 0.3;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Antibuff"] = 1;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.2;
	_g2.h["Speed"] = 0.1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Speed"] = 1;
	_g.h["LifeMax"] = 2;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["Speed"] = 0.8;
	_g.h["LifeMax"] = 2;
	_g.h["Defense"] = 0.4;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Attack"] = 800;
	_g1.h["Defense"] = 800;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.2;
	_g2.h["Speed"] = 0.1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : null, initialBuff : { uniqueId : "Power Up", mulStats : _g1, duration : 3, addStats : null, strength : 100}, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["LifeMax"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.8;
	_g.h["Speed"] = 1.4;
	_g.h["LifeMax"] = 2;
	_g.h["Defense"] = 0.5;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["DebuffProtection"] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.2;
	_g2.h["Speed"] = 0.1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["Defense"] = 1;
	_g.h["LifeMax"] = 3;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 8;
	_g.h["Speed"] = 0.2;
	_g.h["LifeMax"] = 0.03;
	_g.h["MagicAttack"] = 8;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 8;
	_g1.h["Safeguard"] = 75;
	_g1.h[BattleConstants.MAGICAL] = 100;
	_g1.h["LifeMax"] = 1;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 4;
	_g2.h["Speed"] = 0.05;
	_g2.h["MagicDefense"] = 8;
	_g2.h["MagicAttack"] = 8;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["MagicAttack"] = 1;
	_g.h["Defense"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 2;
	_g.h["Speed"] = 1.3;
	_g.h["LifeMax"] = 1.1;
	_g.h["Defense"] = 0.7;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Counterattack"] = 4;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.3;
	_g2.h["Speed"] = 0.2;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1;
	_g.h["LifeMax"] = 1;
	_g.h["Defense"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["MagicAttack"] = 4;
	_g.h["Speed"] = 0.01;
	_g.h["LifeMax"] = 1.1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 100000;
	_g1.h["Safeguard"] = 300;
	_g1.h["fire-damage"] = 10;
	_g1.h["thunder-damage"] = 250;
	_g1.h[BattleConstants.MAGICAL] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["MagicDefense"] = 0.1;
	_g2.h["Speed"] = 0.2;
	_g2.h["MagicAttack"] = 1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h[BattleConstants.MAGICATTACK] = 1;
	_g.h["Defense"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["MagicAttack"] = 5;
	_g.h["Speed"] = 0.01;
	_g.h["LifeMax"] = 1.1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 100000;
	_g1.h["Safeguard"] = 300;
	_g1.h["ice-damage"] = 10;
	_g1.h["fire-damage"] = 250;
	_g1.h[BattleConstants.MAGICAL] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["MagicDefense"] = 0.1;
	_g2.h["Speed"] = 0.2;
	_g2.h["MagicAttack"] = 1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h[BattleConstants.MAGICATTACK] = 1;
	_g.h["Defense"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["MagicAttack"] = 0.5;
	_g.h["Speed"] = 3.2;
	_g.h["LifeMax"] = 0.9;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 100000;
	_g1.h["Safeguard"] = 300;
	_g1.h["thunder-damage"] = 10;
	_g1.h["ice-damage"] = 250;
	_g1.h[BattleConstants.MAGICAL] = 100;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["MagicDefense"] = 0.1;
	_g2.h["Speed"] = 0.2;
	_g2.h["MagicAttack"] = 1;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h[BattleConstants.MAGICATTACK] = 1;
	_g.h["Defense"] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 3;
	_g.h["Speed"] = 0.05;
	_g.h["LifeMax"] = 1.5;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 5;
	_g1.h[BattleConstants.PIERCING] = 50;
	_g1.h[BattleConstants.SAFEGUARD] = 40;
	_g1.h["ice-damage"] = 5;
	_g1.h["thunder-damage"] = 5;
	_g1.h["fire-damage"] = 310;
	_g1.h["Counterattack"] = 4;
	var _g2 = new haxe_ds_StringMap();
	_g2.h["Defense"] = 0.6;
	_g2.h["Speed"] = 0.03;
	enemySheets.push({ speciesMultiplier : { attributesBase : _g}, speciesAdd : _g1, speciesLevelStats : { attributesBase : _g2}});
	var _g = new haxe_ds_StringMap();
	_g.h["Defense"] = 1;
	_g.h["LifeMax"] = 1;
	_g.h[BattleConstants.DEATHBLOOD] = 1;
	regionPrizes.push({ xpPrize : false, statBonus : _g});
	var _g = 0;
	while(_g < enemySheets.length) {
		var unknown = enemySheets[_g];
		++_g;
		unknown.viewAux = 3;
	}
	var _g56_current = 0;
	var _g56_array = regionPrizes;
	while(_g56_current < _g56_array.length) {
		var _g57_value = _g56_array[_g56_current];
		var _g57_key = _g56_current++;
		var index = _g57_key;
		var value = _g57_value;
		config.addRegion(enemyRegionNames[index],RegionData.challengeRegion(0,regionRequirements[index],enemySheets[index],regionPrizes[index]),challengeBackgrounds[index][0],enemyRegionLores[index]);
	}
	return config;
};
GRIConfigurer.prototype = {
	update: function() {
		if(this.desiredMode >= 0) {
			this.changeGRIConfiguration(this.desiredMode);
			this.desiredMode = -1;
			this.griControl.view.loading = false;
		}
		if(this.griControl.titleControl.desiredMode != this.selectedGRIConfiguration && this.griControl.titleControl.desiredMode >= 0) {
			this.desiredMode = this.griControl.titleControl.desiredMode;
			this.griControl.view.loading = true;
		}
	}
	,changeGRIConfiguration: function(dimension) {
		if(this.selectedGRIConfiguration != dimension) {
			var previousDimension = this.selectedGRIConfiguration;
			if(previousDimension >= 0) {
				this.griControl.saveData();
			}
			this.griControl = new GRIControl(this.resolutionScaling,this.dimensions[dimension]);
			var tmp = dimension == 1;
			this.griControl.setupTitle(this.dimensions,true);
			this.griControl.setupView();
			haxe_Log.trace("setup view",{ fileName : "Sources\\GRI/GRIConfigurer.hx", lineNumber : 137, className : "GRIConfigurer", methodName : "changeGRIConfiguration"});
		}
		this.selectedGRIConfiguration = dimension;
	}
	,setupCrystalRoad: function() {
		var config = new GRIConfiguration(Local.getString("Play as Isabel"));
		config.heroViewAux = 4;
		config.mainCharacterName = "Isabel";
		config.autoAdvanceExist = false;
		config.storyDataResource = [autogen_GriTxts.story_main_,autogen_GriTxts.story_maina_last_demo_];
		config.dimensionSave = 0;
		config.generalAllDimensionsSave = 0;
		config.heroMaxLevel = 20;
		config.battleManagerConfiguration.equipDropChance = 35;
		config.battleManagerConfiguration.equipDropChance_Rare = 15;
		config.battleManagerConfiguration.itemLevelLimit = false;
		config.description_text = Local.getString("A woman who seeks out revenge and will do whatever it takes to get it done\n\nA focus on story");
		config.description_title = "Isabel";
		config.description_sprite = new Sprite("isabel_story",512);
		config.dimensionId = GRIConfigurer.DIMENSION_ID_AMAZONIA;
		var regionData = RegionData.regionWithPrize(RegionType.SEMIPROCEDURAL,{ statBonus : null, xpPrize : true});
		var regPos = config.addRegion("5 Days Ago",regionData,null,"Five days before the events of the first chapter");
		config.addArea(regPos,"Graciosa Hills",autogen_GriPngs.back_fields,"A hidden, small hill. Can be great to relax");
		config.addArea(regPos,"San Agosto Street I",autogen_GriPngs.back_streets,"Agosto was a theologist and philosopher, known as the Saint of Ancient Faith").setEnemyInfo(EnemyAreaInformation.create(this.enemies.rat,0,4,4,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"San Agosto Street II",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.dog,0,3,1,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Marino's House",autogen_GriPngs.back_inside,"House of the King's advisor, Marino Bonifacio");
		config.addArea(regPos,"San Agosto Hills I",autogen_GriPngs.back_fields).setEnemyInfo(EnemyAreaInformation.create(this.enemies.rat,0,5,4,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"San Agosto Hills II",autogen_GriPngs.back_fields).setEnemyInfo(EnemyAreaInformation.create(this.enemies.goblin,0,4,0,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"San Agosto Hills III",autogen_GriPngs.back_fields).setEnemyInfo(EnemyAreaInformation.create(this.enemies.rat,3,1,4,BattleManager.BOSS_ENEMY_VIEW));
		config.addArea(regPos,"Church of Saint Isabel",autogen_GriPngs.back_inside,"Also known as the Holy Queen, Saint Isabel used to rule the Lusitanian Empire");
		config.addArea(regPos,"Behind the Church",autogen_GriPngs.back_streets,"People who talk and do their dealings here are said to be hiding from the eyes of God");
		config.bindStoryToAreaEntrance(regPos,3,"2_golden_statue");
		config.bindStoryToAreaEntrance(regPos,8,"3_the_deal");
		var regionData = RegionData.regionWithPrize(RegionType.SEMIPROCEDURAL,{ statBonus : null, xpPrize : true});
		regionData.conditionArea = 10;
		regionData.conditionRegion = 0;
		var regPos = config.addRegion("Chapter I",regionData,null,"When the hero saves the princess");
		config.addArea(regPos,"Isabel's Bed",autogen_GriPngs.back_inside);
		config.addArea(regPos,"Marino's House",autogen_GriPngs.back_inside);
		config.addArea(regPos,"Royal Road I",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.cat,0,4,5,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Royal Road II",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.dog,0,3,1,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Palacio do Veran",autogen_GriPngs.back_inside);
		config.addArea(regPos,"Royal Road III",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.dog,0,5,1,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Royal Road IV",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.cat,0,4,5,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Royal Road V",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.cat,4,1,5,BattleManager.BOSS_ENEMY_VIEW));
		config.addArea(regPos,"The East Gate",autogen_GriPngs.back_streets);
		config.addArea(regPos,"East Road",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.dog,0,5,1,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"East Forest I",autogen_GriPngs.back_forest).setEnemyInfo(EnemyAreaInformation.create(this.enemies.goblin,0,3,0,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"East Forest II",autogen_GriPngs.back_forest).setEnemyInfo(EnemyAreaInformation.create(this.enemies.toad,0,4,6,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"East Forest III",autogen_GriPngs.back_forest).setEnemyInfo(EnemyAreaInformation.create(this.enemies.goblin,7,1,0,BattleManager.BOSS_ENEMY_VIEW));
		config.addArea(regPos,"Farm",autogen_GriPngs.back_forest);
		this.addLockedLuArea(config,regPos,"Farm bed",5,autogen_GriPngs.back_inside);
		config.addArea(regPos,"East Forest IV",autogen_GriPngs.back_forest).setEnemyInfo(EnemyAreaInformation.create(this.enemies.toad,0,3,6,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Small Road",autogen_GriPngs.back_forest);
		config.addArea(regPos,"Gate of Fort San Marcelo",autogen_GriPngs.back_streets).setEnemyInfo(EnemyAreaInformation.create(this.enemies.troll,10,1,8,BattleManager.BOSS_ENEMY_VIEW));
		config.addArea(regPos,"Fort San Marcelo I",autogen_GriPngs.back_inside).setEnemyInfo(EnemyAreaInformation.create(this.enemies.giant,0,4,2,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Fort San Marcelo II",autogen_GriPngs.back_inside).setEnemyInfo(EnemyAreaInformation.create(this.enemies.nutkin,0,5,7,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Fort San Marcelo III",autogen_GriPngs.back_inside).setEnemyInfo(EnemyAreaInformation.create(this.enemies.goblin,0,3,0,BattleManager.NORMAL_ENEMY_VIEW));
		config.addArea(regPos,"Great Hall of Marcelo",autogen_GriPngs.back_inside).setEnemyInfo(EnemyAreaInformation.create(this.enemies.giant,25,1,2,BattleManager.BOSS_ENEMY_VIEW));
		config.addArea(regPos,"The Safe Room",autogen_GriPngs.back_inside,"A protected small flower garden inside Fort San Marcelo. Birds leisure, safe from the evils the magic barrier keeps outside.","Chapter 1 is over.\nThe next chapter is available in the full version.\n\nYou can also play as Lu.",null,true,true);
		config.bindStoryToAreaEntrance(regPos,1,"4_breakfast");
		config.bindStoryToAreaEntrance(regPos,4,"5_the_court");
		config.bindStoryToAreaEntrance(regPos,8,"6_victor");
		config.bindStoryToAreaEntrance(regPos,11,"7_first_time");
		config.bindStoryToAreaEntrance(regPos,13,"8_royal_guard");
		config.bindStoryToAreaEntrance(regPos,14,"8a_lu_lock");
		config.bindStoryToAreaEntrance(regPos,16,"9_troll");
		config.bindStoryToAreaEntrance(regPos,17,"10_strength");
		config.bindStoryToAreaEntrance(regPos,22,"11_arrest");
		return config;
	}
	,addLockedLuArea: function(config,regPos,areaName,levelRequirement,background) {
		var area = config.addArea(regPos,"Farm bed",background,"",Local.getIntString("reach level {0} as Lu to proceed",levelRequirement),Local.getIntString("Lu has reached level {0}. You can now proceed.",levelRequirement),true,true);
		area.externalClearConditions.push(new Condition(ConditionType.largerOrEqual,arcania_logic_ArcaniaModel.REUSABLE_CONDITION_TYPE,"playerlevelLAGRIMA",levelRequirement));
	}
	,__class__: GRIConfigurer
};
var AreaRenderInfo = function() {
};
$hxClasses["AreaRenderInfo"] = AreaRenderInfo;
AreaRenderInfo.__name__ = "AreaRenderInfo";
AreaRenderInfo.prototype = {
	__class__: AreaRenderInfo
};
var RegionRenderInfo = function() {
	this.listOfAreas = [];
	this.backgroundSprite = null;
};
$hxClasses["RegionRenderInfo"] = RegionRenderInfo;
RegionRenderInfo.__name__ = "RegionRenderInfo";
RegionRenderInfo.prototype = {
	__class__: RegionRenderInfo
};
var RegionsRenderInfo = function() {
	this.listOfRegions = [];
};
$hxClasses["RegionsRenderInfo"] = RegionsRenderInfo;
RegionsRenderInfo.__name__ = "RegionsRenderInfo";
RegionsRenderInfo.prototype = {
	__class__: RegionsRenderInfo
};
var autogen_GriPngs = function() { };
$hxClasses["autogen.GriPngs"] = autogen_GriPngs;
autogen_GriPngs.__name__ = "autogen.GriPngs";
var GRIControl = function(resolution,configuration) {
	this.regionViewData = new RegionsRenderInfo();
	this.buttonBindings = DefaultButtons.createDefaultButtonBindings();
	this.lagrimaAreaPrefix = [null,null,null,null,null,"Fire","Ice","Thunder"];
	this.debuffIconDefault = Sprite.create("arrowdown",15,22);
	this.buffIconDefault = Sprite.create("arrowup",15,22);
	this.bossMessage = GRIView.TEXT_MESSAGEBOSS;
	var _g = new haxe_ds_StringMap();
	var value = Sprite.create("leaf",21,21);
	_g.h["regen"] = value;
	var value = Sprite.create("shield",15,15);
	_g.h["protect"] = value;
	var value = Sprite.create("boot",21,15);
	_g.h["haste"] = value;
	this.buffToIcon = _g;
	this.lagrimaAreaLore = ["The surrounding trees make you feel at peace, until the Goblins come to fight","Abandoned houses, abandoned pathways","'It's not the mountain we conquer, but ourselves.'","You could go fishing, but the sea life here is a bit scary","Anything could jump at you","The air feels hot. Is it really inactive?","'It was so cold I almost got married'","You pray to the gray skies so you don't get hit by lightining"];
	this.retentionLogic = new RetentionLogic();
	this.warningActive = true;
	this.saveCount = 10000;
	this.saveEnabled = true;
	this.sendErrorRequest = false;
	this.showFeedback = false;
	this.gameStartedAfterTitle = false;
	this.eventToWarning = new haxe_ds_StringMap();
	this.eventToAction = new haxe_ds_StringMap();
	this.eventTransformers = [];
	this.persistent_generalAllDimensions = null;
	this.turnOrderView = new TurnOrderView();
	this.scriptExecuter = new hscript_Interp();
	this.frameSystem = new reusablemodel_FrameCountSystem();
	this.battleManager = new BattleManager();
	this.griSounds = new GRISoundControl(this);
	this.resolution = resolution;
	var hasConfig = true;
	this.updateRendererSize();
	if(configuration == null) {
		configuration = new GRIConfiguration("NO CONFIG");
		configuration.dimensionSave = -1;
		hasConfig = false;
	}
	this.battleControl = new gribattle_BattleControl(this);
	this.config = configuration;
	var bm = this.battleManager;
	this.battlePrize = new gribattle_BattlePrizeControl(this);
	bm.config = this.config.battleManagerConfiguration;
	if(hasConfig) {
		bm.achievementModel.dimensionId = configuration.dimensionId;
	}
	this.eventTransformers.push(new EventTransformer(StoryControlLogic.sceneStartedEventNatural("3_the_deal"),this.battleManager.createAreaGoEvent(1,0)));
	this.eventTransformers.push(new EventTransformer(StoryControlLogic.sceneStartedEventNatural("3_the_deal"),Data.create(1,BattleConstants.DATAEVENT_REGIONUNLOCK)));
	this.genericWarning = { title : "Warning", description : "Warning Description", buttonYes : "Close", buttonFalse : null};
	this.turnOrderView.layoutId = "turnorder";
	var proto = new PrototypeItemMaker();
	proto.MakeItems();
	bm.itemBases = proto.items;
	bm.modBases = proto.mods;
	this.protoItemMaker = proto;
	this.skillControl = new gribattle_BattleSkillControl(this);
	this.skillControl.loadSkills();
	bm.ForceSkillSetDrop(-1,null,{ skills : [{ id : "Slash", level : 1},{ id : "Cure", level : 1},{ id : "Protect", level : 3}], active : true},false);
	var _g = 0;
	var _g1 = bm.wdata.hero.equipmentSets.length;
	while(_g < _g1) {
		var i = _g++;
		bm.wdata.hero.equipmentSets[i].equipmentSlots[2] = 0;
	}
	var jsonData = CrossTarget.GetLocalStorageItem(GRIControl.key);
	this.persistenceMaster = SaveAssistant.GetPersistenceMaster(jsonData);
	this.previousPersistenceMaster = this.persistenceMaster;
	if(hasConfig) {
		if(this.config.dimensionSave < 0) {
			if(this.persistenceMaster.jsonGameplay != null) {
				var success = bm.SendJsonPersistentData(this.persistenceMaster.jsonGameplay);
				var tmp = success == false;
			}
		} else {
			if(this.persistenceMaster.jsonGameplayDimensions == null) {
				this.persistenceMaster.jsonGameplayDimensions = [];
			}
			if(this.persistenceMaster.jsonGameplayDimensions.length > this.config.dimensionSave) {
				var jsonD = this.persistenceMaster.jsonGameplayDimensions[this.config.dimensionSave];
				if(jsonD != null) {
					bm.SendJsonPersistentData(jsonD);
				}
			}
		}
		bm.loadGeneralJson(this.persistenceMaster.jsonGeneral,this.persistenceMaster.worldVersion);
	} else {
		bm.loadGeneralJson(this.persistenceMaster.jsonGeneral,this.persistenceMaster.worldVersion);
	}
	if(this.persistenceMaster.jsonGeneralAllDimensions != null) {
		this.persistent_generalAllDimensions = JsonMainTypes.jsonReaderGeneralDimensions.fromJson(this.persistenceMaster.jsonGeneralAllDimensions);
	} else {
		this.persistent_generalAllDimensions = { allDimensions : [{ lockSystem : new haxe_ds_StringMap()},{ lockSystem : new haxe_ds_StringMap()}]};
	}
	JsonMainTypes.jsonWriterGeneralDimensions.write(this.persistent_generalAllDimensions);
	CrossTarget.SetLocalStorageItem(GRIControl.key,jsonData);
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.FEEDBACK_BUTTON,102));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_1,49));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_2,50));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_3,51));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_4,52));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_5,53));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_6,54));
	this.buttonBindings.bindings.push(new ButtonBinding(GRIButtons.SKILL_BUTTON_7,55));
};
$hxClasses["GRIControl"] = GRIControl;
GRIControl.__name__ = "GRIControl";
GRIControl.prototype = {
	setupTitle: function(dimensions,hasConfig) {
		this.griSounds.setup();
		this.view = new GRIView();
		var bm = this.battleManager;
		this.equipControl = new GRIControlEquip(bm,this);
		this.regionControl = new GRIControlRegion(this,bm);
		this.villageControl = new GRIControlVillage(this);
		this.titleControl = new GRIControlTitle(bm);
		this.storyControl = StoryControlLogic.createStoryControl(this.view);
		var storyPersistence = { progressionData : new haxe_ds_StringMap(), worldVersion : bm.wdata.worldVersion, currentStoryId : null};
		var jsonData2 = this.persistenceMaster.jsonStory;
		if(jsonData2 != null && jsonData2 != "") {
			storyPersistence = StoryControlLogic.ReadJsonPersistentData(jsonData2);
		}
		var storyRuntime = [];
		var _g = new haxe_ds_StringMap();
		var value = new Sprite("mom_story",512);
		_g.h["mom"] = value;
		var value = new Sprite("main_story",512);
		_g.h["lu"] = value;
		var value = new Sprite("cid_story",512);
		_g.h["cid"] = value;
		var value = new Sprite("cid_story",512);
		_g.h["man"] = value;
		var value = new Sprite("isabel_story",512);
		_g.h["isabel"] = value;
		var value = new Sprite("vitor_story",512);
		_g.h["victor"] = value;
		var value = new Sprite("pedroiv_story",512);
		_g.h["dom pedro iv"] = value;
		var value = new Sprite("iracema_story",512);
		_g.h["iracema"] = value;
		var value = new Sprite("iracema_story",512);
		_g.h["princess"] = value;
		var value = new Sprite("marino_story",512);
		_g.h["marino"] = value;
		var storyRuntime1 = { currentStoryProgression : null, currentCutsceneIndex : -1, cutscene : null, cutsceneExtra : storyRuntime, cutsceneStartable : null, cutscenes : null, visibilityConditionScripts : [], messageRuntimeInfo : [], persistence : storyPersistence, speakerToImage : _g};
		this.storyControl.runtime = storyRuntime1;
		var storyFile = [autogen_GriTxts.story];
		if(hasConfig) {
			storyFile = this.config.storyDataResource;
			this.view.mainCharacterName = this.config.mainCharacterName;
		}
		var storyJsons = [];
		var _g = 0;
		while(_g < storyFile.length) {
			var s = storyFile[_g];
			++_g;
			storyJsons.push(s);
		}
		StoryControlLogic.Init(storyJsons,this.storyControl.runtime);
		if(hasConfig) {
			var _g2_current = 0;
			var _g2_array = this.config.eventToStoryTriggers;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index = _g3_key;
				var value = _g3_value;
				var storyId = value.storyId;
				var _g4_current = 0;
				var _g4_array = this.storyControl.runtime.cutscenes;
				while(_g4_current < _g4_array.length) {
					var _g5_value = _g4_array[_g4_current];
					var _g5_key = _g4_current++;
					var cutscenePos = _g5_key;
					var cutscene = _g5_value;
					if(storyId == cutscene.id) {
						this.storyControl.runtime.cutsceneExtra[cutscenePos] = new CutsceneExtraData(false);
						break;
					}
				}
			}
			bm.wdata.hero.viewAux = this.config.heroViewAux;
			if(this.config.heroMaxLevel >= 0) {
				bm.heroMaxLevel = this.config.heroMaxLevel;
			}
		}
		this.scriptExecuter.variables.h["global"] = bm.global.data;
		this.areaControl = new triple_$choice_$gri_GRIAreaControl(this,new ArcaniaActionsForTC(this));
		BitmapText.loadFontFnt("main","lato13",CrossTarget.getTextResource("lato13_fnt"));
		BitmapText.loadFontFnt("main14","lato15",CrossTarget.getTextResource("lato15_fnt"));
		BitmapText.loadFontFnt("main16","lato17",CrossTarget.getTextResource("lato17_fnt"));
		this.villageControl.loadVillage(this.persistenceMaster,this.config.villageDimensionSave);
		var genui = new GenUIIntegration();
		var res = CrossTarget.getTextResource("uigen_txt");
		CrossTarget.crossPrint(res);
		genui.readUIMaster(res);
		GRILayoutManual.createLayouts(genui);
		this.view.ui.genUI = genui;
		genui.ui = this.view.ui;
		var tabBG = new UIElement();
		tabBG.style.fill = true;
		tabBG.style.color = GRIView.COLOR_BACKGROUND;
		var self = tabBG.transform.size;
		self.x = 20;
		self.y = 40;
		tabBG.hoverable = false;
		var offset = this.view.uiCreation.offsetElementAdvanced(tabBG,this.view.ui.screen,0,0,0,0,0,0);
		this.view.ui.addElement(tabBG,GRIView.LAYER_BACKGROUND + 1);
		offset.sizeExtension(true,false);
		this.view.setupTitleTabButtons();
		this.titleControl.setupView(this,dimensions);
		this.view.showTab(GRIView.idTabTitle);
		var key = GRIControl.PRIVACY_ACCEPTANCE_KEY;
		var privacyAcceptance = CrossTarget.GetLocalStorageItem(key,false);
		if(privacyAcceptance == null) {
			this.titleControl.changeMode(TitleMode.ACCEPT);
		} else {
			this.titleControl.changeMode(TitleMode.NORMAL);
		}
		this.view.uiCreation.tags.length = 0;
		this.view.setupDialog();
		this.view.setupMisc();
		this.unlockControl = new GRIUnlockControl(this);
		this.unlockControl.lockSystemUI.animationManager = this.view.ui.spriteSheetAnimations;
		this.unlockControl.lockSystemUI.lockSystem.persistence = this.persistent_generalAllDimensions.allDimensions[this.config.generalAllDimensionsSave].lockSystem;
		this.unlockControl.setupView();
	}
	,setupView: function() {
		this.gameStartedAfterTitle = true;
		this.view.uiCreation.tags.length = 0;
		this.battlePrize.initView();
		this.battleControl.setupView();
		ActorViewLogic.setupEmoticons();
		this.skillControl.setupView();
		this.view.setupTabButtons();
		this.view.tabMisc.h[GRIView.tagTabBattle.__id__].initialCursorGroup = this.view.mainCursorGroup;
		this.unlockControl.setupTabLockUnits();
		this.equipControl.setupView();
		this.regionControl.setupView();
		StoryControlLogic.setupView(this.storyControl);
		this.characterTabControl = new GRIControlCharacterTab(this);
		this.characterTabControl.setupUI();
		this.villageControl.setupUI();
		this.view.uiCreation.singleTag(GRIView.tagTabBattle);
		this.view.setupAreaMessage();
		this.view.setupMiscBattle();
		var levelButton = this.view.addButton("levelup","Lv+",GRIView.ARCHETYPE_BUTTON_SMALL,gribattle_BattleMainView.LOWERBUTTON_LAYOUT,null,this.view.lowerCursorGroup);
		this.view.ui.hover.setHoverGeneric(levelButton,Local.getString("Level Up"),Local.getString("Become stronger."));
		this.view.mainCursorGroup.avoidFirstElement.push(levelButton);
		this.view.highlightedButtons.push(levelButton);
		this.battleControl.setupBattleButtons();
		this.view.showTab(GRIView.idTabBattle);
		this.areaControl.setupView();
	}
	,getUserId: function() {
		return this.battleManager.wdata.userId;
	}
	,reviewComplete: function() {
		this.battleManager.wdata.timesReviewed++;
	}
	,getTimesReviewed: function() {
		return this.battleManager.wdata.timesReviewed;
	}
	,executeAction: function(actionId) {
		var bm = this.battleManager;
		if(actionId != null) {
			var action = bm.playerActions.h[actionId];
			var actionData = bm.wdata.playerActions.h[actionId];
			if(actionData.enabled) {
				action.actualAction(actionData);
			}
		}
	}
	,update: function(miliseconds) {
		var _gthis = this;
		Profiler.start("gricontrol");
		if(BattleConstants.EQUIPMENT_TAB_ID != GRIView.idTabEquip) {
			CrossTarget.alert("ERROR: tab id for equip is not matching");
		}
		this.battleManager.events.length = 0;
		this.griSounds.update(miliseconds);
		this.unlockControl.update(miliseconds);
		if(this.battleManager.generalSaveData.automaticZoom) {
			this.resolution.limitMaxScale = 9999;
		} else {
			this.resolution.limitMaxScale = 1;
		}
		this.frameSystem.update();
		this.view.ui.notificationControl = this.battleManager.notificationControl;
		Mouse.mouse.scaledScreen(1 / Renderer.scaleInt);
		Mouse.mouse.calculateMouseMoved();
		if(this.battleManager.generalSaveData != null) {
			Mouse.mouse.deltaWheelY *= this.battleManager.generalSaveData.mouseWheelSensibility;
		}
		KeyboardToButtonsLogic.process(this.buttonBindings);
		this.titleControl.update();
		Profiler.start("view_update");
		this.view.update(miliseconds,Mouse.mouse);
		Profiler.end("view_update");
		var _g_current = 0;
		var _g_array = this.view.ui.soundsToPlay;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.griSounds.soundPlayer.playSfx(value);
		}
		this.view.ui.soundsToPlay.length = 0;
		this.view.ui.dataEventHolder.processTransformers(this.eventTransformers);
		var hasError = ErrorX.hasError();
		this.view.errorButton.visible = hasError && (this.view.currentTab != GRIView.tagTabMemory || this.storyControl.state != StoryControlState.STORY);
		if(this.view.errorSendButton != null) {
			this.view.errorSendButton.visible = hasError && (this.view.currentTab != GRIView.tagTabMemory || this.storyControl.state != StoryControlState.STORY);
		}
		if(this.showError) {
			this.view.errorButton.text = "Hide Error";
		} else {
			this.view.errorButton.text = "Error Happened\n(click to Show)";
		}
		if(this.view.feedbackButton != null) {
			this.view.feedbackButton.visible = this.view.currentTab != GRIView.tagTabMemory || this.storyControl.state != StoryControlState.STORY;
		}
		if(this.battleManager != null) {
			this.retentionLogic.checkAndSendRetentionEvents(this.battleManager.wdata.retention);
		}
		this.updateRendererSize();
		this.showFeedback = false;
		var _g_current = 0;
		var _g_array = this.view.ui.dataEvents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.soundData != -99999) {
				this.griSounds.soundPlayer.playSfx(value.soundData);
			}
			if(value.stringData == GRIView.DATA_HERO_ICON) {
				if(this.battleManager.wdata.sleeping) {
					this.battleManager.sleepToggle();
				}
			}
			if(value.stringData == "advance") {
				if(this.battleManager.wdata.battleArea < this.battleManager.wdata.maxArea) {
					this.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_change_area);
					this.battleManager.AdvanceArea();
				}
				continue;
			}
			if(value.stringData == "autoadvance") {
				var auto = !this.battleManager.wdata.autoAdvance;
				this.battleManager.wdata.autoAdvance = auto;
				if(this.battleManager.wdata.autoAdvance == true && this.battleManager.wdata.autoRepeat == true) {
					this.battleManager.wdata.autoRepeat = false;
				}
				continue;
			}
			if(value.stringData == "autorepeat") {
				var auto1 = !this.battleManager.wdata.autoRepeat;
				this.battleManager.wdata.autoRepeat = auto1;
				if(this.battleManager.wdata.autoAdvance == true && this.battleManager.wdata.autoRepeat == true) {
					this.battleManager.wdata.autoAdvance = false;
				}
				continue;
			}
			if(value.stringData == "retreat") {
				this.battleManager.RetreatArea();
				this.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_change_area);
				continue;
			}
			if(value.stringData == "levelup") {
				this.battleManager.LevelUp();
				continue;
			}
			if(value.stringData == "fb") {
				this.showFeedback = true;
				haxe_Log.trace("SHOW FEEDBACK",{ fileName : "Sources\\GRI/GRIControl.hx", lineNumber : 727, className : "GRIControl", methodName : "update"});
			}
			if(value.stringData == "error") {
				this.showError = !this.showError;
			}
			if(value.stringData == "error_send") {
				this.sendErrorRequest = true;
				this.errorMessage = ErrorX.errorMessage;
				if(this.errorMessage == null) {
					this.errorMessage = ErrorX.exception.details();
				}
			}
			if(value.stringData == "set") {
				this.battleManager.ChangeEquipmentSet(value.intData);
			}
			if(value.stringData != null) {
				var actionRun = true;
				if(Object.prototype.hasOwnProperty.call(this.eventToWarning.h,value.stringData)) {
					var warning = this.eventToWarning.h[value.stringData];
					if(warning != null) {
						actionRun = false;
						this.view.showDialog(warning);
						this.view.dialogData = "prestige";
					}
				}
				if(actionRun) {
					var actionId = this.eventToAction.h[value.stringData];
					if(actionId != null) {
						this.executeAction(actionId);
						continue;
					}
				}
			}
		}
		if(this.gameStartedAfterTitle == false) {
			Profiler.end("gricontrol");
			return;
		}
		if(this.storyControl.state != StoryControlState.STORY) {
			var tabM = 0;
			if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.TABLEFT) != -1) {
				tabM = -1;
			}
			if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.TABRIGHT) != -1) {
				tabM = 1;
			}
			if(tabM != 0) {
				if(Keyboard.keyboard.charsPressed.indexOf(Keyboard.KEY_SHIFT) != -1) {
					tabM *= -1;
				}
				this.view.tabMove(tabM);
			}
		}
		this.battleManager.update(miliseconds / 1000);
		this.battleControl.update(miliseconds);
		if(this.storyControl.storyStartedFromAnotherTab && this.battleManager.wdata.enemy != null) {
			if(this.battleManager.isBattleArea()) {
				this.battleManager.sleepToggle();
			}
		}
		this.areaControl.update();
		this.battlePrize.update(miliseconds);
		var advanceButton = this.view.advanceButton;
		var advanceButtonI = this.view.advanceButtonImage;
		if(this.battleManager.wdata.battleArea == this.battleManager.wdata.maxArea - 1) {
			this.view.highlightedButtons.push(advanceButton);
			this.view.highlightedImages.push(advanceButtonI);
		} else {
			HxOverrides.remove(this.view.highlightedButtons,advanceButton);
			HxOverrides.remove(this.view.highlightedImages,advanceButtonI);
		}
		var thisAreaRender = this.getAreaRender();
		var bm = this.battleManager;
		if(thisAreaRender != null) {
			this.view.battleTabCharaChangeButton.visible = thisAreaRender.linkToYuu;
			this.view.ui.tagVisibility(GRIView.TAG_BATTLE_BUTTON,!this.view.battleTabCharaChangeButton.visible);
			this.view.battleTabSteamButton.visible = thisAreaRender.linkToSteam;
		} else {
			this.view.ui.tagVisibility(GRIView.TAG_BATTLE_BUTTON,true);
		}
		if(bm.canAdvance == false) {
			var areaData = bm.getAreaData();
			if(areaData != null && areaData.externalClearConditions.length > 0) {
				var pass = true;
				var _g_current = 0;
				var _g_array = areaData.externalClearConditions;
				while(_g_current < _g_array.length) {
					var _g1_value = _g_array[_g_current];
					var _g1_key = _g_current++;
					var index = _g1_key;
					var value = _g1_value;
					if(value.valueKey == arcania_logic_ArcaniaModel.REUSABLE_CONDITION_TYPE) {
						if(this.villageControl.arcaniaControl.checkCondition(value) == false) {
							pass = false;
							break;
						}
					}
				}
				if(pass) {
					bm.clearExternalConditionArea();
				}
			}
		}
		this.equipControl.update();
		this.villageControl.arcaniaControl.notificationControl = this.battleManager.notificationControl;
		this.villageControl.update(miliseconds);
		this.regionControl.update();
		this.characterTabControl.update();
		if(this.config != null) {
			var _g_current = 0;
			var _g_array = this.config.eventToStoryTriggers;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(bm.isTriggeredByEvent(value.eventTrigger)) {
					StoryControlLogic.tryStoryVisible(value.storyId,this.storyControl);
				}
			}
		}
		StoryControlLogic.update(miliseconds / 1000,this.storyControl,this.scriptExecuter);
		if(this.storyControl.storyAdvancedThisFrame) {
			this.griSounds.soundPlayer.playSfx(autogen_AllSfx.story_sfx_Story_Advance);
		}
		this.storyControl.eventHolder.processTransformers(this.eventTransformers);
		if(this.storyControl.requestBattleTab) {
			this.storyControl.requestBattleTab = false;
			this.view.showTab(GRIView.idTabBattle);
		}
		GameAnalyticsIntegration.InitializeCheck();
		if(this.saveCount <= 0 || this.battleManager.prestiged) {
			this.saveCount = GRIControl.saveRate;
			if(this.saveEnabled) {
				this.saveData();
				if(this.battleManager.prestiged) {
					CrossTarget.reload();
					this.battleManager = null;
					Profiler.end("gricontrol");
					return;
				}
			}
		} else {
			this.saveCount -= miliseconds;
		}
		this.view.uiCreation.singleTag(GRIView.tagTabBattle);
		TurnOrderControl.feed(this.turnOrderView,this.battleManager,this.view,TurnOrderData.charaSprites);
		var hero = bm.wdata.hero;
		this.actorToView(hero,false,this.view.littleBattle);
		this.view.areaMessage.visible = bm.wdata.enemy == null && thisAreaRender != null && thisAreaRender.areaNoEnemyMessage != null;
		if(thisAreaRender != null && thisAreaRender.areaNoEnemyMessage != null) {
			if(bm.canAdvance && thisAreaRender.areaNoEnemyMessageCanProceed != null) {
				this.view.areaMessage.text = thisAreaRender.areaNoEnemyMessageCanProceed;
			} else {
				this.view.areaMessage.text = thisAreaRender.areaNoEnemyMessage;
			}
		} else if(bm.isProgressingOnBattleArea() == false) {
			if(bm.canAdvance) {
				this.view.areaMessage.text = Local.getStringWithString("Press {0} to advance","X");
				this.view.areaMessage.visible = bm.wdata.enemy == null;
			} else {
				this.view.areaMessage.text = Local.getString("Click on the Region tab to go somewhere else");
				this.view.areaMessage.visible = bm.wdata.enemy == null;
			}
		}
		var buttonToAction = function(actionId,buttonId) {
			var action = bm.wdata.playerActions.h[actionId];
			_gthis.view.ui.elementVisibility(buttonId,action.visible);
			_gthis.view.ui.elementEnabled(buttonId,action.enabled);
		};
		if(this.warningActive) {
			if(this.view.dialogResult == ConfirmResult.YES || this.view.dialogResult == ConfirmResult.NO) {
				if(this.view.dialogResult == ConfirmResult.YES) {
					if(this.view.dialogData != null) {
						this.executeAction(this.view.dialogData);
					}
				}
				this.view.endDialog();
			}
		}
		var storyHappened = this.storyControl.runtime.persistence.progressionData.h[this.storyControl.runtime.cutscenes[0].id].timesCompleted > 0;
		var storyHappenedPure = storyHappened;
		if(bm.wdata.regionProgress != null && bm.wdata.regionProgress[0] != null) {
			storyHappened = storyHappened && bm.wdata.regionProgress[0].maxArea > 2;
		} else {
			storyHappened = false;
		}
		this.updateTabAccessibility(GRIView.idTabMemory,storyHappened);
		this.updateTabAccessibility(GRIView.idTabCharacter,bm.wdata.regionProgress[0].maxArea > 2);
		var action = bm.wdata.playerActions.h["tabequipment"];
		this.updateTabAccessibility(GRIView.idTabEquip,action.visible);
		var action = bm.wdata.playerActions.h["tabvillage"];
		this.updateTabAccessibility(GRIView.idTabVillage,action.visible);
		var action = bm.wdata.playerActions.h["tabregion"];
		this.updateTabAccessibility(GRIView.idTabRegion,action.visible);
		var regionProgress = bm.getRegionProgress(this.regionControl.visualizedRegion);
		this.refreshRegionViewData(bm,bm.wdata.battleAreaRegion,bm.wdata.maxArea,this.regionViewData,GRIControl.lagrimaAreaLabels);
		this.refreshRegionViewData(bm,this.regionControl.visualizedRegion,regionProgress.maxArea,this.regionViewData,GRIControl.lagrimaAreaLabels);
		this.regionControl.updateAreaNames(this.regionViewData.listOfRegions[this.regionControl.visualizedRegion].listOfAreas,bm.wdata.regionProgress[this.regionControl.visualizedRegion].area);
		var listOfAreas = this.regionViewData.listOfRegions[bm.wdata.battleAreaRegion].listOfAreas;
		if(listOfAreas.length > bm.wdata.battleArea) {
			this.view.areaElement.text = listOfAreas[bm.wdata.battleArea].areaName;
		}
		if(bm.wdata.necessaryToKillInArea != 0) {
			this.view.areaProgressElement.text = bm.wdata.killedInArea[bm.wdata.battleArea] + " / " + bm.wdata.necessaryToKillInArea;
		} else {
			this.view.areaProgressElement.text = "";
		}
		buttonToAction("retreat","retreat");
		buttonToAction("levelup","levelup");
		buttonToAction("sleep","sleep");
		buttonToAction("repeat","repeat");
		buttonToAction("prestige","prestige");
		buttonToAction("advance","advance");
		buttonToAction("autoadvance","autoadvance");
		buttonToAction("autorepeat","autorepeat");
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			var id = "battleaction_" + i;
			buttonToAction(id,id);
			var skills = bm.wdata.hero.usableSkills;
			if(skills[i] != null) {
				var action = bm.wdata.playerActions.h[id];
				var header = "Locked";
				var desc = "You do not yet have what it takes to use this skill";
				var button = this.view.ui.getElement(id);
				button.offsets[0].target.setAllStyleSprites(null);
				button.offsets[1].target.text = null;
				if(action.mode == 0 || action.mode == 2) {
					var sb = bm.GetSkillBase(skills[i].id);
					var skillName = GRIControlEquip.getSkillName(skills[i]);
					button.offsets[0].target.setAllStyleSprites(this.skillControl.skillView.skillToImage[bm.skillBases.indexOf(sb)]);
					if(sb.mpCost > 0) {
						button.offsets[1].target.text = sb.mpCost + "\nMP";
					} else {
						button.offsets[1].target.text = sb.hpCost + "\nHP";
					}
					header = skillName;
					desc = GRIViewSkill.SkillToExplanation.h[sb.id];
				}
				var tmp = action.mode == 2 && action.enabled == false;
				var textSkill = "";
				if(action.mode == 1) {
					textSkill = "Reach Lvl " + bm.skillSlotUnlocklevel[i];
				} else if(button.text != "") {
					this.unlockControl.messages.queueNotification(Local.getString("Battle Skill"),Local.getString("unlock"));
				}
				this.view.ui.elementTextId(id,textSkill);
				this.view.ui.hover.setHoverGeneric(this.view.ui.getElement(id),header,desc);
			}
		}
		var sleepAct = bm.wdata.playerActions.h["sleep"];
		if(sleepAct.mode == 0) {
			this.view.ui.elementTextId("sleep",Local.getString("Nap"));
		} else {
			this.view.ui.elementTextId("sleep",Local.getString("Wake up"));
		}
		var highlightSleep = sleepAct.mode != 0;
		if(this.view.highlightedButtons.indexOf(this.view.sleepButton) != -1 != highlightSleep) {
			if(highlightSleep) {
				this.view.highlightedButtons.push(this.view.sleepButton);
			} else {
				this.view.removeHighlightButton(this.view.sleepButton);
			}
		}
		var pact = bm.wdata.playerActions.h["prestige"];
		if(pact.enabled == true) {
			this.view.ui.elementTextId("prestige","Soul");
		} else {
			this.view.ui.elementTextId("prestige","Soul");
		}
		var autoA = this.view.ui.getElement("autoadvance");
		autoA.selected = this.battleManager.wdata.autoAdvance;
		if(!this.config.autoAdvanceExist) {
			autoA.visible = false;
		}
		this.view.ui.getElement("autorepeat").selected = this.battleManager.wdata.autoRepeat;
		if(0 < bm.events.length) {
			var _g = 0;
			var _g1 = bm.events.length;
			while(_g < _g1) {
				var i = _g++;
				var event = bm.events[i];
				var e = event;
				var dataString = event.dataString;
				var data = event.data;
				if(event.type == EventTypes.EquipDrop) {
					this.view.lootList.addEvent(GRIControlEquip.GetEquipName(bm.wdata.hero.equipment[event.data],bm),this.view.ui);
				}
				if(event.type == EventTypes.AutoSell) {
					this.view.lootList.addEvent("Auto sell",this.view.ui);
				}
				if(event.type == EventTypes.SoulCrushWipeData) {
					this.view.notifications.notify("Challenge areas and Soul Crush has been heavily rebalanced\nProgress of all players in those two aspects has been reset.\nAffected players will receive a Veteran+10 bonuses to their Lu characters. This increases damage multiplier by 10%.",10000);
				}
				if(event.type == EventTypes.EquipMaxed) {
					this.genericWarning.title = "Equipment reached Limit Level";
					this.genericWarning.description = "Your equipment reached Limit Level. The energy materializes into " + dataString + " +" + data;
					this.view.showDialog(this.genericWarning);
				}
				if(event.type == EventTypes.RegionUnlock) {
					this.genericWarning.title = "Found a new region!";
					this.genericWarning.description = "Gained access to a new location. Access it in the region tab.";
					this.view.showDialog(this.genericWarning);
				}
				if(event.type == EventTypes.PermanentStatUpgrade) {
					this.genericWarning.title = "Area Clear";
					this.genericWarning.description = this.bossMessage;
					this.view.showDialog(this.genericWarning);
					this.bossMessage = GRIView.TEXT_MESSAGEBOSS;
					GameAnalyticsIntegration.SendProgressCompleteEvent("Permanentupg","","");
				}
				if(e.type == EventTypes.statUpgrade) {
					var dataS = e.dataString;
					var data1 = e.data;
					this.bossMessage += "" + dataS + " +" + data1 + "\n";
				}
				if(e.type == EventTypes.AreaUnlock) {
					GameAnalyticsIntegration.SendDesignEvent("AreaUnlock",e.data);
					GameAnalyticsIntegration.SendProgressStartEvent("area" + this.config.dimensionId,"stage" + bm.wdata.battleAreaRegion,"area" + e.data);
				}
				if(e.type == EventTypes.GameStartOnVersion) {
					GameAnalyticsIntegration.SendProgressStartEvent("gamestart","" + data);
				}
				if(e.type == EventTypes.AreaComplete) {
					GameAnalyticsIntegration.SendProgressCompleteEvent("area" + this.config.dimensionId,"stage0","area" + e.data);
				}
				if(e.type == EventTypes.AreaUnlock) {
					this.view.griEffects.showClearEffect("Area Complete");
					this.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_area_clear);
				}
				if(e.type == EventTypes.ActorDead) {
					if(e.target != null) {
						if(e.target.type == 0) {
							GameAnalyticsIntegration.SendProgressFailEvent("area" + this.config.dimensionId,"stage" + bm.wdata.battleAreaRegion,"area" + bm.wdata.battleArea);
						}
					}
				}
				var tmp = e.type == EventTypes.ActorAttack;
				if(e.type == EventTypes.RegionUnlock) {
					GameAnalyticsIntegration.SendDesignEvent("RegionUnlock",e.data);
					GameAnalyticsIntegration.SendProgressStartEvent("region" + this.config.dimensionId,"stage" + e.data);
				}
				if(e.type == EventTypes.ActorLevelUp) {
					this.griSounds.soundPlayer.playSfx(autogen_AllSfx.misc_sfx_ui_level_up);
					GameAnalyticsIntegration.SendProgressCompleteEvent("levelup" + this.config.dimensionId,"" + bm.wdata.hero.level,"");
				}
			}
		}
		this.battleManager.processEvents(this.storyControl.eventHolder);
		Profiler.end("gricontrol");
	}
	,updateTabAccessibility: function(arg0,visible) {
		var shouldUnlock = visible;
		this.unlockControl.updateShouldUnlock(arg0,shouldUnlock,this.unlockControl.tabLocks);
		if(!this.view.ui.getElement(arg0).visible && visible) {
			this.unlockControl.messages.queueNotification(arg0,"unlock");
		}
		this.view.tabAccessible(arg0,true);
	}
	,render: function() {
		Profiler.start("gricontrol_render");
		Profiler.start("view_render");
		this.view.render(this.buttonBindings);
		Profiler.end("view_render");
		this.villageControl.overlayRender();
		Profiler.start("view_postrender");
		this.view.postRender();
		Profiler.end("view_postrender");
		if(this.showError) {
			var message = ErrorX.errorMessage;
			if(message == null) {
				message = ErrorX.exception.details();
			}
			this.view.renderError(message);
		}
		Profiler.end("gricontrol_render");
	}
	,actorToView: function(actor,enemyName,littleBattle) {
		if(enemyName == null) {
			enemyName = false;
		}
		var bm = this.battleManager;
		this.view.uiCreation.singleTag(GRIView.tagTabBattle);
		if(actor != null) {
			var va = actor.viewAux;
			var sprite = TurnOrderData.charaSprites[va];
			var hp = bm.GetAttribute(actor,"Life");
			var hpMax = bm.GetAttribute(actor,"LifeMax");
			var rc = bm.GetAttribute(actor,"MPRechargeCount");
			var mp = bm.GetAttribute(actor,"MP");
			var mpmax = bm.GetAttribute(actor,"MPMax");
			if(rc < 10000) {
				mp = rc;
				mpmax = 10000;
			}
			if(littleBattle != null) {
				var mode = 2;
				if(bm.wdata.sleeping) {
					mode = 3;
				}
				if(bm.wdata.recovering) {
					mode = 0;
				}
				if(bm.wdata.enemy != null) {
					mode = 1;
				}
				littleBattle.feed(hp,hpMax,mp,mpmax,mode,rc < 10000,TurnOrderData.charaSprites[this.config.heroViewAux]);
			}
		}
	}
	,refreshRegionViewData: function(bm,region,maxArea,regionsRenderData,lagrimaAreaLabels) {
		if(regionsRenderData.listOfRegions[region] == null) {
			regionsRenderData.listOfRegions[region] = new RegionRenderInfo();
			var rri = regionsRenderData.listOfRegions[region];
			if(this.config.regionNameList.length > region) {
				var rri2 = this.config.regionNameList[region];
				rri.regionName = rri2.regionName;
				rri.regionDescription = rri2.regionDescription;
				rri.backgroundSprite = rri2.backgroundSprite;
			}
		}
		while(regionsRenderData.listOfRegions[region].listOfAreas.length <= maxArea) {
			var listOfAreas = regionsRenderData.listOfRegions[region].listOfAreas;
			var bArea = regionsRenderData.listOfRegions[region].listOfAreas.length;
			var regionD = this.config.battleManagerConfiguration.regions[region];
			if(regionD.type == RegionType.PROCEDURAL) {
				var ari = new AreaRenderInfo();
				listOfAreas.push(ari);
				if(bArea > 0) {
					var pur = bm.enemyAreaFromProcedural.GetProceduralUnitRepeated(bArea - 1);
					var characteristic = pur.proceduralUnit.characteristics[0];
					var text = lagrimaAreaLabels[characteristic];
					var lore = this.lagrimaAreaLore[characteristic];
					switch(pur.proceduralUnit.repeat) {
					case 1:
						text += " II";
						break;
					case 2:
						text += " III";
						break;
					case 3:
						text += " IV";
						break;
					case 4:
						text += " V";
						break;
					}
					text += " - " + (pur.position + 1);
					ari.characteristic = characteristic;
					ari.areaName = text;
					ari.areaDescription = lore;
					ari.backgroundSprite = GRIControl.lagrimaBackgrounds[characteristic];
				} else if(region == 0) {
					ari.areaName = "Home";
				} else {
					ari.areaName = "Entrance";
				}
			}
			if(regionD.type == RegionType.CHALLENGE) {
				var ari1 = new AreaRenderInfo();
				listOfAreas.push(ari1);
				if(bArea == 0) {
					ari1.areaName = "Entrance";
				} else {
					ari1.areaName = "Danger Area " + bArea;
				}
			}
			if(regionD.type == RegionType.SEMIPROCEDURAL) {
				if(this.config.regionNameList[region].listOfAreas.length > bArea) {
					var ari2 = new AreaRenderInfo();
					listOfAreas.push(ari2);
					ari2.areaName = this.config.regionNameList[region].listOfAreas[bArea].areaName;
					ari2.areaDescription = this.config.regionNameList[region].listOfAreas[bArea].areaDescription;
					ari2.backgroundSprite = this.config.regionNameList[region].listOfAreas[bArea].backgroundSprite;
				} else {
					break;
				}
			}
		}
	}
	,validateSave: function(jsonData) {
		var persistenceMaster = SaveAssistant.GetPersistenceMaster(jsonData);
		var jsonData2 = persistenceMaster.jsonStory;
		if(jsonData2 != null && jsonData2 != "") {
			var storyPersistence = StoryControlLogic.ReadJsonPersistentData(jsonData2);
		}
		var gamePlaySaveN = 0;
		var bm = new BattleManager();
		var configer = new GRIConfigurer(100,100);
		bm.config = configer.dimensions[1].battleManagerConfiguration;
		if(persistenceMaster.jsonGameplay != null) {
			++gamePlaySaveN;
			var success = bm.SendJsonPersistentData(persistenceMaster.jsonGameplay);
			if(success == false) {
				return false;
			}
		}
		if(persistenceMaster.jsonGameplayDimensions == null) {
			persistenceMaster.jsonGameplayDimensions = [];
		}
		var _g = 0;
		var _g1 = persistenceMaster.jsonGameplayDimensions;
		while(_g < _g1.length) {
			var jsonD = _g1[_g];
			++_g;
			if(jsonD != null) {
				bm.config = configer.dimensions[0].battleManagerConfiguration;
				++gamePlaySaveN;
				var success = bm.SendJsonPersistentData(jsonD);
				if(success == false) {
					return false;
				}
			}
		}
		bm.loadGeneralJson(persistenceMaster.jsonGeneral,persistenceMaster.worldVersion);
		if(gamePlaySaveN == 0) {
			return false;
		}
		return true;
	}
	,getEnemyNameSimple: function(area,region) {
		var rd = this.config.battleManagerConfiguration.regions[region];
		var enemyNameLabel = "";
		if(!this.battleManager.isBattleAreaVerify(region,area)) {
			return "";
		}
		if(rd.type == RegionType.PROCEDURAL) {
			var eafp = this.battleManager.enemyAreaFromProcedural;
			var eai = eafp.GetEnemyAreaInformation(area - 1);
			enemyNameLabel = GRIControl.enemyLabels[0][eai.sheetId];
		}
		if(rd.type == RegionType.CHALLENGE) {
			enemyNameLabel = GRIControl.enemyLabels[region][0];
		}
		if(rd.type == RegionType.SEMIPROCEDURAL) {
			var areaD = rd.areaDatas[area];
			var eai = areaD.enemy;
			enemyNameLabel = GRIControl.enemyLabels[0][eai.sheetId];
		}
		return enemyNameLabel;
	}
	,getEnemyName: function(area,region) {
		var rd = this.config.battleManagerConfiguration.regions[region];
		var enemyNameLabel = "";
		if(!this.battleManager.isBattleAreaVerify(region,area)) {
			return "";
		}
		enemyNameLabel = this.getEnemyNameSimple(area,region);
		if(rd.type == RegionType.PROCEDURAL) {
			var eafp = this.battleManager.enemyAreaFromProcedural;
			var eai = eafp.GetEnemyAreaInformation(area - 1);
			if(this.lagrimaAreaPrefix[eai.equipId] != null) {
				enemyNameLabel = this.lagrimaAreaPrefix[eai.equipId] + " " + enemyNameLabel;
			}
			if(eai.level > 0) {
				if(eai.level < 10) {
					enemyNameLabel += " Forte";
				} else if(eai.level < 30) {
					enemyNameLabel += " Monstro";
				} else {
					enemyNameLabel += " do Carai";
				}
			}
		}
		if(rd.type == RegionType.CHALLENGE) {
			enemyNameLabel += " " + String.fromCodePoint((65 + area - 1));
		}
		if(rd.type == RegionType.SEMIPROCEDURAL) {
			var areaD = rd.areaDatas[area];
			var eai = areaD.enemy;
			if(this.lagrimaAreaPrefix[eai.equipId] != null) {
				enemyNameLabel = this.lagrimaAreaPrefix[eai.equipId] + " " + enemyNameLabel;
			}
			if(eai.level > 0) {
				if(eai.level < 10) {
					enemyNameLabel += " Forte";
				} else if(eai.level < 30) {
					enemyNameLabel += " Monstro";
				} else {
					enemyNameLabel += " do Carai";
				}
			}
		}
		return enemyNameLabel;
	}
	,getReviewJson: function(recommended,reviewText) {
		var userId = this.battleManager.wdata.userId;
		if(recommended <= 0) {
			return null;
		}
		return JSON.stringify({ recommended : recommended + "", message : reviewText, save : CrossTarget.latestSave, userId : userId});
	}
	,getAreaRender: function(region,area) {
		if(area == null) {
			area = -1;
		}
		if(region == null) {
			region = -1;
		}
		var bm = this.battleManager;
		if(area < 0) {
			area = bm.wdata.battleArea;
		}
		if(region < 0) {
			region = bm.wdata.battleAreaRegion;
		}
		if(this.config.regionNameList.length > region && this.config.regionNameList[region].listOfAreas != null && this.config.regionNameList[region].listOfAreas.length > area) {
			return this.config.regionNameList[region].listOfAreas[area];
		}
		return null;
	}
	,getRegionRenderFromRegionViewData: function() {
		if(this.regionViewData.listOfRegions.length > this.battleManager.wdata.battleAreaRegion) {
			return this.regionViewData.listOfRegions[this.battleManager.wdata.battleAreaRegion];
		}
		return null;
	}
	,getAreaRenderFromRegionViewData: function() {
		if(this.regionViewData.listOfRegions.length > this.battleManager.wdata.battleAreaRegion) {
			if(this.regionViewData.listOfRegions[this.battleManager.wdata.battleAreaRegion].listOfAreas.length > this.battleManager.wdata.battleArea) {
				return this.regionViewData.listOfRegions[this.battleManager.wdata.battleAreaRegion].listOfAreas[this.battleManager.wdata.battleArea];
			}
		}
		return null;
	}
	,getFeedbackJson: function(reviewText) {
		var userId = this.battleManager.wdata.userId;
		return JSON.stringify({ message : reviewText, save : CrossTarget.latestSave, userId : userId});
	}
	,getErrorJson: function() {
		var userId = this.battleManager.wdata.userId;
		return JSON.stringify({ message : this.errorMessage, save : CrossTarget.latestSave, userId : userId});
	}
	,saveData: function() {
		var bm = this.battleManager;
		var json = bm.GetJsonPersistentData();
		var json2 = StoryControlLogic.GetJsonPersistentData(this.storyControl.runtime);
		var masterPers = { worldVersion : bm.wdata.worldVersion, jsonGameplay : this.previousPersistenceMaster.jsonGameplay, jsonStory : json2, jsonGeneral : this.previousPersistenceMaster.jsonGeneral, jsonGameplayDimensions : this.previousPersistenceMaster.jsonGameplayDimensions, jsonVillageDimensions : this.previousPersistenceMaster.jsonVillageDimensions, jsonVillageShared : this.previousPersistenceMaster.jsonVillageShared, jsonGeneralAllDimensions : this.previousPersistenceMaster.jsonGeneralAllDimensions};
		if(masterPers.jsonGameplayDimensions == null) {
			masterPers.jsonGameplayDimensions = [];
		}
		if(this.gameStartedAfterTitle) {
			if(this.config.dimensionSave >= 0) {
				masterPers.jsonGameplayDimensions[this.config.dimensionSave] = json;
			} else {
				masterPers.jsonGameplay = json;
			}
		}
		masterPers.jsonGeneralAllDimensions = JsonMainTypes.jsonWriterGeneralDimensions.write(this.persistent_generalAllDimensions);
		masterPers.jsonGeneral = bm.getGeneralJson();
		masterPers.jsonVillageDimensions = this.villageControl.getDimensionsSaveJson();
		masterPers.jsonVillageShared = this.villageControl.getSharedSaveJson();
		var jsonMaster = JsonX.stringify(masterPers);
		CrossTarget.SetLocalStorageItem(GRIControl.key,jsonMaster);
	}
	,updateRendererSize: function() {
		Renderer.width = this.resolution.rendererWidth;
		Renderer.height = this.resolution.rendererHeight;
		Renderer.scaleInt = this.resolution.currentPixelScale;
	}
	,requestSaveGeneral: function() {
		this.saveData();
	}
	,battleButtonVisible: function(state) {
		this.view.ui.tagVisibility(GRIView.TAG_BATTLE_BUTTON,state);
	}
	,getPrizeText: function(value) {
		if(value.type == BattleConstants.PRIZE_ARCANIA) {
			var ru = this.villageControl.arcaniaControl.getRuntimeUnit(value.optionalId);
			return "+" + value.amount + " " + ru.basicData.name;
		}
		return null;
	}
	,__class__: GRIControl
};
var GRIControlCharacterTab = function(ctrl) {
	this.control = ctrl;
};
$hxClasses["GRIControlCharacterTab"] = GRIControlCharacterTab;
GRIControlCharacterTab.__name__ = "GRIControlCharacterTab";
GRIControlCharacterTab.prototype = {
	setupUI: function() {
		this.view = new GRIViewCharacterTab();
	}
	,update: function() {
		this.control.view.uiCreation.singleTag(GRIView.tagTabCharacter);
		GRIAchievementViewLogic.update(this.control.battleManager.achievementModel.modelData,this.view.achievementView,this.control.view);
	}
	,__class__: GRIControlCharacterTab
};
var EquipMode = $hxEnums["EquipMode"] = { __ename__:true,__constructs__:null
	,EQUIP: {_hx_name:"EQUIP",_hx_index:0,__enum__:"EquipMode",toString:$estr}
	,SELL: {_hx_name:"SELL",_hx_index:1,__enum__:"EquipMode",toString:$estr}
	,UPGRADE: {_hx_name:"UPGRADE",_hx_index:2,__enum__:"EquipMode",toString:$estr}
};
EquipMode.__constructs__ = [EquipMode.EQUIP,EquipMode.SELL,EquipMode.UPGRADE];
var GRIControlEquip = function(battleM,control) {
	var _g = new haxe_ds_EnumValueMap();
	_g.set(EquipMode.SELL,"Sell:");
	_g.set(EquipMode.UPGRADE,"Upgrade:");
	this.modeToSpecialHeader = _g;
	this.mode = EquipMode.EQUIP;
	this.equipBaseItemVisible = -1;
	this.equipTypeVisible = 0;
	this.control = control;
	this.battleManager = battleM;
	this.equipView = control.view.equipView;
	this.filterControl = new GRIEquipFilterControl(control);
};
$hxClasses["GRIControlEquip"] = GRIControlEquip;
GRIControlEquip.__name__ = "GRIControlEquip";
GRIControlEquip.getSkillName = function(skillInfo) {
	var skillName = skillInfo.id;
	if(skillInfo.level > 1) {
		var code = 50 + skillInfo.level;
		skillName += " Lv. " + String.fromCodePoint(code);
	}
	return skillName;
};
GRIControlEquip.GetEquipName = function(e,bm) {
	if(e == null) {
		return "noname";
	}
	var itemBases = bm.itemBases;
	var modBases = bm.modBases;
	var skillSets = bm.wdata.skillSets;
	if(e.generationBaseItem != null && e.generationBaseItem >= 0) {
		var name = itemBases[e.generationBaseItem].name;
		if(e.generationPrefixMod >= 0) {
			name = modBases[e.generationPrefixMod].prefix + " " + name;
		}
		if(e.generationSuffixMod >= 0) {
			name = name + " " + modBases[e.generationSuffixMod].suffix;
		}
		var genLevelBonus = bm.wdata.equipLevels[e.outsideSystems.h["level"]].genLevelBonus;
		if(genLevelBonus > 0 == false) {
			genLevelBonus = 0;
		}
		name += " ";
		name += GRIControlEquip.getUpgLabel(e,bm);
		var genlevel = e.generationLevel;
		name += " Lv" + (genlevel + genLevelBonus);
		return name;
	}
	if(e.outsideSystems != null) {
		if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"skillset")) {
			var skillSet = e.outsideSystems.h["skillset"];
			var ss = skillSets[skillSet];
			var main = ss.skills[0];
			var sbMain = bm.GetSkillBase(main.id);
			var profession = "Corrupter";
			if(sbMain != null) {
				profession = bm.GetSkillBase(main.id).profession;
			}
			var word1 = null;
			var word2 = null;
			if(ss.skills.length > 1) {
				var skillBase1 = bm.GetSkillBase(ss.skills[1].id);
				word1 = bm.GetSkillBase(ss.skills[0].id).word;
				if(skillBase1 != null) {
					profession = bm.GetSkillBase(ss.skills[1].id).profession;
				}
			}
			if(ss.skills.length > 2) {
				word2 = bm.GetSkillBase(ss.skills[2].id).word;
			}
			if(word2 != null) {
				return "" + word1 + " " + profession + " of " + word2;
			}
			if(word1 != null) {
				return "" + word1 + " " + profession;
			}
			return profession;
		}
	}
	var equipName = "Sword";
	if(e.type == 1) {
		equipName = "Armor";
	}
	return equipName;
};
GRIControlEquip.getUpgLabel = function(e,bm) {
	var level = bm.wdata.equipLevels[e.outsideSystems.h["level"]].level;
	var upgLabel = "";
	var character = "+";
	if(level > 3) {
		character = "Y";
	}
	if(level > 6) {
		character = "V";
	}
	if(level > 9) {
		character = "U";
	}
	var cCount = 0;
	if(level > 0) {
		cCount = (level - 1) % 3 + 1;
	}
	var _g = 0;
	var _g1 = cCount;
	while(_g < _g1) {
		var i = _g++;
		upgLabel += character;
	}
	return upgLabel;
};
GRIControlEquip.getAttributeAddText = function(key,value) {
	var meta = ActorViewLogic.attributeMetaData.h[key];
	if(meta != null) {
		if(meta.intAsText != null) {
			var text = meta.intAsText[value];
			return "" + key + ": " + text;
		}
	}
	if(value >= 0) {
		return "" + key + ":   +" + value;
	} else {
		return "" + key + ":   " + value;
	}
};
GRIControlEquip.getAttributeMulText = function(key,value) {
	var percent = value - 100;
	if(percent >= 0) {
		return "" + key + ":   +" + percent + "%";
	} else {
		return "" + key + ":   " + percent + "%";
	}
};
GRIControlEquip.prototype = {
	setupView: function() {
		this.equipView.feedEquipmentTypeNames(GRIControlEquip.equipTypeNames);
		this.control.view.addHeader(GRIViewEquip.layoutIdEquip,null,Local.getString("INVENTORY"));
		var _g_current = 0;
		var _g_array = this.control.protoItemMaker.items;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var noSpace = StringTools.replace(value.name," ","");
			var sprite = autogen_GriPngs.allSprites.h["iconW" + noSpace];
			if(sprite == null) {
				haxe_Log.trace(noSpace + " Sprite not found ",{ fileName : "Sources\\GRI/GRIControlEquip.hx", lineNumber : 49, className : "GRIControlEquip", methodName : "setupView"});
				CrossTarget.alert(noSpace + " Sprite not found ");
			}
			this.equipView.baseItemToSprite.push(sprite);
		}
		var h = ActorViewLogic.AttributeExplanation.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
		}
		this.equipView.setup();
		this.changeEquipMode(EquipMode.EQUIP);
		this.update();
		this.filterControl.changeTypeViewed(this.equipTypeVisible,this.equipBaseItemHas);
	}
	,changeEquipMode: function(mode) {
		this.mode = mode;
		this.control.view.ui.tagVisibility(GRIViewEquip.TAG_EQUIPBUTTON_SPECIALWIDGET,mode != EquipMode.EQUIP);
	}
	,update: function() {
		if(this.control.view.tabEquipButton.visible == false) {
			return;
		}
		var bm = this.battleManager;
		var equipViewPos = 0;
		this.control.view.ui.genUI.extendLayoutWidth("equipbutton",30);
		this.control.view.ui.genUI.extendLayoutWidth(GRIViewEquip.layoutIdEquipSets,0);
		this.control.view.ui.genUI.extendLayoutWidth(GRIEquipFilterControl.LAYOUT_ID,80);
		this.control.view.ui.extendElementHeight(this.equipView.scroll.viewport,95);
		this.filterControl.updateSelected(this.equipBaseItemVisible);
		if(this.equipBaseItemHas == null) {
			this.equipBaseItemHas = [];
		}
		var _g = 0;
		var _g1 = this.equipBaseItemHas.length;
		while(_g < _g1) {
			var i = _g++;
			this.equipBaseItemHas[i] = false;
		}
		this.equipView.setView.highlight(bm.wdata.hero.chosenEquipSet);
		var hoveredEquip = -1;
		var hoveredView = -1;
		var hoveredEquippedForKeyboard = -1;
		var hoveredEquipped = -1;
		var hoveredEquippedView = -1;
		var _g = 0;
		var _g1 = bm.wdata.hero.equipment.length;
		while(_g < _g1) {
			var i = _g++;
			var e = bm.wdata.hero.equipment[i];
			if(e != null) {
				if(e.generationBaseItem >= 0 == true) {
					var baseItem = e.generationBaseItem;
					this.equipBaseItemHas[baseItem] = true;
				}
				var filterOk = e.type == this.equipTypeVisible;
				if(this.equipBaseItemVisible >= 0) {
					filterOk = filterOk && e.generationBaseItem == this.equipBaseItemVisible;
				}
				if(filterOk) {
					if(e.seen >= 0 == false) {
						e.seen = 2;
					}
					if(e.seen == 0) {
						var equipTab = false;
						if(equipTab) {
							e.seen = 1;
						}
					}
					var rarity = 0;
					if(e.generationPrefixMod >= 0 || e.generationSuffixMod >= 0) {
						rarity = 1;
					}
					var upgradeCost = 0;
					var upgradable = BattleManager.IsUpgradable(e,bm.wdata);
					var equipName = GRIControlEquip.GetEquipName(e,bm);
					var modSp1 = null;
					var modSp2 = null;
					if(e.generationPrefixMod >= 0) {
						modSp1 = this.equipView.modSprites[e.generationPrefixMod];
					}
					if(e.generationSuffixMod >= 0) {
						modSp2 = this.equipView.modSprites[e.generationSuffixMod];
					}
					var lvT = null;
					if(e.type != 2) {
						lvT = "Lv " + bm.getEquipmentGenLevelWithBonus(e);
					}
					var ev = this.equipView.feedEquipment(i,equipViewPos,equipName,bm.IsEquipped(i,false),this.getMainIconForEquip(e),modSp1,modSp2,lvT,GRIControlEquip.getUpgLabel(e,bm));
					this.feedSkillEquipIcons(e,ev);
					if(this.equipView.isSelected(equipViewPos)) {
						hoveredEquip = i;
						hoveredView = equipViewPos;
					}
					++equipViewPos;
				}
			}
		}
		this.equipView.visibilityOfEquipViewCutoff(equipViewPos);
		if(this.mode == EquipMode.EQUIP) {
			var _g = 0;
			var _g1 = this.equipView.equipmentViews;
			while(_g < _g1.length) {
				var ev = _g1[_g];
				++_g;
				ev.mainButton.enabled = true;
			}
		}
		if(this.mode == EquipMode.SELL) {
			var _g = 0;
			var _g1 = this.equipView.equipmentViews;
			while(_g < _g1.length) {
				var ev = _g1[_g];
				++_g;
				var eId = ev.mainButton.data.intData;
				var e = this.battleManager.wdata.hero.equipment[eId];
				if(e != null) {
					var sellPrize = BattleManager.GetSellPrize(e,this.battleManager.wdata);
					ev.specialElementText.text = "+" + sellPrize;
					ev.specialHeader.text = "Sell:";
					ev.specialElementIcon.style.sprite = CurrencyViewLogic.currencyToSprite.h["Lagrima"];
					ev.mainButton.enabled = !this.battleManager.IsEquipped(eId,true);
				}
			}
		}
		if(this.mode == EquipMode.UPGRADE) {
			var bm1 = this.battleManager;
			var _g = 0;
			var _g1 = this.equipView.equipmentViews;
			while(_g < _g1.length) {
				var ev = _g1[_g];
				++_g;
				var eId = ev.mainButton.data.intData;
				var e = this.battleManager.wdata.hero.equipment[eId];
				if(e != null) {
					var upgradeLabel = "Upgrade";
					var upgradeCurrency = "Lagrima";
					var canUpgrade = false;
					var upgradeCost = 0;
					var upgradable = BattleManager.IsUpgradable(e,bm1.wdata);
					if(upgradable) {
						canUpgrade = BattleManager.CanUpgrade(e,bm1.wdata);
						upgradeCost = BattleManager.GetCost(e,bm1.wdata);
					} else {
						var limitable = BattleManager.IsLimitBreakable(e,bm1.wdata);
						if(limitable) {
							upgradable = limitable;
							canUpgrade = BattleManager.CanLimitBreak(e,bm1.wdata);
							upgradeCost = BattleManager.GetLimitBreakCost(e,bm1.wdata);
							upgradeLabel = "Limit Break";
							upgradeCurrency = "Lagrima Stone";
						}
					}
					ev.mainButton.enabled = canUpgrade;
					ev.specialElementText.text = "" + upgradeCost;
					ev.specialElementIcon.style.sprite = CurrencyViewLogic.currencyToSprite.h[upgradeCurrency];
					ev.specialHeader.text = upgradeLabel;
				}
			}
		}
		var _g4_current = 0;
		var _g4_array = bm.wdata.hero.equipmentSets[bm.wdata.hero.chosenEquipSet].equipmentSlots;
		while(_g4_current < _g4_array.length) {
			var _g5_value = _g4_array[_g4_current];
			var _g5_key = _g4_current++;
			var index = _g5_key;
			var value = _g5_value;
			if(this.equipView.isEquippedSelectedThisFrame(index)) {
				if(UIElementManager.latestDevice != Device.MOUSE) {
					hoveredEquippedForKeyboard = index;
				}
			}
			if(this.equipView.isEquippedSelected(index)) {
				hoveredEquippedView = index;
				hoveredEquipped = value;
			}
			if(value >= 0) {
				var e = bm.wdata.hero.equipment[value];
				var ename = GRIControlEquip.GetEquipName(e,bm);
				var modSp1 = null;
				var modSp2 = null;
				if(e.generationPrefixMod >= 0) {
					modSp1 = this.equipView.modSprites[e.generationPrefixMod];
				}
				if(e.generationSuffixMod >= 0) {
					modSp2 = this.equipView.modSprites[e.generationSuffixMod];
				}
				var lvT = null;
				if(e.type != 2) {
					lvT = "Lv " + bm.getEquipmentGenLevelWithBonus(e);
				}
				var ev = this.equipView.feedEquipped(value,index,ename,index == this.equipTypeVisible,true,this.getMainIconForEquip(e),modSp1,modSp2,lvT,GRIControlEquip.getUpgLabel(e,bm),16777215);
				this.feedSkillEquipIcons(e,ev);
			} else {
				var interactable = bm.hasEquipmentOfType(index);
				var sprite = null;
				var slotName = null;
				if(index == 0) {
					sprite = autogen_GriPngs.slotempty2;
					slotName = Local.getString("Sword");
				}
				if(index == 1) {
					sprite = autogen_GriPngs.slotempty1;
					slotName = Local.getString("Armor");
				}
				slotName = "-";
				this.equipView.feedEquipped(-1,index,GRIControlEquip.equipTypeNames[index],index == this.equipTypeVisible,interactable,sprite,null,null,slotName,null,GRIView.COLOR_DISABLED_BUTTON);
			}
		}
		this.equipView.equipmentTags();
		if(this.control.view.currentTab == GRIView.tagTabEquip) {
			ActorViewLogic.feed(bm.wdata.hero,this.equipView.actorEquipView,this.control.view,Local.getString("PLAYER STATS"),true,null);
			var afterStats = null;
			if(hoveredEquip >= 0) {
				afterStats = bm.getStatsIfEquipped(bm.wdata.hero,hoveredEquip);
			}
			ActorViewLogic.feed(bm.wdata.hero,this.equipView.actorEquipView,this.control.view,Local.getString("PLAYER STATS"),true,null,afterStats);
			this.control.view.ui.tagVisibility(this.equipView.actorEquipView.tagId,this.mode == EquipMode.EQUIP);
		}
		CurrencyViewLogic.update(this.equipView.currencyView,this.control.view,this.control.battleManager);
		this.control.view.ui.tagVisibility(this.equipView.currencyView.tagId,this.mode != EquipMode.EQUIP);
		if(hoveredEquip >= 0) {
			var equipToHover = hoveredEquip;
			this.equipView.hoverOn(hoveredView);
			this.feedEquipHover(equipToHover);
		} else if(hoveredEquipped >= 0) {
			var equipToHover = hoveredEquipped;
			this.equipView.hoverOnEquippedButton(hoveredEquippedView);
			this.feedEquipHover(equipToHover);
		} else {
			this.equipView.hoverOn(-1);
		}
		if(hoveredEquippedForKeyboard >= 0 && this.equipTypeVisible != hoveredEquip) {
			this.equipTypeVisible = hoveredEquippedForKeyboard;
			this.filterControl.changeTypeViewed(this.equipTypeVisible,this.equipBaseItemHas);
		}
		var evs = this.control.view.ui.dataEvents;
		var _g4_current = 0;
		var _g4_array = evs;
		while(_g4_current < _g4_array.length) {
			var _g5_value = _g4_array[_g4_current];
			var _g5_key = _g4_current++;
			var index = _g5_key;
			var value = _g5_value;
			if(value != null && value.stringData != null) {
				if(value.stringData.indexOf(GRIViewEquip.equippedViewIdPart) != -1) {
					var index1 = value.intData;
					if(this.equipTypeVisible != index1) {
						this.resetOffsetEquipButtons();
					}
					this.equipTypeVisible = index1;
					this.equipBaseItemVisible = -1;
					if(UIElementManager.latestDevice != Device.MOUSE) {
						this.control.view.ui.enterCursorGroup(this.equipView.cursor_items);
					}
					this.filterControl.changeTypeViewed(this.equipTypeVisible,this.equipBaseItemHas);
				}
				if(value.stringData.indexOf(BattleConstants.EQUIPMENT_VIEW_ID_PART) != -1) {
					var index2 = value.intData;
					if(this.mode == EquipMode.EQUIP) {
						bm.ToggleEquipped(index2);
						this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.equip_sfx_equip);
					}
					if(this.mode == EquipMode.SELL) {
						bm.SellEquipment(index2);
						this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.equip_sfx_sell);
					}
					if(this.mode == EquipMode.UPGRADE) {
						this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.equip_sfx_enhance);
						bm.UpgradeOrLimitBreakEquipment(index2);
					}
				}
				if(value.stringData == GRIEquipFilterControl.DATAINPUT_CHANGEFILTER) {
					this.equipBaseItemVisible = value.intData;
					this.resetOffsetEquipButtons();
				}
				if(value.stringData == GRIViewEquip.DATA_SELL) {
					this.changeEquipMode(EquipMode.SELL);
					if(UIElementManager.latestDevice != Device.MOUSE) {
						this.control.view.ui.enterCursorGroup(this.equipView.cursor_slots);
					}
				}
				if(value.stringData == GRIViewEquip.DATA_EQUIP) {
					this.changeEquipMode(EquipMode.EQUIP);
					if(UIElementManager.latestDevice != Device.MOUSE) {
						this.control.view.ui.enterCursorGroup(this.equipView.cursor_slots);
					}
				}
				if(value.stringData == GRIViewEquip.DATA_UPGRADE) {
					this.changeEquipMode(EquipMode.UPGRADE);
					if(UIElementManager.latestDevice != Device.MOUSE) {
						this.control.view.ui.enterCursorGroup(this.equipView.cursor_slots);
					}
				}
				if(value.stringData == GRIViewEquip.DATA_SELL_WORSE) {
					bm.DiscardWorseEquipment();
					this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.equip_sfx_sell_worse);
					this.resetOffsetEquipButtons();
				}
				if(value.stringData == GRIView.idTabEquip) {
					this.changeEquipMode(EquipMode.EQUIP);
					this.equipBaseItemVisible = -1;
					this.filterControl.changeTypeViewed(this.equipTypeVisible,this.equipBaseItemHas);
				}
			}
		}
	}
	,feedSkillEquipIcons: function(e,ev) {
		if(ev != null) {
			if(e.type == 2) {
				if(e.outsideSystems != null) {
					if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"skillset")) {
						var bm = this.control.battleManager;
						var skillSets = bm.wdata.skillSets;
						var skillSet = e.outsideSystems.h["skillset"];
						var ss = skillSet;
						var ss = skillSets[skillSet];
						var sp1 = null;
						var sp2 = null;
						var sp3 = null;
						var sp4 = null;
						var _g_current = 0;
						var _g_array = ss.skills;
						while(_g_current < _g_array.length) {
							var _g1_value = _g_array[_g_current];
							var _g1_key = _g_current++;
							var index = _g1_key;
							var value = _g1_value;
							var sId = value.id;
							var sb = this.control.battleManager.GetSkillBase(sId);
							var skillBPos = this.control.battleManager.skillBases.indexOf(sb);
							var sprite = this.control.skillControl.skillView.skillToImage[skillBPos];
							if(index == 0) {
								sp1 = sprite;
							}
							if(index == 1) {
								sp2 = sprite;
							}
							if(index == 2) {
								sp3 = sprite;
							}
							if(index == 3) {
								sp4 = sprite;
							}
						}
						this.equipView.feedSkillIcons(ev,sp1,sp2,sp3,sp4);
					}
				}
			}
		}
	}
	,getMainIconForEquip: function(e) {
		var sprite = this.equipView.baseItemToSprite[e.generationBaseItem];
		if(e.generationBaseItem < this.equipView.baseItemToSprite.length && e.generationBaseItem >= 0) {
			sprite = this.equipView.baseItemToSprite[e.generationBaseItem];
		}
		if(e.type == 2) {
			return null;
		}
		return sprite;
	}
	,resetOffsetEquipButtons: function() {
		this.equipView.scroll.offset.y = 10;
	}
	,feedEquipHover: function(equipToHover) {
		var bm = this.control.battleManager;
		var equip = bm.wdata.hero.equipment[equipToHover];
		var e = equip;
		this.control.view.ui.elementText(this.equipView.hover_Header,GRIControlEquip.GetEquipName(equip,bm),true,0,280,true);
		this.equipView.hover_Header.transform.size.y += 12;
		this.equipView.hover_Header.textPivot.y = 0;
		var maxUpgradableLevel = bm.getUpgradeLevelMaxBonusLevel(e) + e.generationLevel;
		var vid = 0;
		if(e.outsideSystems != null) {
			if(Object.prototype.hasOwnProperty.call(e.outsideSystems.h,"skillset")) {
				var ss = e.outsideSystems.h["skillset"];
				var ssd = bm.wdata.skillSets[ss];
				var _g = 0;
				var _g1 = ssd.skills.length;
				while(_g < _g1) {
					var s = _g++;
					var actionId = "battleaction_" + s;
					var action = bm.wdata.playerActions.h[actionId];
					if(action.mode == 0) {
						var skillInfo = ssd.skills[s];
						var skillName = GRIControlEquip.getSkillName(skillInfo);
						this.equipView.setEquipmentHoverInfo(skillName,vid);
					}
					if(action.mode == 1) {
						this.equipView.setEquipmentHoverInfo("???",vid);
					}
					++vid;
				}
			}
		}
		var h = equip.attributes.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
			var text = GRIControlEquip.getAttributeAddText(key1,value);
			this.equipView.setEquipmentHoverInfo(text,vid);
			++vid;
		}
		this.equipView.setEquipmentHoverInfo("",vid);
		++vid;
		if(equip.attributeMultiplier != null) {
			var h = equip.attributeMultiplier.h;
			var _g_h = h;
			var _g_keys = Object.keys(h);
			var _g_length = _g_keys.length;
			var _g_current = 0;
			while(_g_current < _g_length) {
				var key = _g_keys[_g_current++];
				var _g1_key = key;
				var _g1_value = _g_h[key];
				var key1 = _g1_key;
				var value = _g1_value;
				var text = GRIControlEquip.getAttributeMulText(key1,value);
				this.equipView.setEquipmentHoverInfo(text,vid);
				++vid;
			}
		}
		if(equip.type != 2) {
			this.equipView.setEquipmentHoverInfo("",vid);
			++vid;
			this.equipView.setEquipmentHoverInfo("Max Level: " + maxUpgradableLevel,vid);
			++vid;
		}
		this.equipView.endEquipmentHoverInfo(vid);
	}
	,__class__: GRIControlEquip
};
var GRIControlRegion = function(control,bm) {
	this.visualizedRegion = 0;
	this.lastAreaVisualized = -1;
	this.lastRegionVisualized = -1;
	this.areaFeed = new UIFeedLists();
	this.regionFeed = new UIFeedLists();
	this.battleManager = bm;
	this.control = control;
	this.regionFeed.initList("STANDARD");
	this.regionFeed.initList("DANGER");
	var initRegion = control.config.regionNameList[0];
	if(initRegion == null) {
		this.regionFeed.set(GRIControlRegion.listStandard,0,"","");
	} else {
		this.regionFeed.set(GRIControlRegion.listStandard,0,initRegion.regionName,initRegion.regionDescription);
	}
	this.regionFeed.setData(GRIControlRegion.listStandard,0,"regionbutton",0);
	this.areaFeed.initList("AREAS OF REGION");
	this.viewRegion = new GRIViewRegion(control.view);
};
$hxClasses["GRIControlRegion"] = GRIControlRegion;
GRIControlRegion.__name__ = "GRIControlRegion";
GRIControlRegion.prototype = {
	update: function() {
		var maxRegion = this.battleManager.config.regions.length;
		var showLocked = 0;
		if(maxRegion < this.control.config.regionNameList.length) {
			showLocked = 1;
		}
		var enemyRegionNames = this.control.config.regionNameList;
		var regionIndex = 0;
		var _g = 1;
		var _g1 = maxRegion;
		while(_g < _g1) {
			var i = _g++;
			this.regionFeed.set(GRIControlRegion.listDanger,regionIndex,enemyRegionNames[i].regionName,enemyRegionNames[i].regionDescription,true,this.battleManager.getRegionProgress(i).seen > 0);
			this.regionFeed.setData(GRIControlRegion.listDanger,regionIndex,GRIControlRegion.dataRegionB,i);
			++regionIndex;
		}
		if(showLocked > 0) {
			this.regionFeed.set(GRIControlRegion.listDanger,regionIndex,"Unreached","",false);
			this.regionFeed.setData(GRIControlRegion.listDanger,regionIndex,null,-1);
			++regionIndex;
		}
		this.viewRegion.feedRegionButtons(this.regionFeed);
		var regionChanged = this.lastRegionVisualized != this.visualizedRegion;
		var hoverArea = this.viewRegion.getHoveredArea(GRIControlRegion.dataAreaB);
		var hoverRegion = this.viewRegion.getHoveredRegion(GRIControlRegion.dataRegionB);
		if(hoverRegion >= 0 && UIElementManager.latestDevice != Device.MOUSE) {
			this.visualizedRegion = hoverRegion;
		}
		var areaChanged = this.lastAreaVisualized != hoverArea;
		var enemy = null;
		if(hoverRegion >= 0) {
			hoverArea = -1;
			this.control.view.ui.tagVisibility(this.viewRegion.actorView.tagId,false);
			this.viewRegion.enemyName.text = "";
			this.viewRegion.enemyHeader.text = "";
		}
		if((areaChanged || regionChanged) && hoverArea >= 0) {
			this.lastRegionVisualized = this.visualizedRegion;
			this.lastAreaVisualized = hoverArea;
			if(this.control.battleManager.isBattleAreaVerify(this.visualizedRegion,hoverArea)) {
				enemy = this.control.battleManager.CreateEnemy(this.visualizedRegion,hoverArea);
				this.viewRegion.enemyName.text = this.control.getEnemyName(hoverArea,this.visualizedRegion);
				this.viewRegion.enemyHeader.text = "ENEMY DATA     " + enemyRegionNames[this.visualizedRegion].regionName + " /  " + this.areaFeed.feedLists[0].feedList[this.lastAreaVisualized].text;
			} else {
				this.viewRegion.enemyName.text = "";
				this.viewRegion.enemyHeader.text = "";
			}
			this.control.view.ui.tagVisibility(this.viewRegion.actorView.tagId,enemy != null);
		}
		if(enemy != null) {
			ActorViewLogic.feed(enemy,this.viewRegion.actorView,this.control.view,Local.getString("ENEMY STATS"),true,null);
		}
		var evs = this.control.view.ui.dataEvents;
		var _g2_current = 0;
		var _g2_array = evs;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var index = _g3_key;
			var value = _g3_value;
			if(value != null && value.stringData != null) {
				if(value.stringData == GRIControlRegion.dataRegionB) {
					this.visualizedRegion = value.intData;
					this.viewRegion.resetAreaScroll();
				}
				if(value.stringData == GRIControlRegion.dataAreaB) {
					var tmp = this.visualizedRegion >= 0;
					this.battleManager.changeRegion(this.visualizedRegion);
					this.battleManager.ChangeBattleArea(value.intData);
					this.control.view.showTab(GRIView.idTabBattle);
				}
			}
		}
	}
	,setupView: function() {
		this.viewRegion.setup();
	}
	,updateAreaNames: function(areaNames,currentArea) {
		var len = 0;
		var _g_current = 0;
		var _g_array = areaNames;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null && value.areaName != "") {
				this.areaFeed.set(0,index,value.areaName,value.areaDescription,true);
				this.areaFeed.setData(0,index,GRIControlRegion.dataAreaB,index);
				++len;
			}
		}
		this.areaFeed.feedLists[0].invisibleAfterCap(len);
		this.viewRegion.feedAreaButtons(this.areaFeed);
	}
	,__class__: GRIControlRegion
};
var TitleMode = $hxEnums["TitleMode"] = { __ename__:true,__constructs__:null
	,ACCEPT: {_hx_name:"ACCEPT",_hx_index:0,__enum__:"TitleMode",toString:$estr}
	,NORMAL: {_hx_name:"NORMAL",_hx_index:1,__enum__:"TitleMode",toString:$estr}
	,DIMENSION_SELECT: {_hx_name:"DIMENSION_SELECT",_hx_index:2,__enum__:"TitleMode",toString:$estr}
	,SETTINGS: {_hx_name:"SETTINGS",_hx_index:3,__enum__:"TitleMode",toString:$estr}
};
TitleMode.__constructs__ = [TitleMode.ACCEPT,TitleMode.NORMAL,TitleMode.DIMENSION_SELECT,TitleMode.SETTINGS];
var GRIControlTitle = function(battleManager) {
	this.desiredMode = -1;
	this.characterSelectNeeded = true;
	this.waitReset = false;
	this.saveImportError = { title : "Save Import Error", buttonYes : "Close", buttonFalse : null, description : "Something was wrong with the imported save"};
	this.characterSelectNeeded = CrossTarget.GetLocalStorageItem(GRIControlTitle.CHARACTER_SELECTION_HAPPENED_KEY,false) == null;
};
$hxClasses["GRIControlTitle"] = GRIControlTitle;
GRIControlTitle.__name__ = "GRIControlTitle";
GRIControlTitle.prototype = {
	changeMode: function(mode) {
		this.titleView.changeMode(mode);
	}
	,setupView: function(control,dimensions) {
		this.resetWarning = { title : "Reset data", description : "You will lose your save data completely", buttonYes : "Confirm", buttonFalse : "Cancel"};
		this.importWarning = { title : "Import Save", description : Local.getString("You can use this to load an external save file. Be careful. Your previous save file will be erased."), buttonYes : "Confirm", buttonFalse : "Cancel"};
		this.control = control;
		this.titleView = new GRIViewTitle();
		this.titleView.view = control.view;
		this.titleView.setupUI();
		if(this.characterSelectNeeded) {
			this.titleView.addMainButton(GRIViewTitle.DATA_GOTOCHARACTER,"START",0,"Start the game",30);
			var _g_current = 0;
			var _g_array = dimensions;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				this.titleView.addDimensionCharacterWidget(value.description_title,value.description_text,GRIViewTitle.DATA_CONTINUE,value.name,index,value.description_sprite);
			}
		} else {
			var _g_current = 0;
			var _g_array = dimensions;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				this.titleView.addMainButton(GRIViewTitle.DATA_CONTINUE,value.name,index,value.description_text,30);
			}
		}
		this.titleView.addSpace(10);
		this.titleView.setupButtons();
		this.settingsControl = new GRISettingsControl(this);
		this.titleView.addFinalButtons();
	}
	,update: function() {
		var continueV = this.control.gameStartedAfterTitle == false;
		if(this.characterSelectNeeded == false) {
			if(this.control.config.dimensionSave < 0) {
				this.control.view.ui.getElementWithDataInt(GRIViewTitle.DATA_CONTINUE,1).enabled = continueV;
			} else {
				this.control.view.ui.elementEnabled(GRIViewTitle.DATA_CONTINUE,continueV);
			}
		}
		if(this.settingsControl != null) {
			this.settingsControl.update();
		}
		if(continueV == false) {
			this.titleView.cursorGroup.firstElement = this.control.view.ui.getElement(GRIViewTitle.DATA_DISCORD);
		}
		if(this.waitImport) {
			if(this.control.view.dialogResult == ConfirmResult.NO) {
				this.waitImport = false;
				this.control.warningActive = true;
				this.control.view.endDialog();
			}
			if(this.control.view.dialogResult == ConfirmResult.YES) {
				this.waitImport = false;
				this.control.warningActive = true;
				this.control.view.endDialog();
				var file = CrossTarget.userExternalFileContent();
				if(file != null) {
					var saveSafe = this.control.validateSave(file);
					if(saveSafe) {
						this.control.saveEnabled = false;
						CrossTarget.SetLocalStorageItem(GRIControl.key,file);
						CrossTarget.reload();
					} else {
						this.control.view.showDialog(this.saveImportError,true);
					}
				}
			}
		}
		if(this.waitReset) {
			if(this.control.view.dialogResult == ConfirmResult.NO) {
				this.waitReset = false;
				this.control.warningActive = true;
				this.control.view.endDialog();
			}
			if(this.control.view.dialogResult == ConfirmResult.YES) {
				this.control.battleManager = new BattleManager();
				var bm = this.control.battleManager;
				bm.ForceSkillSetDrop(-1,null,{ skills : [{ id : "Slash", level : 1},{ id : "Cure", level : 1},{ id : "Protect", level : 3}], active : true},false);
				bm.wdata.hero.equipmentSets[bm.wdata.hero.chosenEquipSet].equipmentSlots[2] = 0;
				CrossTarget.resetLocalStorage(GRIControl.key);
				CrossTarget.reload();
			}
		}
		var _g = 0;
		var _g1 = this.control.view.ui.dataEvents;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(data.stringData == GRIViewTitle.DATA_GOTOCHARACTER) {
				this.titleView.changeMode(TitleMode.DIMENSION_SELECT);
			}
			if(data.stringData == GRIViewTitle.DATA_DISCORD) {
				CrossTarget.OpenURL("https://discord.gg/AtGrxpM");
			}
			if(data.stringData == GRIViewTitle.DATA_STEAM) {
				CrossTarget.OpenURL("https://store.steampowered.com/app/1858120/Generic_RPG_Idle/");
			}
			if(data.stringData == GRIViewTitle.DATA_RESET) {
				this.control.view.showDialog(this.resetWarning);
				this.control.warningActive = false;
				this.waitReset = true;
			}
			if(data.stringData == GRIViewTitle.DATA_EXTERNALSAVE) {
				this.control.view.showDialog(this.importWarning);
				this.control.warningActive = false;
				this.waitImport = true;
			}
			if(data.stringData == GRIViewTitle.DATA_EXIT) {
				this.wantToExit = true;
			}
			if(data.stringData == GRIViewTitle.DATA_CONTINUE) {
				this.desiredMode = data.intData;
				CrossTarget.SetLocalStorageItem(GRIControlTitle.CHARACTER_SELECTION_HAPPENED_KEY,"happen",false);
			}
			if(data.stringData == GRIViewTitle.DATA_ACCEPT) {
				var privacyAcceptance = "accepted";
				CrossTarget.SetLocalStorageItem(GRIControl.PRIVACY_ACCEPTANCE_KEY,privacyAcceptance,false);
				this.changeMode(TitleMode.NORMAL);
			}
			if(data.stringData == GRIViewTitle.DATA_PRIVACYSEE) {
				CrossTarget.OpenURL("https://github.com/Pidroh/TOS_Privacy");
			}
		}
	}
	,__class__: GRIControlTitle
};
var GRIControlUnitBase = function(control) {
	this._control = control;
};
$hxClasses["GRIControlUnitBase"] = GRIControlUnitBase;
GRIControlUnitBase.__name__ = "GRIControlUnitBase";
GRIControlUnitBase.prototype = {
	get_bm: function() {
		return this._control.battleManager;
	}
	,get_view: function() {
		return this._control.view;
	}
	,get_ui: function() {
		return this._control.view.ui;
	}
	,get_uiCreation: function() {
		return this._control.view.uiCreation;
	}
	,get_battleManager: function() {
		return this._control.battleManager;
	}
	,__class__: GRIControlUnitBase
	,__properties__: {get_view:"get_view",get_uiCreation:"get_uiCreation",get_ui:"get_ui",get_battleManager:"get_battleManager",get_bm:"get_bm"}
};
var GRIControlVillage = function(control) {
	this.arcaniaControl = new GRIArcaniaControl();
	this.control = control;
};
$hxClasses["GRIControlVillage"] = GRIControlVillage;
GRIControlVillage.__name__ = "GRIControlVillage";
GRIControlVillage.prototype = {
	loadVillage: function(persistenceMaster,villageDimensionSave) {
		var jsonVillageShared = persistenceMaster.jsonVillageShared;
		if(jsonVillageShared == null) {
			this.arcaniaControl.noSaveData();
		} else {
			var villageData = JsonMainTypes.jsonparservillageS.fromJson(jsonVillageShared);
			var arcania = villageData.arcania;
			this.arcaniaControl.loadData(arcania);
		}
		if(persistenceMaster.jsonVillageDimensions != null) {
			var jsonDimensions = JsonMainTypes.jsonparservillageD.fromJson(persistenceMaster.jsonVillageDimensions);
		}
	}
	,setupUI: function() {
		this.arcaniaControl.setupUI(this.control);
	}
	,update: function(miliseconds) {
		this.arcaniaControl.update(miliseconds);
	}
	,getSharedSaveJson: function() {
		var shared = { talentGeneral : null, arcania : this.arcaniaControl.arcaniaModel.persistence};
		return JsonMainTypes.jsonwritervillageS.write(shared);
	}
	,getDimensionsSaveJson: function() {
		var shared = { talentDimension : null};
		return JsonMainTypes.jsonwritervillageD.write(shared);
	}
	,overlayRender: function() {
		this.arcaniaControl.overlayRender();
	}
	,__class__: GRIControlVillage
};
var EffectUnit = function() {
	this.elements = [];
};
$hxClasses["EffectUnit"] = EffectUnit;
EffectUnit.__name__ = "EffectUnit";
EffectUnit.prototype = {
	__class__: EffectUnit
};
var GRIEffects = function(spine,view) {
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.aux = this1;
	this.xpEffectShown_Variator = 0;
	this.bloodSplattersAnims = ["splatterb","splatterc","splatterd"];
	this.bloodSplatters = [];
	this.textEffects = [];
	this.random = new seedyrng_Random();
	this.spine = spine;
	var _g = 0;
	var _g1 = GRIEffects.tabs.length;
	while(_g < _g1) {
		var i = _g++;
		spine.spineGroups.push(new SpineGroup());
	}
	view.uiCreation.singleTag(GRIView.tagTabBattle);
	view.uiCreation.activeLayer = GRIView.LAYER_EFFECT;
	var group = this.getSpineGroup(GRIView.tagTabBattle);
	var _g = 0;
	while(_g < 15) {
		var i = _g++;
		var eu = new EffectUnit();
		var t = view.addText("","EFFECT",GRIView.ARCHETYPE_TEXT_ACTION,null);
		t.style.color = 16777215;
		var image = new UIElement();
		image.style.sprite = Sprite.create("purpleback",44,39);
		var self = image.transform.position;
		self.x = 200;
		self.y = 200;
		var self1 = image.transform.size;
		self1.x = 44;
		self1.y = 39;
		view.uiCreation.addElement(image);
		view.uiCreation.addElement(t);
		eu.elements.push(image);
		eu.elements.push(t);
		eu.skeletonUnit = spine.loadSkeletonUnit("spine_text_effect",group,autogen_GriTxts.spine_text_effect,false);
		eu.skeletonUnit.bind("text",t.offsetAnimationTransform,"number_test",t);
		eu.skeletonUnit.bind("root",image.offsetAnimationTransform,"background");
		this.textEffects.push(eu);
	}
	this.bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	this.bloodEffect.layer = view.uiCreation.activeLayer;
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	var bloodEffect = spine.loadSkeletonUnit("spine_blood",group,autogen_GriTxts.spine_blood,true);
	bloodEffect.layer = 0;
	var eu = new EffectUnit();
	eu.skeletonUnit = bloodEffect;
	this.bloodSplatters.push(eu);
	this.hitEffect = spine.loadSkeletonUnit("spine_hit",group,autogen_GriTxts.spine_hit,true);
	var hit = this.hitEffect;
	hit.layer = view.uiCreation.activeLayer;
	this.levelupEffect = spine.loadSkeletonUnit("spine_hit",group,autogen_GriTxts.spine_hit,true);
	var hit = this.levelupEffect;
	hit.layer = view.uiCreation.activeLayer;
	hit.xAutoSpriteScale = 0.2734375;
	hit.yAutoSpriteScale = 0.2734375;
	this.levelupEffect.autoText[0].text = "Level Up";
	this.areaClearEffect = spine.loadSkeletonUnit("spine_text_box",group,autogen_GriTxts.spine_text_box,true);
	var hit = this.areaClearEffect;
	hit.layer = view.uiCreation.activeLayer;
	hit.xAutoSpriteScale = 1.;
	hit.yAutoSpriteScale = 1.;
	hit.autoText[0].text = "Area Clear";
	view.uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
};
$hxClasses["GRIEffects"] = GRIEffects;
GRIEffects.__name__ = "GRIEffects";
GRIEffects.prototype = {
	update: function() {
		var _g_current = 0;
		var _g_array = this.textEffects;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var _g2_current = 0;
			var _g2_array = value.elements;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index1 = _g3_key;
				var ele = _g3_value;
				ele.visible = !value.skeletonUnit.isIdle() && ele.offsetAnimationTransform.active;
			}
		}
	}
	,getSpineGroup: function(arg0) {
		return this.spine.spineGroups[GRIEffects.tabs.indexOf(arg0)];
	}
	,getFreeEffect: function(array) {
		var _g_current = 0;
		var _g_array = array;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.skeletonUnit.isIdle()) {
				return value;
			}
		}
		return array[0];
	}
	,showFadeUpTextOnTransform: function(text,t) {
		this.showFadeUpText(t.get_centerX(),t.get_centerY(),text);
	}
	,showFadeUpTextOnCursor: function(text) {
		var xCenter = Mouse.mouse.get_mousePosition().x;
		var yCenter = Mouse.mouse.get_mousePosition().y;
		this.showFadeUpText(xCenter,yCenter,text);
	}
	,showFadeUpText: function(xCenter,yCenter,text) {
		var effect = this.getFreeEffect(this.textEffects);
		effect.elements[1].text = text;
		var _g_current = 0;
		var _g_array = effect.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.transform.centerIn(xCenter,yCenter);
		}
		effect.skeletonUnit.startAnimation("fadeupslow");
		if(effect.skeletonUnit.isIdle()) {
			CrossTarget.alert("ALERT ISSUE");
		}
	}
	,showXP: function(xp,target,type) {
		this.xpEffectShown_Variator++;
		this.xpEffectShown_Variator %= 2;
		var effect = this.getFreeEffect(this.textEffects);
		var xR = this.random.random() * 30 - 15;
		var yR = this.random.random() * 10 + this.xpEffectShown_Variator * 20;
		var _g_current = 0;
		var _g_array = effect.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.transform.centerIn(target.transform.get_centerX() + xR,target.transform.get_centerY() + yR);
		}
		effect.elements[1].text = xp + "XP";
		if(type == "special") {
			effect.skeletonUnit.startAnimation("down_slideleft2");
		} else {
			effect.skeletonUnit.startAnimation("down_slideleft");
		}
	}
	,showText: function(text,target) {
		var effect = this.getFreeEffect(this.textEffects);
		var xR = 0;
		var yR = 0;
		var _g_current = 0;
		var _g_array = effect.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.transform.centerIn(target.transform.get_centerX() + xR,target.transform.get_centerY() + yR);
		}
		effect.elements[1].text = text;
		effect.skeletonUnit.startAnimation("popinfast");
	}
	,showHitEffect: function(target,anim,scaleX,scaleY) {
		this.hitEffect.startAnimation(anim);
		var tmp = target.transform.get_centerX() | 0;
		this.hitEffect.xAutoSpriteOffset = tmp;
		var tmp = target.transform.get_centerY() | 0;
		this.hitEffect.yAutoSpriteOffset = tmp;
		this.hitEffect.xAutoSpriteScale = scaleX;
		this.hitEffect.yAutoSpriteScale = scaleY;
	}
	,showEffectInSkeleton: function(target,effect,animation,xOff,yOff,autoScaleX,autoScaleY) {
		if(autoScaleY == null) {
			autoScaleY = 1.0;
		}
		if(autoScaleX == null) {
			autoScaleX = 1.0;
		}
		effect.startAnimation(animation);
		effect.xAutoSpriteScale = autoScaleX;
		effect.yAutoSpriteScale = autoScaleY;
		effect.xAutoSpriteOffset = target.xAutoSpriteOffset + xOff | 0;
		effect.yAutoSpriteOffset = target.yAutoSpriteOffset + yOff | 0;
	}
	,showEffect: function(target,effect,animation,radialRandomDistance) {
		if(radialRandomDistance == null) {
			radialRandomDistance = 0;
		}
		effect.startAnimation(animation);
		effect.xAutoSpriteOffset = target.transform.get_centerX() | 0;
		effect.yAutoSpriteOffset = target.transform.get_centerY() | 0;
		if(radialRandomDistance > 0) {
			var self = this.aux;
			self.x = 0;
			self.y = radialRandomDistance;
			var this1 = this.aux;
			var angle = seedyrng_Seedy.random() * Math.PI * 2;
			var pivot = null;
			var self = this1;
			var cosAngle = Math.cos(angle);
			var sinAngle = Math.sin(angle);
			var dx = self.x;
			var dy = self.y;
			if(pivot != null) {
				dx = self.x - pivot.x;
				dy = self.y - pivot.y;
			}
			self.x = dx * cosAngle - dy * sinAngle;
			self.y = dx * sinAngle + dy * cosAngle;
			effect.xAutoSpriteOffset += this.aux.x | 0;
			effect.yAutoSpriteOffset += this.aux.y | 0;
		}
	}
	,showEffectInList: function(target,effects,animation,radialRandomDistance) {
		if(radialRandomDistance == null) {
			radialRandomDistance = 0;
		}
		var animation1 = seedyrng_Seedy.choice(animation);
		this.showEffect(target,this.getFreeEffect(effects).skeletonUnit,animation1,radialRandomDistance);
	}
	,showClearEffect: function(clearMessage) {
		var effect = this.areaClearEffect;
		var _this = effect.animationState;
		if(0 < _this.tracks.length) {
			var current = _this.tracks[0];
			if(current != null) {
				var _this1 = _this.queue;
				_this1.objects.push(2);
				_this1.objects.push(current);
				_this1.AnimationState_this.animationsChanged = true;
				var next = current.next;
				while(next != null) {
					var _this1 = _this.queue;
					_this1.objects.push(3);
					_this1.objects.push(next);
					next = next.next;
				}
				current.next = null;
				var entry = current;
				while(true) {
					var from = entry.mixingFrom;
					if(from == null) {
						break;
					}
					var _this1 = _this.queue;
					_this1.objects.push(2);
					_this1.objects.push(from);
					_this1.AnimationState_this.animationsChanged = true;
					entry.mixingFrom = null;
					entry.mixingTo = null;
					entry = from;
				}
				_this.tracks[current.trackIndex] = null;
				var _this1 = _this.queue;
				if(!_this1.drainDisabled) {
					_this1.drainDisabled = true;
					var listenersArray = _this1.AnimationState_this.listeners;
					var i = 0;
					while(i < _this1.objects.length) {
						var type = _this1.objects[i];
						var result = _this1.objects[i + 1];
						var entry = result;
						var listenersCount = listenersArray.array.length;
						var listeners = listenersArray.begin();
						while(true) {
							var _switchCond2 = type;
							if(_switchCond2 == 0) {
								if(entry.listener != null) {
									entry.listener.start(entry);
								}
								var ii = 0;
								while(ii < listenersCount) {
									var result1 = listeners[ii];
									result1.start(entry);
									++ii;
								}
								break;
							} else if(_switchCond2 == 1) {
								if(entry.listener != null) {
									entry.listener.interrupt(entry);
								}
								var ii1 = 0;
								while(ii1 < listenersCount) {
									var result2 = listeners[ii1];
									result2.interrupt(entry);
									++ii1;
								}
								break;
							} else if(_switchCond2 == 2) {
								if(entry.listener != null) {
									entry.listener.end(entry);
								}
								var ii2 = 0;
								while(ii2 < listenersCount) {
									var result3 = listeners[ii2];
									result3.end(entry);
									++ii2;
								}
								if(entry.listener != null) {
									entry.listener.dispose(entry);
								}
								var ii3 = 0;
								while(ii3 < listenersCount) {
									var result4 = listeners[ii3];
									result4.dispose(entry);
									++ii3;
								}
								_this1.AnimationState_this.trackEntryPool.free(entry);
								break;
							} else if(_switchCond2 == 3) {
								if(entry.listener != null) {
									entry.listener.dispose(entry);
								}
								var ii4 = 0;
								while(ii4 < listenersCount) {
									var result5 = listeners[ii4];
									result5.dispose(entry);
									++ii4;
								}
								_this1.AnimationState_this.trackEntryPool.free(entry);
								break;
							} else if(_switchCond2 == 4) {
								if(entry.listener != null) {
									entry.listener.complete(entry);
								}
								var ii5 = 0;
								while(ii5 < listenersCount) {
									var result6 = listeners[ii5];
									result6.complete(entry);
									++ii5;
								}
								break;
							} else if(_switchCond2 == 5) {
								var result7 = _this1.objects[i++ + 2];
								var event = result7;
								if(entry.listener != null) {
									entry.listener.event(entry,event);
								}
								var ii6 = 0;
								while(ii6 < listenersCount) {
									var result8 = listeners[ii6];
									result8.event(entry,event);
									++ii6;
								}
								break;
							}
							break;
						}
						listenersArray.end();
						i += 2;
					}
					var this1 = _this1.objects;
					this1.splice(0,this1.length);
					_this1.drainDisabled = false;
				}
			}
		}
		var _this = effect.skeleton;
		var bones = _this.bones;
		var i = 0;
		var n = _this.bones.length;
		while(i < n) {
			var result = bones[i];
			var _this1 = result;
			var data = _this1.data;
			_this1.x = data.x;
			_this1.y = data.y;
			_this1.rotation = data.rotation;
			_this1.scaleX = data.scaleX;
			_this1.scaleY = data.scaleY;
			_this1.shearX = data.shearX;
			_this1.shearY = data.shearY;
			++i;
		}
		var ikConstraints = _this.ikConstraints;
		var i = 0;
		var n = _this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var constraint = result;
			constraint.mix = constraint.data.mix;
			constraint.softness = constraint.data.softness;
			constraint.bendDirection = constraint.data.bendDirection;
			constraint.compress = constraint.data.compress;
			constraint.stretch = constraint.data.stretch;
			++i;
		}
		var transformConstraints = _this.transformConstraints;
		var i = 0;
		var n = _this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			constraint.mixScaleX = data.mixScaleX;
			constraint.mixScaleY = data.mixScaleY;
			constraint.mixShearY = data.mixShearY;
			++i;
		}
		var pathConstraints = _this.pathConstraints;
		var i = 0;
		var n = _this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.position = data.position;
			constraint.spacing = data.spacing;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			++i;
		}
		var slots = _this.slots;
		var n = _this.slots.length;
		var src = slots;
		var dest = _this.drawOrder;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,n);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + n));
		}
		var i = 0;
		while(i < n) {
			var result = slots[i];
			var _this = result;
			var _this1 = _this.color;
			var color = _this.data.color;
			_this1.r = color.r;
			_this1.g = color.g;
			_this1.b = color.b;
			_this1.a = color.a;
			if(_this.darkColor != null) {
				var _this2 = _this.darkColor;
				var color1 = _this.data.darkColor;
				_this2.r = color1.r;
				_this2.g = color1.g;
				_this2.b = color1.b;
				_this2.a = color1.a;
			}
			if(_this.data.attachmentName == null) {
				var attachment = null;
				if(_this.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this3 = result1;
						var result2 = _this.attachment;
						var _this4 = result2;
						tmp = (_this3.deformAttachment != null ? _this3.deformAttachment : _this3) != (_this4.deformAttachment != null ? _this4.deformAttachment : _this4);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = _this.deform;
						this1.splice(0,this1.length);
					}
					_this.attachment = attachment;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			} else {
				_this.attachment = null;
				var attachment1 = _this.bone.skeleton.getAttachment(_this.data.index,_this.data.attachmentName);
				if(_this.attachment != attachment1) {
					var tmp1;
					if(!(!((attachment1) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result3 = attachment1;
						var _this5 = result3;
						var result4 = _this.attachment;
						var _this6 = result4;
						tmp1 = (_this5.deformAttachment != null ? _this5.deformAttachment : _this5) != (_this6.deformAttachment != null ? _this6.deformAttachment : _this6);
					} else {
						tmp1 = true;
					}
					if(tmp1) {
						var this2 = _this.deform;
						this2.splice(0,this2.length);
					}
					_this.attachment = attachment1;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			}
			++i;
		}
		var _this = effect.animationState;
		var animation = _this.data.skeletonData.findAnimation("clear_animation");
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + "clear_animation"));
		}
		var delay = 0.6;
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var last;
		if(0 < _this.tracks.length) {
			last = _this.tracks[0];
		} else {
			var this1 = _this.tracks;
			var size = 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			last = null;
		}
		if(last != null) {
			while(last.next != null) last = last.next;
		}
		var entry = _this.trackEntryPool.obtain();
		entry.trackIndex = 0;
		entry.animation = animation;
		entry.loop = false;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this1 = _this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this1.tempAnimationStateDataKey.a1 = from;
			_this1.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this1.animationToMixTime;
			var key = _this1.tempAnimationStateDataKey;
			var defaultValue = _this1.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		if(last == null) {
			var from;
			if(0 < _this.tracks.length) {
				from = _this.tracks[0];
			} else {
				var this1 = _this.tracks;
				var size = 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					this1[size - 1] = null;
				}
				from = null;
			}
			_this.tracks[0] = entry1;
			entry1.previous = null;
			if(from != null) {
				var _this1 = _this.queue;
				_this1.objects.push(1);
				_this1.objects.push(from);
				entry1.mixingFrom = from;
				from.mixingTo = entry1;
				entry1.mixTime = 0;
				if(from.mixingFrom != null && from.mixDuration > 0) {
					entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
				}
				var this1 = from.timelinesRotation;
				this1.splice(0,this1.length);
			}
			var _this1 = _this.queue;
			_this1.objects.push(0);
			_this1.objects.push(entry1);
			_this1.AnimationState_this.animationsChanged = true;
			var _this1 = _this.queue;
			if(!_this1.drainDisabled) {
				_this1.drainDisabled = true;
				var listenersArray = _this1.AnimationState_this.listeners;
				var i = 0;
				while(i < _this1.objects.length) {
					var type = _this1.objects[i];
					var result = _this1.objects[i + 1];
					var entry = result;
					var listenersCount = listenersArray.array.length;
					var listeners = listenersArray.begin();
					while(true) {
						var _switchCond2 = type;
						if(_switchCond2 == 0) {
							if(entry.listener != null) {
								entry.listener.start(entry);
							}
							var ii = 0;
							while(ii < listenersCount) {
								var result1 = listeners[ii];
								result1.start(entry);
								++ii;
							}
							break;
						} else if(_switchCond2 == 1) {
							if(entry.listener != null) {
								entry.listener.interrupt(entry);
							}
							var ii1 = 0;
							while(ii1 < listenersCount) {
								var result2 = listeners[ii1];
								result2.interrupt(entry);
								++ii1;
							}
							break;
						} else if(_switchCond2 == 2) {
							if(entry.listener != null) {
								entry.listener.end(entry);
							}
							var ii2 = 0;
							while(ii2 < listenersCount) {
								var result3 = listeners[ii2];
								result3.end(entry);
								++ii2;
							}
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii3 = 0;
							while(ii3 < listenersCount) {
								var result4 = listeners[ii3];
								result4.dispose(entry);
								++ii3;
							}
							_this1.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 3) {
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii4 = 0;
							while(ii4 < listenersCount) {
								var result5 = listeners[ii4];
								result5.dispose(entry);
								++ii4;
							}
							_this1.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 4) {
							if(entry.listener != null) {
								entry.listener.complete(entry);
							}
							var ii5 = 0;
							while(ii5 < listenersCount) {
								var result6 = listeners[ii5];
								result6.complete(entry);
								++ii5;
							}
							break;
						} else if(_switchCond2 == 5) {
							var result7 = _this1.objects[i++ + 2];
							var event = result7;
							if(entry.listener != null) {
								entry.listener.event(entry,event);
							}
							var ii6 = 0;
							while(ii6 < listenersCount) {
								var result8 = listeners[ii6];
								result8.event(entry,event);
								++ii6;
							}
							break;
						}
						break;
					}
					listenersArray.end();
					i += 2;
				}
				var this1 = _this1.objects;
				this1.splice(0,this1.length);
				_this1.drainDisabled = false;
			}
		} else {
			last.next = entry1;
			entry1.previous = last;
			if(delay <= 0) {
				delay += last.getTrackComplete() - entry1.mixDuration;
			}
		}
		entry1.delay = delay;
		effect.xAutoSpriteOffset = Renderer.width / 2 + 300 | 0;
		effect.yAutoSpriteOffset = Renderer.height / 2 - 80 | 0;
	}
	,showDamageNumber: function(damage,target,targetSkel,xR,yR,extraText) {
		if(yR == null) {
			yR = 0;
		}
		if(xR == null) {
			xR = 0;
		}
		var effect = this.getFreeEffect(this.textEffects);
		var _g_current = 0;
		var _g_array = effect.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(target != null) {
				value.transform.centerIn(target.transform.get_centerX() + xR,target.transform.get_centerY() + yR);
			} else {
				value.transform.centerIn(targetSkel.xAutoSpriteOffset + xR,targetSkel.yAutoSpriteOffset + yR);
			}
		}
		if(extraText == null) {
			effect.elements[1].text = damage + "";
		} else {
			effect.elements[1].text = extraText + "\n" + damage;
		}
		effect.skeletonUnit.startAnimation("popin");
	}
	,activeTab: function(currentTab) {
		var _g_current = 0;
		var _g_array = GRIEffects.tabs;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.spine.spineGroups[index].active = value == null || value == currentTab;
		}
	}
	,levelupEffectShow: function(target) {
		var effect = this.levelupEffect;
		effect.startAnimation("level_up");
		if(target != null) {
			effect.xAutoSpriteOffset = target.transform.get_centerX() | 0;
			effect.yAutoSpriteOffset = target.transform.get_centerY() | 0;
		}
	}
	,__class__: GRIEffects
};
var EnemySheets = function() {
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.7;
	_g.h["Speed"] = 1.8;
	_g.h["LifeMax"] = 1.5;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.1;
	this.blueTiger = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.4;
	_g.h["Speed"] = 0.8;
	_g.h["LifeMax"] = 2.3;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.1;
	this.troll = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.3;
	_g.h["Speed"] = 1.0;
	_g.h["LifeMax"] = 0.8;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.1;
	this.nutkin = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.9;
	_g.h["Speed"] = 1.1;
	_g.h["LifeMax"] = 1.3;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Defense"] = 0.11;
	this.toad = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.8;
	_g.h["Speed"] = 0.4;
	_g.h["LifeMax"] = 0.8;
	this.rat = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : null};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.9;
	_g.h["Speed"] = 1.6;
	_g.h["LifeMax"] = 0.3;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.7;
	this.cat = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 1.8;
	_g.h["Speed"] = 0.3;
	_g.h["LifeMax"] = 1.2;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.05;
	_g1.h["Defense"] = 0.05;
	this.giant = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = 0.6;
	_g.h["Speed"] = 1.3;
	_g.h["LifeMax"] = 0.85;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Speed"] = 0.6;
	this.dog = { speciesMultiplier : { attributesBase : _g}, speciesAdd : null, speciesLevelStats : { attributesBase : _g1}};
	this.goblin = { speciesMultiplier : null, speciesLevelStats : null, speciesAdd : null};
};
$hxClasses["EnemySheets"] = EnemySheets;
EnemySheets.__name__ = "EnemySheets";
EnemySheets.prototype = {
	__class__: EnemySheets
};
var GRIEquipFilterControl = function(control) {
	this.buttons = [];
	this.uiFeed = new UIFeedList();
	this.control = control;
};
$hxClasses["GRIEquipFilterControl"] = GRIEquipFilterControl;
GRIEquipFilterControl.__name__ = "GRIEquipFilterControl";
GRIEquipFilterControl.prototype = {
	changeTypeViewed: function(itemType,itemBasePossession) {
		var view = this.control.view;
		view.uiCreation.singleTag(GRIView.tagTabEquip);
		if(this.header == null) {
			this.header = this.control.view.addHeader(GRIEquipFilterControl.LAYOUT_ID,null,Local.getString("FILTERS"));
		}
		var pos = this.control.protoItemMaker.itemGenerationBaseByType.getList(itemType);
		var abv = this.control.protoItemMaker.itemAbbreviationByType.getList(itemType);
		var e = this.uiFeed.element(0);
		e.data.intData = -1;
		e.data.stringData = GRIEquipFilterControl.DATAINPUT_CHANGEFILTER;
		e.infoText = "Show all";
		e.text = "";
		e.visible = true;
		var _g_current = 0;
		var _g_array = abv;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var e = this.uiFeed.element(index + 1);
			e.data.intData = pos[index];
			e.data.stringData = GRIEquipFilterControl.DATAINPUT_CHANGEFILTER;
			e.infoText = "Show only " + this.control.protoItemMaker.items[pos[index]].name;
			if(itemBasePossession != null) {
				var posI = pos[index];
				if(itemBasePossession.length > posI) {
					e.visible = itemBasePossession[posI];
				} else {
					e.visible = false;
				}
			} else {
				e.visible = true;
			}
		}
		this.uiFeed.invisibleAfterCap(pos.length + 1);
		this.buttons.length = this.uiFeed.feedList.length;
		var _g_current = 0;
		var _g_array = this.uiFeed.feedList;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(this.buttons[index] == null) {
				this.buttons[index] = this.control.view.addButton("","XXX",GRIView.ARCHETYPE_BUTTON_WITH_ICON_16,GRIEquipFilterControl.LAYOUT_ID);
				var uic = this.control.view.uiCreation;
				uic.addWithOffset(uic.createImageElement(null,16,16),this.buttons[index],0.5,0.5,0,0,false,true);
			}
			view.ui.feedElement(this.buttons[index],value);
			this.buttons[index].offsets[0].target.style.sprite = this.control.equipControl.equipView.baseItemToSprite[value.data.intData];
			this.buttons[index].offsets[0].target.fitSprite();
			var fh = this.buttons[index].offsets[0].target.transform;
			var self = fh.size;
			var x = self.x;
			var y = self.y;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			var this1 = new Vector2Default(x,y);
			var self1 = this1;
			self1.x *= 0.7;
			self1.y *= 0.7;
			fh.size = self1;
		}
	}
	,updateSelected: function(baseItem) {
		var _g = 0;
		var _g1 = this.buttons;
		while(_g < _g1.length) {
			var element = _g1[_g];
			++_g;
			element.selected = element.data.intData == baseItem;
		}
	}
	,__class__: GRIEquipFilterControl
};
var GRIEquipFilterView = function() { };
$hxClasses["GRIEquipFilterView"] = GRIEquipFilterView;
GRIEquipFilterView.__name__ = "GRIEquipFilterView";
var GRILayoutManual = function() { };
$hxClasses["GRILayoutManual"] = GRILayoutManual;
GRILayoutManual.__name__ = "GRILayoutManual";
GRILayoutManual.createLayouts = function(uiGen) {
	var linearLayouts = [{ horizontal : true, separationX : 0, separationY : 10, childPivotY : 0, childPivotX : 0, element : { id : GRILayoutManual.LAYOUT_EXPLORATION_RESOURCES, x : 232, y : -114, screenPivotY : 0.5, screenPivotX : 0.5, width : 250, height : -1}}];
	var _g_current = 0;
	var _g_array = linearLayouts;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		uiGen.addManualLayout(value);
	}
};
var GRISetView = function(nButtons,layoutId,view,cursorGroup,hasHeader) {
	this.setColors = [11485505,11505217,7319361,4304784,4288175,7422383,11092399,11485556];
	this.buttons = [];
	if(hasHeader) {
		view.addHeader(layoutId,null,Local.getString("EQUIPMENT SETS"));
	}
	var _g = 0;
	var _g1 = nButtons;
	while(_g < _g1) {
		var i = _g++;
		var b = view.addButtonImage("set",autogen_GriPngs.whitediamond,GRIView.ARCHETYPE_BUTTON_WITH_ICON_16,layoutId,GRISetView.SETVIEWTAG);
		b.data.intData = i;
		b.offsets[0].target.style.color = this.setColors[i];
		b.offsets[0].target.styleSelected.color = this.setColors[i];
		this.buttons.push(b);
		if(cursorGroup != null) {
			cursorGroup.elements.push(b);
		}
	}
};
$hxClasses["GRISetView"] = GRISetView;
GRISetView.__name__ = "GRISetView";
GRISetView.prototype = {
	highlight: function(set) {
		var _g_current = 0;
		var _g_array = this.buttons;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.selected = index == set;
		}
	}
	,__class__: GRISetView
};
var GRISettingsControl = function(titleControl) {
	this.titleControl = titleControl;
	this.viewSettings = new GRISettingsView(titleControl.titleView);
	this.feedSliders();
};
$hxClasses["GRISettingsControl"] = GRISettingsControl;
GRISettingsControl.__name__ = "GRISettingsControl";
GRISettingsControl.prototype = {
	update: function() {
		if(this.titleControl.control.battleManager.generalSaveData == null) {
			return;
		}
		var oldMouse = this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility;
		var _g_current = 0;
		var _g_array = this.titleControl.titleView.view.ui.dataEvents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var data = _g1_value;
			if(data.stringData == GRISettingsView.DATA_SETTINGSGO) {
				this.titleControl.changeMode(TitleMode.SETTINGS);
			}
			if(data.stringData == GRISettingsView.DATA_RETURN) {
				this.titleControl.changeMode(TitleMode.NORMAL);
			}
			if(data.stringData == GRISettingsView.DATA_LANGUAGE) {
				Local.language = data.intData;
				this.titleControl.control.battleManager.generalSaveData.language = Local.language;
				this.titleControl.control.requestSaveGeneral();
				CrossTarget.reload();
			}
			if(data.stringData == GRISettingsView.DATA_INCREASE_MOUSE_WHEEL_SENSIBILITY) {
				this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility++;
			}
			if(data.stringData == GRISettingsView.DATA_DECREASE_MOUSE_WHEEL_SENSIBILITY) {
				this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility--;
			}
			if(data.stringData == GRISettingsView.DATA_PIXEL_SCALING) {
				this.titleControl.control.battleManager.generalSaveData.automaticZoom = !this.titleControl.control.battleManager.generalSaveData.automaticZoom;
				this.titleControl.control.requestSaveGeneral();
			}
			if(data.stringData == GRISettingsView.DATA_DEFAULT) {
				this.titleControl.control.battleManager.generalSaveData.automaticZoom = true;
				this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility = GRISettingsControl.DEFAULT_MOUSE_WHEEL;
				this.titleControl.control.battleManager.generalSaveData.masterVolume = GRISettingsControl.DEFAULT_MASTER_VOLUME;
				this.titleControl.control.battleManager.generalSaveData.musicVolume = GRISettingsControl.DEFAULT_MUSIC_VOLUME;
				this.titleControl.control.battleManager.generalSaveData.sfxVolume = GRISettingsControl.DEFAULT_SFX_VOLUME;
				this.feedSliders();
				this.titleControl.control.requestSaveGeneral();
			}
			if(data.stringData == GRISettingsView.DATA_FULL_SCREEN) {
				CrossTarget.toggleFullScreen();
			}
		}
		if(this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility <= 0) {
			this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility = 1;
		}
		if(this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility >= 100) {
			this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility = 99;
		}
		if(oldMouse != this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility) {
			this.titleControl.control.requestSaveGeneral();
		}
		var v = this.titleControl.control.battleManager.generalSaveData.mouseWheelSensibility;
		this.viewSettings.settingsText.text = Local.getIntString("Mouse wheel sensibility: {0}",v);
		this.viewSettings.settingsText.text += "\n" + Local.getBoolString("Automatic Zoom: {0}",this.titleControl.control.battleManager.generalSaveData.automaticZoom);
		UIElementManager.fitTextHeight(this.viewSettings.settingsText);
		var masterVolume = UISliderManager.currentSliderProgress(this.viewSettings.masterVolume) * 100 | 0;
		var musicVolume = UISliderManager.currentSliderProgress(this.viewSettings.musicVolume) * 100 | 0;
		var sfxVolume = UISliderManager.currentSliderProgress(this.viewSettings.sfxVolume) * 100 | 0;
		if(this.titleControl.control.battleManager.generalSaveData.masterVolume != masterVolume || this.titleControl.control.battleManager.generalSaveData.musicVolume != musicVolume || this.titleControl.control.battleManager.generalSaveData.sfxVolume != sfxVolume) {
			this.titleControl.control.battleManager.generalSaveData.masterVolume = masterVolume;
			this.titleControl.control.battleManager.generalSaveData.musicVolume = musicVolume;
			this.titleControl.control.battleManager.generalSaveData.sfxVolume = sfxVolume;
			this.titleControl.control.requestSaveGeneral();
		}
	}
	,feedSliders: function() {
		UISliderManager.setSliderProgress(this.viewSettings.masterVolume,this.titleControl.control.battleManager.generalSaveData.masterVolume / 100);
		UISliderManager.setSliderProgress(this.viewSettings.musicVolume,this.titleControl.control.battleManager.generalSaveData.musicVolume / 100);
		UISliderManager.setSliderProgress(this.viewSettings.sfxVolume,this.titleControl.control.battleManager.generalSaveData.sfxVolume / 100);
	}
	,__class__: GRISettingsControl
};
var GRIViewTitle = function() {
	this.cursorGroup = new CursorGroup();
};
$hxClasses["GRIViewTitle"] = GRIViewTitle;
GRIViewTitle.__name__ = "GRIViewTitle";
GRIViewTitle.prototype = {
	changeMode: function(mode) {
		this.view.ui.tagVisibility(GRIViewTitle.TAG_TITLE_MAIN,mode == TitleMode.NORMAL);
		this.view.ui.tagVisibility(GRIViewTitle.TAG_TITLE_ACCEPT,mode == TitleMode.ACCEPT);
		this.view.ui.tagVisibility(GRIViewTitle.TAG_TITLE_DIMENSION,mode == TitleMode.DIMENSION_SELECT);
		this.view.ui.tagVisibility(GRIViewTitle.TAG_TITLE_LOGO,mode != TitleMode.DIMENSION_SELECT && mode != TitleMode.SETTINGS);
		this.view.ui.tagVisibility(GRIViewTitle.TAG_TITLE_SETTINGS,mode == TitleMode.SETTINGS);
		this.view.ui.genUI.updateAll();
	}
	,addMainButtonToTop: function(id,label) {
	}
	,setupUI: function() {
		this.view.tabMisc.h[GRIView.tagTabTitle.__id__].initialCursorGroup = this.cursorGroup;
		this.cursorGroup.cancelGroup = this.view.tabCursorGroup;
		var v = this.view.tabCursorGroup;
		this.cursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		this.view.uiCreation.singleTag(GRIView.tagTabTitle);
		this.view.uiCreation.tags.push(GRIViewTitle.TAG_TITLE_LOGO);
		var logo = this.view.uiCreation.createImageElement(Sprite.create("logo",420,360),420,360);
		this.view.uiCreation.addElementInLayoutId(logo,"titlelogo");
		var e = this.view.addText("","Version: 0.32r beta",GRIView.ARCHETYPE_HEADER_TIMID,null);
		e.text = "DEMO " + e.text;
		this.view.uiCreation.addWithOffset(e,logo,1,1,-100,-130);
		var e = this.view.addText("",Local.getString("Developed by Pedro Gabriel\nFonteles Furtado"),GRIView.ARCHETYPE_HEADER_TIMID,null);
		e.textPivot.y = 0;
		this.view.uiCreation.addWithOffset(e,logo,1,1,-100,-110);
		HxOverrides.remove(this.view.uiCreation.tags,GRIViewTitle.TAG_TITLE_LOGO);
	}
	,addMainButton: function(id,label,intData,description,extraW) {
		if(extraW == null) {
			extraW = 0;
		}
		this.view.uiCreation.singleTag(GRIView.tagTabTitle);
		this.view.uiCreation.tags.push(GRIViewTitle.TAG_TITLE_MAIN);
		var a = this.view.addButton(id,label,null,GRIViewTitle.LAYOUT_BUTTON_TITLE,null,this.cursorGroup);
		a.data.intData = intData;
		a.transform.size.x += extraW;
		return a;
	}
	,addSpace: function(space) {
		this.view.uiCreation.addEmptyElement(250,space,GRIViewTitle.LAYOUT_BUTTON_TITLE);
	}
	,addDimensionCharacterWidget: function(desc_title,desc_text,button_id,button_text,button_data1,sprite) {
		this.view.uiCreation.singleTag(GRIViewTitle.TAG_TITLE_DIMENSION);
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 550;
		self.y = 130;
		this.view.uiCreation.addElementInLayoutId(e,GRIViewTitle.LAYOUT_CHARACTER_SELECTION);
		var icon = this.view.uiCreation.createImageElement(sprite,94,94);
		this.view.uiCreation.addWithOffset(icon,e,0,0,0,0);
		var description_t = this.view.addText("",desc_title,GRIView.ARCHETYPE_SIMPLE_LARGE,null);
		var self = description_t.textPivot;
		self.x = 0;
		self.y = 0;
		var self = description_t.transform.size;
		self.x = 432;
		self.y = 44;
		this.view.uiCreation.addWithOffset(description_t,e,0,0,108,-4);
		var description_tex = this.view.addText("",desc_text,GRIView.ARCHETYPE_SIMPLE_MEDIUM,null);
		var self = description_tex.textPivot;
		self.x = 0;
		self.y = 0;
		var self = description_tex.transform.size;
		self.x = 432;
		self.y = 44;
		this.view.uiCreation.addWithOffset(description_tex,e,0,0,108,19);
		var b = this.view.addButton(button_id,button_text,null,null,null,this.cursorGroup);
		b.data.intData = button_data1;
		this.view.uiCreation.offsetElement(b,e,0,0,405,80,false,false);
	}
	,setupButtons: function() {
		this.view.uiCreation.singleTag(GRIView.tagTabTitle);
		this.view.uiCreation.tags.push(GRIViewTitle.TAG_TITLE_MAIN);
		this.view.addButtonImage("discord",Sprite.create("discord",91,31),null,GRIViewTitle.LAYOUT_BUTTON_TITLE,null,false,this.cursorGroup);
		var steamButton = this.view.addButton(GRIViewTitle.DATA_STEAM,"",null,GRIViewTitle.LAYOUT_BUTTON_TITLE,null,this.cursorGroup);
		var self = steamButton.transform.size;
		self.x = steamButton.transform.size.x;
		self.y = 60;
		var img = this.view.uiCreation.createImageElement(Sprite.create("steam",81,24),81,24);
		this.view.uiCreation.addWithOffset(img,steamButton,0.5,0.5,0,8);
		var text = this.view.addText("",Local.getString("Full version"),GRIView.ARCHETYPE_TEXT_ACTION,null,null,false);
		this.view.uiCreation.addWithOffset(text,steamButton,0.5,0.5,0,-14);
		this.view.uiCreation.singleTag(GRIView.tagTabTitle);
		this.view.uiCreation.tags.push(GRIViewTitle.TAG_TITLE_ACCEPT);
		this.view.addButton(GRIViewTitle.DATA_ACCEPT,"Start & Accept",null,GRIViewTitle.LAYOUT_BUTTON_TITLE);
		this.view.addText("","We collect log data to make the game better",GRIView.ARCHETYPE_HEADER_TIMID,GRIViewTitle.LAYOUT_BUTTON_TITLE);
		var self = this.view.addText("","Please accept our privacy policy and terms of use",null,GRIViewTitle.LAYOUT_BUTTON_TITLE).textPivot;
		self.x = 0;
		self.y = 0.5;
		this.view.addButton(GRIViewTitle.DATA_PRIVACYSEE,"Privacy policy\n& terms of use",null,GRIViewTitle.LAYOUT_BUTTON_TITLE);
	}
	,addFinalButtons: function() {
		this.view.uiCreation.singleTag(GRIView.tagTabTitle);
		this.view.uiCreation.tags.push(GRIViewTitle.TAG_TITLE_MAIN);
		this.view.addButton(GRIViewTitle.DATA_RESET,Local.getString("Reset"),null,GRIViewTitle.LAYOUT_BUTTON_TITLE,null,this.cursorGroup);
	}
	,__class__: GRIViewTitle
};
var GRISettingsView = function(viewTitle) {
	GRISettingsView.BUTTON_LABELS = [Local.getString("Mouse Wheel Sensibility Up"),Local.getString("Mouse Wheel Sensibility Down"),Local.getString("Toggle automatic zoom"),Local.getString("Reset settings"),Local.getString("Return")];
	var TAG_SETTINGS = GRIViewTitle.TAG_TITLE_SETTINGS;
	this.view = viewTitle.view;
	var settings = viewTitle.addMainButton(GRISettingsView.DATA_SETTINGSGO,Local.getString("Settings"),0,Local.getString("Change settings of the game"));
	this.view.uiCreation.tags.length = 0;
	this.view.uiCreation.tags.push(TAG_SETTINGS);
	this.view.uiCreation.tags.push(GRIView.tagTabTitle);
	this.settingsText = this.view.addText("","SAMPLE",GRIView.ARCHETYPE_SIMPLE_MEDIUM,GRISettingsView.LAYOUT_SETTINGS,null,true);
	var e = this.view.addText("",Local.getString("\r\n\t\tCREDITS\r\n\t\t- Programmer: Pedro Gabriel Fonteles Furtado (Pedro)\r\n\t\t- Writer/Game designer/Main artist: Pedro\r\n\t\t- Lead main character spriter: Mulpix\r\n\t\t- Pixel artists: Pimen, Raphael Hatencia, Guilherme Cyriaco, Afonso Junior, Santiago Díaz González\r\n\t\t- Promotional artist: Caio Augustus Amorim Souza\r\n\t\t- SFX: Rafael Schneider\r\n\t\t- Music: YouFulca, Matheus Carvalho\r\n\t\t"),GRIView.ARCHETYPE_HEADER_TIMID,null);
	e.transform.size.x = 470;
	this.view.uiCreation.addWithOffset(e,this.view.ui.screen,0,0.3,GRIConfiguration.MINIMUM_WIDTH - e.transform.size.x,0);
	var self = e.textPivot;
	self.x = 0;
	self.y = 0;
	var _g_current = 0;
	var _g_array = GRISettingsView.BUTTON_DATAS;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var data = _g1_value;
		var label = GRISettingsView.BUTTON_LABELS[index];
		var button = this.view.addButton("",label,null,GRISettingsView.LAYOUT_SETTINGS,null,viewTitle.cursorGroup);
		button.data.stringData = data;
		button.data.intData = GRISettingsView.BUTTON_DATAS_INT[index];
	}
	this.masterVolume = this.view.uiCreation.addSlider("volumeslide",GRISettingsView.LAYOUT_SETTINGS,viewTitle.cursorGroup,240,120,80,GRIView.COLOR_ACTIVE_BLUE,GRIView.COLOR_BACKGROUND_GRAY,Local.getString("Master volume"),GRIViewConstants.FONT_MAIN,GRIViewConstants.FONT_MAIN);
	this.musicVolume = this.view.uiCreation.addSlider("volumeslidesfx",GRISettingsView.LAYOUT_SETTINGS,viewTitle.cursorGroup,240,120,80,GRIView.COLOR_ACTIVE_BLUE,GRIView.COLOR_BACKGROUND_GRAY,Local.getString("Music"),GRIViewConstants.FONT_MAIN,GRIViewConstants.FONT_MAIN);
	this.sfxVolume = this.view.uiCreation.addSlider("volumeslidesfx",GRISettingsView.LAYOUT_SETTINGS,viewTitle.cursorGroup,240,120,80,GRIView.COLOR_ACTIVE_BLUE,GRIView.COLOR_BACKGROUND_GRAY,Local.getString("SFX"),GRIViewConstants.FONT_MAIN,GRIViewConstants.FONT_MAIN);
	this.view.uiCreation.tags.length = 0;
};
$hxClasses["GRISettingsView"] = GRISettingsView;
GRISettingsView.__name__ = "GRISettingsView";
GRISettingsView.prototype = {
	__class__: GRISettingsView
};
var GRISoundControl = function(control) {
	this.soundPlayer = new audio_SoundPlayer();
	GRIControlUnitBase.call(this,control);
};
$hxClasses["GRISoundControl"] = GRISoundControl;
GRISoundControl.__name__ = "GRISoundControl";
GRISoundControl.__super__ = GRIControlUnitBase;
GRISoundControl.prototype = $extend(GRIControlUnitBase.prototype,{
	setup: function() {
		this.soundPlayer.musicMultiplier = 20;
		var musicFiles = autogen_AllMusic._musicFiles.slice();
		var sfxFiles = autogen_AllSfx._sfxFiles.slice();
		var _g_current = 0;
		var _g_array = musicFiles;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value = "Assets/music/" + value;
			musicFiles[index] = value;
		}
		var _g_current = 0;
		var _g_array = sfxFiles;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value = "Assets/sfx/" + value;
			sfxFiles[index] = value;
		}
		this.soundPlayer.loadMusicAndSoundEffectsFiles(musicFiles,sfxFiles);
		this.battlePlaylist = this.soundPlayer.registerPlaylist([autogen_AllMusic.battle_battletheme,autogen_AllMusic.battle_battlethemeb]);
		this.challengePlaylist = this.soundPlayer.registerPlaylist([autogen_AllMusic.battle_battlechallenge,autogen_AllMusic.battle_battlechallengeb]);
		this.bossPlaylist = this.soundPlayer.registerPlaylist([autogen_AllMusic.battle_bosstheme,autogen_AllMusic.battle_bossthemeb]);
		this.titlePlaylist = this.soundPlayer.registerPlaylist([autogen_AllMusic.misc_title]);
		this.soundPlayer.startPlaylist(this.titlePlaylist);
	}
	,update: function(miliseconds) {
		if(this.get_bm().generalSaveData != null) {
			this.soundPlayer.masterVolume = this.get_bm().generalSaveData.masterVolume;
			this.soundPlayer.musicVolume = this.get_bm().generalSaveData.musicVolume;
			this.soundPlayer.sfxVolume = this.get_bm().generalSaveData.sfxVolume;
		}
		this.soundPlayer.update(miliseconds);
	}
	,__class__: GRISoundControl
});
var TurnOrderData = function() { };
$hxClasses["TurnOrderData"] = TurnOrderData;
TurnOrderData.__name__ = "TurnOrderData";
var TurnOrderView = function() {
	this.images = [];
};
$hxClasses["TurnOrderView"] = TurnOrderView;
TurnOrderView.__name__ = "TurnOrderView";
TurnOrderView.prototype = {
	__class__: TurnOrderView
};
var TurnOrderControl = function() { };
$hxClasses["TurnOrderControl"] = TurnOrderControl;
TurnOrderControl.__name__ = "TurnOrderControl";
TurnOrderControl.feed = function(view,bm,viewGRI,sprites) {
	var turnList = bm.turnList;
	while(turnList.length > view.images.length) {
		var im = viewGRI.uiCreation.createImageElement(null,36,36);
		viewGRI.uiCreation.addElementInLayoutId(im,view.layoutId);
		im.style.alpha = 80;
		if(view.images.length == 0) {
			var size = im.transform.size.x;
			var b = 6;
			var border = viewGRI.uiCreation.createBorder(size + b,size + b);
			viewGRI.uiCreation.addWithOffset(border,im,0,0,-b / 2,-b / 2);
		}
		view.images.push(im);
	}
	var _g_current = 0;
	var _g_array = view.images;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		if(turnList.length > index) {
			value.style.sprite = sprites[turnList[index]];
			value.visible = true;
			if(value.style.sprite == null) {
				value.style.sprite = Sprite.create("heroicon",512,512);
			}
		} else {
			value.visible = false;
		}
	}
};
var GRIUnlockControl = function(control) {
	this.NON_DEFAULT_TAGS = [GRIView.idTabCharacter,GRIView.idTabEquip,GRIView.idTabMemory,GRIView.idTabVillage];
	this.messages = new NotificationsMessageAnimatedRetained();
	this.lockSystemUI = new LockSystemUI();
	this.tabLocks = new haxe_ds_StringMap();
	GRIControlUnitBase.call(this,control);
};
$hxClasses["GRIUnlockControl"] = GRIUnlockControl;
GRIUnlockControl.__name__ = "GRIUnlockControl";
GRIUnlockControl.__super__ = GRIControlUnitBase;
GRIUnlockControl.prototype = $extend(GRIControlUnitBase.prototype,{
	setupTabLockUnits: function() {
		var _g_current = 0;
		var _g_array = this.NON_DEFAULT_TAGS;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var label = this.get_ui().getElement(value).text;
			var lsuu = this.lockSystemUI.register(value,this.get_view().ui.getElement(value),this.get_uiCreation(),2,2,1,1);
			lsuu.config_notificationText = label;
			lsuu.config_notificationTitle = "unlocked feature";
			this.tabLocks.h[value] = lsuu;
		}
	}
	,setupView: function() {
		this.lockSystemUI.config_lockedSprite = autogen_GriPngs.lock;
		var tmp = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.lock_shake,0,6,1,7,false);
		this.lockSystemUI.config_wantToUnlockSpriteSheet = SpriteLibrary.createSpriteSheetObjectFromSprites(tmp,100);
		var tmp = SpriteLibrary.createSpriteSheetSplice(autogen_GriPngs.lock_explosion,0,11,1,12,false);
		this.lockSystemUI.config_unlockSpriteSheet = SpriteLibrary.createSpriteSheetObjectFromSprites(tmp,100);
		this.lockSystemUI.config_scaleAnimationX = 2;
		this.lockSystemUI.config_scaleAnimationY = 2;
		this.lockSystemUI.config_unlock_SFX = autogen_AllSfx.misc_EXPLDsgn_Implode_15;
		this.lockSystemUI.config_wantToUnlock_SFX = autogen_AllSfx.misc_sfx_padlok_appears;
		this.get_uiCreation().activeLayer = GRIView.LAYER_DEFAULT + 2;
		var parent = this.get_uiCreation().addEmptyElement(0,0,null);
		var background = this.get_uiCreation().createImageElement(autogen_GriPngs.notification_message);
		var header = this.get_view().addText(null,"unlock",GRIView.ARCHETYPE_HEADER_MESSAGE,null);
		var message = this.get_view().addText(null,"MESSAGE",GRIView.ARCHETYPE_SIMPLE_LARGE,null);
		var self = message.textPivot;
		self.x = 0.5;
		self.y = 0;
		this.get_uiCreation().offsetElement(parent,this.get_ui().screen,0.5,0,0,87,false,false);
		this.get_uiCreation().addWithOffset(background,parent,0.5,0,0,0);
		this.get_uiCreation().addWithOffset(header,parent,0.5,0,0,6);
		this.get_uiCreation().addWithOffset(message,parent,0.5,0,0,25);
		this.messages.view_defaultNotificationView.ui_background = background;
		this.messages.view_defaultNotificationView.ui_header = header;
		this.messages.view_defaultNotificationView.ui_message = message;
		this.messages.view_defaultNotificationView.ui_parent = parent;
		this.messages.ui = this.get_ui();
		this.get_uiCreation().activeLayer = GRIView.LAYER_DEFAULT;
		this.lockSystemUI.notificationSystem = this.messages;
	}
	,update: function(miliseconds) {
		this.lockSystemUI.update(this._control.griSounds.soundPlayer);
		this.messages.update(miliseconds);
		if(this.messages.shownMessageThisFrame) {
			this._control.griSounds.soundPlayer.playSfx(autogen_AllSfx.misc_sfx_ui_unlock_tab);
		}
	}
	,updateShouldUnlock: function(key,shouldUnlock,lockMap) {
		if(Object.prototype.hasOwnProperty.call(lockMap.h,key)) {
			this.lockSystemUI.updateShouldUnlock(lockMap.h[key],shouldUnlock);
		}
	}
	,__class__: GRIUnlockControl
});
var ConfirmResult = $hxEnums["ConfirmResult"] = { __ename__:true,__constructs__:null
	,IDLE: {_hx_name:"IDLE",_hx_index:0,__enum__:"ConfirmResult",toString:$estr}
	,WAIT: {_hx_name:"WAIT",_hx_index:1,__enum__:"ConfirmResult",toString:$estr}
	,YES: {_hx_name:"YES",_hx_index:2,__enum__:"ConfirmResult",toString:$estr}
	,NO: {_hx_name:"NO",_hx_index:3,__enum__:"ConfirmResult",toString:$estr}
};
ConfirmResult.__constructs__ = [ConfirmResult.IDLE,ConfirmResult.WAIT,ConfirmResult.YES,ConfirmResult.NO];
var TabMisc = function() {
};
$hxClasses["TabMisc"] = TabMisc;
TabMisc.__name__ = "TabMisc";
TabMisc.prototype = {
	__class__: TabMisc
};
var EventView = function() {
	this.activeEventCount = 5;
	this.eventElements = [];
};
$hxClasses["EventView"] = EventView;
EventView.__name__ = "EventView";
EventView.prototype = {
	initEventElements: function(number,layout,ui) {
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 145;
		self.y = 14;
		e.text = "Dropped Equipment";
		e.textFont = "main14";
		e.style.color = GRIView.COLOR_TEXT_NORMAL;
		e.visible = false;
		ui.addElementInLayoutId(e,layout);
		while(this.eventElements.length < number) {
			var e = new UIElement();
			var self = e.transform.size;
			self.x = 145;
			self.y = 14;
			e.text = "";
			e.style.color = GRIView.COLOR_TEXT_NORMAL;
			ui.addElementInLayoutId(e,layout);
			this.eventElements.push(e);
			e.visible = false;
		}
	}
	,addEvent: function(text,ui) {
		var _g = 0;
		var _g1 = this.eventElements.length;
		while(_g < _g1) {
			var i = _g++;
			if(i == this.eventElements.length - 1) {
				ui.elementText(this.eventElements[this.eventElements.length - i - 1],text,true);
			} else {
				ui.elementText(this.eventElements[this.eventElements.length - i - 1],this.eventElements[this.eventElements.length - i - 2].text,true);
			}
		}
	}
	,__class__: EventView
};
var StatView = function() {
};
$hxClasses["StatView"] = StatView;
StatView.__name__ = "StatView";
StatView.prototype = {
	__class__: StatView
};
var StatMetaInfo = function(intAsText) {
	this.intAsText = intAsText;
};
$hxClasses["StatMetaInfo"] = StatMetaInfo;
StatMetaInfo.__name__ = "StatMetaInfo";
StatMetaInfo.prototype = {
	__class__: StatMetaInfo
};
var StatViewCreatorGRI = function() { };
$hxClasses["StatViewCreatorGRI"] = StatViewCreatorGRI;
StatViewCreatorGRI.__name__ = "StatViewCreatorGRI";
StatViewCreatorGRI.create = function(griView,layoutId,withIcon,withBackground,withStatName,textFont) {
	if(textFont == null) {
		textFont = "main";
	}
	if(withStatName == null) {
		withStatName = true;
	}
	if(withBackground == null) {
		withBackground = true;
	}
	if(withIcon == null) {
		withIcon = false;
	}
	var uiCreation = griView.uiCreation;
	var headerX = 8;
	if(withIcon) {
		headerX += 13;
	}
	var posStatX = 180;
	var sv = new StatView();
	sv.parent = UICreation.createEmptyElement(275,20);
	if(withBackground) {
		sv.parent.style.fill = true;
		sv.parent.style.color = 2762554;
	}
	sv.headerText = griView.addText("","Header",GRIView.ARCHETYPE_HEADER_STAT,null);
	sv.headerText.textFont = textFont;
	var self = sv.headerText.transform.size;
	self.x = 280;
	self.y = 12;
	var self = sv.headerText.textPivot;
	self.x = 0;
	self.y = 0.5;
	sv.statText = griView.addText("","998","statvalue",null);
	sv.statText.textFont = textFont;
	if(withStatName) {
		var self = sv.statText.textPivot;
		self.x = 1;
		self.y = 0.5;
	} else {
		var self = sv.statText.textPivot;
		self.x = 0;
		self.y = 0.5;
		posStatX = headerX + 20;
	}
	var self = sv.statText.transform.size;
	self.x = 60;
	self.y = 12;
	sv.statTextAfter = griView.addText("","999","statvalueafter",null);
	var self = sv.statTextAfter.transform.size;
	self.x = 0;
	self.y = 60;
	var self = sv.statTextAfter.textPivot;
	self.x = 1;
	self.y = 0.5;
	sv.statTextAfter.textFont = textFont;
	if(withIcon) {
		sv.headerIcon = griView.uiCreation.createImageElement(null,11,11);
	}
	uiCreation.addElementInLayoutId(sv.parent,layoutId);
	uiCreation.addWithOffset(sv.headerText,sv.parent,0,0.5,headerX,0,false,false);
	uiCreation.addWithOffset(sv.statText,sv.parent,0,0.5,posStatX,0,false,false);
	uiCreation.addWithOffset(sv.statTextAfter,sv.parent,0,0.5,270,0,false,false);
	if(sv.headerIcon != null) {
		uiCreation.addWithOffset(sv.headerIcon,sv.parent,0,0.5,3,0);
	}
	return sv;
};
var ActorView = function(layoutId) {
	this.tagId = null;
	this.stats = [];
	this.layoutId = layoutId;
};
$hxClasses["ActorView"] = ActorView;
ActorView.__name__ = "ActorView";
ActorView.prototype = {
	__class__: ActorView
};
var EmoticonLibrary = function() {
	this.emoticonMapId = new haxe_ds_StringMap();
	this.emoticonMap = new haxe_ds_IntMap();
};
$hxClasses["EmoticonLibrary"] = EmoticonLibrary;
EmoticonLibrary.__name__ = "EmoticonLibrary";
EmoticonLibrary.prototype = {
	add: function(sprite,unicode,id) {
		var em = new Emoticon(sprite,unicode);
		this.emoticonMap.h[unicode] = em;
		if(id != null) {
			this.emoticonMapId.h[id] = em;
		}
		em.id = id;
	}
	,__class__: EmoticonLibrary
};
var ActorViewLogic = function() { };
$hxClasses["ActorViewLogic"] = ActorViewLogic;
ActorViewLogic.__name__ = "ActorViewLogic";
ActorViewLogic.setupEmoticons = function() {
	var code = 880;
	var h = ActorViewLogic.AttributeExplanation.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		var spK = StringTools.replace(key1,"-","");
		var spriteName = "icon" + spK;
		var sprite = autogen_GriPngs.allSprites.h[spriteName];
		if(sprite != null) {
			ActorViewLogic.attributeEmoticons.add(sprite,code,key1);
			++code;
		}
	}
};
ActorViewLogic.feed = function(actor,actorView,griView,headerText,drawBackground,filter,afterStats,setEquipNames,bm,drawAttributeText,textFont) {
	if(textFont == null) {
		textFont = "main";
	}
	if(drawAttributeText == null) {
		drawAttributeText = true;
	}
	if(setEquipNames == null) {
		setEquipNames = -1;
	}
	if(actor == null) {
		return;
	}
	if(actorView.header == null) {
		actorView.header = griView.addHeader(actorView.layoutId,actorView.tagId,"PLAYER STATS");
	}
	actorView.header.text = headerText;
	var uiCreation = griView.uiCreation;
	if(actorView.tagId != null) {
		uiCreation.tags.push(actorView.tagId);
	}
	var statPos = 0;
	var h = actor.attributesCalculated.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var attr = _g1_value;
		if(ActorViewLogic.ignoredStats.indexOf(key1) != -1) {
			continue;
		}
		if(filter != null && filter.indexOf(key1) == -1) {
			continue;
		}
		var badStat = -103213;
		var afterStat = badStat;
		if(afterStats != null && Object.prototype.hasOwnProperty.call(afterStats.h,key1)) {
			afterStat = afterStats.h[key1];
		}
		if(attr == 0 && (afterStat == badStat || afterStat == 0)) {
			continue;
		}
		while(statPos >= actorView.stats.length) {
			var sv = StatViewCreatorGRI.create(griView,actorView.layoutId,false,drawBackground,drawAttributeText,textFont);
			actorView.stats.push(sv);
		}
		var attrText = null;
		var afterText = null;
		if(Object.prototype.hasOwnProperty.call(ActorViewLogic.attributeMetaData.h,key1)) {
			var meta = ActorViewLogic.attributeMetaData.h[key1];
			var text = meta.intAsText[attr];
			attrText = text;
			if(afterStat != badStat) {
				afterText = meta.intAsText[afterStat];
			}
		}
		if(afterText == null && afterStat != badStat) {
			afterText = "" + afterStat;
		}
		if(afterText != null && afterStat > 999) {
			attrText = null;
		} else if(attrText == null) {
			attrText = "" + attr;
		}
		var sv1 = actorView.stats[statPos];
		if(drawAttributeText) {
			sv1.headerText.text = key1;
		} else {
			sv1.headerText.text = null;
		}
		sv1.headerText.emoticonLibrary = ActorViewLogic.attributeEmoticons;
		var emoji = sv1.headerText.emoticonLibrary.emoticonMapId.h[key1];
		if(emoji != null) {
			if(drawAttributeText) {
				var code = emoji.character;
				var tmp = String.fromCodePoint(code) + "   ";
				sv1.headerText.text = tmp + sv1.headerText.text;
			} else {
				var code1 = emoji.character;
				var tmp1 = String.fromCodePoint(code1);
				sv1.headerText.text = tmp1;
			}
		}
		sv1.statText.text = attrText;
		sv1.headerText.visible = true;
		sv1.statText.visible = true;
		sv1.statTextAfter.visible = attr != afterStat && afterStat != badStat;
		if(Object.prototype.hasOwnProperty.call(ActorViewLogic.AttributeExplanation.h,key1)) {
			griView.ui.hover.setHoverGeneric(sv1.parent,key1,ActorViewLogic.AttributeExplanation.h[key1]);
		} else {
			griView.ui.hover.removeHover(sv1.parent);
		}
		if(sv1.statTextAfter.visible) {
			sv1.statTextAfter.text = afterText;
			if(attr > afterStat) {
				sv1.statTextAfter.style.color = 13245982;
			} else {
				sv1.statTextAfter.style.color = 11004149;
			}
		}
		++statPos;
	}
	if(setEquipNames >= 0) {
		while(statPos >= actorView.stats.length) {
			var sv = StatViewCreatorGRI.create(griView,actorView.layoutId,false,drawBackground,drawAttributeText);
			actorView.stats.push(sv);
		}
		var sv = actorView.stats[statPos];
		sv.headerText.text = "";
		sv.headerText.visible = false;
		sv.statText.visible = false;
		sv.statTextAfter.visible = false;
		++statPos;
		var es = actor.equipmentSets[setEquipNames].equipmentSlots;
		var _g_current = 0;
		var _g_array = es;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value >= 0) {
				while(statPos >= actorView.stats.length) {
					var sv = StatViewCreatorGRI.create(griView,actorView.layoutId,false,drawBackground,drawAttributeText);
					actorView.stats.push(sv);
				}
				var e = actor.equipment[value];
				var name = GRIControlEquip.GetEquipName(e,bm);
				var sv1 = actorView.stats[statPos];
				sv1.headerText.text = name;
				sv1.headerText.visible = true;
				sv1.statText.visible = false;
				sv1.statTextAfter.visible = false;
				++statPos;
			}
		}
	}
	var _g = statPos;
	var _g1 = actorView.stats.length;
	while(_g < _g1) {
		var i = _g++;
		var sv = actorView.stats[i];
		actorView.stats[i].headerText.visible = false;
		actorView.stats[i].statText.visible = false;
		actorView.stats[i].statTextAfter.visible = false;
		griView.ui.hover.removeHover(sv.parent);
	}
	if(actorView.tagId != null) {
		HxOverrides.remove(uiCreation.tags,actorView.tagId);
	}
};
var GRIViewCharacterTab = function() {
	this.achievementView = new GRIAchievementView(GRIViewCharacterTab.LAYOUT_ACHIEVEMENT);
};
$hxClasses["GRIViewCharacterTab"] = GRIViewCharacterTab;
GRIViewCharacterTab.__name__ = "GRIViewCharacterTab";
GRIViewCharacterTab.prototype = {
	setupView: function() {
	}
	,__class__: GRIViewCharacterTab
};
var GRIViewConstants = function() { };
$hxClasses["GRIViewConstants"] = GRIViewConstants;
GRIViewConstants.__name__ = "GRIViewConstants";
var CurrencyView = function() {
	this.currencies = [];
};
$hxClasses["CurrencyView"] = CurrencyView;
CurrencyView.__name__ = "CurrencyView";
CurrencyView.prototype = {
	__class__: CurrencyView
};
var CurrencyViewLogic = function() { };
$hxClasses["CurrencyViewLogic"] = CurrencyViewLogic;
CurrencyViewLogic.__name__ = "CurrencyViewLogic";
CurrencyViewLogic.update = function(view,viewGRI,bm) {
	var layoutId = view.layoutId;
	var currencyPos = 0;
	if(view.tagId != null) {
		viewGRI.uiCreation.tags.push(view.tagId);
	}
	var h = bm.wdata.currency.currencies.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		if(CurrencyViewLogic.visibleCurrencies.indexOf(key1) != -1) {
			while(view.currencies.length < currencyPos + 1) view.currencies.push(StatViewCreatorGRI.create(viewGRI,layoutId,true));
			view.currencies[currencyPos].headerText.text = key1;
			view.currencies[currencyPos].statText.text = value.value + "";
			view.currencies[currencyPos].statTextAfter.text = "";
			view.currencies[currencyPos].headerIcon.style.sprite = CurrencyViewLogic.currencyToSprite.h[key1];
			view.currencies[currencyPos].headerIcon.style.color = view.currencies[currencyPos].headerText.style.color;
			++currencyPos;
		}
	}
};
var GRIViewEquip = function(view) {
	this.equipment_MaxNumberPage = 1;
	this.equipment_CurrentPage = 0;
	this.modSprites = [autogen_GriPngs.iconAttack,autogen_GriPngs.iconDefense,autogen_GriPngs.iconSpeed,autogen_GriPngs.iconLifeMax,autogen_GriPngs.iconModRage,autogen_GriPngs.iconBlood,autogen_GriPngs.iconModThick,autogen_GriPngs.iconModTranquil,autogen_GriPngs.iconModAuron,autogen_GriPngs.iconModLocke,autogen_GriPngs.iconMagicAttack,autogen_GriPngs.iconModVivi,autogen_GriPngs.iconModLulu,autogen_GriPngs.iconModVincent,autogen_GriPngs.iconDeathblood];
	this.attributeEmoticons = new EmoticonLibrary();
	this.baseItemToSprite = [];
	this.cursor_sets = new CursorGroup();
	this.cursor_slots = new CursorGroup();
	this.cursor_items = new CursorGroup();
	this.cursor_mainAction = new CursorGroup();
	this.hover_tag = new Tag();
	this.hover_Texts = [];
	this.equippedViews = [];
	this.equipmentViews = [];
	this.view = view;
};
$hxClasses["GRIViewEquip"] = GRIViewEquip;
GRIViewEquip.__name__ = "GRIViewEquip";
GRIViewEquip.prototype = {
	setup: function() {
		this.scroll = this.view.uiCreation.addScrollToLayout(GRIViewEquip.layoutIdEquip);
		GRIViewUtilities.addDropShadowToScroll(this.view.uiCreation,GRIViewEquip.layoutIdEquip);
		this.scroll.viewport.style.color = 11184810;
		this.actorEquipView = new ActorView("equipactorview");
		this.actorEquipView.tagId = new Tag();
		this.currencyView = new CurrencyView();
		this.currencyView.layoutId = "equipcurrencyview";
		this.currencyView.tagId = new Tag();
		this.cursor_mainAction.cancelGroup = this.view.tabCursorGroup;
		this.view.tabMisc.h[GRIView.tagTabEquip.__id__].initialCursorGroup = this.cursor_mainAction;
		this.cursor_items.cancelGroup = this.cursor_mainAction;
		this.cursor_slots.cancelGroup = this.cursor_mainAction;
		var v = this.cursor_slots;
		this.cursor_items.noElementActivateGroup.set(Direction.WEST,v);
		var v = this.cursor_items;
		this.cursor_slots.noElementActivateGroup.set(Direction.EAST,v);
		var v = this.cursor_sets;
		this.cursor_mainAction.noElementActivateGroup.set(Direction.EAST,v);
		var v = this.cursor_slots;
		this.cursor_sets.noElementActivateGroup.set(Direction.SOUTH,v);
		var v = this.cursor_mainAction;
		this.cursor_sets.noElementActivateGroup.set(Direction.WEST,v);
		var v = this.cursor_slots;
		this.cursor_mainAction.noElementActivateGroup.set(Direction.SOUTH,v);
		var v = this.view.tabCursorGroup;
		this.cursor_mainAction.noElementActivateGroup.set(Direction.NORTH,v);
		var v = this.cursor_mainAction;
		this.cursor_slots.noElementActivateGroup.set(Direction.NORTH,v);
		var v = this.cursor_mainAction;
		this.cursor_items.noElementActivateGroup.set(Direction.NORTH,v);
		this.setView = new GRISetView(5,GRIViewEquip.layoutIdEquipSets,this.view,this.cursor_sets,true);
		this.view.uiCreation.tags.push(this.hover_tag);
		this.view.uiCreation.activeLayer = GRIView.LAYER_HOVER;
		this.view.backgroundElement(GRIViewEquip.layoutIdEquipHover,GRIView.ARCHETYPE_BG_DEFAULT);
		this.hover_Header = this.view.addText("hoverheader","HEADER",GRIView.ARCHETYPE_HEADER_HOVER,GRIViewEquip.layoutIdEquipHover,GRIViewEquip.tagIdEquipHover);
		this.view.ui.genUI.fitWidthOfLayout(this.hover_Header,GRIViewEquip.layoutIdEquipHover);
		HxOverrides.remove(this.view.uiCreation.tags,this.hover_tag);
		this.view.uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
		this.view.addButton(GRIViewEquip.DATA_EQUIP,"Equip",null,GRIViewEquip.LAYOUT_EQUIP_BUTTON_MISC,null,this.cursor_mainAction);
		this.view.addButton(GRIViewEquip.DATA_SELL,"Sell",null,GRIViewEquip.LAYOUT_EQUIP_BUTTON_MISC,null,this.cursor_mainAction);
		var sellWorse = this.view.addButton(GRIViewEquip.DATA_SELL_WORSE,"Sell worse equipment",null,GRIViewEquip.LAYOUT_EQUIP_BUTTON_MISC,null,this.cursor_mainAction);
		this.view.addButton(GRIViewEquip.DATA_UPGRADE,"Enhance",null,GRIViewEquip.LAYOUT_EQUIP_BUTTON_MISC,null,this.cursor_mainAction);
		this.view.ui.hover.setHoverGeneric(sellWorse,"Sell worse equipment","Sells all equipment which is inferior in all aspects to other equipment. Will not sell any equipped items. If the equipment is equipped in another set, it also won't be sold.");
	}
	,equipmentTags: function() {
		this.view.uiCreation.tags.length = 0;
		this.view.uiCreation.tags.push(GRIView.tagTabEquip);
	}
	,feedEquipmentTypeNames: function(equipTypeNames) {
		var LAYOUT_EQUIPPED = "equippedbuttons";
		this.equipmentTags();
		this.view.addHeader(LAYOUT_EQUIPPED,null,Local.getString("EQUIPMENT SLOTS"));
		var _g = 0;
		var _g1 = equipTypeNames.length;
		while(_g < _g1) {
			var i = _g++;
			var tag = new Tag();
			var ele = this.view.addButton(GRIViewEquip.equippedViewIdPart,equipTypeNames[i],"equipbutton",LAYOUT_EQUIPPED,tag,this.cursor_slots);
			var ev = this.createEquipView(ele,tag,null,null,null,null);
			ele.data.intData = i;
			this.equippedViews.push(ev);
		}
	}
	,createEquipView: function(ele,tag,specialElementIcon,sph,spt,mask) {
		HxOverrides.remove(this.view.uiCreation.tags,GRIViewEquip.TAG_EQUIPBUTTON_SPECIALWIDGET);
		if(this.view.uiCreation.tags.indexOf(tag) == -1) {
			this.view.uiCreation.tags.push(tag);
		}
		var mainIcon = null;
		var levelT = null;
		var upgT = null;
		var modSp1 = null;
		var modSp2 = null;
		var skillIcons = [];
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			var w = 25;
			var h = 25;
			var xOff = -w / 2;
			var yOff = -h / 2;
			if(i == 0 || i == 1) {
				xOff = w / 2;
			}
			if(i == 0 || i == 2) {
				yOff = h / 2;
			}
			var e = new UIElement();
			var self = e.transform.size;
			self.x = w;
			self.y = h;
			e.mask = mask;
			e.style.sprite = autogen_GriPngs.skillSfogo;
			this.view.uiCreation.addWithOffset(e,ele,0.5,0.5,xOff,yOff);
			skillIcons.push(e);
		}
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 32;
		self.y = 32;
		mainIcon = e;
		e.mask = mask;
		e.style.sprite = autogen_GriPngs.iconWBroadSword;
		this.view.uiCreation.addWithOffset(e,ele,0.5,0.5,7,0);
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 32;
		self.y = 32;
		modSp1 = e;
		e.mask = mask;
		e.style.sprite = autogen_GriPngs.iconWBroadSword;
		this.view.uiCreation.addWithOffset(e,ele,0.5,0.5,-22,-22);
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 32;
		self.y = 32;
		modSp2 = e;
		e.mask = mask;
		e.style.sprite = autogen_GriPngs.iconWBroadSword;
		this.view.uiCreation.addWithOffset(e,ele,0.5,0.5,-22,1);
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 80;
		self.y = 32;
		e.textPivot.x = 0;
		levelT = e;
		levelT.text = "Lv 0";
		e.mask = mask;
		this.view.uiCreation.addWithOffset(e,ele,0,0.5,6,25);
		var e = new UIElement();
		var self = e.transform.size;
		self.x = 32;
		self.y = 32;
		upgT = e;
		upgT.text = "???";
		e.mask = mask;
		this.view.uiCreation.addWithOffset(e,ele,1,0.5,0,-25);
		var ev = { mainName : ele, mainButton : ele, mainIcon : mainIcon, upgradeText : upgT, modIcon2 : modSp2, modIcon1 : modSp1, levelText : levelT, specialElementIcon : specialElementIcon, specialHeader : sph, specialElementText : spt, tag : tag, skillIcons : skillIcons};
		HxOverrides.remove(this.view.uiCreation.tags,tag);
		return ev;
	}
	,isSelected: function(absoluteEquipPos) {
		var fixedPos = this.EquipmentPosPageFix(absoluteEquipPos);
		if(fixedPos >= 0) {
			var equipV = this.equipmentViews[fixedPos];
			return equipV.mainButton.hovered.state;
		}
		return false;
	}
	,isEquippedSelectedThisFrame: function(slot) {
		var equipV = this.equippedViews[slot];
		var _this = equipV.mainButton.hovered;
		if(_this.state != _this.previousState) {
			return _this.state == true;
		} else {
			return false;
		}
	}
	,isEquippedSelected: function(slot) {
		var equipV = this.equippedViews[slot];
		return equipV.mainButton.hovered.state;
	}
	,hoverOnEquippedButton: function(equippedPos) {
		var equipV = this.equippedViews[equippedPos];
		this.view.ui.genUI.layoutAsHover(equipV.mainButton,GRIViewEquip.layoutIdEquipHover);
		this.view.ui.tagVisibility(GRIViewEquip.tagIdEquipHover,true);
	}
	,hoverOn: function(absoluteEquipPos) {
		var fixedPos = this.EquipmentPosPageFix(absoluteEquipPos);
		if(fixedPos >= 0) {
			var equipV = this.equipmentViews[fixedPos];
			this.view.ui.genUI.layoutAsHover(equipV.mainButton,GRIViewEquip.layoutIdEquipHover);
		}
		this.view.ui.tagVisibility(GRIViewEquip.tagIdEquipHover,fixedPos >= 0);
		this.view.ui.tagVisibility(this.hover_tag,fixedPos >= 0);
	}
	,setEquipmentHoverInfo: function(text,pos) {
		this.view.uiCreation.tags.length = 0;
		while(this.hover_Texts.length <= pos) {
			this.equipmentTags();
			this.view.uiCreation.tags.push(this.hover_tag);
			this.view.uiCreation.activeLayer = GRIView.LAYER_HOVER;
			var e = this.view.addText("","Attr",GRIView.ARCHETYPE_IMPORTANT_TIMID,GRIViewEquip.layoutIdEquipHover,GRIViewEquip.tagIdEquipHover);
			this.view.uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
			this.hover_Texts.push(e);
		}
		var e = this.hover_Texts[pos];
		e.visible = true;
		e.text = text;
		this.view.ui.elementText(e,text,true,0,280,true);
		this.view.uiCreation.tags.length = 0;
	}
	,endEquipmentHoverInfo: function(pos) {
		var _g = pos;
		var _g1 = this.hover_Texts.length;
		while(_g < _g1) {
			var i = _g++;
			this.hover_Texts[i].visible = false;
		}
	}
	,feedEquipment: function(equipId,absoluteEquipPos,equipmentName,selected,mainSprite,modSp1,modSp2,lvTxt,upTxt) {
		var fixedPos = this.EquipmentPosPageFix(absoluteEquipPos);
		if(fixedPos >= 0) {
			while(this.equipmentViews.length <= fixedPos) {
				this.equipmentTags();
				var tag = new Tag();
				this.view.uiCreation.tags.push(tag);
				var element = this.view.addButton(BattleConstants.EQUIPMENT_VIEW_ID_PART,"Equipment","equipbutton",GRIViewEquip.layoutIdEquip,null,this.cursor_items);
				var specialHeader;
				var specialHeaderText;
				var specialHeaderIcon;
				this.view.uiCreation.tags.push(GRIViewEquip.TAG_EQUIPBUTTON_SPECIALWIDGET);
				this.view.uiCreation.activeLayer = GRIView.LAYER_DEFAULT + 1;
				var greyXpos = 70;
				var grayW = 160;
				grayW = 50;
				greyXpos = 0;
				var numberX = greyXpos + 45;
				numberX = greyXpos;
				var iconSize = 11;
				var iconX = greyXpos + grayW - iconSize - 3;
				var e = new UIElement();
				e.style.fill = true;
				e.style.color = GRIView.COLOR_BACKGROUND_GRAY;
				var self = e.transform.size;
				self.x = grayW;
				self.y = 20;
				e.mask = this.scroll.viewport.transform;
				this.view.uiCreation.addWithOffset(e,element,0,0,greyXpos,-10);
				var e1 = new UIElement();
				e1.text = "Sell:";
				var self1 = e1.textPivot;
				self1.x = 0;
				self1.y = 0;
				var self2 = e1.transform.size;
				self2.x = grayW;
				self2.y = 20;
				e1.mask = this.scroll.viewport.transform;
				this.view.uiCreation.addWithOffset(e1,element,0,0,greyXpos + 5,-10);
				specialHeader = e1;
				e1.visible = false;
				var e2 = new UIElement();
				e2.text = "-10";
				var self3 = e2.textPivot;
				self3.x = 1;
				self3.y = 0;
				var self4 = e2.transform.size;
				self4.x = grayW - iconSize - 6;
				self4.y = 20;
				e2.mask = this.scroll.viewport.transform;
				this.view.uiCreation.addWithOffset(e2,element,0,0,numberX,-10);
				specialHeaderText = e2;
				var e3 = new UIElement();
				var self5 = e3.transform.size;
				self5.x = iconSize;
				self5.y = iconSize;
				var self6 = e3.textPivot;
				self6.x = 1;
				self6.y = 0;
				e3.mask = this.scroll.viewport.transform;
				e3.style.color = 11184810;
				this.view.uiCreation.addWithOffset(e3,element,0,0,iconX,-8);
				specialHeaderIcon = e3;
				this.view.uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
				var ev = this.createEquipView(element,tag,specialHeaderIcon,specialHeader,specialHeaderText,this.scroll.viewport.transform);
				this.equipmentViews.push(ev);
				this.equipmentTags();
			}
			var equipV = this.equipmentViews[fixedPos];
			this.feedEquipmentView(equipId,equipmentName,equipV,mainSprite,modSp1,modSp2,lvTxt,upTxt);
			equipV.mainButton.selected = selected;
			var _g_current = 0;
			var _g_array = equipV.skillIcons;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				value.visible = false;
			}
			return equipV;
		}
		return null;
	}
	,visibilityOfEquipViewCutoff: function(cutOffIndex) {
		var _g_current = 0;
		var _g_array = this.equipmentViews;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			this.view.ui.tagVisibility(value.tag,index < cutOffIndex);
		}
	}
	,feedEquipped: function(equipId,equippedPos,equipmentName,selected,interactable,sprite,modSprite1,modSprite2,levelText,upgradeText,color) {
		var fixedPos = equippedPos;
		if(fixedPos >= 0) {
			var equipV = this.equippedViews[fixedPos];
			equipV.mainButton.selected = selected;
			equipV.mainButton.enabled = interactable;
			var _g_current = 0;
			var _g_array = equipV.skillIcons;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				value.visible = false;
			}
			this.feedEquipmentView(fixedPos,equipmentName,equipV,sprite,modSprite1,modSprite2,levelText,upgradeText,color);
			return equipV;
		}
		return null;
	}
	,feedSkillIcons: function(equipV,icon1,icon2,icon3,icon4) {
		equipV.skillIcons[0].setAllStyleSprites(icon1);
		equipV.skillIcons[1].setAllStyleSprites(icon2);
		equipV.skillIcons[2].setAllStyleSprites(icon3);
		equipV.skillIcons[3].setAllStyleSprites(icon4);
		var _g_current = 0;
		var _g_array = equipV.skillIcons;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var hasSprite = value.style.sprite != null;
			value.style.fill = hasSprite == false;
			value.visible = hasSprite;
		}
	}
	,feedEquipmentView: function(intData,equipmentName,equipV,mainSprite,modSprite,modSprite2,levelText,upgradeText,color) {
		if(color == null) {
			color = 16777215;
		}
		equipV.mainName.text = "";
		equipV.mainButton.data.intData = intData;
		equipV.levelText.text = levelText;
		equipV.upgradeText.text = upgradeText;
		equipV.modIcon1.style.sprite = modSprite;
		equipV.modIcon2.style.sprite = modSprite2;
		equipV.modIcon1.fitSprite();
		equipV.modIcon2.fitSprite();
		if(equipV.mainIcon != null) {
			equipV.mainIcon.style.sprite = mainSprite;
			equipV.mainIcon.style.color = color;
			if(mainSprite != null) {
				var self = equipV.mainIcon.transform.size;
				self.x = mainSprite.rect.width;
				self.y = mainSprite.rect.height;
			}
		}
	}
	,EquipmentPosPageFix: function(absolutepos) {
		var minPos = this.equipment_CurrentPage * GRIViewEquip.equipment_MaxInPage;
		var maxPos = (this.equipment_CurrentPage + 1) * GRIViewEquip.equipment_MaxInPage;
		if(absolutepos < minPos || absolutepos >= maxPos) {
			return -1;
		}
		var pos = absolutepos - minPos;
		return pos;
	}
	,__class__: GRIViewEquip
};
var LittleBattleWidget = function(view) {
	this.TAG_LITTLE = new Tag();
	this.LAYOUT_LITTLE = "layout_little";
	this.view = view;
	this.bigBG = view.uiCreation.createBorder(150,30,GRIView.COLOR_TEXT_HEADER);
	this.bigBG.style.setFill(GRIView.COLOR_BACKGROUND);
	this.statusText = view.uiCreation.createBorder(80,30,GRIView.COLOR_TEXT_HEADER);
	view.uiCreation.addWithOffset(this.statusText,this.bigBG,0,0,155,0,false,false);
	view.uiCreation.addElementInLayoutId(this.bigBG,this.LAYOUT_LITTLE);
	this.hpBar = view.addBar(7,5,"",GRIView.ARCHETYPE_BAR_MINI,null,this.TAG_LITTLE,this.bigBG);
	this.mpBar = view.addBar(7,16,"",GRIView.ARCHETYPE_BAR_MINI,null,this.TAG_LITTLE,this.bigBG);
	this.statusText.textFont = "main";
	this.icon = view.uiCreation.createImageElement(Sprite.create("heroicon",512,512),25,25);
	view.uiCreation.addWithOffset(this.icon,this.bigBG,0,0.5,120,0);
	this.leftText = view.addText("","BLABLA",GRIView.ARCHETYPE_SIMPLE_LARGE,null);
	this.leftText.style.colorText = this.leftText.style.color;
	this.leftText.transform.size.y = 30;
	this.leftText.transform.size.x = 300;
	this.leftText.style.setFill(GRIView.COLOR_BACKGROUND);
	this.leftText.textPivot.x = 0.9;
	view.uiCreation.addWithOffset(this.leftText,this.bigBG,0,0.5,-300,0);
};
$hxClasses["LittleBattleWidget"] = LittleBattleWidget;
LittleBattleWidget.__name__ = "LittleBattleWidget";
LittleBattleWidget.prototype = {
	feed: function(hp,maxHP,mp,maxMP,mode,mpCharge,heroSprite) {
		this.view.ui.updateBarValue(this.hpBar,hp,maxHP);
		this.hpBar.mainText.text = "";
		this.view.ui.updateBarValue(this.mpBar,mp,maxMP);
		this.mpBar.mainText.text = "";
		var modeN = mode;
		this.statusText.text = LittleBattleWidget.stateTexts[modeN];
		this.statusText.style.color = LittleBattleWidget.colors[modeN];
		if(mpCharge) {
			this.mpBar.barPortion.style.sprite = GRIView.SPRITE_PINKGRAD;
		} else {
			this.mpBar.barPortion.style.sprite = GRIView.SPRITE_BLUEGRAD;
		}
		this.icon.style.sprite = heroSprite;
		this.icon.style.color = 11184810;
	}
	,__class__: LittleBattleWidget
};
var MemoryWidget = function() {
};
$hxClasses["MemoryWidget"] = MemoryWidget;
MemoryWidget.__name__ = "MemoryWidget";
MemoryWidget.prototype = {
	__class__: MemoryWidget
};
var GRIViewMemoryTab = function() {
	this.cursorGroup = new CursorGroup();
	this.memoryWidgets = [];
};
$hxClasses["GRIViewMemoryTab"] = GRIViewMemoryTab;
GRIViewMemoryTab.__name__ = "GRIViewMemoryTab";
GRIViewMemoryTab.prototype = {
	setup: function(view) {
		this.scroll = view.uiCreation.addScrollToLayout(GRIViewMemoryTab.LAYOUT_MEMORY_BUTTONS);
		GRIViewUtilities.addDropShadowToScroll(view.uiCreation,GRIViewMemoryTab.LAYOUT_MEMORY_BUTTONS);
		this.cursorGroup.cancelGroup = view.tabCursorGroup;
		var v = view.tabCursorGroup;
		this.cursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		view.tabMisc.h[GRIView.tagTabMemory.__id__].initialCursorGroup = this.cursorGroup;
	}
	,storyButtonHide: function(index) {
		if(this.memoryWidgets.length <= index) {
			return;
		}
		this.memoryWidgets[index].parent.visible = false;
	}
	,storyButtonFeed: function(buttonPos,label,cleared,resumable,newLabel,newLabelText,view,storyId) {
		while(this.memoryWidgets.length <= buttonPos) {
			var mw = new MemoryWidget();
			var parent = new UIElement();
			var self = parent.transform.size;
			self.x = -1;
			self.y = 50;
			mw.parent = parent;
			view.uiCreation.addElementInLayoutId(parent,GRIViewMemoryTab.LAYOUT_MEMORY_BUTTONS,true);
			mw.button1 = view.addButton("","Button1",null,null,null,this.cursorGroup);
			view.uiCreation.offsetElement(mw.button1,parent,0,0.5,440,0,false,false);
			mw.button2 = view.addButton("","Resume",null,null,null,this.cursorGroup);
			view.uiCreation.offsetElement(mw.button2,parent,0,0.5,280,0,false,false);
			mw.cutsceneTitle = view.addText("","Cutscene",GRIView.ARCHETYPE_HEADER_TIMID,null);
			var self1 = mw.cutsceneTitle.textPivot;
			self1.x = 0;
			self1.y = 0.5;
			view.uiCreation.addWithOffset(mw.cutsceneTitle,parent,0,0.5,20,0);
			mw.button1.mask = this.scroll.viewport.transform;
			mw.button2.mask = this.scroll.viewport.transform;
			mw.cutsceneTitle.mask = this.scroll.viewport.transform;
			mw.button2.visible = false;
			this.memoryWidgets.push(mw);
		}
		this.memoryWidgets[buttonPos].cutsceneTitle.text = label;
		this.memoryWidgets[buttonPos].button2.visible = resumable;
		this.memoryWidgets[buttonPos].button2.enabled = resumable;
		this.memoryWidgets[buttonPos].button2.data.stringData = GRIViewMemoryTab.DATA_RESUME;
		this.memoryWidgets[buttonPos].button2.data.intData = storyId;
		this.memoryWidgets[buttonPos].button1.data.intData = storyId;
		this.memoryWidgets[buttonPos].button1.text = "Start";
		this.memoryWidgets[buttonPos].button1.data.stringData = GRIViewMemoryTab.DATA_START;
		if(resumable) {
			this.memoryWidgets[buttonPos].button1.text = "Restart";
			this.memoryWidgets[buttonPos].button1.data.stringData = GRIViewMemoryTab.DATA_RESTART;
		}
	}
	,__class__: GRIViewMemoryTab
};
var GRIRegionInfo = function() { };
$hxClasses["GRIRegionInfo"] = GRIRegionInfo;
GRIRegionInfo.__name__ = "GRIRegionInfo";
var GRIViewRegion = function(view) {
	this.scrolls = [];
	this.areaCursorGroup = new CursorGroup();
	this.regionCursorGroup = new CursorGroup();
	this.actorView = new ActorView(GRIViewRegion.LAYOUT_REGION_MONSTER_STAT);
	this.areaButtons = new ArrayOfArray();
	this.regionButtons = new ArrayOfArray();
	this.view = view;
};
$hxClasses["GRIViewRegion"] = GRIViewRegion;
GRIViewRegion.__name__ = "GRIViewRegion";
GRIViewRegion.prototype = {
	setup: function() {
		this.view.tabMisc.h[GRIView.tagTabRegion.__id__].initialCursorGroup = this.regionCursorGroup;
		var v = this.areaCursorGroup;
		this.regionCursorGroup.noElementActivateGroup.set(Direction.EAST,v);
		var v = this.regionCursorGroup;
		this.areaCursorGroup.noElementActivateGroup.set(Direction.WEST,v);
		var v = this.view.tabCursorGroup;
		this.regionCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		var v = this.view.tabCursorGroup;
		this.areaCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
		this.regionCursorGroup.cancelGroup = this.view.tabCursorGroup;
		this.areaCursorGroup.cancelGroup = this.regionCursorGroup;
		this.view.uiCreation.singleTag(GRIView.tagTabRegion);
		this.scrolls.push(this.view.uiCreation.addScrollToLayout(GRIViewRegion.LAYOUT_REGION_AREAS));
		this.scrolls.push(this.view.uiCreation.addScrollToLayout(GRIViewRegion.LAYOUT_REGION_REGIONS));
		this.actorView.layoutId = GRIViewRegion.LAYOUT_REGION_MONSTER_STAT;
		this.actorView.tagId = GRIViewRegion.TAG_REGION_MONSTER_STAT;
		this.enemyHeader = this.view.addText("","",GRIView.ARCHETYPE_HEADER_STAT,GRIViewRegion.LAYOUT_REGION_MONSTER);
		this.enemyName = this.view.addText("","",GRIView.ARCHETYPE_TEXT_ENEMYNAME,GRIViewRegion.LAYOUT_REGION_MONSTER);
		var self = this.enemyHeader.textPivot;
		self.x = 0;
		self.y = 0.5;
		var self = this.enemyName.textPivot;
		self.x = 0;
		self.y = 0.5;
		haxe_Log.trace("Multiple shadows...:",{ fileName : "Sources\\GRI\\view/GRIViewRegion.hx", lineNumber : 54, className : "GRIViewRegion", methodName : "setup"});
		GRIViewUtilities.addDropShadowToScroll(this.view.uiCreation,GRIViewRegion.LAYOUT_REGION_AREAS);
		GRIViewUtilities.addDropShadowToScroll(this.view.uiCreation,GRIViewRegion.LAYOUT_REGION_REGIONS);
	}
	,resetAreaScroll: function() {
		this.scrolls[0].offset.y = 10;
	}
	,getHoveredRegion: function(regionData) {
		var _g = 0;
		var _g1 = this.regionButtons.get_length();
		while(_g < _g1) {
			var i = _g++;
			var _g_current = 0;
			var _g_array = this.regionButtons.arrays[i];
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var _this = value.hovered;
				if(_this.state != _this.previousState && _this.state == true) {
					if(value.data.stringData == regionData) {
						return value.data.intData;
					}
				}
			}
		}
		return -1;
	}
	,getHoveredArea: function(areaData) {
		var _g = 0;
		var _g1 = this.areaButtons.get_length();
		while(_g < _g1) {
			var i = _g++;
			var _g_current = 0;
			var _g_array = this.areaButtons.arrays[i];
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value.hovered.state) {
					if(value.data.stringData == areaData) {
						return value.data.intData;
					}
				}
			}
		}
		return -1;
	}
	,feedRegionButtons: function(feed) {
		this.regionButtons.adjustLength(feed.feedLists.length * 2);
		this.view.uiCreation.singleTag(GRIView.tagTabRegion);
		var _g_current = 0;
		var _g_array = feed.feedLists;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var dataIndex = _g1_key;
			var feedlist = _g1_value;
			var viewIndex = dataIndex * 2;
			var elementViewIndex = viewIndex + 1;
			this.regionButtons.adjustLengthOfList(elementViewIndex,feedlist.feedList.length);
			var _g2_current = 0;
			var _g2_array = feedlist.feedList;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var elementIndex = _g3_key;
				var element = _g3_value;
				var eb = this.regionButtons.getElement(elementViewIndex,elementIndex);
				if(eb == null) {
					eb = this.regionButtons.setElement(elementViewIndex,elementIndex,this.view.addButton("","",GRIView.ARCHETYPE_BUTTON_MEDIUM,null,null,this.regionCursorGroup));
				}
				this.view.ui.feedElement(eb,element);
			}
		}
		this.view.ui.genUI.arraysToLayout(this.regionButtons,GRIViewRegion.LAYOUT_REGION_REGIONS);
	}
	,feedAreaButtons: function(feed) {
		var buttons = this.areaButtons;
		buttons.adjustLength(feed.feedLists.length * 2);
		this.view.uiCreation.singleTag(GRIView.tagTabRegion);
		var _g_current = 0;
		var _g_array = feed.feedLists;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var dataIndex = _g1_key;
			var feedlist = _g1_value;
			var viewIndex = dataIndex * 2;
			var elementViewIndex = viewIndex + 1;
			buttons.adjustLengthOfList(elementViewIndex,feedlist.feedList.length);
			var aux = feedlist.feedList.length - 1;
			while(aux >= 0) {
				var auxN = feedlist.feedList.length - 1 - aux;
				var eb = buttons.getElement(elementViewIndex,auxN);
				if(eb == null) {
					eb = buttons.setElement(elementViewIndex,auxN,this.view.addButton("","",null,null,null,this.areaCursorGroup));
				}
				this.view.ui.feedElement(eb,feedlist.feedList[aux]);
				--aux;
			}
		}
		this.view.ui.genUI.arraysToLayout(buttons,GRIViewRegion.LAYOUT_REGION_AREAS);
		var _g = 0;
		var _g1 = this.scrolls;
		while(_g < _g1.length) {
			var scroll = _g1[_g];
			++_g;
			this.view.ui.extendElementHeight(scroll.viewport,95);
		}
	}
	,__class__: GRIViewRegion
};
var autogen_AllSfx = function() { };
$hxClasses["autogen.AllSfx"] = autogen_AllSfx;
autogen_AllSfx.__name__ = "autogen.AllSfx";
var GRIViewSkill = function() {
	this.skillToImage = [];
};
$hxClasses["GRIViewSkill"] = GRIViewSkill;
GRIViewSkill.__name__ = "GRIViewSkill";
GRIViewSkill.prototype = {
	__class__: GRIViewSkill
};
var MessageView = function() {
};
$hxClasses["MessageView"] = MessageView;
MessageView.__name__ = "MessageView";
MessageView.prototype = {
	__class__: MessageView
};
var GRIViewStory = function(view) {
	this.cursorGroup = new CursorGroup();
	this.amountOfStoryMessagesShownByType = [];
	this.amountOfStoryMessagesShown = 0;
	this.messages = [];
	this.view = view;
	this.messages.push([]);
	this.messages.push([]);
	this.amountOfStoryMessagesShownByType.push(0);
	this.amountOfStoryMessagesShownByType.push(0);
};
$hxClasses["GRIViewStory"] = GRIViewStory;
GRIViewStory.__name__ = "GRIViewStory";
GRIViewStory.prototype = {
	startStory: function() {
		this.amountOfStoryMessagesShown = 0;
		this.amountOfStoryMessagesShownByType.length = 0;
		this.amountOfStoryMessagesShownByType.push(0);
		this.amountOfStoryMessagesShownByType.push(0);
		var _g = 0;
		var _g1 = this.messages;
		while(_g < _g1.length) {
			var array = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < array.length) {
				var view = array[_g2];
				++_g2;
				view.parent.visible = false;
			}
		}
		this.view.ui.enterCursorGroup(this.cursorGroup);
	}
	,setup: function() {
		this.view.addButton(GRIViewStory.DATA_BUTTON_ADVANCE,"Advance",null,GRIViewStory.LAYOUT_BUTTON_A,null,this.cursorGroup).data.soundData = -99999;
		this.view.addButton(GRIViewStory.DATA_BUTTON_SKIP,"Skip",null,GRIViewStory.LAYOUT_BUTTON_B,null,this.cursorGroup);
		this.view.addButton(GRIViewStory.DATA_BUTTON_LATER,"Watch Later",null,GRIViewStory.LAYOUT_BUTTON_B,null,this.cursorGroup);
		this.scroll = this.view.uiCreation.addScrollToLayout(GRIViewStory.LAYOUT_STORY);
		GRIViewUtilities.addDropShadowToScroll(this.view.uiCreation,GRIViewStory.LAYOUT_STORY);
	}
	,latestMessageUpdate: function(message,speaker,sprite,messagePos,leftRight) {
		if(speaker == null) {
			speaker = "";
		}
		if(messagePos >= this.amountOfStoryMessagesShown) {
			this.amountOfStoryMessagesShown = messagePos + 1;
			this.amountOfStoryMessagesShownByType[leftRight]++;
			while(this.messages[leftRight].length < this.amountOfStoryMessagesShownByType[leftRight]) {
				var mv = new MessageView();
				var mainE = new UIElement();
				var self = mainE.transform.size;
				self.x = -1;
				self.y = 150;
				this.view.uiCreation.addElementInLayoutId(mainE,GRIViewStory.LAYOUT_STORY,true);
				mv.parent = mainE;
				var text = this.view.addText("","Speaker",GRIView.ARCHETYPE_TEXT_STORYSPEAKER,null);
				var self1 = text.textPivot;
				self1.x = 0;
				self1.y = 0;
				this.view.uiCreation.addWithOffset(text,mv.parent,0,0,214,37,false,true);
				mv.speaker = text;
				mv.text = this.view.addText("","Text",GRIView.ARCHETYPE_TEXT_STORYMESSAGE,null);
				var self2 = mv.text.textPivot;
				self2.x = 0;
				self2.y = 0;
				mv.text.transform.size.x = 350;
				this.view.uiCreation.addWithOffset(mv.text,mv.parent,0,0,214,58,false,true);
				mv.image = this.view.uiCreation.createImageElement(null,128,128);
				this.view.uiCreation.addWithOffset(mv.image,mv.parent,0,0.5,0,0,false,true);
				this.messages[leftRight].push(mv);
			}
			var mV = this.messages[leftRight][this.amountOfStoryMessagesShownByType[leftRight] - 1];
			mV.speaker.text = speaker;
			mV.text.text = message;
			mV.image.style.sprite = sprite;
			mV.parent.visible = true;
			this.view.ui.genUI.updateAll();
			if(messagePos > 0) {
				UIScrollLogic.scrollDown(this.scroll);
			} else {
				UIScrollLogic.scrollUp(this.scroll);
			}
		}
	}
	,__class__: GRIViewStory
};
var GRIViewUnitBase = function(view) {
	this._view = view;
};
$hxClasses["GRIViewUnitBase"] = GRIViewUnitBase;
GRIViewUnitBase.__name__ = "GRIViewUnitBase";
GRIViewUnitBase.prototype = {
	get_ui: function() {
		return this._view.ui;
	}
	,get_view: function() {
		return this._view;
	}
	,get_uiCreation: function() {
		return this._view.uiCreation;
	}
	,__class__: GRIViewUnitBase
	,__properties__: {get_view:"get_view",get_uiCreation:"get_uiCreation",get_ui:"get_ui"}
};
var GRIViewUtilities = function() { };
$hxClasses["GRIViewUtilities"] = GRIViewUtilities;
GRIViewUtilities.__name__ = "GRIViewUtilities";
GRIViewUtilities.addDropShadowToScroll = function(uiCreation,layoutId) {
	var dropShadow = uiCreation.createImageElement(autogen_GriPngs.downshadow,50,60);
	uiCreation.addDropshadow(Direction.SOUTH,layoutId,dropShadow);
	uiCreation.addElement(dropShadow,uiCreation.activeLayer + 1);
	var dropShadow = uiCreation.createImageElement(autogen_GriPngs.downshadow,50,60);
	uiCreation.addDropshadow(Direction.NORTH,layoutId,dropShadow);
	uiCreation.addElement(dropShadow,uiCreation.activeLayer + 1);
};
GRIViewUtilities.getBonusText = function(rollBonus,sep,formRankNames) {
	var text = "";
	var h = rollBonus.attributes.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		if(text.length > 0) {
			text += sep;
		}
		text += GRIControlEquip.getAttributeAddText(key1,value);
	}
	var h = rollBonus.attributeMultiplier.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		if(text.length > 0) {
			text += sep;
		}
		text += GRIControlEquip.getAttributeMulText(key1,value);
	}
	var rankN = formRankNames[rollBonus.rank];
	text += " rank " + rankN;
	return text;
};
var GameAnalyticsIntegration = function() { };
$hxClasses["GameAnalyticsIntegration"] = GameAnalyticsIntegration;
GameAnalyticsIntegration.__name__ = "GameAnalyticsIntegration";
GameAnalyticsIntegration.InitializeCheck = function() {
	var gameKey = "3465b32dba81c3effc66d8193e69e762";
	var secretKey = "0542cc0026b566e59c853ee0a8b7b67680858018";
	var platform = "gitphaser";
	
        if(gameanalytics.GameAnalytics != null && gaInited == false){
            gaInited = true;
            gameanalytics.GameAnalytics.configureBuild(("0.32" + platform));
            gameanalytics.GameAnalytics.initialize(gameKey,secretKey); 
            
        }
        ;
};
GameAnalyticsIntegration.SendDesignEvent = function(eventName,value) {
	
        gameanalytics.GameAnalytics.addDesignEvent(eventName, value);
        ;
};
GameAnalyticsIntegration.SendProgressStartEvent = function(prog1,prog2,prog3) {
	if(prog3 == null) {
		prog3 = "";
	}
	if(prog2 == null) {
		prog2 = "";
	}
	
        gameanalytics.GameAnalytics.addProgressionEvent(gameanalytics.EGAProgressionStatus.Start, prog1, prog2, prog3);
        ;
};
GameAnalyticsIntegration.SendProgressCompleteEvent = function(prog1,prog2,prog3) {
	if(prog3 == null) {
		prog3 = "";
	}
	if(prog2 == null) {
		prog2 = "";
	}
	
        gameanalytics.GameAnalytics.addProgressionEvent(gameanalytics.EGAProgressionStatus.Complete, prog1, prog2, prog3);
        ;
};
GameAnalyticsIntegration.SendProgressFailEvent = function(prog1,prog2,prog3) {
	if(prog3 == null) {
		prog3 = "";
	}
	if(prog2 == null) {
		prog2 = "";
	}
	
        gameanalytics.GameAnalytics.addProgressionEvent(gameanalytics.EGAProgressionStatus.Fail, prog1, prog2, prog3);
        ;
};
var GenUIIntegration = function() {
	this.layoutIntegs = new haxe_ds_StringMap();
};
$hxClasses["GenUIIntegration"] = GenUIIntegration;
GenUIIntegration.__name__ = "GenUIIntegration";
GenUIIntegration.prototype = {
	updateAll: function() {
		var h = this.layoutIntegs.h;
		var manager_h = h;
		var manager_keys = Object.keys(h);
		var manager_length = manager_keys.length;
		var manager_current = 0;
		while(manager_current < manager_length) {
			var manager = manager_h[manager_keys[manager_current++]];
			this.updateWithScroll(manager);
		}
	}
	,updateWithScroll: function(manager) {
		var yScroll = 0;
		if(manager.scroll != null) {
			yScroll = manager.scroll.offset.y;
			var self = manager.scroll.offset;
			self.x = 0;
			self.y = 0;
		}
		this.update(manager);
		if(manager.scroll != null) {
			if(GenUIIntegration.scrollDebug == null || GenUIIntegration.scrollDebug == manager.scroll) {
				UIScrollLogic.recalculateContentRect(manager.scroll,this.ui);
				var this1 = manager.scroll.viewport.transform.position;
				var x = manager.layout.element.x + this.getXCorrection(manager.layout);
				var y = manager.layout.element.y + this.getYCorrection(manager.layout);
				var self = this1;
				self.x = x;
				self.y = y;
				manager.scroll.viewport.transform.size.x = manager.scroll.content.width;
				manager.scroll.offset.y = yScroll;
				this.update(manager);
			}
		}
	}
	,addManualLayout: function(value) {
		this.genMaster.linearLayouts.push(value);
	}
	,getXCorrection: function(layout) {
		return layout.element.screenPivotX * Renderer.width - layout.element.screenPivotX * layout.element.width;
	}
	,getYCorrection: function(layout) {
		return layout.element.screenPivotY * Renderer.height - layout.element.screenPivotY * layout.element.height;
	}
	,update: function(manager) {
		var layout = manager.layout;
		var x = layout.element.x;
		var y = layout.element.y;
		var yoffset = 0;
		if(manager.scroll != null) {
			yoffset += manager.scroll.offset.y;
		}
		var lx = 999999;
		var ly = 999999;
		var lxm = -10;
		var lym = -10;
		var nEle = 0;
		var sizeOfPreviousElement = 0;
		var _g_current = 0;
		var _g_array = manager.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			++nEle;
			if(this.ui.isVisible(value) == false) {
				continue;
			}
			if(value.visible == false) {
				continue;
			}
			var overflow = false;
			if(layout.horizontal) {
				if(value.transform.size.x + x > layout.element.width + layout.element.x && layout.element.width > 0) {
					x = layout.element.x;
					overflow = true;
					var sizeTo = sizeOfPreviousElement;
					if(sizeTo == 0) {
						sizeTo = value.transform.size.y;
					}
					if(nEle > 1) {
						y += sizeTo + layout.separationY;
					}
				}
			} else if(value.transform.size.y + y > layout.element.height + layout.element.y && layout.element.height > 0) {
				overflow = true;
				y = layout.element.y;
				x += value.transform.size.x + layout.separationX;
			}
			var tmp = x + this.getXCorrection(layout);
			value.transform.position.x = tmp - layout.childPivotX * value.transform.size.x;
			var tmp1 = y + this.getYCorrection(layout);
			value.transform.position.y = tmp1 - layout.childPivotY * value.transform.size.y + yoffset;
			sizeOfPreviousElement = value.transform.size.y;
			var _this = value.transform;
			var tX = _this.size.x < 0 ? _this.position.x + _this.size.x : _this.position.x;
			var _this1 = value.transform;
			var tY = _this1.size.y < 0 ? _this1.position.y + _this1.size.y : _this1.position.y;
			var _this2 = value.transform;
			var tXm = _this2.size.x < 0 ? _this2.position.x : _this2.position.x + _this2.size.x;
			var _this3 = value.transform;
			var tYm = _this3.size.y < 0 ? _this3.position.y : _this3.position.y + _this3.size.y;
			if(lx > tX) {
				lx = tX;
			}
			if(ly > tY) {
				ly = tY;
			}
			if(lxm < tXm) {
				lxm = tXm;
			}
			if(lym < tYm) {
				lym = tYm;
			}
			if(layout.horizontal) {
				x += value.transform.size.x + layout.separationX;
			} else {
				y += value.transform.size.y + layout.separationY;
			}
		}
		if(manager.dropShadowMap != null) {
			if(manager.scroll != null) {
				var scrollProgressY = UIScrollLogic.getScrollProgressY(manager.scroll);
				var _g_current = 0;
				var _g_array = DirectionUtils.VERTICAL_DIRECTION;
				while(_g_current < _g_array.length) {
					var _g1_value = _g_array[_g_current];
					var _g1_key = _g_current++;
					var index = _g1_key;
					var value = _g1_value;
					var dropShadow = manager.dropShadowMap.get(value);
					if(dropShadow != null) {
						if(value == Direction.SOUTH) {
							if(scrollProgressY == -1) {
								dropShadow.visible = false;
							} else {
								dropShadow.visible = true;
								var _this = manager.scroll.viewport.transform;
								dropShadow.transform.set_y((_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) - 32);
								dropShadow.transform.size.y = 32;
								dropShadow.transform.set_x(lx);
								dropShadow.transform.size.x = lxm - lx;
								var alpha = 255;
								if(scrollProgressY < 0.2) {
									var scaled = scrollProgressY * 5.;
									alpha = 255 - ((1 - scaled) * 255 | 0);
								}
								dropShadow.style.alpha = alpha;
							}
						}
						if(value == Direction.NORTH) {
							if(scrollProgressY == -1) {
								dropShadow.visible = false;
							} else {
								dropShadow.visible = true;
								dropShadow.transform.set_y(manager.scroll.viewport.transform.get_y() + 32);
								dropShadow.transform.size.y = -32;
								dropShadow.transform.set_x(lx);
								dropShadow.transform.size.x = lxm - lx;
								var alpha1 = 255;
								if(scrollProgressY > 0.8) {
									var diff = (scrollProgressY - 0.8) * 5;
									alpha1 = 255 - (diff * 255 | 0);
								}
								dropShadow.style.alpha = alpha1;
							}
						}
					}
				}
			}
		}
		if(manager.bgElement != null) {
			if(manager.bgFitChildren) {
				var self = manager.bgElement.transform.position;
				self.x = lx;
				self.y = ly;
				var self = manager.bgElement.transform.size;
				self.x = lxm - lx;
				self.y = lym - ly;
				if(manager.margin != null) {
					var self = manager.bgElement.transform.position;
					self.x = lx - manager.margin.x;
					self.y = ly - manager.margin.y;
					var self = manager.bgElement.transform.size;
					self.x = lxm - lx + manager.margin.width + manager.margin.height;
					self.y = lym - ly + manager.margin.height + manager.margin.y;
				}
			} else {
				var lay = manager.layout;
				var this1 = manager.bgElement.transform.position;
				var x = lay.element.x + this.getXCorrection(manager.layout);
				var y = lay.element.y + this.getYCorrection(manager.layout);
				var self = this1;
				self.x = x;
				self.y = y;
				var self = manager.bgElement.transform.size;
				self.x = layout.element.width;
				self.y = layout.element.height;
			}
		}
	}
	,readUIMaster: function(json) {
		this.genMaster = JSON.parse(json);
		this.genMasterAccess = new GenMasterAccess(this.genMaster);
	}
	,extendLayoutWidth: function(layoutId,leeway) {
		var li = this.getLayout(layoutId);
		li.layout.element.width = Renderer.width - li.layout.element.x - leeway;
		this.updateWithScroll(li);
	}
	,fitWidthOfLayout: function(e,layoutId) {
		var li = this.getLayout(layoutId);
		e.transform.size.x = li.layout.element.width;
		this.updateWithScroll(li);
	}
	,layoutAsHover: function(e,layoutId,direction,bgElement) {
		if(direction == null) {
			direction = Direction.EAST;
		}
		var hoverDistance = 60;
		var li = this.getLayout(layoutId);
		this.updateWithScroll(li);
		var h = li.layout.element.height;
		if(h <= 0 && li.bgElement != null) {
			h = li.bgElement.transform.size.y | 0;
		}
		switch(direction._hx_index) {
		case 0:
			var _this = e.transform;
			li.layout.element.y = ((_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) | 0) - h;
			break;
		case 1:
			var _this = e.transform;
			li.layout.element.x = ((_this.size.x < 0 ? _this.position.x + _this.size.x : _this.position.x) | 0) - li.layout.element.width;
			break;
		case 2:
			hoverDistance = 30;
			var _this = e.transform;
			li.layout.element.x = (_this.size.x < 0 ? _this.position.x + _this.size.x : _this.position.x) | 0;
			var _this = e.transform;
			li.layout.element.y = (_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) | 0;
			break;
		case 3:
			var _this = e.transform;
			li.layout.element.x = (_this.size.x < 0 ? _this.position.x : _this.position.x + _this.size.x) | 0;
			var _this = e.transform;
			li.layout.element.y = (_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) | 0;
			break;
		}
		if(li.margin != null) {
			switch(direction._hx_index) {
			case 0:
				var _this = e.transform;
				li.layout.element.y = ((_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) | 0) - h - (li.margin.y + hoverDistance | 0);
				break;
			case 1:
				if(li.margin != null) {
					var _this = e.transform;
					li.layout.element.x = (_this.size.x < 0 ? _this.position.x + _this.size.x : _this.position.x) - li.layout.element.width - li.margin.x - hoverDistance | 0;
				}
				break;
			case 2:
				var _this = e.transform;
				li.layout.element.y = (_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) + li.margin.y + hoverDistance | 0;
				break;
			case 3:
				var _this = e.transform;
				li.layout.element.x = (_this.size.x < 0 ? _this.position.x : _this.position.x + _this.size.x) + li.margin.x + hoverDistance | 0;
				break;
			}
		}
		var opposite = false;
		switch(direction._hx_index) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			if(li.layout.element.x + li.layout.element.width > Renderer.width) {
				opposite = true;
			}
			break;
		}
		if(opposite) {
			this.layoutAsHover(e,layoutId,DirectionUtils.getOpposite(direction),bgElement);
			return;
		}
		if(li.layout.element.x < 0) {
			li.layout.element.x = 0;
		}
		if(li.layout.element.y < 0) {
			li.layout.element.y = 0;
		}
		this.updateWithScroll(li);
		if(bgElement != null) {
			var _this = bgElement.transform;
			if((_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) + 10 > Renderer.height) {
				li.layout.element.y = Renderer.height - bgElement.transform.size.y - 20 | 0;
			} else {
				haxe_Log.trace(li.layout.element.y + li.layout.element.height / 2,{ fileName : "Sources\\UIElements/GenUIIntegration.hx", lineNumber : 286, className : "GenUIIntegration", methodName : "layoutAsHover"});
			}
		}
	}
	,getLayout: function(layoutId) {
		var li = this.layoutIntegs.h[layoutId];
		if(li == null) {
			li = new LayoutIntegManager();
			this.layoutIntegs.h[layoutId] = li;
			li.layout = this.genMasterAccess.getLinearLayout(layoutId);
		}
		return li;
	}
	,addScrollToLayout: function(layoutId) {
		var li = this.getLayout(layoutId);
		var scroll = new UIScroll(li.elements);
		scroll.positionElements = false;
		scroll.viewport = new UIElement();
		scroll.viewport.id = layoutId + "-scroll";
		li.scroll = scroll;
		return scroll;
	}
	,addElementToLayout: function(uiElement,layoutId) {
		var li = this.getLayout(layoutId);
		li.elements.push(uiElement);
		this.updateWithScroll(li);
	}
	,arraysToLayout: function(uiElement,layoutId) {
		var li = this.getLayout(layoutId);
		li.elements.length = 0;
		var _g = 0;
		var _g1 = uiElement.arrays;
		while(_g < _g1.length) {
			var array = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < array.length) {
				var element = array[_g2];
				++_g2;
				li.elements.push(element);
			}
		}
		this.updateWithScroll(li);
	}
	,__class__: GenUIIntegration
};
var LayoutIntegManager = function() {
	this.elements = [];
};
$hxClasses["LayoutIntegManager"] = LayoutIntegManager;
LayoutIntegManager.__name__ = "LayoutIntegManager";
LayoutIntegManager.prototype = {
	__class__: LayoutIntegManager
};
var GlobalData = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["GlobalData"] = GlobalData;
GlobalData.__name__ = "GlobalData";
GlobalData.prototype = {
	__class__: GlobalData
};
var GlobalSetting = function() { };
$hxClasses["GlobalSetting"] = GlobalSetting;
GlobalSetting.__name__ = "GlobalSetting";
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Mouse = function() {
	var x = -1;
	var y = -1;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this._mousePosition = this1;
	this.deltaWheelY = 0;
	this.mousePressed = new reusablemodel_BoolProperty();
	var x = -1;
	var y = -1;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.mouseMoved = this1;
	var x = -1;
	var y = -1;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.mousePositionLastFrame = this1;
	var x = -1;
	var y = -1;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.mousePositionTemporary = this1;
};
$hxClasses["Mouse"] = Mouse;
Mouse.__name__ = "Mouse";
Mouse.prototype = {
	get_mousePosition: function() {
		var self = this.mousePositionTemporary;
		self.x = this._mousePosition.x;
		self.y = this._mousePosition.y;
		return this.mousePositionTemporary;
	}
	,get_x: function() {
		return this._mousePosition.x | 0;
	}
	,get_y: function() {
		return this._mousePosition.y | 0;
	}
	,scaledScreen: function(mul) {
		var self = this._mousePosition;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x *= mul;
		self.y *= mul;
		this._mousePosition = self;
		var self = this.mouseMoved;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x *= mul;
		self.y *= mul;
		this.mouseMoved = self;
		this.deltaWheelY = mul * this.deltaWheelY | 0;
	}
	,calculateMouseMoved: function() {
		this.mouseMoved.x = this.get_mousePosition().x - this.mousePositionLastFrame.x;
		this.mouseMoved.y = this.get_mousePosition().y - this.mousePositionLastFrame.y;
	}
	,setMousePosition: function(arg0,arg1) {
		var self = this._mousePosition;
		self.x = arg0;
		self.y = arg1;
	}
	,__class__: Mouse
	,__properties__: {get_mousePosition:"get_mousePosition",get_y:"get_y",get_x:"get_x"}
};
var Keyboard = function() {
	this.charsUp = [];
	this.charsPressed = [];
	this.charsDown = [];
};
$hxClasses["Keyboard"] = Keyboard;
Keyboard.__name__ = "Keyboard";
Keyboard.prototype = {
	areCharsPressedThisFrame: function(c1,c2,c3) {
		if(c3 == null) {
			c3 = -1;
		}
		if(c2 == null) {
			c2 = -1;
		}
		var array = this.charsPressed;
		var result = true;
		if(c1 >= 0) {
			result = result && array.indexOf(c1) != -1;
		}
		if(c2 >= 0) {
			result = result && array.indexOf(c2) != -1;
		}
		if(c3 >= 0) {
			result = result && array.indexOf(c3) != -1;
		}
		return result;
	}
	,__class__: Keyboard
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var JSKeyboard = function() {
	var _g = new haxe_ds_IntMap();
	_g.h[37] = Keyboard.KEY_LEFT;
	_g.h[39] = Keyboard.KEY_RIGHT;
	_g.h[40] = Keyboard.KEY_DOWN;
	_g.h[38] = Keyboard.KEY_UP;
	_g.h[13] = Keyboard.KEY_ENTER;
	_g.h[27] = Keyboard.KEY_ESCAPE;
	_g.h[32] = Keyboard.KEY_SPACE;
	_g.h[9] = Keyboard.KEY_TAB;
	_g.h[16] = Keyboard.KEY_SHIFT;
	this.mapToSpecialKey = _g;
	this.charsUp = [];
	this.charsPressed = [];
	this.charsDown = [];
	var _gthis = this;
	window.document.onkeydown = function(ev) {
		var eve = ev;
		var toAdd = -1;
		toAdd = _gthis.getCode(eve);
		if(toAdd >= 0) {
			_gthis.charsDown.push(toAdd);
			if(_gthis.charsPressed.indexOf(toAdd) != -1 == false) {
				_gthis.charsPressed.push(toAdd);
			}
		}
	};
	window.document.onkeyup = function(ev) {
		var eve = ev;
		var charCode = _gthis.getCode(ev);
		if(charCode >= 0) {
			_gthis.charsUp.push(charCode);
			HxOverrides.remove(_gthis.charsPressed,charCode);
		}
	};
};
$hxClasses["JSKeyboard"] = JSKeyboard;
JSKeyboard.__name__ = "JSKeyboard";
JSKeyboard.prototype = {
	getCode: function(eve) {
		var toAdd = -1;
		if(eve.key.length == 1) {
			var charCode = eve.key.charCodeAt(0);
			toAdd = charCode;
		} else if(eve.keyCode != null) {
			if(this.mapToSpecialKey.h.hasOwnProperty(eve.keyCode)) {
				toAdd = this.mapToSpecialKey.h[eve.keyCode];
			}
		}
		return toAdd;
	}
	,__class__: JSKeyboard
};
var json2object_reader_BaseParser = function(errors,putils,errorType) {
	this.errors = errors;
	this.putils = putils;
	this.errorType = errorType;
};
$hxClasses["json2object.reader.BaseParser"] = json2object_reader_BaseParser;
json2object_reader_BaseParser.__name__ = "json2object.reader.BaseParser";
json2object_reader_BaseParser.prototype = {
	fromJson: function(jsonString,filename) {
		if(filename == null) {
			filename = "";
		}
		this.putils = new json2object_PositionUtils(jsonString);
		this.errors = [];
		try {
			var json = new hxjsonast_Parser(jsonString,filename).doParse();
			this.loadJson(json);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof hxjsonast_Error)) {
				var e = _g1;
				this.errors.push(json2object_Error.ParserError(e.message,this.putils.convertPosition(e.pos)));
			} else {
				throw _g;
			}
		}
		return this.value;
	}
	,loadJson: function(json,variable) {
		if(variable == null) {
			variable = "";
		}
		var pos = this.putils.convertPosition(json.pos);
		var _g = json.value;
		switch(_g._hx_index) {
		case 0:
			var s = _g.s;
			this.loadJsonString(s,pos,variable);
			break;
		case 1:
			var n = _g.s;
			this.loadJsonNumber(n,pos,variable);
			break;
		case 2:
			var o = _g.fields;
			this.loadJsonObject(o,pos,variable);
			break;
		case 3:
			var a = _g.values;
			this.loadJsonArray(a,pos,variable);
			break;
		case 4:
			var b = _g.b;
			this.loadJsonBool(b,pos,variable);
			break;
		case 5:
			this.loadJsonNull(pos,variable);
			break;
		}
		return this.value;
	}
	,loadJsonNull: function(pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadJsonString: function(s,pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadString: function(s,pos,variable,validValues,defaultValue) {
		if(validValues.indexOf(s) != -1) {
			return s;
		}
		this.onIncorrectType(pos,variable);
		return defaultValue;
	}
	,loadJsonNumber: function(f,pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadJsonUInt: function(f,pos,variable,value) {
		var uint = 0;
		f = StringTools.trim(f);
		var neg = f.charAt(0) == "-";
		if(neg) {
			f = HxOverrides.substr(f,1,null);
		}
		var hex = StringTools.startsWith(f,"0x");
		if(hex) {
			f = HxOverrides.substr(f,2,null);
		}
		var base = hex ? 16 : 10;
		var pow = 1;
		var i = f.length - 1;
		while(i >= 0) {
			var cur = hex ? Std.parseInt("0x" + f.charAt(i)) : Std.parseInt(f.charAt(i));
			if(cur == null) {
				this.onIncorrectType(pos,variable);
				return value;
			}
			uint = uint + pow * cur;
			pow *= base;
			--i;
		}
		return uint;
	}
	,loadJsonInt: function(f,pos,variable,value) {
		if(Std.parseInt(f) != null && Std.parseInt(f) == parseFloat(f)) {
			return Std.parseInt(f);
		}
		this.onIncorrectType(pos,variable);
		return value;
	}
	,loadJsonFloat: function(f,pos,variable,value) {
		if(Std.parseInt(f) != null) {
			return parseFloat(f);
		}
		this.onIncorrectType(pos,variable);
		return value;
	}
	,loadJsonBool: function(b,pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadJsonArray: function(a,pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadJsonArrayValue: function(a,loadJsonFn,variable) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < a.length) {
			var j = a[_g1];
			++_g1;
			var tmp;
			try {
				tmp = loadJsonFn(j,variable);
			} catch( _g2 ) {
				haxe_NativeStackTrace.lastError = _g2;
				var _g3 = haxe_Exception.caught(_g2).unwrap();
				if(js_Boot.__instanceof(_g3,json2object_InternalError)) {
					var e = _g3;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g2;
				}
			}
			_g.push(tmp);
		}
		return _g;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.onIncorrectType(pos,variable);
	}
	,loadObjectField: function(loadJsonFn,field,name,assigned,defaultValue,pos) {
		try {
			var ret = loadJsonFn(field.value,field.name);
			this.mapSet(assigned,name,true);
			return ret;
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,json2object_InternalError)) {
				var e = _g1;
				if(e != json2object_InternalError.ParsingThrow) {
					throw haxe_Exception.thrown(e);
				}
			} else {
				var e = _g1;
				this.errors.push(json2object_Error.CustomFunctionException(e,pos));
			}
		}
		return defaultValue;
	}
	,loadObjectFieldReflect: function(loadJsonFn,field,name,assigned,pos) {
		try {
			this.value[name] = loadJsonFn(field.value,field.name);
			this.mapSet(assigned,name,true);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,json2object_InternalError)) {
				var e = _g1;
				if(e != json2object_InternalError.ParsingThrow) {
					throw haxe_Exception.thrown(e);
				}
			} else {
				var e = _g1;
				this.errors.push(json2object_Error.CustomFunctionException(e,pos));
			}
		}
	}
	,objectSetupAssign: function(assigned,keys,values) {
		var _g = 0;
		var _g1 = keys.length;
		while(_g < _g1) {
			var i = _g++;
			this.mapSet(assigned,keys[i],values[i]);
		}
	}
	,objectErrors: function(assigned,pos) {
		var lastPos = this.putils.convertPosition(new hxjsonast_Position(pos.file,pos.max - 1,pos.max - 1));
		var h = assigned.h;
		var s_h = h;
		var s_keys = Object.keys(h);
		var s_length = s_keys.length;
		var s_current = 0;
		while(s_current < s_length) {
			var s = s_keys[s_current++];
			if(!assigned.h[s]) {
				this.errors.push(json2object_Error.UninitializedVariable(s,lastPos));
			}
		}
	}
	,onIncorrectType: function(pos,variable) {
		this.parsingThrow();
	}
	,parsingThrow: function() {
		if(this.errorType != 0) {
			throw haxe_Exception.thrown(json2object_InternalError.ParsingThrow);
		}
	}
	,objectThrow: function(pos,variable) {
		if(this.errorType == 2) {
			throw haxe_Exception.thrown(json2object_InternalError.ParsingThrow);
		}
		if(this.errorType == 1) {
			this.errors.push(json2object_Error.UninitializedVariable(variable,pos));
		}
	}
	,mapSet: function(map,key,value) {
		map.h[key] = value;
	}
	,__class__: json2object_reader_BaseParser
};
var JsonParser_$1 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_1"] = JsonParser_$1;
JsonParser_$1.__name__ = "JsonParser_1";
JsonParser_$1.__super__ = json2object_reader_BaseParser;
JsonParser_$1.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ sfxVolume : Int, notification : VisibilityNotificationPersistence, musicVolume : Int, mouseWheelSensibility : Int, masterVolume : Int, language : Int, automaticZoom : Bool, achievementData : AchievementsPersistence }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["achievementData","automaticZoom","language","masterVolume","mouseWheelSensibility","musicVolume","notification","sfxVolume"],[false,false,false,false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "achievementData":
				this.value.achievementData = this.loadObjectField(($_=new JsonParser_$3(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"achievementData",assigned,this.value.achievementData,pos);
				break;
			case "automaticZoom":
				this.value.automaticZoom = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"automaticZoom",assigned,this.value.automaticZoom,pos);
				break;
			case "language":
				this.value.language = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"language",assigned,this.value.language,pos);
				break;
			case "masterVolume":
				this.value.masterVolume = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"masterVolume",assigned,this.value.masterVolume,pos);
				break;
			case "mouseWheelSensibility":
				this.value.mouseWheelSensibility = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"mouseWheelSensibility",assigned,this.value.mouseWheelSensibility,pos);
				break;
			case "musicVolume":
				this.value.musicVolume = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"musicVolume",assigned,this.value.musicVolume,pos);
				break;
			case "notification":
				this.value.notification = this.loadObjectField(($_=new JsonParser_$7(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"notification",assigned,this.value.notification,pos);
				break;
			case "sfxVolume":
				this.value.sfxVolume = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"sfxVolume",assigned,this.value.sfxVolume,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { achievementData : new JsonParser_$3([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), automaticZoom : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), language : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), masterVolume : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), mouseWheelSensibility : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), musicVolume : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), notification : new JsonParser_$7([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), sfxVolume : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$1
});
var JsonParser_$10 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_10"] = JsonParser_$10;
JsonParser_$10.__name__ = "JsonParser_10";
JsonParser_$10.__super__ = json2object_reader_BaseParser;
JsonParser_$10.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ status : Int, dataString : String, dataInt : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["dataInt","dataString","status"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "dataInt":
				this.value.dataInt = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"dataInt",assigned,this.value.dataInt,pos);
				break;
			case "dataString":
				this.value.dataString = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"dataString",assigned,this.value.dataString,pos);
				break;
			case "status":
				this.value.status = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"status",assigned,this.value.status,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { dataInt : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), dataString : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), status : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$10
});
var JsonParser_$100 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_100"] = JsonParser_$100;
JsonParser_$100.__name__ = "JsonParser_100";
JsonParser_$100.__super__ = json2object_reader_BaseParser;
JsonParser_$100.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ type : Int, status : BattlePrizeStatus, optionalId : String, amount : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["amount","optionalId","status","type"],[false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "amount":
				this.value.amount = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"amount",assigned,this.value.amount,pos);
				break;
			case "optionalId":
				this.value.optionalId = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"optionalId",assigned,this.value.optionalId,pos);
				break;
			case "status":
				this.value.status = this.loadObjectField(($_=new JsonParser_$101(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"status",assigned,this.value.status,pos);
				break;
			case "type":
				this.value.type = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"type",assigned,this.value.type,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { amount : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), optionalId : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), status : new JsonParser_$101([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), type : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$100
});
var JsonParser_$101 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_101"] = JsonParser_$101;
JsonParser_$101.__name__ = "JsonParser_101";
JsonParser_$101.__super__ = json2object_reader_BaseParser;
JsonParser_$101.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"BattlePrizeStatus",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonString: function(s,pos,variable) {
		switch(s) {
		case "CONSUMED":
			this.value = BattlePrizeStatus.CONSUMED;
			break;
		case "CONSUME_REQUEST":
			this.value = BattlePrizeStatus.CONSUME_REQUEST;
			break;
		case "CONSUME_REQUEST_AUTO":
			this.value = BattlePrizeStatus.CONSUME_REQUEST_AUTO;
			break;
		case "NEW":
			this.value = BattlePrizeStatus.NEW;
			break;
		case "PROCESSED":
			this.value = BattlePrizeStatus.PROCESSED;
			break;
		default:
			this.errors.push(json2object_Error.IncorrectEnumValue(variable,"BattlePrizeStatus",pos));
			this.parsingThrow();
		}
	}
	,loadJsonObject: function(o,pos,variable) {
		if(o.length != 1) {
			this.errors.push(json2object_Error.IncorrectType(variable,"BattlePrizeStatus",pos));
			this.parsingThrow();
		} else {
			var field = o[0];
			var _g = o[0].value.value;
			if(_g._hx_index == 2) {
				var s0 = _g.fields;
				switch(field.name) {
				case "CONSUMED":
					if(s0.length == 0) {
						this.value = BattlePrizeStatus.CONSUMED;
					} else {
						this.errors.push(json2object_Error.InvalidEnumConstructor(field.name,"BattlePrizeStatus",pos));
						this.parsingThrow();
					}
					break;
				case "CONSUME_REQUEST":
					if(s0.length == 0) {
						this.value = BattlePrizeStatus.CONSUME_REQUEST;
					} else {
						this.errors.push(json2object_Error.InvalidEnumConstructor(field.name,"BattlePrizeStatus",pos));
						this.parsingThrow();
					}
					break;
				case "CONSUME_REQUEST_AUTO":
					if(s0.length == 0) {
						this.value = BattlePrizeStatus.CONSUME_REQUEST_AUTO;
					} else {
						this.errors.push(json2object_Error.InvalidEnumConstructor(field.name,"BattlePrizeStatus",pos));
						this.parsingThrow();
					}
					break;
				case "NEW":
					if(s0.length == 0) {
						this.value = BattlePrizeStatus.NEW;
					} else {
						this.errors.push(json2object_Error.InvalidEnumConstructor(field.name,"BattlePrizeStatus",pos));
						this.parsingThrow();
					}
					break;
				case "PROCESSED":
					if(s0.length == 0) {
						this.value = BattlePrizeStatus.PROCESSED;
					} else {
						this.errors.push(json2object_Error.InvalidEnumConstructor(field.name,"BattlePrizeStatus",pos));
						this.parsingThrow();
					}
					break;
				default:
					this.errors.push(json2object_Error.IncorrectEnumValue(variable,"BattlePrizeStatus",pos));
					this.parsingThrow();
				}
			} else {
				this.errors.push(json2object_Error.IncorrectType(field.name,"BattlePrizeStatus",this.putils.convertPosition(field.value.pos)));
				this.parsingThrow();
			}
		}
	}
	,getAuto: function() {
		return new JsonParser_$101([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$101
});
var JsonParser_$103 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_103"] = JsonParser_$103;
JsonParser_$103.__name__ = "JsonParser_103";
JsonParser_$103.__super__ = json2object_reader_BaseParser;
JsonParser_$103.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ talentDimension : TalentDimensionPersistence }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["talentDimension"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "talentDimension") {
				this.value.talentDimension = this.loadObjectField(($_=new JsonParser_$105(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"talentDimension",assigned,this.value.talentDimension,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { talentDimension : new JsonParser_$105([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$103
});
var JsonParser_$105 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_105"] = JsonParser_$105;
JsonParser_$105.__name__ = "JsonParser_105";
JsonParser_$105.__super__ = json2object_reader_BaseParser;
JsonParser_$105.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ talentToSet : Array<TalentSetPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["talentToSet"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "talentToSet") {
				this.value.talentToSet = this.loadObjectField(($_=new JsonParser_$106(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"talentToSet",assigned,this.value.talentToSet,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { talentToSet : new JsonParser_$106([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$105
});
var JsonParser_$106 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_106"] = JsonParser_$106;
JsonParser_$106.__name__ = "JsonParser_106";
JsonParser_$106.__super__ = json2object_reader_BaseParser;
JsonParser_$106.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<TalentSetPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$108(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$106([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$106
});
var JsonParser_$108 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_108"] = JsonParser_$108;
JsonParser_$108.__name__ = "JsonParser_108";
JsonParser_$108.__super__ = json2object_reader_BaseParser;
JsonParser_$108.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ sets : Array<TalentSetPersistenceUnit> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["sets"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "sets") {
				this.value.sets = this.loadObjectField(($_=new JsonParser_$109(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"sets",assigned,this.value.sets,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { sets : new JsonParser_$109([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$108
});
var JsonParser_$109 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_109"] = JsonParser_$109;
JsonParser_$109.__name__ = "JsonParser_109";
JsonParser_$109.__super__ = json2object_reader_BaseParser;
JsonParser_$109.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<TalentSetPersistenceUnit>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$111(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$109([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$109
});
var JsonParser_$11 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_11"] = JsonParser_$11;
JsonParser_$11.__name__ = "JsonParser_11";
JsonParser_$11.__super__ = json2object_reader_BaseParser;
JsonParser_$11.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"String",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonString: function(s,pos,variable) {
		this.value = s;
	}
	,getAuto: function() {
		return new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$11
});
var JsonParser_$111 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_111"] = JsonParser_$111;
JsonParser_$111.__name__ = "JsonParser_111";
JsonParser_$111.__super__ = json2object_reader_BaseParser;
JsonParser_$111.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ rollBonus : AttributeBonus, pointXP : Int, pointLevel : Int, grandBonus : AttributeBonus }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["grandBonus","pointLevel","pointXP","rollBonus"],[false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "grandBonus":
				this.value.grandBonus = this.loadObjectField(($_=new JsonParser_$113(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"grandBonus",assigned,this.value.grandBonus,pos);
				break;
			case "pointLevel":
				this.value.pointLevel = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"pointLevel",assigned,this.value.pointLevel,pos);
				break;
			case "pointXP":
				this.value.pointXP = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"pointXP",assigned,this.value.pointXP,pos);
				break;
			case "rollBonus":
				this.value.rollBonus = this.loadObjectField(($_=new JsonParser_$113(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"rollBonus",assigned,this.value.rollBonus,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { grandBonus : new JsonParser_$113([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), pointLevel : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), pointXP : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), rollBonus : new JsonParser_$113([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$111
});
var JsonParser_$113 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_113"] = JsonParser_$113;
JsonParser_$113.__name__ = "JsonParser_113";
JsonParser_$113.__super__ = json2object_reader_BaseParser;
JsonParser_$113.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ rank : Int, attributes : Map<String, Int>, attributeMultiplier : Map<String, Int> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["attributeMultiplier","attributes","rank"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "attributeMultiplier":
				this.value.attributeMultiplier = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributeMultiplier",assigned,this.value.attributeMultiplier,pos);
				break;
			case "attributes":
				this.value.attributes = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributes",assigned,this.value.attributes,pos);
				break;
			case "rank":
				this.value.rank = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"rank",assigned,this.value.rank,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { attributeMultiplier : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), attributes : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), rank : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$113
});
var JsonParser_$115 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_115"] = JsonParser_$115;
JsonParser_$115.__name__ = "JsonParser_115";
JsonParser_$115.__super__ = json2object_reader_BaseParser;
JsonParser_$115.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ talentGeneral : TalentSharedPersistence, arcania : arcania.logic.ArcaniaPersistence }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["arcania","talentGeneral"],[false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "arcania":
				this.value.arcania = this.loadObjectField(($_=new JsonParser_$117(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"arcania",assigned,this.value.arcania,pos);
				break;
			case "talentGeneral":
				this.value.talentGeneral = this.loadObjectField(($_=new JsonParser_$119(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"talentGeneral",assigned,this.value.talentGeneral,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { arcania : new JsonParser_$117([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), talentGeneral : new JsonParser_$119([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$115
});
var JsonParser_$117 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_117"] = JsonParser_$117;
JsonParser_$117.__name__ = "JsonParser_117";
JsonParser_$117.__super__ = json2object_reader_BaseParser;
JsonParser_$117.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ resources : Map<String, arcania.logic.UnitPersistence>, events : Map<String, arcania.logic.UnitPersistence>, actions : Map<String, arcania.logic.UnitPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["actions","events","resources"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "actions":
				this.value.actions = this.loadObjectField(($_=new JsonParser_$124(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"actions",assigned,this.value.actions,pos);
				break;
			case "events":
				this.value.events = this.loadObjectField(($_=new JsonParser_$124(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"events",assigned,this.value.events,pos);
				break;
			case "resources":
				this.value.resources = this.loadObjectField(($_=new JsonParser_$124(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"resources",assigned,this.value.resources,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { actions : new JsonParser_$124([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), events : new JsonParser_$124([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), resources : new JsonParser_$124([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$117
});
var JsonParser_$119 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_119"] = JsonParser_$119;
JsonParser_$119.__name__ = "JsonParser_119";
JsonParser_$119.__super__ = json2object_reader_BaseParser;
JsonParser_$119.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ talents : Array<TalentUnitPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["talents"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "talents") {
				this.value.talents = this.loadObjectField(($_=new JsonParser_$120(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"talents",assigned,this.value.talents,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { talents : new JsonParser_$120([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$119
});
var JsonParser_$120 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_120"] = JsonParser_$120;
JsonParser_$120.__name__ = "JsonParser_120";
JsonParser_$120.__super__ = json2object_reader_BaseParser;
JsonParser_$120.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<TalentUnitPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$122(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$120([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$120
});
var JsonParser_$122 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_122"] = JsonParser_$122;
JsonParser_$122.__name__ = "JsonParser_122";
JsonParser_$122.__super__ = json2object_reader_BaseParser;
JsonParser_$122.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ xp : Int, seen : Int, level : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["level","seen","xp"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "level":
				this.value.level = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"level",assigned,this.value.level,pos);
				break;
			case "seen":
				this.value.seen = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"seen",assigned,this.value.seen,pos);
				break;
			case "xp":
				this.value.xp = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"xp",assigned,this.value.xp,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { level : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), seen : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), xp : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$122
});
var JsonParser_$124 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_124"] = JsonParser_$124;
JsonParser_$124.__name__ = "JsonParser_124";
JsonParser_$124.__super__ = json2object_reader_BaseParser;
JsonParser_$124.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, arcania.logic.UnitPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$126(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$124([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$124
});
var JsonParser_$126 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_126"] = JsonParser_$126;
JsonParser_$126.__name__ = "JsonParser_126";
JsonParser_$126.__super__ = json2object_reader_BaseParser;
JsonParser_$126.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ seen : Int, rateProgressMicro : Int, progressMiliseconds : Int, amount : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["amount","progressMiliseconds","rateProgressMicro","seen"],[false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "amount":
				this.value.amount = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"amount",assigned,this.value.amount,pos);
				break;
			case "progressMiliseconds":
				this.value.progressMiliseconds = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"progressMiliseconds",assigned,this.value.progressMiliseconds,pos);
				break;
			case "rateProgressMicro":
				this.value.rateProgressMicro = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"rateProgressMicro",assigned,this.value.rateProgressMicro,pos);
				break;
			case "seen":
				this.value.seen = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"seen",assigned,this.value.seen,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { amount : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), progressMiliseconds : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), rateProgressMicro : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), seen : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$126
});
var JsonParser_$128 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_128"] = JsonParser_$128;
JsonParser_$128.__name__ = "JsonParser_128";
JsonParser_$128.__super__ = json2object_reader_BaseParser;
JsonParser_$128.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ allDimensions : Array<GRIGeneralDimensionPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["allDimensions"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "allDimensions") {
				this.value.allDimensions = this.loadObjectField(($_=new JsonParser_$129(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"allDimensions",assigned,this.value.allDimensions,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { allDimensions : new JsonParser_$129([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$128
});
var JsonParser_$129 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_129"] = JsonParser_$129;
JsonParser_$129.__name__ = "JsonParser_129";
JsonParser_$129.__super__ = json2object_reader_BaseParser;
JsonParser_$129.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<GRIGeneralDimensionPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$131(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$129([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$129
});
var JsonParser_$13 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_13"] = JsonParser_$13;
JsonParser_$13.__name__ = "JsonParser_13";
JsonParser_$13.__super__ = json2object_reader_BaseParser;
JsonParser_$13.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, AchievementPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$15(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$13([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$13
});
var JsonParser_$131 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_131"] = JsonParser_$131;
JsonParser_$131.__name__ = "JsonParser_131";
JsonParser_$131.__super__ = json2object_reader_BaseParser;
JsonParser_$131.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ lockSystem : Map<String, LockSystemUnitPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["lockSystem"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "lockSystem") {
				this.value.lockSystem = this.loadObjectField(($_=new JsonParser_$133(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"lockSystem",assigned,this.value.lockSystem,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { lockSystem : new JsonParser_$133([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$131
});
var JsonParser_$133 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_133"] = JsonParser_$133;
JsonParser_$133.__name__ = "JsonParser_133";
JsonParser_$133.__super__ = json2object_reader_BaseParser;
JsonParser_$133.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, LockSystemUnitPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$135(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$133([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$133
});
var JsonParser_$135 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_135"] = JsonParser_$135;
JsonParser_$135.__name__ = "JsonParser_135";
JsonParser_$135.__super__ = json2object_reader_BaseParser;
JsonParser_$135.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ state : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["state"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "state") {
				this.value.state = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"state",assigned,this.value.state,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { state : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$135
});
var JsonParser_$137 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_137"] = JsonParser_$137;
JsonParser_$137.__name__ = "JsonParser_137";
JsonParser_$137.__super__ = json2object_reader_BaseParser;
JsonParser_$137.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ worldVersion : Int, progressionData : Map<String, StoryProgress>, currentStoryId : String }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["currentStoryId","progressionData","worldVersion"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "currentStoryId":
				this.value.currentStoryId = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"currentStoryId",assigned,this.value.currentStoryId,pos);
				break;
			case "progressionData":
				this.value.progressionData = this.loadObjectField(($_=new JsonParser_$139(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"progressionData",assigned,this.value.progressionData,pos);
				break;
			case "worldVersion":
				this.value.worldVersion = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"worldVersion",assigned,this.value.worldVersion,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { currentStoryId : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), progressionData : new JsonParser_$139([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), worldVersion : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$137
});
var JsonParser_$139 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_139"] = JsonParser_$139;
JsonParser_$139.__name__ = "JsonParser_139";
JsonParser_$139.__super__ = json2object_reader_BaseParser;
JsonParser_$139.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, StoryProgress>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$141(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$139([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$139
});
var JsonParser_$141 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_141"] = JsonParser_$141;
JsonParser_$141.__name__ = "JsonParser_141";
JsonParser_$141.__super__ = json2object_reader_BaseParser;
JsonParser_$141.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ wantToWatch : Bool, visibleSeen : Bool, visible : Bool, timesCompleted : Int, index : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["index","timesCompleted","visible","visibleSeen","wantToWatch"],[false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "index":
				this.value.index = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"index",assigned,this.value.index,pos);
				break;
			case "timesCompleted":
				this.value.timesCompleted = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"timesCompleted",assigned,this.value.timesCompleted,pos);
				break;
			case "visible":
				this.value.visible = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"visible",assigned,this.value.visible,pos);
				break;
			case "visibleSeen":
				this.value.visibleSeen = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"visibleSeen",assigned,this.value.visibleSeen,pos);
				break;
			case "wantToWatch":
				this.value.wantToWatch = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"wantToWatch",assigned,this.value.wantToWatch,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { index : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), timesCompleted : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), visible : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), visibleSeen : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), wantToWatch : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$141
});
var JsonParser_$142 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_142"] = JsonParser_$142;
JsonParser_$142.__name__ = "JsonParser_142";
JsonParser_$142.__super__ = json2object_reader_BaseParser;
JsonParser_$142.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Cutscene>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$144(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$142([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$142
});
var JsonParser_$144 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_144"] = JsonParser_$144;
JsonParser_$144.__name__ = "JsonParser_144";
JsonParser_$144.__super__ = json2object_reader_BaseParser;
JsonParser_$144.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ visibilityScript : String, title : String, messages : Array<Message>, id : String, actionLabel : String }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["actionLabel","id","messages","title","visibilityScript"],[false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "actionLabel":
				this.value.actionLabel = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"actionLabel",assigned,this.value.actionLabel,pos);
				break;
			case "id":
				this.value.id = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"id",assigned,this.value.id,pos);
				break;
			case "messages":
				this.value.messages = this.loadObjectField(($_=new JsonParser_$145(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"messages",assigned,this.value.messages,pos);
				break;
			case "title":
				this.value.title = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"title",assigned,this.value.title,pos);
				break;
			case "visibilityScript":
				this.value.visibilityScript = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"visibilityScript",assigned,this.value.visibilityScript,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { actionLabel : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), id : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), messages : new JsonParser_$145([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), title : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), visibilityScript : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$144
});
var JsonParser_$145 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_145"] = JsonParser_$145;
JsonParser_$145.__name__ = "JsonParser_145";
JsonParser_$145.__super__ = json2object_reader_BaseParser;
JsonParser_$145.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Message>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$147(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$145([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$145
});
var JsonParser_$147 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_147"] = JsonParser_$147;
JsonParser_$147.__name__ = "JsonParser_147";
JsonParser_$147.__super__ = json2object_reader_BaseParser;
JsonParser_$147.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ speaker : String, script : String, body : String }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["body","script","speaker"],[false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "body":
				this.value.body = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"body",assigned,this.value.body,pos);
				break;
			case "script":
				this.value.script = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"script",assigned,this.value.script,pos);
				break;
			case "speaker":
				this.value.speaker = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"speaker",assigned,this.value.speaker,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { body : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), script : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), speaker : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$147
});
var JsonParser_$15 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_15"] = JsonParser_$15;
JsonParser_$15.__name__ = "JsonParser_15";
JsonParser_$15.__super__ = json2object_reader_BaseParser;
JsonParser_$15.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ state : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["state"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "state") {
				this.value.state = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"state",assigned,this.value.state,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { state : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$15
});
var JsonParser_$17 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_17"] = JsonParser_$17;
JsonParser_$17.__name__ = "JsonParser_17";
JsonParser_$17.__super__ = json2object_reader_BaseParser;
JsonParser_$17.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ worldVersion : Int, ?veteranLevel : Null<Int>, ?userId : Null<String>, ?timesReviewed : Null<Int>, timeCount : Int, sleeping : Bool, ?skillSets : Null<Array<SkillSet>>, ?retention : Null<RetentionData>, regionProgress : Array<AreaPersistence>, recovering : Bool, prestigeTimes : Int, playerTimesKilled : Int, playerActions : Map<String, PlayerAction>, necessaryToKillInArea : Int, maxArea : Int, killedInArea : Array<Int>, hero : Actor, ?equipLevels : Null<Array<EquipmentLevel>>, enemy : Actor, ?currency : Null<CurrencyHolderPersistent>, ?battlePrizes : Null<Array<BattlePrizePersistent>>, battleAreaRegionMax : Int, battleAreaRegion : Int, battleArea : Int, ?autoRepeat : Null<Bool>, ?autoAdvance : Null<Bool> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["autoAdvance","autoRepeat","battleArea","battleAreaRegion","battleAreaRegionMax","battlePrizes","currency","enemy","equipLevels","hero","killedInArea","maxArea","necessaryToKillInArea","playerActions","playerTimesKilled","prestigeTimes","recovering","regionProgress","retention","skillSets","sleeping","timeCount","timesReviewed","userId","veteranLevel","worldVersion"],[true,true,false,false,false,true,true,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,true,true,true,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "autoAdvance":
				this.value.autoAdvance = this.loadObjectField(($_=new JsonParser_$19(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"autoAdvance",assigned,this.value.autoAdvance,pos);
				break;
			case "autoRepeat":
				this.value.autoRepeat = this.loadObjectField(($_=new JsonParser_$19(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"autoRepeat",assigned,this.value.autoRepeat,pos);
				break;
			case "battleArea":
				this.value.battleArea = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"battleArea",assigned,this.value.battleArea,pos);
				break;
			case "battleAreaRegion":
				this.value.battleAreaRegion = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"battleAreaRegion",assigned,this.value.battleAreaRegion,pos);
				break;
			case "battleAreaRegionMax":
				this.value.battleAreaRegionMax = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"battleAreaRegionMax",assigned,this.value.battleAreaRegionMax,pos);
				break;
			case "battlePrizes":
				this.value.battlePrizes = this.loadObjectField(($_=new JsonParser_$21(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"battlePrizes",assigned,this.value.battlePrizes,pos);
				break;
			case "currency":
				this.value.currency = this.loadObjectField(($_=new JsonParser_$24(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"currency",assigned,this.value.currency,pos);
				break;
			case "enemy":
				this.value.enemy = this.loadObjectField(($_=new JsonParser_$26(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"enemy",assigned,this.value.enemy,pos);
				break;
			case "equipLevels":
				this.value.equipLevels = this.loadObjectField(($_=new JsonParser_$28(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"equipLevels",assigned,this.value.equipLevels,pos);
				break;
			case "hero":
				this.value.hero = this.loadObjectField(($_=new JsonParser_$26(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"hero",assigned,this.value.hero,pos);
				break;
			case "killedInArea":
				this.value.killedInArea = this.loadObjectField(($_=new JsonParser_$29(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"killedInArea",assigned,this.value.killedInArea,pos);
				break;
			case "maxArea":
				this.value.maxArea = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"maxArea",assigned,this.value.maxArea,pos);
				break;
			case "necessaryToKillInArea":
				this.value.necessaryToKillInArea = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"necessaryToKillInArea",assigned,this.value.necessaryToKillInArea,pos);
				break;
			case "playerActions":
				this.value.playerActions = this.loadObjectField(($_=new JsonParser_$31(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"playerActions",assigned,this.value.playerActions,pos);
				break;
			case "playerTimesKilled":
				this.value.playerTimesKilled = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"playerTimesKilled",assigned,this.value.playerTimesKilled,pos);
				break;
			case "prestigeTimes":
				this.value.prestigeTimes = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"prestigeTimes",assigned,this.value.prestigeTimes,pos);
				break;
			case "recovering":
				this.value.recovering = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"recovering",assigned,this.value.recovering,pos);
				break;
			case "regionProgress":
				this.value.regionProgress = this.loadObjectField(($_=new JsonParser_$32(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"regionProgress",assigned,this.value.regionProgress,pos);
				break;
			case "retention":
				this.value.retention = this.loadObjectField(($_=new JsonParser_$35(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"retention",assigned,this.value.retention,pos);
				break;
			case "skillSets":
				this.value.skillSets = this.loadObjectField(($_=new JsonParser_$37(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"skillSets",assigned,this.value.skillSets,pos);
				break;
			case "sleeping":
				this.value.sleeping = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"sleeping",assigned,this.value.sleeping,pos);
				break;
			case "timeCount":
				this.value.timeCount = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"timeCount",assigned,this.value.timeCount,pos);
				break;
			case "timesReviewed":
				this.value.timesReviewed = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"timesReviewed",assigned,this.value.timesReviewed,pos);
				break;
			case "userId":
				this.value.userId = this.loadObjectField(($_=new JsonParser_$41(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"userId",assigned,this.value.userId,pos);
				break;
			case "veteranLevel":
				this.value.veteranLevel = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"veteranLevel",assigned,this.value.veteranLevel,pos);
				break;
			case "worldVersion":
				this.value.worldVersion = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"worldVersion",assigned,this.value.worldVersion,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { autoAdvance : new JsonParser_$19([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), autoRepeat : new JsonParser_$19([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), battleArea : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), battleAreaRegion : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), battleAreaRegionMax : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), battlePrizes : new JsonParser_$21([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), currency : new JsonParser_$24([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), enemy : new JsonParser_$26([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), equipLevels : new JsonParser_$28([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), hero : new JsonParser_$26([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), killedInArea : new JsonParser_$29([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), maxArea : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), necessaryToKillInArea : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), playerActions : new JsonParser_$31([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), playerTimesKilled : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), prestigeTimes : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), recovering : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), regionProgress : new JsonParser_$32([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), retention : new JsonParser_$35([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), skillSets : new JsonParser_$37([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), sleeping : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), timeCount : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), timesReviewed : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), userId : new JsonParser_$41([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), veteranLevel : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), worldVersion : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$17
});
var JsonParser_$19 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_19"] = JsonParser_$19;
JsonParser_$19.__name__ = "JsonParser_19";
JsonParser_$19.__super__ = json2object_reader_BaseParser;
JsonParser_$19.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Bool",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonBool: function(b,pos,variable) {
		this.value = b;
	}
	,getAuto: function() {
		return new JsonParser_$19([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$19
});
var JsonParser_$21 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_21"] = JsonParser_$21;
JsonParser_$21.__name__ = "JsonParser_21";
JsonParser_$21.__super__ = json2object_reader_BaseParser;
JsonParser_$21.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<BattlePrizePersistent>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$100(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$21([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$21
});
var JsonParser_$24 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_24"] = JsonParser_$24;
JsonParser_$24.__name__ = "JsonParser_24";
JsonParser_$24.__super__ = json2object_reader_BaseParser;
JsonParser_$24.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ currencies : Map<String, CurrencyPersistent> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["currencies"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "currencies") {
				this.value.currencies = this.loadObjectField(($_=new JsonParser_$96(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"currencies",assigned,this.value.currencies,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { currencies : new JsonParser_$96([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$24
});
var JsonParser_$26 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_26"] = JsonParser_$26;
JsonParser_$26.__name__ = "JsonParser_26";
JsonParser_$26.__super__ = json2object_reader_BaseParser;
JsonParser_$26.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ xp : ScalingResource, viewAux : Int, ?usableSkills : Null<Array<SkillUsable>>, ?turnRecharge : Null<Array<Int>>, reference : ActorReference, level : Int, ?equipmentSets : Null<Array<EquipmentSet>>, equipment : Array<Equipment>, ?chosenEquipSet : Null<Int>, ?buffs : Null<Array<Buff>>, attributesCalculated : Map<String, Int>, attributesBase : Map<String, Int> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["attributesBase","attributesCalculated","buffs","chosenEquipSet","equipment","equipmentSets","level","reference","turnRecharge","usableSkills","viewAux","xp"],[false,false,true,true,false,true,false,false,true,true,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "attributesBase":
				this.value.attributesBase = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributesBase",assigned,this.value.attributesBase,pos);
				break;
			case "attributesCalculated":
				this.value.attributesCalculated = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributesCalculated",assigned,this.value.attributesCalculated,pos);
				break;
			case "buffs":
				this.value.buffs = this.loadObjectField(($_=new JsonParser_$60(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"buffs",assigned,this.value.buffs,pos);
				break;
			case "chosenEquipSet":
				this.value.chosenEquipSet = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"chosenEquipSet",assigned,this.value.chosenEquipSet,pos);
				break;
			case "equipment":
				this.value.equipment = this.loadObjectField(($_=new JsonParser_$61(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"equipment",assigned,this.value.equipment,pos);
				break;
			case "equipmentSets":
				this.value.equipmentSets = this.loadObjectField(($_=new JsonParser_$63(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"equipmentSets",assigned,this.value.equipmentSets,pos);
				break;
			case "level":
				this.value.level = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"level",assigned,this.value.level,pos);
				break;
			case "reference":
				this.value.reference = this.loadObjectField(($_=new JsonParser_$64(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"reference",assigned,this.value.reference,pos);
				break;
			case "turnRecharge":
				this.value.turnRecharge = this.loadObjectField(($_=new JsonParser_$66(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"turnRecharge",assigned,this.value.turnRecharge,pos);
				break;
			case "usableSkills":
				this.value.usableSkills = this.loadObjectField(($_=new JsonParser_$68(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"usableSkills",assigned,this.value.usableSkills,pos);
				break;
			case "viewAux":
				this.value.viewAux = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"viewAux",assigned,this.value.viewAux,pos);
				break;
			case "xp":
				this.value.xp = this.loadObjectField(($_=new JsonParser_$70(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"xp",assigned,this.value.xp,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { attributesBase : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), attributesCalculated : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), buffs : new JsonParser_$60([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), chosenEquipSet : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), equipment : new JsonParser_$61([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), equipmentSets : new JsonParser_$63([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), level : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), reference : new JsonParser_$64([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), turnRecharge : new JsonParser_$66([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), usableSkills : new JsonParser_$68([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), viewAux : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), xp : new JsonParser_$70([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$26
});
var JsonParser_$28 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_28"] = JsonParser_$28;
JsonParser_$28.__name__ = "JsonParser_28";
JsonParser_$28.__super__ = json2object_reader_BaseParser;
JsonParser_$28.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<EquipmentLevel>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$56(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$28([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$28
});
var JsonParser_$29 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_29"] = JsonParser_$29;
JsonParser_$29.__name__ = "JsonParser_29";
JsonParser_$29.__super__ = json2object_reader_BaseParser;
JsonParser_$29.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Int>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$5(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$29([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$29
});
var JsonParser_$3 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_3"] = JsonParser_$3;
JsonParser_$3.__name__ = "JsonParser_3";
JsonParser_$3.__super__ = json2object_reader_BaseParser;
JsonParser_$3.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ achievs : Map<String, AchievementPersistence> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["achievs"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "achievs") {
				this.value.achievs = this.loadObjectField(($_=new JsonParser_$13(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"achievs",assigned,this.value.achievs,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { achievs : new JsonParser_$13([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$3
});
var JsonParser_$31 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_31"] = JsonParser_$31;
JsonParser_$31.__name__ = "JsonParser_31";
JsonParser_$31.__super__ = json2object_reader_BaseParser;
JsonParser_$31.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, PlayerAction>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$54(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$31([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$31
});
var JsonParser_$32 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_32"] = JsonParser_$32;
JsonParser_$32.__name__ = "JsonParser_32";
JsonParser_$32.__super__ = json2object_reader_BaseParser;
JsonParser_$32.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<AreaPersistence>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$52(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$32([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$32
});
var JsonParser_$35 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_35"] = JsonParser_$35;
JsonParser_$35.__name__ = "JsonParser_35";
JsonParser_$35.__super__ = json2object_reader_BaseParser;
JsonParser_$35.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ reportedRollingRetention : Array<Int>, latestDayRetention : Int, gameStartVersion : Int, gameStartDate : String }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["gameStartDate","gameStartVersion","latestDayRetention","reportedRollingRetention"],[false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "gameStartDate":
				this.value.gameStartDate = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"gameStartDate",assigned,this.value.gameStartDate,pos);
				break;
			case "gameStartVersion":
				this.value.gameStartVersion = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"gameStartVersion",assigned,this.value.gameStartVersion,pos);
				break;
			case "latestDayRetention":
				this.value.latestDayRetention = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"latestDayRetention",assigned,this.value.latestDayRetention,pos);
				break;
			case "reportedRollingRetention":
				this.value.reportedRollingRetention = this.loadObjectField(($_=new JsonParser_$29(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"reportedRollingRetention",assigned,this.value.reportedRollingRetention,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { gameStartDate : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), gameStartVersion : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), latestDayRetention : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), reportedRollingRetention : new JsonParser_$29([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$35
});
var JsonParser_$37 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_37"] = JsonParser_$37;
JsonParser_$37.__name__ = "JsonParser_37";
JsonParser_$37.__super__ = json2object_reader_BaseParser;
JsonParser_$37.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<SkillSet>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$47(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$37([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$37
});
var JsonParser_$39 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_39"] = JsonParser_$39;
JsonParser_$39.__name__ = "JsonParser_39";
JsonParser_$39.__super__ = json2object_reader_BaseParser;
JsonParser_$39.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Int",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonNumber: function(f,pos,variable) {
		this.value = this.loadJsonInt(f,pos,variable,this.value);
	}
	,getAuto: function() {
		return new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$39
});
var JsonParser_$4 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
	this.value = false;
};
$hxClasses["JsonParser_4"] = JsonParser_$4;
JsonParser_$4.__name__ = "JsonParser_4";
JsonParser_$4.__super__ = json2object_reader_BaseParser;
JsonParser_$4.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Bool",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonBool: function(b,pos,variable) {
		this.value = b;
	}
	,getAuto: function() {
		return new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$4
});
var JsonParser_$41 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_41"] = JsonParser_$41;
JsonParser_$41.__name__ = "JsonParser_41";
JsonParser_$41.__super__ = json2object_reader_BaseParser;
JsonParser_$41.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"String",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonString: function(s,pos,variable) {
		this.value = s;
	}
	,getAuto: function() {
		return new JsonParser_$41([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$41
});
var JsonParser_$47 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_47"] = JsonParser_$47;
JsonParser_$47.__name__ = "JsonParser_47";
JsonParser_$47.__super__ = json2object_reader_BaseParser;
JsonParser_$47.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ skills : Array<SkillUsable>, active : Bool }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["active","skills"],[false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "active":
				this.value.active = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"active",assigned,this.value.active,pos);
				break;
			case "skills":
				this.value.skills = this.loadObjectField(($_=new JsonParser_$48(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"skills",assigned,this.value.skills,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { active : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), skills : new JsonParser_$48([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$47
});
var JsonParser_$48 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_48"] = JsonParser_$48;
JsonParser_$48.__name__ = "JsonParser_48";
JsonParser_$48.__super__ = json2object_reader_BaseParser;
JsonParser_$48.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<SkillUsable>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$50(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$48([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$48
});
var JsonParser_$5 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
	this.value = 0;
};
$hxClasses["JsonParser_5"] = JsonParser_$5;
JsonParser_$5.__name__ = "JsonParser_5";
JsonParser_$5.__super__ = json2object_reader_BaseParser;
JsonParser_$5.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Int",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNumber: function(f,pos,variable) {
		this.value = this.loadJsonInt(f,pos,variable,this.value);
	}
	,getAuto: function() {
		return new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$5
});
var JsonParser_$50 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_50"] = JsonParser_$50;
JsonParser_$50.__name__ = "JsonParser_50";
JsonParser_$50.__super__ = json2object_reader_BaseParser;
JsonParser_$50.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ level : Int, id : String }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["id","level"],[false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "id":
				this.value.id = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"id",assigned,this.value.id,pos);
				break;
			case "level":
				this.value.level = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"level",assigned,this.value.level,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { id : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), level : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$50
});
var JsonParser_$52 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_52"] = JsonParser_$52;
JsonParser_$52.__name__ = "JsonParser_52";
JsonParser_$52.__super__ = json2object_reader_BaseParser;
JsonParser_$52.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ seen : Int, maxAreaRecord : Int, maxAreaOnPrestigeRecord : Array<Int>, maxArea : Int, area : Int, amountEnemyKilledInArea : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["amountEnemyKilledInArea","area","maxArea","maxAreaOnPrestigeRecord","maxAreaRecord","seen"],[false,false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "amountEnemyKilledInArea":
				this.value.amountEnemyKilledInArea = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"amountEnemyKilledInArea",assigned,this.value.amountEnemyKilledInArea,pos);
				break;
			case "area":
				this.value.area = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"area",assigned,this.value.area,pos);
				break;
			case "maxArea":
				this.value.maxArea = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"maxArea",assigned,this.value.maxArea,pos);
				break;
			case "maxAreaOnPrestigeRecord":
				this.value.maxAreaOnPrestigeRecord = this.loadObjectField(($_=new JsonParser_$29(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"maxAreaOnPrestigeRecord",assigned,this.value.maxAreaOnPrestigeRecord,pos);
				break;
			case "maxAreaRecord":
				this.value.maxAreaRecord = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"maxAreaRecord",assigned,this.value.maxAreaRecord,pos);
				break;
			case "seen":
				this.value.seen = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"seen",assigned,this.value.seen,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { amountEnemyKilledInArea : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), area : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), maxArea : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), maxAreaOnPrestigeRecord : new JsonParser_$29([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), maxAreaRecord : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), seen : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$52
});
var JsonParser_$54 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_54"] = JsonParser_$54;
JsonParser_$54.__name__ = "JsonParser_54";
JsonParser_$54.__super__ = json2object_reader_BaseParser;
JsonParser_$54.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ visible : Bool, timesUsed : Int, mode : Int, enabled : Bool }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["enabled","mode","timesUsed","visible"],[false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "enabled":
				this.value.enabled = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"enabled",assigned,this.value.enabled,pos);
				break;
			case "mode":
				this.value.mode = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"mode",assigned,this.value.mode,pos);
				break;
			case "timesUsed":
				this.value.timesUsed = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"timesUsed",assigned,this.value.timesUsed,pos);
				break;
			case "visible":
				this.value.visible = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"visible",assigned,this.value.visible,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { enabled : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), mode : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), timesUsed : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), visible : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$54
});
var JsonParser_$56 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_56"] = JsonParser_$56;
JsonParser_$56.__name__ = "JsonParser_56";
JsonParser_$56.__super__ = json2object_reader_BaseParser;
JsonParser_$56.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ limitbreak : Int, level : Int, ?genLevelBonus : Null<Int>, ascension : Int, active : Bool }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["active","ascension","genLevelBonus","level","limitbreak"],[false,false,true,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "active":
				this.value.active = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"active",assigned,this.value.active,pos);
				break;
			case "ascension":
				this.value.ascension = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"ascension",assigned,this.value.ascension,pos);
				break;
			case "genLevelBonus":
				this.value.genLevelBonus = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"genLevelBonus",assigned,this.value.genLevelBonus,pos);
				break;
			case "level":
				this.value.level = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"level",assigned,this.value.level,pos);
				break;
			case "limitbreak":
				this.value.limitbreak = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"limitbreak",assigned,this.value.limitbreak,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { active : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), ascension : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), genLevelBonus : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), level : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), limitbreak : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$56
});
var JsonParser_$58 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_58"] = JsonParser_$58;
JsonParser_$58.__name__ = "JsonParser_58";
JsonParser_$58.__super__ = json2object_reader_BaseParser;
JsonParser_$58.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, Int>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$5(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$58
});
var JsonParser_$60 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_60"] = JsonParser_$60;
JsonParser_$60.__name__ = "JsonParser_60";
JsonParser_$60.__super__ = json2object_reader_BaseParser;
JsonParser_$60.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Buff>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$94(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$60([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$60
});
var JsonParser_$61 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_61"] = JsonParser_$61;
JsonParser_$61.__name__ = "JsonParser_61";
JsonParser_$61.__super__ = json2object_reader_BaseParser;
JsonParser_$61.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Equipment>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$76(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$61([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$61
});
var JsonParser_$63 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_63"] = JsonParser_$63;
JsonParser_$63.__name__ = "JsonParser_63";
JsonParser_$63.__super__ = json2object_reader_BaseParser;
JsonParser_$63.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<EquipmentSet>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$74(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$63([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$63
});
var JsonParser_$64 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_64"] = JsonParser_$64;
JsonParser_$64.__name__ = "JsonParser_64";
JsonParser_$64.__super__ = json2object_reader_BaseParser;
JsonParser_$64.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"ActorReference",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["type","pos"],[false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "pos":
				this.value.pos = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"pos",assigned,this.value.pos,pos);
				break;
			case "type":
				this.value.type = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"type",assigned,this.value.type,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		var value = Object.create(ActorReference.prototype);
		value.type = new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
		value.pos = new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
		return value;
	}
	,__class__: JsonParser_$64
});
var JsonParser_$66 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_66"] = JsonParser_$66;
JsonParser_$66.__name__ = "JsonParser_66";
JsonParser_$66.__super__ = json2object_reader_BaseParser;
JsonParser_$66.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<Int>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$5(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$66([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$66
});
var JsonParser_$68 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_68"] = JsonParser_$68;
JsonParser_$68.__name__ = "JsonParser_68";
JsonParser_$68.__super__ = json2object_reader_BaseParser;
JsonParser_$68.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<SkillUsable>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$50(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$68([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$68
});
var JsonParser_$7 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_7"] = JsonParser_$7;
JsonParser_$7.__name__ = "JsonParser_7";
JsonParser_$7.__super__ = json2object_reader_BaseParser;
JsonParser_$7.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ notifications : Array<VisibilityNotificationData> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["notifications"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "notifications") {
				this.value.notifications = this.loadObjectField(($_=new JsonParser_$8(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"notifications",assigned,this.value.notifications,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { notifications : new JsonParser_$8([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$7
});
var JsonParser_$70 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_70"] = JsonParser_$70;
JsonParser_$70.__name__ = "JsonParser_70";
JsonParser_$70.__super__ = json2object_reader_BaseParser;
JsonParser_$70.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ value : Int, scaling : Scaling, lastUsedBaseAttribute : Int, cap : Int, calculatedMax : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["calculatedMax","cap","lastUsedBaseAttribute","scaling","value"],[false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "calculatedMax":
				this.value.calculatedMax = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"calculatedMax",assigned,this.value.calculatedMax,pos);
				break;
			case "cap":
				this.value.cap = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"cap",assigned,this.value.cap,pos);
				break;
			case "lastUsedBaseAttribute":
				this.value.lastUsedBaseAttribute = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"lastUsedBaseAttribute",assigned,this.value.lastUsedBaseAttribute,pos);
				break;
			case "scaling":
				this.value.scaling = this.loadObjectField(($_=new JsonParser_$72(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"scaling",assigned,this.value.scaling,pos);
				break;
			case "value":
				this.value.value = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"value",assigned,this.value.value,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { calculatedMax : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), cap : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), lastUsedBaseAttribute : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), scaling : new JsonParser_$72([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), value : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$70
});
var JsonParser_$72 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_72"] = JsonParser_$72;
JsonParser_$72.__name__ = "JsonParser_72";
JsonParser_$72.__super__ = json2object_reader_BaseParser;
JsonParser_$72.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ minimumIncrement : Int, initialMultiplication : Bool, initial : Int, exponential : Bool, data1 : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["data1","exponential","initial","initialMultiplication","minimumIncrement"],[false,false,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "data1":
				this.value.data1 = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"data1",assigned,this.value.data1,pos);
				break;
			case "exponential":
				this.value.exponential = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"exponential",assigned,this.value.exponential,pos);
				break;
			case "initial":
				this.value.initial = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"initial",assigned,this.value.initial,pos);
				break;
			case "initialMultiplication":
				this.value.initialMultiplication = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"initialMultiplication",assigned,this.value.initialMultiplication,pos);
				break;
			case "minimumIncrement":
				this.value.minimumIncrement = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"minimumIncrement",assigned,this.value.minimumIncrement,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { data1 : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), exponential : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), initial : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), initialMultiplication : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), minimumIncrement : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$72
});
var JsonParser_$74 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_74"] = JsonParser_$74;
JsonParser_$74.__name__ = "JsonParser_74";
JsonParser_$74.__super__ = json2object_reader_BaseParser;
JsonParser_$74.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ equipmentSlots : Array<Int> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["equipmentSlots"],[false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			if(field.name == "equipmentSlots") {
				this.value.equipmentSlots = this.loadObjectField(($_=new JsonParser_$29(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"equipmentSlots",assigned,this.value.equipmentSlots,pos);
			} else {
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { equipmentSlots : new JsonParser_$29([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$74
});
var JsonParser_$76 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_76"] = JsonParser_$76;
JsonParser_$76.__name__ = "JsonParser_76";
JsonParser_$76.__super__ = json2object_reader_BaseParser;
JsonParser_$76.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ type : Int, seen : Int, requiredAttributes : Map<String, Int>, ?outsideSystems : Null<Map<String, Int>>, ?generationVariationsMultiplier : Null<Map<String, Int>>, ?generationVariations : Null<Map<String, Int>>, ?generationSuffixModSeed : Null<Int>, ?generationSuffixMod : Null<Int>, ?generationPrefixModSeed : Null<Int>, ?generationPrefixMod : Null<Int>, ?generationLevel : Null<Int>, ?generationBaseItem : Null<Int>, attributes : Map<String, Int>, ?attributeMultiplier : Null<Map<String, Int>> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["attributeMultiplier","attributes","generationBaseItem","generationLevel","generationPrefixMod","generationPrefixModSeed","generationSuffixMod","generationSuffixModSeed","generationVariations","generationVariationsMultiplier","outsideSystems","requiredAttributes","seen","type"],[true,false,true,true,true,true,true,true,true,true,true,false,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "attributeMultiplier":
				this.value.attributeMultiplier = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributeMultiplier",assigned,this.value.attributeMultiplier,pos);
				break;
			case "attributes":
				this.value.attributes = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"attributes",assigned,this.value.attributes,pos);
				break;
			case "generationBaseItem":
				this.value.generationBaseItem = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationBaseItem",assigned,this.value.generationBaseItem,pos);
				break;
			case "generationLevel":
				this.value.generationLevel = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationLevel",assigned,this.value.generationLevel,pos);
				break;
			case "generationPrefixMod":
				this.value.generationPrefixMod = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationPrefixMod",assigned,this.value.generationPrefixMod,pos);
				break;
			case "generationPrefixModSeed":
				this.value.generationPrefixModSeed = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationPrefixModSeed",assigned,this.value.generationPrefixModSeed,pos);
				break;
			case "generationSuffixMod":
				this.value.generationSuffixMod = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationSuffixMod",assigned,this.value.generationSuffixMod,pos);
				break;
			case "generationSuffixModSeed":
				this.value.generationSuffixModSeed = this.loadObjectField(($_=new JsonParser_$39(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationSuffixModSeed",assigned,this.value.generationSuffixModSeed,pos);
				break;
			case "generationVariations":
				this.value.generationVariations = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationVariations",assigned,this.value.generationVariations,pos);
				break;
			case "generationVariationsMultiplier":
				this.value.generationVariationsMultiplier = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"generationVariationsMultiplier",assigned,this.value.generationVariationsMultiplier,pos);
				break;
			case "outsideSystems":
				this.value.outsideSystems = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"outsideSystems",assigned,this.value.outsideSystems,pos);
				break;
			case "requiredAttributes":
				this.value.requiredAttributes = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"requiredAttributes",assigned,this.value.requiredAttributes,pos);
				break;
			case "seen":
				this.value.seen = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"seen",assigned,this.value.seen,pos);
				break;
			case "type":
				this.value.type = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"type",assigned,this.value.type,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { attributeMultiplier : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), attributes : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationBaseItem : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationLevel : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationPrefixMod : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationPrefixModSeed : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationSuffixMod : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationSuffixModSeed : new JsonParser_$39([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationVariations : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), generationVariationsMultiplier : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), outsideSystems : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), requiredAttributes : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), seen : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), type : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$76
});
var JsonParser_$8 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_8"] = JsonParser_$8;
JsonParser_$8.__name__ = "JsonParser_8";
JsonParser_$8.__super__ = json2object_reader_BaseParser;
JsonParser_$8.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"Array<VisibilityNotificationData>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonArray: function(a,pos,variable) {
		this.value = this.loadJsonArrayValue(a,($_=new JsonParser_$10(this.errors,this.putils,2),$bind($_,$_.loadJson)),variable);
	}
	,getAuto: function() {
		return new JsonParser_$8([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$8
});
var JsonParser_$94 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_94"] = JsonParser_$94;
JsonParser_$94.__name__ = "JsonParser_94";
JsonParser_$94.__super__ = json2object_reader_BaseParser;
JsonParser_$94.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ uniqueId : String, strength : Int, ?noble : Null<Bool>, mulStats : Map<String, Int>, duration : Int, ?debuff : Null<Bool>, addStats : Map<String, Int> }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["addStats","debuff","duration","mulStats","noble","strength","uniqueId"],[false,true,false,false,true,false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "addStats":
				this.value.addStats = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"addStats",assigned,this.value.addStats,pos);
				break;
			case "debuff":
				this.value.debuff = this.loadObjectField(($_=new JsonParser_$19(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"debuff",assigned,this.value.debuff,pos);
				break;
			case "duration":
				this.value.duration = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"duration",assigned,this.value.duration,pos);
				break;
			case "mulStats":
				this.value.mulStats = this.loadObjectField(($_=new JsonParser_$58(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"mulStats",assigned,this.value.mulStats,pos);
				break;
			case "noble":
				this.value.noble = this.loadObjectField(($_=new JsonParser_$19(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"noble",assigned,this.value.noble,pos);
				break;
			case "strength":
				this.value.strength = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"strength",assigned,this.value.strength,pos);
				break;
			case "uniqueId":
				this.value.uniqueId = this.loadObjectField(($_=new JsonParser_$11(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"uniqueId",assigned,this.value.uniqueId,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { addStats : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), debuff : new JsonParser_$19([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), duration : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), mulStats : new JsonParser_$58([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), noble : new JsonParser_$19([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), strength : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), uniqueId : new JsonParser_$11([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$94
});
var JsonParser_$96 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_96"] = JsonParser_$96;
JsonParser_$96.__name__ = "JsonParser_96";
JsonParser_$96.__super__ = json2object_reader_BaseParser;
JsonParser_$96.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"haxe.ds.Map<String, CurrencyPersistent>",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		this.value = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			var this1 = this.value;
			var key;
			try {
				var key1 = new JsonParser_$11(this.errors,this.putils,2);
				var _this = this.putils;
				key = key1.loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JString(field.name),new hxjsonast_Position(pos.file,pos.min - 1,pos.max - 1)),variable);
			} catch( _g1 ) {
				haxe_NativeStackTrace.lastError = _g1;
				var _g2 = haxe_Exception.caught(_g1).unwrap();
				if(js_Boot.__instanceof(_g2,json2object_InternalError)) {
					var e = _g2;
					if(e != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e);
					}
					continue;
				} else {
					throw _g1;
				}
			}
			var value;
			try {
				value = new JsonParser_$98(this.errors,this.putils,2).loadJson(field.value,field.name);
			} catch( _g3 ) {
				haxe_NativeStackTrace.lastError = _g3;
				var _g4 = haxe_Exception.caught(_g3).unwrap();
				if(js_Boot.__instanceof(_g4,json2object_InternalError)) {
					var e1 = _g4;
					if(e1 != json2object_InternalError.ParsingThrow) {
						throw haxe_Exception.thrown(e1);
					}
					continue;
				} else {
					throw _g3;
				}
			}
			this1.h[key] = value;
		}
	}
	,getAuto: function() {
		return new JsonParser_$96([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)));
	}
	,__class__: JsonParser_$96
});
var JsonParser_$98 = function(errors,putils,errorType) {
	if(errorType == null) {
		errorType = 0;
	}
	json2object_reader_BaseParser.call(this,errors,putils,errorType);
};
$hxClasses["JsonParser_98"] = JsonParser_$98;
JsonParser_$98.__name__ = "JsonParser_98";
JsonParser_$98.__super__ = json2object_reader_BaseParser;
JsonParser_$98.prototype = $extend(json2object_reader_BaseParser.prototype,{
	onIncorrectType: function(pos,variable) {
		this.errors.push(json2object_Error.IncorrectType(variable,"{ visible : Bool, value : Int }",pos));
		json2object_reader_BaseParser.prototype.onIncorrectType.call(this,pos,variable);
	}
	,loadJsonNull: function(pos,variable) {
		this.value = null;
	}
	,loadJsonObject: function(o,pos,variable) {
		var assigned = new haxe_ds_StringMap();
		this.objectSetupAssign(assigned,["value","visible"],[false,false]);
		this.value = this.getAuto();
		var _g = 0;
		while(_g < o.length) {
			var field = o[_g];
			++_g;
			switch(field.name) {
			case "value":
				this.value.value = this.loadObjectField(($_=new JsonParser_$5(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"value",assigned,this.value.value,pos);
				break;
			case "visible":
				this.value.visible = this.loadObjectField(($_=new JsonParser_$4(this.errors,this.putils,1),$bind($_,$_.loadJson)),field,"visible",assigned,this.value.visible,pos);
				break;
			default:
				this.errors.push(json2object_Error.UnknownVariable(field.name,this.putils.convertPosition(field.namePos)));
			}
		}
		this.objectErrors(assigned,pos);
	}
	,getAuto: function() {
		return { value : new JsonParser_$5([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1))), visible : new JsonParser_$4([],this.putils,0).loadJson(new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position("",0,1)))};
	}
	,__class__: JsonParser_$98
});
var JsonWriter_$125 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_125"] = JsonWriter_$125;
JsonWriter_$125.__name__ = "JsonWriter_125";
JsonWriter_$125.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"currentStoryId\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.currentStoryId,space,level + 1,false,onAllOptionalNull),indent + space + "\"progressionData\": " + new JsonWriter_$127(this.ignoreNullOptionals)._write(o.progressionData,space,level + 1,false,onAllOptionalNull),indent + space + "\"worldVersion\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.worldVersion,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$125
};
var JsonStoryTypes = function() { };
$hxClasses["JsonStoryTypes"] = JsonStoryTypes;
JsonStoryTypes.__name__ = "JsonStoryTypes";
var JsonWriter_$116 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_116"] = JsonWriter_$116;
JsonWriter_$116.__name__ = "JsonWriter_116";
JsonWriter_$116.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"allDimensions\": " + new JsonWriter_$117(this.ignoreNullOptionals)._write(o.allDimensions,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$116
};
var JsonWriter_$1 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_1"] = JsonWriter_$1;
JsonWriter_$1.__name__ = "JsonWriter_1";
JsonWriter_$1.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"achievementData\": " + new JsonWriter_$3(this.ignoreNullOptionals)._write(o.achievementData,space,level + 1,false,onAllOptionalNull),indent + space + "\"automaticZoom\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.automaticZoom,space,level + 1,false,onAllOptionalNull),indent + space + "\"language\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.language,space,level + 1,false,onAllOptionalNull),indent + space + "\"masterVolume\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.masterVolume,space,level + 1,false,onAllOptionalNull),indent + space + "\"mouseWheelSensibility\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.mouseWheelSensibility,space,level + 1,false,onAllOptionalNull),indent + space + "\"musicVolume\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.musicVolume,space,level + 1,false,onAllOptionalNull),indent + space + "\"notification\": " + new JsonWriter_$11(this.ignoreNullOptionals)._write(o.notification,space,level + 1,false,onAllOptionalNull),indent + space + "\"sfxVolume\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.sfxVolume,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false,false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$1
};
var JsonWriter_$91 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_91"] = JsonWriter_$91;
JsonWriter_$91.__name__ = "JsonWriter_91";
JsonWriter_$91.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"talentDimension\": " + new JsonWriter_$93(this.ignoreNullOptionals)._write(o.talentDimension,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$91
};
var JsonWriter_$103 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_103"] = JsonWriter_$103;
JsonWriter_$103.__name__ = "JsonWriter_103";
JsonWriter_$103.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"arcania\": " + new JsonWriter_$105(this.ignoreNullOptionals)._write(o.arcania,space,level + 1,false,onAllOptionalNull),indent + space + "\"talentGeneral\": " + new JsonWriter_$111(this.ignoreNullOptionals)._write(o.talentGeneral,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$103
};
var JsonWriter_$17 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_17"] = JsonWriter_$17;
JsonWriter_$17.__name__ = "JsonWriter_17";
JsonWriter_$17.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"autoAdvance\": " + new JsonWriter_$19(this.ignoreNullOptionals)._write(o.autoAdvance,space,level + 1,false,onAllOptionalNull),indent + space + "\"autoRepeat\": " + new JsonWriter_$19(this.ignoreNullOptionals)._write(o.autoRepeat,space,level + 1,false,onAllOptionalNull),indent + space + "\"battleArea\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.battleArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"battleAreaRegion\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.battleAreaRegion,space,level + 1,false,onAllOptionalNull),indent + space + "\"battleAreaRegionMax\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.battleAreaRegionMax,space,level + 1,false,onAllOptionalNull),indent + space + "\"battlePrizes\": " + new JsonWriter_$21(this.ignoreNullOptionals)._write(o.battlePrizes,space,level + 1,false,onAllOptionalNull),indent + space + "\"currency\": " + new JsonWriter_$27(this.ignoreNullOptionals)._write(o.currency,space,level + 1,false,onAllOptionalNull),indent + space + "\"enemy\": " + new JsonWriter_$33(this.ignoreNullOptionals)._write(o.enemy,space,level + 1,false,onAllOptionalNull),indent + space + "\"equipLevels\": " + new JsonWriter_$70(this.ignoreNullOptionals)._write(o.equipLevels,space,level + 1,false,onAllOptionalNull),indent + space + "\"hero\": " + new JsonWriter_$33(this.ignoreNullOptionals)._write(o.hero,space,level + 1,false,onAllOptionalNull),indent + space + "\"killedInArea\": " + new JsonWriter_$57(this.ignoreNullOptionals)._write(o.killedInArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"maxArea\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.maxArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"necessaryToKillInArea\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.necessaryToKillInArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"playerActions\": " + new JsonWriter_$74(this.ignoreNullOptionals)._write(o.playerActions,space,level + 1,false,onAllOptionalNull),indent + space + "\"playerTimesKilled\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.playerTimesKilled,space,level + 1,false,onAllOptionalNull),indent + space + "\"prestigeTimes\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.prestigeTimes,space,level + 1,false,onAllOptionalNull),indent + space + "\"recovering\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.recovering,space,level + 1,false,onAllOptionalNull),indent + space + "\"regionProgress\": " + new JsonWriter_$77(this.ignoreNullOptionals)._write(o.regionProgress,space,level + 1,false,onAllOptionalNull),indent + space + "\"retention\": " + new JsonWriter_$82(this.ignoreNullOptionals)._write(o.retention,space,level + 1,false,onAllOptionalNull),indent + space + "\"skillSets\": " + new JsonWriter_$84(this.ignoreNullOptionals)._write(o.skillSets,space,level + 1,false,onAllOptionalNull),indent + space + "\"sleeping\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.sleeping,space,level + 1,false,onAllOptionalNull),indent + space + "\"timeCount\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.timeCount,space,level + 1,false,onAllOptionalNull),indent + space + "\"timesReviewed\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.timesReviewed,space,level + 1,false,onAllOptionalNull),indent + space + "\"userId\": " + new JsonWriter_$89(this.ignoreNullOptionals)._write(o.userId,space,level + 1,false,onAllOptionalNull),indent + space + "\"veteranLevel\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.veteranLevel,space,level + 1,false,onAllOptionalNull),indent + space + "\"worldVersion\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.worldVersion,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [o.autoAdvance == null,o.autoRepeat == null,false,false,false,o.battlePrizes == null,o.currency == null,false,o.equipLevels == null,false,false,false,false,false,false,false,false,false,o.retention == null,o.skillSets == null,false,false,o.timesReviewed == null,o.userId == null,o.veteranLevel == null,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$17
};
var JsonMainTypes = function() { };
$hxClasses["JsonMainTypes"] = JsonMainTypes;
JsonMainTypes.__name__ = "JsonMainTypes";
var JsonWriter_$101 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_101"] = JsonWriter_$101;
JsonWriter_$101.__name__ = "JsonWriter_101";
JsonWriter_$101.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"attributeMultiplier\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributeMultiplier,space,level + 1,false,onAllOptionalNull),indent + space + "\"attributes\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributes,space,level + 1,false,onAllOptionalNull),indent + space + "\"rank\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.rank,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$101
};
var JsonWriter_$105 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_105"] = JsonWriter_$105;
JsonWriter_$105.__name__ = "JsonWriter_105";
JsonWriter_$105.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"actions\": " + new JsonWriter_$107(this.ignoreNullOptionals)._write(o.actions,space,level + 1,false,onAllOptionalNull),indent + space + "\"events\": " + new JsonWriter_$107(this.ignoreNullOptionals)._write(o.events,space,level + 1,false,onAllOptionalNull),indent + space + "\"resources\": " + new JsonWriter_$107(this.ignoreNullOptionals)._write(o.resources,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$105
};
var JsonWriter_$107 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_107"] = JsonWriter_$107;
JsonWriter_$107.__name__ = "JsonWriter_107";
JsonWriter_$107.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$109(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$107
};
var JsonWriter_$109 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_109"] = JsonWriter_$109;
JsonWriter_$109.__name__ = "JsonWriter_109";
JsonWriter_$109.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"amount\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.amount,space,level + 1,false,onAllOptionalNull),indent + space + "\"progressMiliseconds\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.progressMiliseconds,space,level + 1,false,onAllOptionalNull),indent + space + "\"rateProgressMicro\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.rateProgressMicro,space,level + 1,false,onAllOptionalNull),indent + space + "\"seen\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.seen,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$109
};
var JsonWriter_$11 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_11"] = JsonWriter_$11;
JsonWriter_$11.__name__ = "JsonWriter_11";
JsonWriter_$11.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"notifications\": " + new JsonWriter_$12(this.ignoreNullOptionals)._write(o.notifications,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$11
};
var JsonWriter_$111 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_111"] = JsonWriter_$111;
JsonWriter_$111.__name__ = "JsonWriter_111";
JsonWriter_$111.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"talents\": " + new JsonWriter_$112(this.ignoreNullOptionals)._write(o.talents,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$111
};
var JsonWriter_$112 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_112"] = JsonWriter_$112;
JsonWriter_$112.__name__ = "JsonWriter_112";
JsonWriter_$112.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$114(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$112
};
var JsonWriter_$114 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_114"] = JsonWriter_$114;
JsonWriter_$114.__name__ = "JsonWriter_114";
JsonWriter_$114.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"level\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.level,space,level + 1,false,onAllOptionalNull),indent + space + "\"seen\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.seen,space,level + 1,false,onAllOptionalNull),indent + space + "\"xp\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.xp,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$114
};
var JsonWriter_$117 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_117"] = JsonWriter_$117;
JsonWriter_$117.__name__ = "JsonWriter_117";
JsonWriter_$117.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$119(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$117
};
var JsonWriter_$119 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_119"] = JsonWriter_$119;
JsonWriter_$119.__name__ = "JsonWriter_119";
JsonWriter_$119.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"lockSystem\": " + new JsonWriter_$121(this.ignoreNullOptionals)._write(o.lockSystem,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$119
};
var JsonWriter_$12 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_12"] = JsonWriter_$12;
JsonWriter_$12.__name__ = "JsonWriter_12";
JsonWriter_$12.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$14(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$12
};
var JsonWriter_$121 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_121"] = JsonWriter_$121;
JsonWriter_$121.__name__ = "JsonWriter_121";
JsonWriter_$121.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$123(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$121
};
var JsonWriter_$123 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_123"] = JsonWriter_$123;
JsonWriter_$123.__name__ = "JsonWriter_123";
JsonWriter_$123.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"state\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.state,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$123
};
var JsonWriter_$127 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_127"] = JsonWriter_$127;
JsonWriter_$127.__name__ = "JsonWriter_127";
JsonWriter_$127.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$129(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$127
};
var JsonWriter_$129 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_129"] = JsonWriter_$129;
JsonWriter_$129.__name__ = "JsonWriter_129";
JsonWriter_$129.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"index\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.index,space,level + 1,false,onAllOptionalNull),indent + space + "\"timesCompleted\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.timesCompleted,space,level + 1,false,onAllOptionalNull),indent + space + "\"visible\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.visible,space,level + 1,false,onAllOptionalNull),indent + space + "\"visibleSeen\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.visibleSeen,space,level + 1,false,onAllOptionalNull),indent + space + "\"wantToWatch\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.wantToWatch,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$129
};
var JsonWriter_$14 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_14"] = JsonWriter_$14;
JsonWriter_$14.__name__ = "JsonWriter_14";
JsonWriter_$14.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"dataInt\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.dataInt,space,level + 1,false,onAllOptionalNull),indent + space + "\"dataString\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.dataString,space,level + 1,false,onAllOptionalNull),indent + space + "\"status\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.status,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$14
};
var JsonWriter_$15 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_15"] = JsonWriter_$15;
JsonWriter_$15.__name__ = "JsonWriter_15";
JsonWriter_$15.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		return (indentFirst ? this.buildIndent(space,level) : "") + (o == null ? "null" : this.shouldQuote ? json2object_writer_StringUtils.quote(o) : o);
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$15
};
var JsonWriter_$19 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_19"] = JsonWriter_$19;
JsonWriter_$19.__name__ = "JsonWriter_19";
JsonWriter_$19.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		return (indentFirst ? this.buildIndent(space,level) : "") + (o == null ? "null" : (o == null ? "null" : "" + o) + "");
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$19
};
var JsonWriter_$21 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_21"] = JsonWriter_$21;
JsonWriter_$21.__name__ = "JsonWriter_21";
JsonWriter_$21.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$23(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$21
};
var JsonWriter_$23 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_23"] = JsonWriter_$23;
JsonWriter_$23.__name__ = "JsonWriter_23";
JsonWriter_$23.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"amount\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.amount,space,level + 1,false,onAllOptionalNull),indent + space + "\"optionalId\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.optionalId,space,level + 1,false,onAllOptionalNull),indent + space + "\"status\": " + new JsonWriter_$24(this.ignoreNullOptionals)._write(o.status,space,level + 1,false,onAllOptionalNull),indent + space + "\"type\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.type,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$23
};
var JsonWriter_$24 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_24"] = JsonWriter_$24;
JsonWriter_$24.__name__ = "JsonWriter_24";
JsonWriter_$24.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		switch(o._hx_index) {
		case 0:
			return firstIndent + "\"NEW\"";
		case 1:
			return firstIndent + "\"PROCESSED\"";
		case 2:
			return firstIndent + "\"CONSUME_REQUEST\"";
		case 3:
			return firstIndent + "\"CONSUME_REQUEST_AUTO\"";
		case 4:
			return firstIndent + "\"CONSUMED\"";
		}
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$24
};
var JsonWriter_$27 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_27"] = JsonWriter_$27;
JsonWriter_$27.__name__ = "JsonWriter_27";
JsonWriter_$27.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"currencies\": " + new JsonWriter_$29(this.ignoreNullOptionals)._write(o.currencies,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$27
};
var JsonWriter_$29 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_29"] = JsonWriter_$29;
JsonWriter_$29.__name__ = "JsonWriter_29";
JsonWriter_$29.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$31(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$29
};
var JsonWriter_$3 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_3"] = JsonWriter_$3;
JsonWriter_$3.__name__ = "JsonWriter_3";
JsonWriter_$3.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"achievs\": " + new JsonWriter_$5(this.ignoreNullOptionals)._write(o.achievs,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$3
};
var JsonWriter_$31 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_31"] = JsonWriter_$31;
JsonWriter_$31.__name__ = "JsonWriter_31";
JsonWriter_$31.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"value\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.value,space,level + 1,false,onAllOptionalNull),indent + space + "\"visible\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.visible,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$31
};
var JsonWriter_$33 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_33"] = JsonWriter_$33;
JsonWriter_$33.__name__ = "JsonWriter_33";
JsonWriter_$33.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"attributesBase\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributesBase,space,level + 1,false,onAllOptionalNull),indent + space + "\"attributesCalculated\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributesCalculated,space,level + 1,false,onAllOptionalNull),indent + space + "\"buffs\": " + new JsonWriter_$37(this.ignoreNullOptionals)._write(o.buffs,space,level + 1,false,onAllOptionalNull),indent + space + "\"chosenEquipSet\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.chosenEquipSet,space,level + 1,false,onAllOptionalNull),indent + space + "\"equipment\": " + new JsonWriter_$42(this.ignoreNullOptionals)._write(o.equipment,space,level + 1,false,onAllOptionalNull),indent + space + "\"equipmentSets\": " + new JsonWriter_$54(this.ignoreNullOptionals)._write(o.equipmentSets,space,level + 1,false,onAllOptionalNull),indent + space + "\"level\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.level,space,level + 1,false,onAllOptionalNull),indent + space + "\"reference\": " + new JsonWriter_$58(this.ignoreNullOptionals)._write(o.reference,space,level + 1,false,onAllOptionalNull),indent + space + "\"turnRecharge\": " + new JsonWriter_$60(this.ignoreNullOptionals)._write(o.turnRecharge,space,level + 1,false,onAllOptionalNull),indent + space + "\"usableSkills\": " + new JsonWriter_$62(this.ignoreNullOptionals)._write(o.usableSkills,space,level + 1,false,onAllOptionalNull),indent + space + "\"viewAux\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.viewAux,space,level + 1,false,onAllOptionalNull),indent + space + "\"xp\": " + new JsonWriter_$66(this.ignoreNullOptionals)._write(o.xp,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,o.buffs == null,o.chosenEquipSet == null,false,o.equipmentSets == null,false,false,o.turnRecharge == null,o.usableSkills == null,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$33
};
var JsonWriter_$35 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_35"] = JsonWriter_$35;
JsonWriter_$35.__name__ = "JsonWriter_35";
JsonWriter_$35.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$8(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$35
};
var JsonWriter_$37 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_37"] = JsonWriter_$37;
JsonWriter_$37.__name__ = "JsonWriter_37";
JsonWriter_$37.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$39(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$37
};
var JsonWriter_$39 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_39"] = JsonWriter_$39;
JsonWriter_$39.__name__ = "JsonWriter_39";
JsonWriter_$39.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"addStats\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.addStats,space,level + 1,false,onAllOptionalNull),indent + space + "\"debuff\": " + new JsonWriter_$19(this.ignoreNullOptionals)._write(o.debuff,space,level + 1,false,onAllOptionalNull),indent + space + "\"duration\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.duration,space,level + 1,false,onAllOptionalNull),indent + space + "\"mulStats\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.mulStats,space,level + 1,false,onAllOptionalNull),indent + space + "\"noble\": " + new JsonWriter_$19(this.ignoreNullOptionals)._write(o.noble,space,level + 1,false,onAllOptionalNull),indent + space + "\"strength\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.strength,space,level + 1,false,onAllOptionalNull),indent + space + "\"uniqueId\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.uniqueId,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,o.debuff == null,false,false,o.noble == null,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$39
};
var JsonWriter_$41 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_41"] = JsonWriter_$41;
JsonWriter_$41.__name__ = "JsonWriter_41";
JsonWriter_$41.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		return (indentFirst ? this.buildIndent(space,level) : "") + (o == null ? "null" : o + "");
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$41
};
var JsonWriter_$42 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_42"] = JsonWriter_$42;
JsonWriter_$42.__name__ = "JsonWriter_42";
JsonWriter_$42.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$44(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$42
};
var JsonWriter_$44 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_44"] = JsonWriter_$44;
JsonWriter_$44.__name__ = "JsonWriter_44";
JsonWriter_$44.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"attributeMultiplier\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributeMultiplier,space,level + 1,false,onAllOptionalNull),indent + space + "\"attributes\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.attributes,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationBaseItem\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationBaseItem,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationLevel\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationLevel,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationPrefixMod\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationPrefixMod,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationPrefixModSeed\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationPrefixModSeed,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationSuffixMod\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationSuffixMod,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationSuffixModSeed\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.generationSuffixModSeed,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationVariations\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.generationVariations,space,level + 1,false,onAllOptionalNull),indent + space + "\"generationVariationsMultiplier\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.generationVariationsMultiplier,space,level + 1,false,onAllOptionalNull),indent + space + "\"outsideSystems\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.outsideSystems,space,level + 1,false,onAllOptionalNull),indent + space + "\"requiredAttributes\": " + new JsonWriter_$35(this.ignoreNullOptionals)._write(o.requiredAttributes,space,level + 1,false,onAllOptionalNull),indent + space + "\"seen\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.seen,space,level + 1,false,onAllOptionalNull),indent + space + "\"type\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.type,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [o.attributeMultiplier == null,false,o.generationBaseItem == null,o.generationLevel == null,o.generationPrefixMod == null,o.generationPrefixModSeed == null,o.generationSuffixMod == null,o.generationSuffixModSeed == null,o.generationVariations == null,o.generationVariationsMultiplier == null,o.outsideSystems == null,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$44
};
var JsonWriter_$5 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_5"] = JsonWriter_$5;
JsonWriter_$5.__name__ = "JsonWriter_5";
JsonWriter_$5.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$7(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$5
};
var JsonWriter_$54 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_54"] = JsonWriter_$54;
JsonWriter_$54.__name__ = "JsonWriter_54";
JsonWriter_$54.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$56(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$54
};
var JsonWriter_$56 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_56"] = JsonWriter_$56;
JsonWriter_$56.__name__ = "JsonWriter_56";
JsonWriter_$56.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"equipmentSlots\": " + new JsonWriter_$57(this.ignoreNullOptionals)._write(o.equipmentSlots,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$56
};
var JsonWriter_$57 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_57"] = JsonWriter_$57;
JsonWriter_$57.__name__ = "JsonWriter_57";
JsonWriter_$57.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$8(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$57
};
var JsonWriter_$58 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_58"] = JsonWriter_$58;
JsonWriter_$58.__name__ = "JsonWriter_58";
JsonWriter_$58.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"type\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.type,space,level + 1,false,onAllOptionalNull),indent + space + "\"pos\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.pos,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$58
};
var JsonWriter_$60 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_60"] = JsonWriter_$60;
JsonWriter_$60.__name__ = "JsonWriter_60";
JsonWriter_$60.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$8(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$60
};
var JsonWriter_$62 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_62"] = JsonWriter_$62;
JsonWriter_$62.__name__ = "JsonWriter_62";
JsonWriter_$62.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$64(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$62
};
var JsonWriter_$64 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_64"] = JsonWriter_$64;
JsonWriter_$64.__name__ = "JsonWriter_64";
JsonWriter_$64.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"id\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.id,space,level + 1,false,onAllOptionalNull),indent + space + "\"level\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.level,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$64
};
var JsonWriter_$66 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_66"] = JsonWriter_$66;
JsonWriter_$66.__name__ = "JsonWriter_66";
JsonWriter_$66.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"calculatedMax\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.calculatedMax,space,level + 1,false,onAllOptionalNull),indent + space + "\"cap\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.cap,space,level + 1,false,onAllOptionalNull),indent + space + "\"lastUsedBaseAttribute\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.lastUsedBaseAttribute,space,level + 1,false,onAllOptionalNull),indent + space + "\"scaling\": " + new JsonWriter_$68(this.ignoreNullOptionals)._write(o.scaling,space,level + 1,false,onAllOptionalNull),indent + space + "\"value\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.value,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$66
};
var JsonWriter_$68 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_68"] = JsonWriter_$68;
JsonWriter_$68.__name__ = "JsonWriter_68";
JsonWriter_$68.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"data1\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.data1,space,level + 1,false,onAllOptionalNull),indent + space + "\"exponential\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.exponential,space,level + 1,false,onAllOptionalNull),indent + space + "\"initial\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.initial,space,level + 1,false,onAllOptionalNull),indent + space + "\"initialMultiplication\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.initialMultiplication,space,level + 1,false,onAllOptionalNull),indent + space + "\"minimumIncrement\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.minimumIncrement,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$68
};
var JsonWriter_$7 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_7"] = JsonWriter_$7;
JsonWriter_$7.__name__ = "JsonWriter_7";
JsonWriter_$7.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"state\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.state,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$7
};
var JsonWriter_$70 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_70"] = JsonWriter_$70;
JsonWriter_$70.__name__ = "JsonWriter_70";
JsonWriter_$70.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$72(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$70
};
var JsonWriter_$72 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_72"] = JsonWriter_$72;
JsonWriter_$72.__name__ = "JsonWriter_72";
JsonWriter_$72.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"active\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.active,space,level + 1,false,onAllOptionalNull),indent + space + "\"ascension\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.ascension,space,level + 1,false,onAllOptionalNull),indent + space + "\"genLevelBonus\": " + new JsonWriter_$41(this.ignoreNullOptionals)._write(o.genLevelBonus,space,level + 1,false,onAllOptionalNull),indent + space + "\"level\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.level,space,level + 1,false,onAllOptionalNull),indent + space + "\"limitbreak\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.limitbreak,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,o.genLevelBonus == null,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$72
};
var JsonWriter_$74 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_74"] = JsonWriter_$74;
JsonWriter_$74.__name__ = "JsonWriter_74";
JsonWriter_$74.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$76(this.ignoreNullOptionals);
		var _g = [];
		var h = o.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			_g.push(indent + space + "\"" + key + "\": " + valueWriter._write(o.h[key],space,level + 1,false,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && values.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$74
};
var JsonWriter_$76 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_76"] = JsonWriter_$76;
JsonWriter_$76.__name__ = "JsonWriter_76";
JsonWriter_$76.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"enabled\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.enabled,space,level + 1,false,onAllOptionalNull),indent + space + "\"mode\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.mode,space,level + 1,false,onAllOptionalNull),indent + space + "\"timesUsed\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.timesUsed,space,level + 1,false,onAllOptionalNull),indent + space + "\"visible\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.visible,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$76
};
var JsonWriter_$77 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_77"] = JsonWriter_$77;
JsonWriter_$77.__name__ = "JsonWriter_77";
JsonWriter_$77.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$79(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$77
};
var JsonWriter_$79 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_79"] = JsonWriter_$79;
JsonWriter_$79.__name__ = "JsonWriter_79";
JsonWriter_$79.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"amountEnemyKilledInArea\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.amountEnemyKilledInArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"area\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.area,space,level + 1,false,onAllOptionalNull),indent + space + "\"maxArea\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.maxArea,space,level + 1,false,onAllOptionalNull),indent + space + "\"maxAreaOnPrestigeRecord\": " + new JsonWriter_$57(this.ignoreNullOptionals)._write(o.maxAreaOnPrestigeRecord,space,level + 1,false,onAllOptionalNull),indent + space + "\"maxAreaRecord\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.maxAreaRecord,space,level + 1,false,onAllOptionalNull),indent + space + "\"seen\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.seen,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$79
};
var JsonWriter_$8 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_8"] = JsonWriter_$8;
JsonWriter_$8.__name__ = "JsonWriter_8";
JsonWriter_$8.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		return (indentFirst ? this.buildIndent(space,level) : "") + o;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$8
};
var JsonWriter_$82 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_82"] = JsonWriter_$82;
JsonWriter_$82.__name__ = "JsonWriter_82";
JsonWriter_$82.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"gameStartDate\": " + new JsonWriter_$15(this.ignoreNullOptionals)._write(o.gameStartDate,space,level + 1,false,onAllOptionalNull),indent + space + "\"gameStartVersion\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.gameStartVersion,space,level + 1,false,onAllOptionalNull),indent + space + "\"latestDayRetention\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.latestDayRetention,space,level + 1,false,onAllOptionalNull),indent + space + "\"reportedRollingRetention\": " + new JsonWriter_$57(this.ignoreNullOptionals)._write(o.reportedRollingRetention,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$82
};
var JsonWriter_$84 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_84"] = JsonWriter_$84;
JsonWriter_$84.__name__ = "JsonWriter_84";
JsonWriter_$84.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$86(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$84
};
var JsonWriter_$86 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_86"] = JsonWriter_$86;
JsonWriter_$86.__name__ = "JsonWriter_86";
JsonWriter_$86.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"active\": " + new JsonWriter_$9(this.ignoreNullOptionals)._write(o.active,space,level + 1,false,onAllOptionalNull),indent + space + "\"skills\": " + new JsonWriter_$87(this.ignoreNullOptionals)._write(o.skills,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$86
};
var JsonWriter_$87 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_87"] = JsonWriter_$87;
JsonWriter_$87.__name__ = "JsonWriter_87";
JsonWriter_$87.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$64(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$87
};
var JsonWriter_$89 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_89"] = JsonWriter_$89;
JsonWriter_$89.__name__ = "JsonWriter_89";
JsonWriter_$89.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var tmp = indentFirst ? this.buildIndent(space,level) : "";
		var tmp1;
		if(o == null) {
			tmp1 = "null";
		} else {
			var str = o;
			tmp1 = this.shouldQuote ? json2object_writer_StringUtils.quote(str) : str;
		}
		return tmp + tmp1;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$89
};
var JsonWriter_$9 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_9"] = JsonWriter_$9;
JsonWriter_$9.__name__ = "JsonWriter_9";
JsonWriter_$9.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		return (indentFirst ? this.buildIndent(space,level) : "") + (o == null ? "null" : "" + o);
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$9
};
var JsonWriter_$93 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_93"] = JsonWriter_$93;
JsonWriter_$93.__name__ = "JsonWriter_93";
JsonWriter_$93.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"talentToSet\": " + new JsonWriter_$94(this.ignoreNullOptionals)._write(o.talentToSet,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$93
};
var JsonWriter_$94 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_94"] = JsonWriter_$94;
JsonWriter_$94.__name__ = "JsonWriter_94";
JsonWriter_$94.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$96(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$94
};
var JsonWriter_$96 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_96"] = JsonWriter_$96;
JsonWriter_$96.__name__ = "JsonWriter_96";
JsonWriter_$96.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"sets\": " + new JsonWriter_$97(this.ignoreNullOptionals)._write(o.sets,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$96
};
var JsonWriter_$97 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_97"] = JsonWriter_$97;
JsonWriter_$97.__name__ = "JsonWriter_97";
JsonWriter_$97.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var valueWriter = new JsonWriter_$99(this.ignoreNullOptionals);
		var _g = [];
		var _g1 = 0;
		while(_g1 < o.length) {
			var element = o[_g1];
			++_g1;
			_g.push(valueWriter._write(element,space,level + 1,true,onAllOptionalNull));
		}
		var values = _g;
		var newLine = space != "" && o.length > 0 ? "\n" : "";
		var json = firstIndent + "[" + newLine;
		json += values.join("," + newLine) + newLine;
		json += indent + "]";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$97
};
var JsonWriter_$99 = function(ignoreNullOptionals) {
	if(ignoreNullOptionals == null) {
		ignoreNullOptionals = false;
	}
	this.shouldQuote = true;
	this.ignoreNullOptionals = ignoreNullOptionals;
};
$hxClasses["JsonWriter_99"] = JsonWriter_$99;
JsonWriter_$99.__name__ = "JsonWriter_99";
JsonWriter_$99.prototype = {
	quote: function(str) {
		if(this.shouldQuote) {
			return json2object_writer_StringUtils.quote(str);
		} else {
			return str;
		}
	}
	,dontQuote: function() {
		this.shouldQuote = false;
		return this;
	}
	,buildIndent: function(space,level) {
		if(level == 0) {
			return "";
		}
		var buff_b = "";
		var _g = 0;
		var _g1 = level;
		while(_g < _g1) {
			var i = _g++;
			buff_b += space == null ? "null" : "" + space;
		}
		return buff_b;
	}
	,_write: function(o,space,level,indentFirst,onAllOptionalNull) {
		if(indentFirst == null) {
			indentFirst = false;
		}
		if(level == null) {
			level = 0;
		}
		if(space == null) {
			space = "";
		}
		var indent = this.buildIndent(space,level);
		var firstIndent = indentFirst ? indent : "";
		if(o == null) {
			return firstIndent + "null";
		}
		var decl = [indent + space + "\"grandBonus\": " + new JsonWriter_$101(this.ignoreNullOptionals)._write(o.grandBonus,space,level + 1,false,onAllOptionalNull),indent + space + "\"pointLevel\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.pointLevel,space,level + 1,false,onAllOptionalNull),indent + space + "\"pointXP\": " + new JsonWriter_$8(this.ignoreNullOptionals)._write(o.pointXP,space,level + 1,false,onAllOptionalNull),indent + space + "\"rollBonus\": " + new JsonWriter_$101(this.ignoreNullOptionals)._write(o.rollBonus,space,level + 1,false,onAllOptionalNull)];
		if(this.ignoreNullOptionals) {
			var skips = [false,false,false,false];
			if(skips.indexOf(false) == -1) {
				decl = onAllOptionalNull != null ? [onAllOptionalNull()] : [];
			} else {
				var _g = [];
				var _g1 = 0;
				var _g2 = decl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var decl1;
					if(skips[i]) {
						continue;
					} else {
						decl1 = decl[i];
					}
					_g.push(decl1);
				}
				decl = _g;
			}
		}
		var newLine = space != "" && decl.length > 0 ? "\n" : "";
		var json = firstIndent + "{" + newLine;
		json += decl.join("," + newLine) + newLine;
		json += indent + "}";
		return json;
	}
	,write: function(o,space) {
		if(space == null) {
			space = "";
		}
		return this._write(o,space,0,false);
	}
	,__class__: JsonWriter_$99
};
var JsonX = function() { };
$hxClasses["JsonX"] = JsonX;
JsonX.__name__ = "JsonX";
JsonX.stringify = function(value) {
	return JSON.stringify(value);
};
JsonX.parse = function(json) {
	return JSON.parse(json);
};
var Local = function() { };
$hxClasses["Local"] = Local;
Local.__name__ = "Local";
Local.getString = function(englishString,language) {
	if(language == null) {
		language = -1;
	}
	if(language < 0) {
		language = Local.language;
	}
	var key = StringUtils.getHashCode(englishString);
	if(Local.mapOfValues.h.hasOwnProperty(key) == false) {
		var this1 = Local.mapOfValues;
		var v = [];
		this1.h[key] = v;
		Local.mapOfValues.h[key].push(englishString);
	}
	return Local.mapOfValues.h[key][language];
};
Local.getIntString = function(arg0,levelRequirement) {
	return Local.getStringWithString(arg0,levelRequirement + "");
};
Local.getStringWithString = function(arg0,replaceString) {
	var localString = Local.getString(arg0,Local.language);
	if(localString != null) {
		return StringTools.replace(localString,"{0}",replaceString);
	}
	return null;
};
Local.generateCSV = function() {
	var output = "";
	var map = Local.mapOfValues;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var key1 = _g1_key;
		var value = _g1_value;
		output += "\n" + key1;
		var _g2_current = 0;
		var _g2_array = value;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var index = _g3_key;
			var value1 = _g3_value;
			value1 = StringTools.replace(value1,"\n","\\n");
			output += "|" + value1;
		}
	}
	return output;
};
Local.load = function(arg0) {
	var separator = "|";
	if(arg0.indexOf("|") == -1) {
		separator = ",";
	}
	var lines = arg0.split("\n");
	var _g_current = 0;
	var _g_array = lines;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var values = value.split(separator);
		var key = Std.parseInt(values[0]);
		var this1 = Local.mapOfValues;
		var v = [];
		this1.h[key] = v;
		var _g2_current = 0;
		var _g2_array = values;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var index1 = _g3_key;
			var value1 = _g3_value;
			if(index1 != 0) {
				Local.mapOfValues.h[key].push(value1);
				haxe_Log.trace(" KEYYYB + " + key + "+" + value1 + "+" + Local.mapOfValues.h[key].length,{ fileName : "Sources\\Reusable/Local.hx", lineNumber : 76, className : "Local", methodName : "load"});
			}
		}
	}
};
Local.getBoolString = function(arg0,v) {
	if(v) {
		return Local.getStringWithString(arg0,Local.getString("true"));
	} else {
		return Local.getStringWithString(arg0,Local.getString("false"));
	}
};
var LockSystem = function() {
	this.locks = [];
	this.persistence = null;
};
$hxClasses["LockSystem"] = LockSystem;
LockSystem.__name__ = "LockSystem";
LockSystem.prototype = {
	register: function(key) {
		var lsu = new LockSystemUnit();
		this.locks.push(lsu);
		if(Object.prototype.hasOwnProperty.call(this.persistence.h,key)) {
			lsu.persistence = this.persistence.h[key];
		} else {
			lsu.persistence = { state : LockSystem.STATE_LOCK};
			var v = lsu.persistence;
			this.persistence.h[key] = v;
		}
		return lsu;
	}
	,isChangeFromLockToWantToUnlock: function(lsu,shouldUnlock) {
		if(lsu.persistence.state == LockSystem.STATE_LOCK && shouldUnlock) {
			return true;
		}
		return false;
	}
	,lockStateChange: function(lsu,state) {
		lsu.persistence.state = state;
	}
	,__class__: LockSystem
};
var LockSystemUnit = function() {
};
$hxClasses["LockSystemUnit"] = LockSystemUnit;
LockSystemUnit.__name__ = "LockSystemUnit";
LockSystemUnit.prototype = {
	__class__: LockSystemUnit
};
var LockSystemUI = function() {
	this.config_unlock_SFX = -1;
	this.config_wantToUnlock_SFX = -1;
	this.config_scaleAnimationY = 1;
	this.config_scaleAnimationX = 1;
	this.uiUnits = [];
	this.lockSystem = new LockSystem();
};
$hxClasses["LockSystemUI"] = LockSystemUI;
LockSystemUI.__name__ = "LockSystemUI";
LockSystemUI.prototype = {
	update: function(soundPlayer) {
		var _g_current = 0;
		var _g_array = this.uiUnits;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.lockSystemUnit.persistence.state == LockSystem.STATE_UNLOCK_ANIMATING) {
				if(value.run_unlockAnimation.run_state != GlobalData.STATE_ANIMATION_PLAY) {
					value.lockSystemUnit.persistence.state = LockSystem.STATE_UNLOCK_DONE;
					if(value.config_notificationText != null) {
						this.notificationSystem.queueNotification(value.config_notificationText,value.config_notificationTitle);
					}
				}
			}
			if(value.lockSystemUnit.persistence.state == LockSystem.STATE_UNLOCK_DONE) {
				value.config_lockSprite.visible = false;
			}
			var buttonUnlocked = value.lockSystemUnit.persistence.state == LockSystem.STATE_UNLOCK_DONE || value.lockSystemUnit.persistence.state == LockSystem.STATE_UNLOCK_ANIMATING;
			if(buttonUnlocked) {
				if(value.config_unlockDoneForceEnable) {
					value.config_targetUIElement.enabled = true;
				}
				value.config_targetUIElement.textVisible = true;
			} else {
				value.config_targetUIElement.textVisible = false;
				value.config_targetUIElement.enabled = false;
			}
			if(value.lockSystemUnit.persistence.state == LockSystem.STATE_WANT_TO_UNLOCK) {
				if(value.run_wantToUnlockAnimation.run_state == GlobalData.STATE_ANIMATION_STOP) {
					this.animationManager.startAnimation(value.run_wantToUnlockAnimation);
					soundPlayer.playSfx(value.config_lockStartSound);
				}
				if(value.config_targetUIElement.hovered.state) {
					var lsuu = value;
					this.lockSystem.lockStateChange(lsuu.lockSystemUnit,LockSystem.STATE_UNLOCK_ANIMATING);
					this.animationManager.stopAnimation(lsuu.run_wantToUnlockAnimation);
					this.animationManager.startAnimation(lsuu.run_unlockAnimation);
					soundPlayer.playSfx(value.config_unlockSound);
				}
			}
		}
	}
	,register: function(key,lockHolder,uiCreation,scaleXUnlockOverride,scaleYUnlockOverride,scaleXWantUnlockOverride,scaleYWantUnlockOverride) {
		if(scaleYWantUnlockOverride == null) {
			scaleYWantUnlockOverride = -1;
		}
		if(scaleXWantUnlockOverride == null) {
			scaleXWantUnlockOverride = -1;
		}
		if(scaleYUnlockOverride == null) {
			scaleYUnlockOverride = -1;
		}
		if(scaleXUnlockOverride == null) {
			scaleXUnlockOverride = -1;
		}
		var lsu = this.lockSystem.register(key);
		var lsuu = new LockSystemUIUnit();
		var sprite = uiCreation.createImageElement(this.config_lockedSprite,-1,-1);
		sprite.tags = lockHolder.tags;
		sprite.hoverable = false;
		uiCreation.addWithOffset(sprite,lockHolder,0.5,0.5,0,0);
		lsuu.run_unlockAnimation = new SpriteSheetAnimation(this.config_unlockSpriteSheet,sprite);
		lsuu.run_wantToUnlockAnimation = new SpriteSheetAnimation(this.config_wantToUnlockSpriteSheet,sprite,true);
		lsuu.run_unlockAnimation.scaleX = this.config_scaleAnimationX;
		lsuu.run_unlockAnimation.scaleY = this.config_scaleAnimationY;
		lsuu.run_wantToUnlockAnimation.scaleX = this.config_scaleAnimationX;
		lsuu.run_wantToUnlockAnimation.scaleY = this.config_scaleAnimationY;
		if(scaleXUnlockOverride >= 0) {
			lsuu.run_unlockAnimation.scaleX = scaleXUnlockOverride;
		}
		if(scaleYUnlockOverride >= 0) {
			lsuu.run_unlockAnimation.scaleY = scaleYUnlockOverride;
		}
		if(scaleXWantUnlockOverride >= 0) {
			lsuu.run_wantToUnlockAnimation.scaleX = scaleXWantUnlockOverride;
		}
		if(scaleYWantUnlockOverride >= 0) {
			lsuu.run_wantToUnlockAnimation.scaleY = scaleYWantUnlockOverride;
		}
		lsuu.lockSystemUnit = lsu;
		lsuu.config_targetUIElement = lockHolder;
		lsuu.config_lockSprite = sprite;
		lsuu.config_lockStartSound = this.config_wantToUnlock_SFX;
		lsuu.config_unlockSound = this.config_unlock_SFX;
		this.uiUnits.push(lsuu);
		return lsuu;
	}
	,updateShouldUnlock: function(lsuu,shouldUnlock) {
		if(this.lockSystem.isChangeFromLockToWantToUnlock(lsuu.lockSystemUnit,shouldUnlock)) {
			this.lockSystem.lockStateChange(lsuu.lockSystemUnit,LockSystem.STATE_WANT_TO_UNLOCK);
			this.animationManager.startAnimation(lsuu.run_wantToUnlockAnimation);
		}
	}
	,__class__: LockSystemUI
};
var LockSystemUIUnit = function() {
	this.config_unlockDoneForceEnable = true;
	this.config_notificationText = null;
	this.config_notificationTitle = null;
};
$hxClasses["LockSystemUIUnit"] = LockSystemUIUnit;
LockSystemUIUnit.__name__ = "LockSystemUIUnit";
LockSystemUIUnit.prototype = {
	__class__: LockSystemUIUnit
};
var MyMacro = function() { };
$hxClasses["MyMacro"] = MyMacro;
MyMacro.__name__ = "MyMacro";
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	Main.start_game();
};
Main.start_game = function() {
	var physics = { arcade : { gravity : { y : 0}, debug : false}};
	physics["default"] = "arcade";
	var scaleConfig_mode = 5;
	var config = { parent : "game_canvas", physics : physics, width : window.innerWidth, height : window.innerHeight, backgroundColor : "#0f1522", pixelArt : true, scale : { mode : 5}, scene : [PlayScene]};
	var game = new Phaser.Game(config);
};
var NotificationControl = function() {
};
$hxClasses["NotificationControl"] = NotificationControl;
NotificationControl.__name__ = "NotificationControl";
NotificationControl.prototype = {
	getFreeNotification: function() {
		var _g_current = 0;
		var _g_array = this.notifications.notifications;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.status == 3) {
				return value;
			}
		}
		this.notifications.notifications.push({ status : 0, dataInt : -1, dataString : null});
		return this.notifications.notifications[this.notifications.notifications.length - 1];
	}
	,getNotificationLike: function(dataString,dataInt) {
		if(this.notifications == null) {
			return null;
		}
		if(this.notifications.notifications == null) {
			return null;
		}
		var _g_current = 0;
		var _g_array = this.notifications.notifications;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if((value.dataInt == dataInt || dataInt == -99999) && value.dataString == dataString) {
				if(this.shouldRender(value)) {
					return value;
				}
			}
		}
		return null;
	}
	,addNotification: function(dataString,dataInt) {
		if(this.notifications == null) {
			return;
		}
		if(this.notifications.notifications == null) {
			return;
		}
		var n = this.getNotificationLike(dataString,dataInt);
		if(n != null) {
			n.status = 1;
		} else {
			n = this.getFreeNotification();
			n.dataInt = dataInt;
			n.dataString = dataString;
			n.status = 1;
		}
	}
	,shouldRender: function(value) {
		if(value != null == false) {
			return false;
		}
		if(value.status != 2) {
			return value.status == 1;
		} else {
			return true;
		}
	}
	,__class__: NotificationControl
};
var Notification = function(text,time) {
	if(time == null) {
		time = -1;
	}
	this.timeToShowNotification = -1;
	this.text = text;
	this.timeToShowNotification = time;
};
$hxClasses["Notification"] = Notification;
Notification.__name__ = "Notification";
Notification.prototype = {
	__class__: Notification
};
var NotificationMessages = function() {
	this.defaultTimeToShowNotification = 5000;
	this.showingNotificationTimeMs = 0;
	this.queuedNotifications = [];
};
$hxClasses["NotificationMessages"] = NotificationMessages;
NotificationMessages.__name__ = "NotificationMessages";
NotificationMessages.prototype = {
	update: function(miliseconds) {
		if(this.showingNotificationTimeMs > 0) {
			this.showingNotificationTimeMs -= miliseconds;
			if(this.showingNotificationTimeMs <= 0) {
				this.currentNotification = this.queuedNotifications.pop();
				if(this.currentNotification != null) {
					if(this.currentNotification.timeToShowNotification > 0) {
						this.showingNotificationTimeMs = this.currentNotification.timeToShowNotification;
					} else {
						this.showingNotificationTimeMs = this.defaultTimeToShowNotification;
					}
				}
			}
		}
	}
	,isShowing: function() {
		if(this.showingNotificationTimeMs > 0) {
			return this.currentNotification != null;
		} else {
			return false;
		}
	}
	,notify: function(arg0,miliseconds) {
		if(this.isShowing() == false) {
			this.showingNotificationTimeMs = 1;
		}
		this.queuedNotifications.push(new Notification(arg0,miliseconds));
	}
	,__class__: NotificationMessages
};
var NotificationMessageView = function() {
	this.run_time_ms = -1;
	this.config_fadeOutTimeInterrupt = 300;
	this.config_timeToChangeState = [-1,300,1500,1200];
};
$hxClasses["NotificationMessageView"] = NotificationMessageView;
NotificationMessageView.__name__ = "NotificationMessageView";
NotificationMessageView.prototype = {
	__class__: NotificationMessageView
};
var NotificationsMessageAnimatedRetained = function() {
	this.persistent_messageQueue = [];
	this.view_defaultNotificationView = new NotificationMessageView();
};
$hxClasses["NotificationsMessageAnimatedRetained"] = NotificationsMessageAnimatedRetained;
NotificationsMessageAnimatedRetained.__name__ = "NotificationsMessageAnimatedRetained";
NotificationsMessageAnimatedRetained.prototype = {
	update: function(miliseconds) {
		this.shownMessageThisFrame = false;
		if(this.run_activeMessage != null && this.run_activeMessage.uiTag != null) {
			if(this.ui.isTagVisible(this.run_activeMessage.uiTag) == false) {
				this.endActiveMessage();
			}
		}
		if(this.run_activeMessage == null) {
			var _g_current = 0;
			var _g_array = this.persistent_messageQueue;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var tag = value.uiTag;
				if(tag != null) {
					if(this.ui.isTagVisible(tag) == false) {
						continue;
					}
				}
				this.shownMessageThisFrame = false;
				this.showMessage(value);
			}
		} else {
			var alpha = 255;
			var timeToLeave = this.view_defaultNotificationView.config_timeToChangeState[this.view_defaultNotificationView.run_state];
			if(this.view_defaultNotificationView.run_state == NotificationsMessageAnimatedRetained.STATE_FADING_IN) {
				alpha = 255 * this.view_defaultNotificationView.run_time_ms / timeToLeave | 0;
			}
			if(this.view_defaultNotificationView.run_state == NotificationsMessageAnimatedRetained.STATE_FADING_OUT) {
				alpha = 255 - 255 * this.view_defaultNotificationView.run_time_ms / timeToLeave | 0;
			}
			var _g = 0;
			var _g1 = this.view_defaultNotificationView.ui_parent.offsets;
			while(_g < _g1.length) {
				var offset = _g1[_g];
				++_g;
				offset.target.style.alpha = alpha;
			}
			this.view_defaultNotificationView.run_time_ms += miliseconds;
			if(this.view_defaultNotificationView.run_time_ms > timeToLeave) {
				this.view_defaultNotificationView.run_state++;
				this.view_defaultNotificationView.run_time_ms = 0;
				if(this.view_defaultNotificationView.run_state == NotificationsMessageAnimatedRetained.STATE_FADING_OUT) {
					HxOverrides.remove(this.persistent_messageQueue,this.run_activeMessage);
				}
				if(this.view_defaultNotificationView.run_state > NotificationsMessageAnimatedRetained.STATE_FADING_OUT) {
					this.endActiveMessage();
				}
			}
		}
		if(this.run_activeMessage == null) {
			var _g = 0;
			var _g1 = this.view_defaultNotificationView.ui_parent.offsets;
			while(_g < _g1.length) {
				var offset = _g1[_g];
				++_g;
				offset.target.visible = false;
			}
		}
	}
	,endActiveMessage: function() {
		this.run_activeMessage = null;
	}
	,showMessage: function(value) {
		this.run_activeMessage = value;
		var tag = value.uiTag;
		this.view_defaultNotificationView.run_state = NotificationsMessageAnimatedRetained.STATE_FADING_IN;
		this.view_defaultNotificationView.run_time_ms = 0;
		this.view_defaultNotificationView.ui_background.tags.length = 0;
		this.view_defaultNotificationView.ui_header.tags.length = 0;
		this.view_defaultNotificationView.ui_message.tags.length = 0;
		this.view_defaultNotificationView.ui_header.text = Local.getString(value.localizedKey_header);
		this.view_defaultNotificationView.ui_message.text = Local.getString(value.localizedtKey_text);
		var _g = 0;
		var _g1 = this.view_defaultNotificationView.ui_parent.offsets;
		while(_g < _g1.length) {
			var offset = _g1[_g];
			++_g;
			var target = offset.target;
			target.visible = true;
			target.tags.length = 0;
			if(tag != null) {
				target.tags.push(tag);
			}
		}
	}
	,queueNotification: function(textKey,headerKey,tag,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.persistent_messageQueue.push({ localizedKey_header : headerKey, localizedtKey_text : textKey, priority : priority, uiTag : tag});
	}
	,__class__: NotificationsMessageAnimatedRetained
};
var PhaserMouse = function(scene) {
	this.pressed = false;
	this.deltaWheelY = 0;
	this.y = 0;
	this.x = 0;
	this.scene = scene;
};
$hxClasses["PhaserMouse"] = PhaserMouse;
PhaserMouse.__name__ = "PhaserMouse";
PhaserMouse.prototype = {
	update: function() {
		this.x = this.scene.input.activePointer.x | 0;
		this.y = this.scene.input.activePointer.y | 0;
		this.pressed = this.scene.input.activePointer.leftButtonDown();
	}
	,__class__: PhaserMouse
};
var ImageRunner = function() {
	this.index = 0;
	this.images = [];
};
$hxClasses["ImageRunner"] = ImageRunner;
ImageRunner.__name__ = "ImageRunner";
ImageRunner.prototype = {
	__class__: ImageRunner
};
var PhaserRenderer = function() { };
$hxClasses["PhaserRenderer"] = PhaserRenderer;
PhaserRenderer.__name__ = "PhaserRenderer";
PhaserRenderer.startFrame = function() {
	PhaserRenderer.z = 0;
	var h = PhaserRenderer.images.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		value.index = 0;
		var _g = 0;
		var _g1 = value.images;
		while(_g < _g1.length) {
			var image = _g1[_g];
			++_g;
			image.visible = false;
		}
	}
};
PhaserRenderer.getImage = function(imageId) {
	var ir = PhaserRenderer.images.h[imageId];
	if(ir == null) {
		ir = new ImageRunner();
		PhaserRenderer.images.h[imageId] = ir;
	}
	while(ir.images.length <= ir.index) {
		var im = PhaserRenderer.scene.add.image(0,0,imageId);
		im.originX = 0;
		im.originY = 0;
		ir.images.push(im);
	}
	var image = ir.images[ir.index];
	ir.index++;
	image.visible = true;
	return image;
};
PhaserRenderer.drawImage = function(imageId,sx,sy,sw,sh,dx,dy,dw,dh,alpha,color) {
	if(color == null) {
		color = 16777215;
	}
	if(alpha == null) {
		alpha = 1;
	}
	var im = PhaserRenderer.getImage(imageId);
	im.tint = color;
	im.alpha = alpha;
	im.scaleX = dw / sw;
	im.scaleY = dh / sh;
	im.setDepth(PhaserRenderer.z);
	PhaserRenderer.z++;
	if(dw == sw && dh == sh) {
		im.setScale(1,1);
	} else {
		im.setScale(im.scaleX,im.scaleY);
	}
	im.setCrop(sx,sy,sw,sh);
	var fy = im.height - sy * 2;
	im.x = dx + (im.width - sx * 2) * im.scaleX / 2;
	im.y = dy + fy * im.scaleY / 2;
	im.x = im.x | 0;
	im.y = im.y | 0;
};
var Pivot = function() { };
$hxClasses["Pivot"] = Pivot;
Pivot.__name__ = "Pivot";
Pivot.calculateDimension = function(pivotS,pivotD,dimensionS,dimensionD) {
	return -pivotS * dimensionS + dimensionD * pivotD;
};
var PlayScene = function(config) {
	this.saveCount = 5;
	this.saveFileImporterSetup = false;
	Phaser.Scene.call(this,config);
};
$hxClasses["PlayScene"] = PlayScene;
PlayScene.__name__ = "PlayScene";
PlayScene.__super__ = Phaser.Scene;
PlayScene.prototype = $extend(Phaser.Scene.prototype,{
	create: function() {
		var _gthis = this;
		this.engineMouse = new PhaserMouse(this);
		this.input.on("wheel",function(pointer,gameObjects,deltaX,deltaY,deltaZ) {
			_gthis.engineMouse.deltaWheelY = deltaY;
		});
		this.griDimension = new GRIConfigurer(this.sys.canvas.width,this.sys.canvas.height);
		this.engineKeyboard = new JSKeyboard();
		PhaserRenderer.scene = this;
		this.graphics = this.add.graphics();
		FileAccessJS.createImportElement();
	}
	,preload: function() {
		var h = autogen_GriPngs.allSpriteFiles.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var key1 = _g1_key;
			var value = _g1_value;
			var sprite = value;
			this.load.image(key1,"Assets/" + sprite);
		}
	}
	,update: function(time,delta) {
		Profiler.clear();
		Profiler.start("master");
		this.engineMouse.update();
		var griControl = this.griDimension.griControl;
		griControl.resolution.feed(this.sys.canvas.width,this.sys.canvas.height);
		this.griDimension.update();
		var mouse = Mouse.mouse;
		var _this = mouse.mousePressed;
		_this.previousState = _this.state;
		mouse.mousePressed.state = this.engineMouse.pressed;
		var this1 = mouse.get_mousePosition();
		var target = mouse.mousePositionLastFrame;
		var self = this1;
		var self1 = self;
		var value = self1.x;
		var self1 = target;
		self1.x = value;
		var self1 = self;
		var value = self1.y;
		var self = target;
		self.y = value;
		mouse.setMousePosition(this.engineMouse.x,this.engineMouse.y);
		mouse.deltaWheelY = this.engineMouse.deltaWheelY;
		var key = Keyboard.keyboard;
		ArraysUtilities.copyContentIntArray(key.charsDown,this.engineKeyboard.charsDown);
		ArraysUtilities.copyContentIntArray(key.charsPressed,this.engineKeyboard.charsPressed);
		ArraysUtilities.copyContentIntArray(key.charsUp,this.engineKeyboard.charsUp);
		this.engineKeyboard.charsDown.length = 0;
		this.engineKeyboard.charsUp.length = 0;
		var updateRun = true;
		if(GlobalSetting.pauseUpdate) {
			updateRun = false;
		}
		if(GlobalSetting.pauseUpdate_FrameSkip > 0) {
			updateRun = true;
			GlobalSetting.pauseUpdate_FrameSkip--;
		}
		if(updateRun) {
			griControl.update(delta | 0);
		}
		PhaserRenderer.startFrame();
		this.engineMouse.update();
		griControl.render();
		this.saveFileImporterSetup = this.updateImportExport(this.saveFileImporterSetup);
		this.saveCount -= delta;
		if(this.saveCount < 0) {
			FileAccessJS.feedSave(CrossTarget.latestSave);
			this.saveCount = 5000;
		}
		FileAccessJS.saveImportVisibility(GRIView.tagTabTitle.visible);
		this.engineMouse.deltaWheelY = 0;
		KeyboardToButtonsLogic.endButtonFrame();
		Profiler.end("master");
	}
	,updateImportExport: function(saveFileImporterSetup) {
		var griControl = this.griDimension.griControl;
		var imp = window.document.getElementById("import__");
		if(imp != null && saveFileImporterSetup == false) {
			if(imp != null) {
				var input = imp;
				input.onchange = function(event) {
					FileUtilities.ReadFile(input.files[0],function(json) {
						if(griControl != null) {
							CrossTarget.SetLocalStorageItem(GRIControl.keyBackup,griControl.battleManager.GetJsonPersistentData());
						} else {
							CrossTarget.SetLocalStorageItem(GRIControl.keyBackup,CrossTarget.GetLocalStorageItem(GRIControl.key));
						}
						griControl.validateSave(json);
						CrossTarget.SetLocalStorageItem(GRIControl.key,json);
						CrossTarget.reload();
						griControl = null;
					});
				};
				saveFileImporterSetup = true;
			}
		}
		return saveFileImporterSetup;
	}
	,__class__: PlayScene
});
var PoolArray = function(creatorMethod) {
	this.innactive = [];
	this.active = [];
	this.creatorMethod = creatorMethod;
};
$hxClasses["PoolArray"] = PoolArray;
PoolArray.__name__ = "PoolArray";
PoolArray.prototype = {
	hasFree: function() {
		return this.innactive.length > 0;
	}
	,addActive: function(t) {
		this.active.push(t);
		return t;
	}
	,free: function(t) {
		var amount = 0;
		while(HxOverrides.remove(this.active,t)) ++amount;
		if(amount > 1) {
			var s = null;
			CrossTarget.alert("Force error, problem in pool");
			var b = s.length;
		}
		this.innactive.push(t);
	}
	,freeAll: function() {
		while(this.active.length > 0) this.free(this.active[this.active.length - 1]);
	}
	,activate: function() {
		if(this.hasFree()) {
			var obj = this.innactive.pop();
			this.active.push(obj);
			return obj;
		}
		if(this.creatorMethod != null) {
			var obj = this.creatorMethod();
			this.active.push(obj);
			return obj;
		}
		return null;
	}
	,hasActive: function() {
		return this.active.length > 0;
	}
	,__class__: PoolArray
};
var EnemyAreaInformation = function() {
	this.viewOverride = -1;
	this.tags = [];
	this.equipment = [];
};
$hxClasses["EnemyAreaInformation"] = EnemyAreaInformation;
EnemyAreaInformation.__name__ = "EnemyAreaInformation";
EnemyAreaInformation.create = function(sheet,level,nEnemies,sheetId,viewOverride) {
	if(viewOverride == null) {
		viewOverride = -1;
	}
	var eai = new EnemyAreaInformation();
	eai.level = level;
	eai.sheet = sheet;
	eai.nEnemies = nEnemies;
	eai.sheetId = sheetId;
	eai.viewOverride = viewOverride;
	return eai;
};
EnemyAreaInformation.prototype = {
	__class__: EnemyAreaInformation
};
var EnemyAreaFromProceduralUnitRepetition = function() {
	this.aux = new EnemyAreaInformation();
	this.equipments = [];
	this.enemySheets = [];
};
$hxClasses["EnemyAreaFromProceduralUnitRepetition"] = EnemyAreaFromProceduralUnitRepetition;
EnemyAreaFromProceduralUnitRepetition.__name__ = "EnemyAreaFromProceduralUnitRepetition";
EnemyAreaFromProceduralUnitRepetition.prototype = {
	GetProceduralUnitRepeated: function(area) {
		area %= this.units.length;
		var u = this.units[area];
		return u;
	}
	,GetEnemyAreaInformation: function(area) {
		var areaOrig = area;
		area %= this.units.length;
		var u = this.units[area];
		var char = u.proceduralUnit.characteristics[0];
		var enemyId = char;
		var es = this.enemySheets[enemyId];
		var extraEquip = null;
		if(es == null) {
			enemyId = u.randomExtra[0] % this.enemySheets.length;
			es = this.enemySheets[enemyId];
		}
		var nEnemies = -1;
		var levelBonus = 0;
		this.aux.viewOverride = 1;
		if(u.position == u.total - 1) {
			nEnemies = 1;
			levelBonus = 1;
			var hpMultiplier = 400;
			var attackMultiplier = 100;
			if(areaOrig > 80) {
				hpMultiplier = 700;
			}
			if(areaOrig > 80) {
				attackMultiplier = 200;
			}
			var _g = new haxe_ds_StringMap();
			_g.h["LifeMax"] = hpMultiplier;
			_g.h["Attack"] = attackMultiplier;
			_g.h["MagicAttack"] = attackMultiplier;
			extraEquip = { seen : 0, requiredAttributes : null, type : 1, attributes : null, attributeMultiplier : _g, outsideSystems : null};
			extraEquip.attributes = new haxe_ds_StringMap();
			this.aux.viewOverride = 2;
			if(areaOrig > 8) {
				levelBonus = 3;
			}
			if(areaOrig > 15) {
				levelBonus = 5;
				nEnemies = u.randomExtra[1] % 3 + 1;
			}
			if(areaOrig > 20) {
				levelBonus = 15;
			}
			if(areaOrig > 30) {
				levelBonus = 25;
			}
			if(areaOrig > 40) {
				levelBonus = 30;
			}
			if(areaOrig > 50) {
				levelBonus = 40;
			}
			if(areaOrig > 60) {
				levelBonus = 70 + area * (1 + areaOrig / 80 | 0);
			}
		}
		this.aux.sheet = es;
		this.aux.nEnemies = nEnemies;
		this.aux.level = levelBonus;
		this.aux.equipment.length = 0;
		if(this.equipments[char] != null || extraEquip != null) {
			if(this.equipments[char] != null) {
				this.aux.equipment.push(this.equipments[char]);
			}
			if(extraEquip != null) {
				this.aux.equipment.push(extraEquip);
			}
		}
		this.aux.sheetId = enemyId;
		this.aux.equipId = char;
		return this.aux;
	}
	,__class__: EnemyAreaFromProceduralUnitRepetition
};
var Profiler = function() { };
$hxClasses["Profiler"] = Profiler;
Profiler.__name__ = "Profiler";
Profiler.printProfilerString = function() {
	var string = "";
	string += Profiler.printUnit(Profiler.master,0);
	var h = Profiler.accumulatedUnits.h;
	var unit_h = h;
	var unit_keys = Object.keys(h);
	var unit_length = unit_keys.length;
	var unit_current = 0;
	while(unit_current < unit_length) {
		var unit = unit_h[unit_keys[unit_current++]];
		var calculated = unit.accumulatedType * Profiler.MULTIPLIER | 0;
		string += "" + unit.id + " " + calculated + "\n";
	}
	CrossTarget.crossPrint(string);
};
Profiler.printUnit = function(master,depth) {
	var string = "";
	var _g = 0;
	var _g1 = depth;
	while(_g < _g1) {
		var i = _g++;
		string += " ";
	}
	var micro = (master.timeEnded - master.timeStarted) * Profiler.MULTIPLIER | 0;
	string += master.id + " " + micro + "\n";
	++depth;
	var _g2_current = 0;
	var _g2_array = master.children;
	while(_g2_current < _g2_array.length) {
		var _g3_value = _g2_array[_g2_current];
		var _g3_key = _g2_current++;
		var index = _g3_key;
		var value = _g3_value;
		string += Profiler.printUnit(value,depth);
	}
	return string;
};
Profiler.accumulationStart = function(id) {
};
Profiler.accumulationEnd = function(id) {
};
Profiler.start = function(id) {
};
Profiler.end = function(id) {
};
Profiler.clear = function() {
	Profiler.currentParent = null;
	Profiler.units.h = Object.create(null);
	Profiler.master = null;
	Profiler.accumulatedUnits.h = Object.create(null);
};
var ProfilerUnit = function() {
	this.accumulatedType = 0;
	this.timeEnded = 0;
	this.timeStarted = 0;
	this.children = [];
	this.id = null;
};
$hxClasses["ProfilerUnit"] = ProfilerUnit;
ProfilerUnit.__name__ = "ProfilerUnit";
ProfilerUnit.prototype = {
	__class__: ProfilerUnit
};
var PrototypeItemMaker = function() {
	this.itemGenerationBaseByType = new ArrayOfArray();
	this.itemAbbreviationByType = new ArrayOfArray();
	this.mods = [];
	this.items = [];
};
$hxClasses["PrototypeItemMaker"] = PrototypeItemMaker;
PrototypeItemMaker.__name__ = "PrototypeItemMaker";
PrototypeItemMaker.prototype = {
	R: function(min,max) {
		return { min : min, max : max};
	}
	,MakeItems: function() {
		var initialItemClose = 20;
		var modComplexStart = 25;
		var modComplexStart2 = 60;
		var normalItemStart = 13;
		var _g = new haxe_ds_StringMap();
		_g.h["LifeMax"] = 5;
		this.AddItem("Shirt","shr",PrototypeItemMaker.itemType_Armor,_g);
		var _g = new haxe_ds_StringMap();
		_g.h["LifeMax"] = 3;
		_g.h["Defense"] = 0.6;
		this.AddItem("Vest","ves",PrototypeItemMaker.itemType_Armor,_g);
		var _g = new haxe_ds_StringMap();
		_g.h["Defense"] = 1;
		this.AddItem("Plate","pla",PrototypeItemMaker.itemType_Armor,_g);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		this.AddItem("Broad Sword","bro",PrototypeItemMaker.itemType_Weapon,_g);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(115,115);
		_g1.h["Attack"] = value;
		var value = this.R(80,80);
		_g1.h["Speed"] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["Piercing"] = 25;
		this.AddItem("Heavy Sword","hsw",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(150,150);
		_g1.h["Attack"] = value;
		var value = this.R(50,50);
		_g1.h["Speed"] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["Piercing"] = 50;
		this.AddItem("Bastard Sword","bas",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(70,70);
		_g1.h["Attack"] = value;
		var value = this.R(175,175);
		_g1.h["Speed"] = value;
		this.AddItem("Dagger","dgr",PrototypeItemMaker.itemType_Weapon,_g,_g1,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(80,80);
		_g1.h["Speed"] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h[BattleConstants.counterAttack] = 1;
		this.AddItem("Flamedge","fle",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["Defense"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(70,70);
		_g1.h["Attack"] = value;
		var value = this.R(140,140);
		_g1.h["Defense"] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h[BattleConstants.counterAttack] = 2;
		this.AddItem("Icewall","icw",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["LifeMax"] = 3;
		var _g1 = new haxe_ds_StringMap();
		_g1.h[BattleConstants.counterAttack] = 3;
		this.AddItem("Thunderbolt","thb",PrototypeItemMaker.itemType_Weapon,_g,null,_g1,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["MagicAttack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(125,125);
		_g1.h[BattleConstants.MPMax] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["fire-boost"] = 150;
		this.AddItem("Firerod","frr",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["MagicAttack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(125,125);
		_g1.h[BattleConstants.MPMax] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["ice-boost"] = 150;
		this.AddItem("Icerod","icr",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["MagicAttack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(125,125);
		_g1.h[BattleConstants.MPMax] = value;
		var _g2 = new haxe_ds_StringMap();
		_g2.h["thunder-boost"] = 150;
		this.AddItem("Thunderod","thr",PrototypeItemMaker.itemType_Weapon,_g,_g1,_g2,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["Speed"] = 15;
		_g1.h["Attack"] = -2;
		this.AddItem("Wood Sword","wsw",PrototypeItemMaker.itemType_Weapon,_g,null,_g1,0,initialItemClose);
		var _g = new haxe_ds_StringMap();
		_g.h["Attack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		_g1.h["Attack"] = 20;
		_g1.h["Speed"] = -15;
		this.AddItem("Treetrunk","trt",PrototypeItemMaker.itemType_Weapon,_g,null,_g1,0,initialItemClose);
		var _g = new haxe_ds_StringMap();
		_g.h["MagicDefense"] = 1;
		this.AddItem("Robe","rob",PrototypeItemMaker.itemType_Armor,_g,null,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		_g.h["MagicAttack"] = 1;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(60,60);
		_g1.h["Defense"] = value;
		var value = this.R(60,60);
		_g1.h["MagicDefense"] = value;
		var value = this.R(60,60);
		_g1.h["LifeMax"] = value;
		this.AddItem("Tunic","tun",PrototypeItemMaker.itemType_Armor,_g,_g1,null,modComplexStart2);
		var _g = new haxe_ds_StringMap();
		var value = this.R(105,110);
		_g.h["Attack"] = value;
		this.AddMod("of the Brute","Barbarian's",_g,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(120,140);
		_g.h["Defense"] = value;
		this.AddMod("of the Guardian","Golem's",_g,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(115,120);
		_g.h["Speed"] = value;
		this.AddMod("of the Thief","Zidane's",_g,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(130,150);
		_g.h["LifeMax"] = value;
		this.AddMod("of Nature","Aerith's",_g,null,normalItemStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(115,120);
		_g.h["Attack"] = value;
		var value = this.R(70,70);
		_g.h["Defense"] = value;
		this.AddMod("of Rage","Berserker's",_g,null,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(1,5);
		_g.h["Blood"] = value;
		this.AddMod("of Blood","Sanguine",null,_g,modComplexStart2);
		var _g = new haxe_ds_StringMap();
		var value = this.R(160,160);
		_g.h["Defense"] = value;
		var value = this.R(60,60);
		_g.h["Speed"] = value;
		this.AddMod("of the Thick","Dense",_g,null,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(155,155);
		_g.h["Defense"] = value;
		var value = this.R(60,60);
		_g.h["Attack"] = value;
		this.AddMod("of Tranquil","Calm",_g,null,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(70,70);
		_g.h["Speed"] = value;
		var value = this.R(120,130);
		_g.h["Attack"] = value;
		this.AddMod("of Intensity","Auron's",_g,null,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(135,150);
		_g.h["Speed"] = value;
		var value = this.R(60,75);
		_g.h["Attack"] = value;
		this.AddMod("of the T.Hunter","Locke's",_g,null,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(105,110);
		_g.h["MagicAttack"] = value;
		var _g1 = new haxe_ds_StringMap();
		_g1.h[BattleConstants.MAGICAL] = { min : 100, max : 100};
		this.AddMod("of Magic","Magical",_g,_g1,normalItemStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(125,135);
		_g.h["MagicAttack"] = value;
		var value = this.R(70,70);
		_g.h["Defense"] = value;
		var value = this.R(70,70);
		_g.h["MagicDefense"] = value;
		var _g1 = new haxe_ds_StringMap();
		_g1.h[BattleConstants.MAGICAL] = { min : 100, max : 100};
		this.AddMod("of the Mystic","Vivi's",_g,_g1,modComplexStart);
		var _g = new haxe_ds_StringMap();
		var value = this.R(130,140);
		_g.h["MagicAttack"] = value;
		var value = this.R(70,70);
		_g.h["Defense"] = value;
		var value = this.R(70,70);
		_g.h["MagicDefense"] = value;
		var value = this.R(70,70);
		_g.h["Speed"] = value;
		var _g1 = new haxe_ds_StringMap();
		_g1.h[BattleConstants.MAGICAL] = { min : 100, max : 100};
		this.AddMod("of the Arcanum","Lulu's",_g,_g1,modComplexStart2);
		var _g = new haxe_ds_StringMap();
		var value = this.R(120,120);
		_g.h[BattleConstants.DEATHBLOOD] = value;
		var value = this.R(115,115);
		_g.h["MagicAttack"] = value;
		var value = this.R(70,70);
		_g.h["Defense"] = value;
		var value = this.R(70,70);
		_g.h["MagicDefense"] = value;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(30,40);
		_g1.h[BattleConstants.DEATHBLOOD] = value;
		this.AddMod("of Darkness","Vincent's",_g,_g1,modComplexStart2);
		var _g = new haxe_ds_StringMap();
		var value = this.R(120,120);
		_g.h[BattleConstants.DEATHBLOOD] = value;
		var value = this.R(115,115);
		_g.h["Attack"] = value;
		var value = this.R(70,70);
		_g.h["Defense"] = value;
		var value = this.R(70,70);
		_g.h["MagicDefense"] = value;
		var _g1 = new haxe_ds_StringMap();
		var value = this.R(30,40);
		_g1.h[BattleConstants.DEATHBLOOD] = value;
		this.AddMod("of Shadow","Elmdore",_g,_g1,modComplexStart2);
		this.itemAbbreviationByType.adjustLength(3);
		this.itemGenerationBaseByType.adjustLength(3);
		var _g56_current = 0;
		var _g56_array = this.items;
		while(_g56_current < _g56_array.length) {
			var _g57_value = _g56_array[_g56_current];
			var _g57_key = _g56_current++;
			var index = _g57_key;
			var value = _g57_value;
			this.itemAbbreviationByType.pushElement(value.type,value.abbrev);
			this.itemGenerationBaseByType.pushElement(value.type,index);
		}
	}
	,AddMod: function(suffix,prefix,statMultipliers,statAdds,minLevel,maxLevel) {
		if(maxLevel == null) {
			maxLevel = 999999;
		}
		if(minLevel == null) {
			minLevel = 0;
		}
		this.mods.push({ prefix : prefix, suffix : suffix, statMultipliers : statMultipliers, statAdds : statAdds, dropRequirement : { minEnemyLevel : minLevel, maxEnemyLevel : maxLevel}});
	}
	,AddItem: function(name,abbrev,type,scalingStats,statMultipliers,statAdd,minLevel,maxLevel) {
		if(maxLevel == null) {
			maxLevel = 999999;
		}
		if(minLevel == null) {
			minLevel = 0;
		}
		this.items.push({ name : name, abbrev : abbrev, type : type, scalingStats : scalingStats, statMultipliers : statMultipliers, statAdd : statAdd, dropRequirement : { minEnemyLevel : minLevel, maxEnemyLevel : maxLevel}});
		return this.items[this.items.length - 1];
	}
	,__class__: PrototypeItemMaker
};
var RangeUtils = function() { };
$hxClasses["RangeUtils"] = RangeUtils;
RangeUtils.__name__ = "RangeUtils";
RangeUtils.R = function(min,max) {
	return { min : min, max : max};
};
var RandomExtender = function() { };
$hxClasses["RandomExtender"] = RandomExtender;
RandomExtender.__name__ = "RandomExtender";
RandomExtender.Range = function(random,range) {
	return random.randomInt(range.min,range.max);
};
var ModBaseUtils = function() { };
$hxClasses["ModBaseUtils"] = ModBaseUtils;
ModBaseUtils.__name__ = "ModBaseUtils";
ModBaseUtils.pureMod = function(statAdds,statMultipliers) {
	return { prefix : null, suffix : null, statMultipliers : statMultipliers, statAdds : statAdds, dropRequirement : null};
};
var PrototypeSkillMaker = function() {
	this.skills = [];
};
$hxClasses["PrototypeSkillMaker"] = PrototypeSkillMaker;
PrototypeSkillMaker.__name__ = "PrototypeSkillMaker";
PrototypeSkillMaker.prototype = {
	AddSkill: function(id,mpCost) {
	}
	,init: function() {
		this.skills.push({ id : "Regen", profession : "Priest", word : "Nature", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 3;
			var _g = new haxe_ds_StringMap();
			_g.h["Regen"] = strength;
			bm.AddBuff({ uniqueId : "regen", addStats : _g, mulStats : null, strength : strength, duration : 8},array[0]);
		}}], mpCost : 30, hpCost : 0});
		this.skills.push({ id : "Light Slash", profession : "Warrior", word : "Red", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 5;
			bm.AttackExecute(actor,array[0],50,skillId,5 + level,100);
		}}], turnRecharge : 1, mpCost : 15, hpCost : 0});
		this.skills.push({ id : "Slash", profession : "Warrior", word : "Red", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 5;
			bm.AttackExecute(actor,array[0],100 + strength,skillId,strength * 2,100);
		}}], turnRecharge : 1, mpCost : 30, hpCost : 0});
		this.skills.push({ id : "Heavy Slash", profession : "Warrior", word : "Red", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],100 + level * 15,skillId,level * 25,100);
		}}], turnRecharge : 1, mpCost : 70, hpCost : 0});
		this.skills.push({ id : "Fogo", profession : "Wizard", word : "Fire", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],105 + level * 5,skillId,level * 15 + 10,100,true,"fire");
		}}], turnRecharge : 1, mpCost : 20, hpCost : 0});
		this.skills.push({ id : "Fogan", profession : "Wizard", word : "Fire", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],135 + level * 5,skillId,level * 20 + 90,100,true,"fire");
		}}], turnRecharge : 1, mpCost : 90, hpCost : 0});
		this.skills.push({ id : "Foganzan", profession : "Wizard", word : "Fire", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],138 + level * 5,skillId,level * 25 + 250,100,true,"fire");
		}}], turnRecharge : 1, mpCost : 158, hpCost : 0});
		this.skills.push({ id : "Gelo", profession : "Wizard", word : "Ice", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],110 + level * 5,skillId,level * 15 + 10,100,true,"ice");
		}}], turnRecharge : 1, mpCost : 22, hpCost : 0});
		this.skills.push({ id : "Gelan", profession : "Wizard", word : "Ice", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],135 + level * 5,skillId,level * 20 + 80,100,true,"ice");
		}}], turnRecharge : 1, mpCost : 95, hpCost : 0});
		this.skills.push({ id : "Gelanzan", profession : "Wizard", word : "Ice", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],137 + level * 5,skillId,level * 25 + 250,100,true,"ice");
		}}], turnRecharge : 1, mpCost : 155, hpCost : 0});
		this.skills.push({ id : "Raio", profession : "Wizard", word : "Thunder", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],95 + level * 5,skillId,level * 15 + 10,100,true,"thunder");
		}}], turnRecharge : 1, mpCost : 19, hpCost : 0});
		this.skills.push({ id : "Raian", profession : "Wizard", word : "Thunder", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],130 + level * 5,skillId,level * 20 + 80,100,true,"thunder");
		}}], turnRecharge : 1, mpCost : 85, hpCost : 0});
		this.skills.push({ id : "Raianzan", profession : "Wizard", word : "Thunder", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			bm.AttackExecute(actor,array[0],140 + level * 5,skillId,level * 25 + 250,100,true,"thunder");
		}}], turnRecharge : 1, mpCost : 170, hpCost : 0});
		this.skills.push({ id : "DeSpell", profession : "Unbuffer", word : "Witchhunt", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 30;
			bm.RemoveBuffs(array[0]);
		}}], mpCost : 20, hpCost : 0});
		this.skills.push({ id : "Cure", profession : "Mage", word : "White", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = 5 + level * 10;
			var strength = level * bonus;
			bm.Heal(array[0],10,bonus,skillId);
		}}], mpCost : 20, hpCost : 0});
		this.skills.push({ id : "Haste", profession : "Wizard", word : "Time", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = 20 + level * 5;
			var multiplier = 100 + level;
			var _g = new haxe_ds_StringMap();
			_g.h["Speed"] = bonus;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Speed"] = multiplier;
			bm.AddBuff({ uniqueId : "haste", addStats : _g, mulStats : _g1, strength : level, duration : 8},array[0]);
		}}], mpCost : 60, hpCost : 0});
		this.skills.push({ id : "Magick", profession : "Wizard", word : "Magick", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = 20 + level * 5;
			var multiplier = 120 + level;
			var _g = new haxe_ds_StringMap();
			_g.h[BattleConstants.MAGICATTACK] = bonus;
			var _g1 = new haxe_ds_StringMap();
			_g1.h[BattleConstants.MAGICATTACK] = multiplier;
			bm.AddBuff({ uniqueId : "magick", addStats : _g, mulStats : _g1, strength : level, duration : 8},array[0]);
		}}], mpCost : 70, hpCost : 0});
		this.skills.push({ id : "Bloodlust", profession : "Sanguiner", word : "Blood", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var multiplier = 90 + level * 10;
			var _g = new haxe_ds_StringMap();
			_g.h["Blood"] = 3;
			_g.h["Bloodthirst"] = multiplier;
			bm.AddBuff({ uniqueId : "bloodlust", addStats : _g, mulStats : null, strength : level, duration : 3},array[0]);
		}}], mpCost : 10, hpCost : 0});
		this.skills.push({ id : "Noblesse", profession : "Highborn", word : "Honour", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var _g = new haxe_ds_StringMap();
			_g.h["Defense"] = 3 + level * 2;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Attack"] = 120 + level * 15;
			bm.AddBuff({ uniqueId : "noblesse", addStats : _g, mulStats : _g1, strength : level, duration : 99, noble : true},array[0]);
		}}], mpCost : 80, hpCost : 0});
		this.skills.push({ id : "Protect", profession : "Defender", word : "Defense", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = level * 5;
			var multiplier = 110;
			var _g = new haxe_ds_StringMap();
			_g.h["Defense"] = bonus;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Defense"] = multiplier;
			bm.AddBuff({ uniqueId : "protect", addStats : _g, mulStats : _g1, strength : level, duration : 8},array[0]);
		}}], mpCost : 60, hpCost : 0});
		this.skills.push({ id : "Shell", profession : "Guardian", word : "Guard", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = level * 5;
			var multiplier = 110;
			var _g = new haxe_ds_StringMap();
			_g.h[BattleConstants.MAGICDEFENSE] = bonus;
			var _g1 = new haxe_ds_StringMap();
			_g1.h[BattleConstants.MAGICDEFENSE] = multiplier;
			bm.AddBuff({ uniqueId : "shell", addStats : _g, mulStats : _g1, strength : level, duration : 8},array[0]);
		}}], mpCost : 70, hpCost : 0});
		this.skills.push({ id : "Sharpen", profession : "Smith", word : "Sharpness", effects : [{ target : Target.SELF, effectExecution : function(bm,level,actor,array,skillId) {
			var bonus = 100;
			var multiplier = 100 + 5 * level;
			var _g = new haxe_ds_StringMap();
			_g.h["Piercing"] = bonus;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Attack"] = multiplier;
			bm.AddBuff({ uniqueId : "pierce", addStats : _g, mulStats : _g1, strength : level, duration : 9},array[0]);
		}}], mpCost : 60, hpCost : 0});
		this.skills.push({ id : "Armor Break", profession : "Breaker", word : "Destruction", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var _g = new haxe_ds_StringMap();
			_g.h["Defense"] = -level * 10;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Defense"] = 50;
			bm.AddBuff({ uniqueId : "Armor Break", addStats : _g, mulStats : _g1, strength : level, duration : 5, debuff : true},array[0]);
		}}], mpCost : 40, hpCost : 0});
		this.skills.push({ id : "Attack Break", profession : "Breaker", word : "Destruction", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var _g = new haxe_ds_StringMap();
			_g.h["Attack"] = -level * 10;
			var _g1 = new haxe_ds_StringMap();
			_g1.h["Attack"] = 50;
			bm.AddBuff({ uniqueId : "Attack Break", addStats : _g, mulStats : _g1, strength : level, duration : 5, debuff : true},array[0]);
		}}], mpCost : 40, hpCost : 0});
		this.skills.push({ id : "Bloody Cut", profession : "Shadowsquire", word : "Shadow", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 5;
			bm.AttackExecute(actor,array[0],100,skillId,10 + level,95);
		}}], turnRecharge : 1, mpCost : 0, hpCost : 15});
		this.skills.push({ id : "Trevas", profession : "Darkknight", word : "Dark", effects : [{ target : Target.ENEMY, effectExecution : function(bm,level,actor,array,skillId) {
			var strength = level * 5;
			bm.AttackExecute(actor,array[0],100 + level * 30,skillId,level * 15,80);
		}}], turnRecharge : 1, mpCost : 0, hpCost : 110});
	}
	,__class__: PrototypeSkillMaker
};
var ResourceLogic = function() { };
$hxClasses["ResourceLogic"] = ResourceLogic;
ResourceLogic.__name__ = "ResourceLogic";
ResourceLogic.recalculateScalingResource = function(base,res) {
	if(res.lastUsedBaseAttribute != base) {
		var data1 = res.scaling.data1 * 0.001;
		var baseValue = res.scaling.initial;
		if(res.scaling.initialMultiplication) {
			baseValue *= base;
		}
		var expBonus = 0;
		if(res.scaling.exponential) {
			expBonus = Math.pow(data1,base);
		}
		if(expBonus > res.cap) {
			expBonus = res.cap;
		}
		var calculated = expBonus + baseValue | 0;
		calculated -= calculated % res.scaling.minimumIncrement;
		if(calculated < 0 && calculated > res.cap) {
			calculated = res.cap;
		}
		res.calculatedMax = calculated;
		res.lastUsedBaseAttribute = base;
	}
};
ResourceLogic.getExponentialResource = function(expBase,minimumIncrement,initial,cap) {
	var res = { scaling : { data1 : expBase * 1000 | 0, initial : initial, minimumIncrement : minimumIncrement, initialMultiplication : true, exponential : true}, value : 0, lastUsedBaseAttribute : 0, calculatedMax : 0, cap : cap};
	ResourceLogic.recalculateScalingResource(1,res);
	return res;
};
var AttributeLogic = function() { };
$hxClasses["AttributeLogic"] = AttributeLogic;
AttributeLogic.__name__ = "AttributeLogic";
AttributeLogic.AddOld = function(attributes,attributeAddition,quantityOfAddition) {
	var h = attributes.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		var _g = key1;
		var _g1 = attributes;
		var v = _g1.h[_g] + (attributeAddition.h[key1] * quantityOfAddition | 0);
		_g1.h[_g] = v;
	}
};
AttributeLogic.Add = function(attributes,attributeAddition,quantityOfAddition,result) {
	var h = attributes.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		var addedValue = attributeAddition.h[key1];
		if(addedValue >= 0 == false && addedValue < 0 == false) {
			addedValue = 0;
		}
		var v = value + (addedValue * quantityOfAddition | 0);
		result.h[key1] = v;
	}
	var h = attributeAddition.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		if(Object.prototype.hasOwnProperty.call(attributes.h,key1) == false) {
			var v = value * quantityOfAddition;
			result.h[key1] = v;
		}
	}
};
var BMConditionType = $hxEnums["BMConditionType"] = { __ename__:true,__constructs__:null
	,ITEM_IN_SLOT_IS_OF_ITEM_TYPE: {_hx_name:"ITEM_IN_SLOT_IS_OF_ITEM_TYPE",_hx_index:0,__enum__:"BMConditionType",toString:$estr}
	,CURRENT_SET_NUMBER: {_hx_name:"CURRENT_SET_NUMBER",_hx_index:1,__enum__:"BMConditionType",toString:$estr}
};
BMConditionType.__constructs__ = [BMConditionType.ITEM_IN_SLOT_IS_OF_ITEM_TYPE,BMConditionType.CURRENT_SET_NUMBER];
var BMCondition = function(ctype,data1,data2,dataS1,dataS2) {
	if(data2 == null) {
		data2 = 0;
	}
	if(data1 == null) {
		data1 = 0;
	}
	this.data1 = data1;
	this.data2 = data2;
	this.dataS1 = dataS1;
	this.dataS2 = dataS2;
	this.cType = ctype;
};
$hxClasses["BMCondition"] = BMCondition;
BMCondition.__name__ = "BMCondition";
BMCondition.prototype = {
	__class__: BMCondition
};
var ConditionalAttributeBonus = function() {
	this.condition = new ConditionGroup();
	this.AttributeBonuses = [];
};
$hxClasses["ConditionalAttributeBonus"] = ConditionalAttributeBonus;
ConditionalAttributeBonus.__name__ = "ConditionalAttributeBonus";
ConditionalAttributeBonus.prototype = {
	__class__: ConditionalAttributeBonus
};
var ConditionGroup = function() {
	this.conditions = [];
};
$hxClasses["ConditionGroup"] = ConditionGroup;
ConditionGroup.__name__ = "ConditionGroup";
ConditionGroup.prototype = {
	__class__: ConditionGroup
};
var EventTypes = $hxEnums["EventTypes"] = { __ename__:true,__constructs__:null
	,GameStart: {_hx_name:"GameStart",_hx_index:0,__enum__:"EventTypes",toString:$estr}
	,ActorDead: {_hx_name:"ActorDead",_hx_index:1,__enum__:"EventTypes",toString:$estr}
	,EquipDrop: {_hx_name:"EquipDrop",_hx_index:2,__enum__:"EventTypes",toString:$estr}
	,AutoSell: {_hx_name:"AutoSell",_hx_index:3,__enum__:"EventTypes",toString:$estr}
	,EquipFullFail: {_hx_name:"EquipFullFail",_hx_index:4,__enum__:"EventTypes",toString:$estr}
	,EquipFullJustNow: {_hx_name:"EquipFullJustNow",_hx_index:5,__enum__:"EventTypes",toString:$estr}
	,ActorAppear: {_hx_name:"ActorAppear",_hx_index:6,__enum__:"EventTypes",toString:$estr}
	,ActorAttack: {_hx_name:"ActorAttack",_hx_index:7,__enum__:"EventTypes",toString:$estr}
	,ActorLevelUp: {_hx_name:"ActorLevelUp",_hx_index:8,__enum__:"EventTypes",toString:$estr}
	,AreaUnlock: {_hx_name:"AreaUnlock",_hx_index:9,__enum__:"EventTypes",toString:$estr}
	,RegionUnlock: {_hx_name:"RegionUnlock",_hx_index:10,__enum__:"EventTypes",toString:$estr}
	,AreaComplete: {_hx_name:"AreaComplete",_hx_index:11,__enum__:"EventTypes",toString:$estr}
	,AreaEnterFirstTime: {_hx_name:"AreaEnterFirstTime",_hx_index:12,__enum__:"EventTypes",toString:$estr}
	,AreaEnter: {_hx_name:"AreaEnter",_hx_index:13,__enum__:"EventTypes",toString:$estr}
	,GetXP: {_hx_name:"GetXP",_hx_index:14,__enum__:"EventTypes",toString:$estr}
	,PermanentStatUpgrade: {_hx_name:"PermanentStatUpgrade",_hx_index:15,__enum__:"EventTypes",toString:$estr}
	,statUpgrade: {_hx_name:"statUpgrade",_hx_index:16,__enum__:"EventTypes",toString:$estr}
	,SkillUse: {_hx_name:"SkillUse",_hx_index:17,__enum__:"EventTypes",toString:$estr}
	,MPRunOut: {_hx_name:"MPRunOut",_hx_index:18,__enum__:"EventTypes",toString:$estr}
	,BuffRemoval: {_hx_name:"BuffRemoval",_hx_index:19,__enum__:"EventTypes",toString:$estr}
	,DebuffBlock: {_hx_name:"DebuffBlock",_hx_index:20,__enum__:"EventTypes",toString:$estr}
	,BuffRefresh: {_hx_name:"BuffRefresh",_hx_index:21,__enum__:"EventTypes",toString:$estr}
	,EquipMaxed: {_hx_name:"EquipMaxed",_hx_index:22,__enum__:"EventTypes",toString:$estr}
	,GameStartOnVersion: {_hx_name:"GameStartOnVersion",_hx_index:23,__enum__:"EventTypes",toString:$estr}
	,DayNRetention: {_hx_name:"DayNRetention",_hx_index:24,__enum__:"EventTypes",toString:$estr}
	,DayNRolling: {_hx_name:"DayNRolling",_hx_index:25,__enum__:"EventTypes",toString:$estr}
	,heal: {_hx_name:"heal",_hx_index:26,__enum__:"EventTypes",toString:$estr}
	,SoulCrushWipeData: {_hx_name:"SoulCrushWipeData",_hx_index:27,__enum__:"EventTypes",toString:$estr}
};
EventTypes.__constructs__ = [EventTypes.GameStart,EventTypes.ActorDead,EventTypes.EquipDrop,EventTypes.AutoSell,EventTypes.EquipFullFail,EventTypes.EquipFullJustNow,EventTypes.ActorAppear,EventTypes.ActorAttack,EventTypes.ActorLevelUp,EventTypes.AreaUnlock,EventTypes.RegionUnlock,EventTypes.AreaComplete,EventTypes.AreaEnterFirstTime,EventTypes.AreaEnter,EventTypes.GetXP,EventTypes.PermanentStatUpgrade,EventTypes.statUpgrade,EventTypes.SkillUse,EventTypes.MPRunOut,EventTypes.BuffRemoval,EventTypes.DebuffBlock,EventTypes.BuffRefresh,EventTypes.EquipMaxed,EventTypes.GameStartOnVersion,EventTypes.DayNRetention,EventTypes.DayNRolling,EventTypes.heal,EventTypes.SoulCrushWipeData];
var ActorReference = function(type,pos) {
	this.type = type;
	this.pos = pos;
};
$hxClasses["ActorReference"] = ActorReference;
ActorReference.__name__ = "ActorReference";
ActorReference.prototype = {
	__class__: ActorReference
};
var GameEventTrigger = function(eType) {
	this.necessaryData2 = GameEventTrigger.IGNORE;
	this.necessaryData = GameEventTrigger.IGNORE;
	this.necessaryType = eType;
};
$hxClasses["GameEventTrigger"] = GameEventTrigger;
GameEventTrigger.__name__ = "GameEventTrigger";
GameEventTrigger.prototype = {
	__class__: GameEventTrigger
};
var GameEvent = function(eType) {
	this.dataString3 = null;
	this.dataString2 = null;
	this.dataString = null;
	this.type = eType;
};
$hxClasses["GameEvent"] = GameEvent;
GameEvent.__name__ = "GameEvent";
GameEvent.prototype = {
	__class__: GameEvent
};
var Target = $hxEnums["Target"] = { __ename__:true,__constructs__:null
	,SELF: {_hx_name:"SELF",_hx_index:0,__enum__:"Target",toString:$estr}
	,ENEMY: {_hx_name:"ENEMY",_hx_index:1,__enum__:"Target",toString:$estr}
	,ALL: {_hx_name:"ALL",_hx_index:2,__enum__:"Target",toString:$estr}
};
Target.__constructs__ = [Target.SELF,Target.ENEMY,Target.ALL];
var BattlePrizeStatus = $hxEnums["BattlePrizeStatus"] = { __ename__:true,__constructs__:null
	,NEW: {_hx_name:"NEW",_hx_index:0,__enum__:"BattlePrizeStatus",toString:$estr}
	,PROCESSED: {_hx_name:"PROCESSED",_hx_index:1,__enum__:"BattlePrizeStatus",toString:$estr}
	,CONSUME_REQUEST: {_hx_name:"CONSUME_REQUEST",_hx_index:2,__enum__:"BattlePrizeStatus",toString:$estr}
	,CONSUME_REQUEST_AUTO: {_hx_name:"CONSUME_REQUEST_AUTO",_hx_index:3,__enum__:"BattlePrizeStatus",toString:$estr}
	,CONSUMED: {_hx_name:"CONSUMED",_hx_index:4,__enum__:"BattlePrizeStatus",toString:$estr}
};
BattlePrizeStatus.__constructs__ = [BattlePrizeStatus.NEW,BattlePrizeStatus.PROCESSED,BattlePrizeStatus.CONSUME_REQUEST,BattlePrizeStatus.CONSUME_REQUEST_AUTO,BattlePrizeStatus.CONSUMED];
var WeightedPrize = function(prize,weight) {
	this.prizeId = prize;
	this.weight = weight;
};
$hxClasses["WeightedPrize"] = WeightedPrize;
WeightedPrize.__name__ = "WeightedPrize";
WeightedPrize.prototype = {
	__class__: WeightedPrize
};
var WeightedDistribution = function() {
	this.prizes = [];
};
$hxClasses["WeightedDistribution"] = WeightedDistribution;
WeightedDistribution.__name__ = "WeightedDistribution";
WeightedDistribution.prototype = {
	__class__: WeightedDistribution
};
var WeightedDistributionLogic = function() { };
$hxClasses["WeightedDistributionLogic"] = WeightedDistributionLogic;
WeightedDistributionLogic.__name__ = "WeightedDistributionLogic";
WeightedDistributionLogic.getAPrize = function(distribution,random) {
	var totalWeight = 0;
	var _g_current = 0;
	var _g_array = distribution.prizes;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		totalWeight += value.weight;
	}
	var chosenWeight = random.randomInt(0,totalWeight - 1);
	var initialWeight = chosenWeight;
	var _g_current = 0;
	var _g_array = distribution.prizes;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		if(chosenWeight < value.weight) {
			return value.prizeId;
		} else {
			chosenWeight -= value.weight;
		}
	}
	haxe_Log.trace("ERROR No prize returned!!! " + initialWeight,{ fileName : "Sources\\Reusable/RandomDistributionDrop.hx", lineNumber : 35, className : "WeightedDistributionLogic", methodName : "getAPrize"});
	return -1;
};
var WeightedDistributionView = function() { };
$hxClasses["WeightedDistributionView"] = WeightedDistributionView;
WeightedDistributionView.__name__ = "WeightedDistributionView";
WeightedDistributionView.getDistributionSpreadAsText = function(distribution,prizeNames) {
	var text = "";
	var total = 0;
	var _g_current = 0;
	var _g_array = distribution.prizes;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		total += value.weight;
	}
	var _g_current = 0;
	var _g_array = distribution.prizes;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var name = prizeNames[value.prizeId];
		var probability = value.weight * 100 / total | 0;
		text += "" + name + ":  " + probability + "%\n";
	}
	return text;
};
var Rect = function(x,y,width,height) {
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["Rect"] = Rect;
Rect.__name__ = "Rect";
Rect.fromTwoPoints = function(pointA,pointB) {
	return new Rect(Math.min(pointA.x,pointB.x),Math.min(pointA.y,pointB.y),Math.abs(pointB.x - pointA.x),Math.abs(pointB.y - pointA.y));
};
Rect.fromRectShape = function(r) {
	return new Rect(r.x,r.y,r.width,r.height);
};
Rect.openRangeContains = function(aStart,aWidth,x) {
	if(x > aStart) {
		return x < aStart + aWidth;
	} else {
		return false;
	}
};
Rect.closedRangeContains = function(aStart,aWidth,x) {
	if(x >= aStart) {
		return x <= aStart + aWidth;
	} else {
		return false;
	}
};
Rect.openRangesIntersect = function(aStart,aWidth,bStart,bWidth) {
	return !(aStart >= bStart + bWidth || bStart >= aStart + aWidth);
};
Rect.prototype = {
	equals: function(r) {
		if(r != null && this.x == r.x && this.y == r.y && this.width == r.width) {
			return this.height == r.height;
		} else {
			return false;
		}
	}
	,clone: function() {
		return new Rect(this.x,this.y,this.width,this.height);
	}
	,copyTo: function(r) {
		r.x = this.x;
		r.y = this.y;
		r.width = this.width;
		r.height = this.height;
	}
	,overlaps: function(r) {
		var aStart = this.x;
		var bStart = r.x;
		if(!(aStart >= bStart + r.width || bStart >= aStart + this.width)) {
			var aStart = this.y;
			var bStart = r.y;
			return !(aStart >= bStart + r.height || bStart >= aStart + this.height);
		} else {
			return false;
		}
	}
	,intersect: function(r) {
		var _this = new Rect(this.x,this.y,this.width,this.height);
		if(_this.x < r.x) {
			_this.width -= r.x - _this.x;
			_this.x = r.x;
		}
		if(_this.y < r.y) {
			_this.height -= r.y - _this.y;
			_this.y = r.y;
		}
		if(_this.x + _this.width > r.x + r.width) {
			_this.width -= _this.x + _this.width - (r.x + r.width);
		}
		if(_this.y + _this.height > r.y + r.height) {
			_this.height -= _this.y + _this.height - (r.y + r.height);
		}
		return _this;
	}
	,intersectWith: function(r) {
		if(this.x < r.x) {
			this.width -= r.x - this.x;
			this.x = r.x;
		}
		if(this.y < r.y) {
			this.height -= r.y - this.y;
			this.y = r.y;
		}
		if(this.x + this.width > r.x + r.width) {
			this.width -= this.x + this.width - (r.x + r.width);
		}
		if(this.y + this.height > r.y + r.height) {
			this.height -= this.y + this.height - (r.y + r.height);
		}
		return this;
	}
	,containsPoint: function(p) {
		var aStart = this.x;
		var x = p.x;
		if(x >= aStart && x <= aStart + this.width) {
			var aStart = this.y;
			var x = p.y;
			if(x >= aStart) {
				return x <= aStart + this.height;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,distanceToPoint: function(p) {
		var dx = Math.max(Math.abs(p.x - (this.x + 0.5 * this.width)) - 0.5 * this.width,0);
		var dy = Math.max(Math.abs(p.y - (this.y + 0.5 * this.height)) - 0.5 * this.height,0);
		return Math.sqrt(dx * dx + dy * dy);
	}
	,distanceToRect: function(r) {
		var dx = Math.max(Math.abs(r.x + 0.5 * r.width - (this.x + 0.5 * this.width)) - 0.5 * (this.width + r.width),0);
		var dy = Math.max(Math.abs(r.y + 0.5 * r.height - (this.y + 0.5 * this.height)) - 0.5 * (this.height + r.height),0);
		return Math.sqrt(dx * dx + dy * dy);
	}
	,addWith: function(v) {
		if(v.x < 0.0) {
			this.x += v.x;
			this.width -= v.x;
		} else {
			this.width += v.x;
		}
		if(v.y < 0.0) {
			this.y += v.y;
			this.height -= v.y;
		} else {
			this.height += v.y;
		}
		return this;
	}
	,getVertex: function(index) {
		var x = this.x;
		var y = this.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var v = this1;
		switch(index) {
		case 0:
			break;
		case 1:
			v.x += this.width;
			break;
		case 2:
			v.x += this.width;
			v.y += this.height;
			break;
		case 3:
			v.y += this.height;
			break;
		default:
			throw haxe_Exception.thrown("Invalid vertex index.");
		}
		return v;
	}
	,get_center: function() {
		var x = this.x + 0.5 * this.width;
		var y = this.y + 0.5 * this.height;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		return this1;
	}
	,get_topX: function() {
		return this.x + this.width;
	}
	,get_topY: function() {
		return this.y + this.height;
	}
	,set_topX: function(topX) {
		this.width = topX - this.x;
		return this.x + this.width;
	}
	,set_topY: function(topY) {
		this.height = topY - this.y;
		return this.height + this.y;
	}
	,get_area: function() {
		return this.width * this.height;
	}
	,get_isEmpty: function() {
		if(!(this.width <= 0.0)) {
			return this.height <= 0.0;
		} else {
			return true;
		}
	}
	,__class__: Rect
	,__properties__: {set_topY:"set_topY",get_topY:"get_topY",set_topX:"set_topX",get_topX:"get_topX",get_isEmpty:"get_isEmpty",get_area:"get_area",get_center:"get_center"}
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice;
		var a1 = arguments;
		var a2 = a.call(a1);
		return f(a2);
	};
};
var Renderer = function() { };
$hxClasses["Renderer"] = Renderer;
Renderer.__name__ = "Renderer";
Renderer.fillRect = function(transform,color,mask,alpha) {
	Renderer.fillRectSimple(color,transform.get_x(),transform.get_y(),transform.size.x,transform.size.y,mask,alpha);
};
Renderer.drawRect = function(transform,color,size,mask) {
	transform.feedRect(Renderer.aux);
	var x = Renderer.aux.x;
	var y = Renderer.aux.y;
	var w = Renderer.aux.width;
	var h = Renderer.aux.height;
	Renderer.fillRectSimple(color,x,y,size,h,mask);
	Renderer.fillRectSimple(color,x + w - size,y,size,h,mask);
	Renderer.fillRectSimple(color,x,y,w,size,mask);
	Renderer.fillRectSimple(color,x,y + h - size,w,size,mask);
};
Renderer.fillRectSimple = function(color,x,y,w,h,mask,alpha) {
	if(alpha == null) {
		alpha = 255;
	}
	if(mask != null) {
		Renderer.aux.x = x;
		Renderer.aux.y = y;
		Renderer.aux.width = w;
		Renderer.aux.height = h;
		mask.feedRect(Renderer.aux2);
		var _this = Renderer.aux;
		var r = Renderer.aux2;
		if(_this.x < r.x) {
			_this.width -= r.x - _this.x;
			_this.x = r.x;
		}
		if(_this.y < r.y) {
			_this.height -= r.y - _this.y;
			_this.y = r.y;
		}
		if(_this.x + _this.width > r.x + r.width) {
			_this.width -= _this.x + _this.width - (r.x + r.width);
		}
		if(_this.y + _this.height > r.y + r.height) {
			_this.height -= _this.y + _this.height - (r.y + r.height);
		}
		if(Renderer.aux.width <= 0) {
			return;
		}
		if(Renderer.aux.height <= 0) {
			return;
		}
		x = Renderer.aux.x;
		y = Renderer.aux.y;
		w = Renderer.aux.width;
		h = Renderer.aux.height;
	}
	Renderer.drawScaledSubImage("whitep",null,0,0,1,1,x,y,w,h,color,alpha);
};
Renderer.NinePatchS = function(ninePatch,x,y,w,h,color,border,mask) {
	var leftX = x;
	var minY = y;
	var rightX = x + w;
	var maxY = y + h;
	var imageName = ninePatch.spriteName;
	var image = ninePatch.rect;
	Renderer.drawScaledSubImage(imageName,mask,border,border,image.width - border * 2,image.height - border * 2,leftX + border,minY + border,w - border * 2,h - border * 2,color);
	Renderer.drawScaledSubImage(imageName,mask,border,0,image.width - border * 2,border,leftX + border,minY,w - border * 2,border,color);
	Renderer.drawScaledSubImage(imageName,mask,border,image.height - border,image.width - border * 2,border,leftX,maxY - border,w,border,color);
	Renderer.drawScaledSubImage(imageName,mask,image.width - border,border,border,image.height - border * 2,rightX - border,minY + border,border,h - border * 2,color);
	Renderer.drawScaledSubImage(imageName,mask,0,border,border,image.height - border * 2,leftX,minY + border,border,h - border * 2,color);
	Renderer.drawSubImage(imageName,mask,leftX,minY,0,0,border,border,color);
	Renderer.drawSubImage(imageName,mask,rightX - border,minY,image.width - border,0,border,border,color);
	Renderer.drawSubImage(imageName,mask,leftX,maxY - border,0,image.height - border,border,border,color);
	Renderer.drawSubImage(imageName,mask,rightX - border,maxY - border,image.width - border,image.height - border,border,border,color);
};
Renderer.sprite = function(sprite,transform,style,mask,offsetX,offsetY,metaRenderInfo) {
	if(metaRenderInfo == null) {
		metaRenderInfo = 0;
	}
	transform.feedRect(Renderer.aux);
	Renderer.drawScaledSubImage(sprite.spriteName,mask,sprite.rect.x,sprite.rect.y,sprite.rect.width,sprite.rect.height,Renderer.aux.x + offsetX,Renderer.aux.y + offsetY,Renderer.aux.width,Renderer.aux.height,style.color,style.alpha,metaRenderInfo);
};
Renderer.drawSprite = function(sprite,mask,x,y,scaleX,scaleY,pivotX,pivotY,color,alpha,renderMetaInfo) {
	if(renderMetaInfo == null) {
		renderMetaInfo = 0;
	}
	if(alpha == null) {
		alpha = 255;
	}
	if(color == null) {
		color = 1048575;
	}
	if(pivotY == null) {
		pivotY = 0;
	}
	if(pivotX == null) {
		pivotX = 0;
	}
	if(scaleY == null) {
		scaleY = 1;
	}
	if(scaleX == null) {
		scaleX = 1;
	}
	var w = sprite.rect.width;
	var h = sprite.rect.height;
	var ws = scaleX * w | 0;
	var hs = scaleY * h | 0;
	x -= ws * pivotX | 0;
	y -= hs * pivotY | 0;
	Renderer.drawScaledSubImage(sprite.spriteName,mask,sprite.rect.x,sprite.rect.y,sprite.rect.width,sprite.rect.height,x,y,ws,hs,color,alpha,renderMetaInfo);
};
Renderer.NinePatch = function(ninePatch,transform,style,mask) {
	var border = style.ninePatch.borderSize;
	var leftX = transform.position.x;
	var minY = transform.position.y;
	var rightX = leftX + transform.size.x;
	var maxY = minY + transform.size.y;
	var w = transform.size.x;
	var h = transform.size.y;
	var imageName = ninePatch.spriteName;
	var image = ninePatch.rect;
	var color = style.color;
	Renderer.NinePatchS(ninePatch,leftX,minY,w,h,16777215,12,mask);
};
Renderer.drawScaledSubImage = function(imageName,mask,sx,sy,sw,sh,dx,dy,dw,dh,color,alpha,metaRenderInfo) {
	if(metaRenderInfo == null) {
		metaRenderInfo = 0;
	}
	if(alpha == null) {
		alpha = 255;
	}
	if(color == null) {
		color = 16777215;
	}
	var tmp = color != 0;
	if(mask != null) {
		var destR = Renderer.aux3;
		var maskR = Renderer.aux2;
		var sourceR = Renderer.aux;
		mask.feedRect(maskR);
		sourceR.x = sx;
		sourceR.y = sy;
		sourceR.width = sw;
		sourceR.height = sh;
		destR.x = dx;
		destR.y = dy;
		destR.width = dw;
		destR.height = dh;
		if(destR.x < maskR.x) {
			destR.width -= maskR.x - destR.x;
			destR.x = maskR.x;
		}
		if(destR.y < maskR.y) {
			destR.height -= maskR.y - destR.y;
			destR.y = maskR.y;
		}
		if(destR.x + destR.width > maskR.x + maskR.width) {
			destR.width -= destR.x + destR.width - (maskR.x + maskR.width);
		}
		if(destR.y + destR.height > maskR.y + maskR.height) {
			destR.height -= destR.y + destR.height - (maskR.y + maskR.height);
		}
		if(destR.width <= 0 || destR.height <= 0) {
			return;
		}
		if(destR.width != dw || destR.height != dh) {
			mask.feedRect(Renderer.aux4);
			var scaleX = sw / dw;
			var scaleY = sh / dh;
			Renderer.aux4.x = sx + (Renderer.aux4.x - dx) * scaleX;
			Renderer.aux4.y = sy + (Renderer.aux4.y - dy) * scaleY;
			Renderer.aux4.width *= scaleX;
			Renderer.aux4.height *= scaleY;
			var r = Renderer.aux4;
			if(sourceR.x < r.x) {
				sourceR.width -= r.x - sourceR.x;
				sourceR.x = r.x;
			}
			if(sourceR.y < r.y) {
				sourceR.height -= r.y - sourceR.y;
				sourceR.y = r.y;
			}
			if(sourceR.x + sourceR.width > r.x + r.width) {
				sourceR.width -= sourceR.x + sourceR.width - (r.x + r.width);
			}
			if(sourceR.y + sourceR.height > r.y + r.height) {
				sourceR.height -= sourceR.y + sourceR.height - (r.y + r.height);
			}
			sx = sourceR.x;
			sy = sourceR.y;
			sw = sourceR.width;
			sh = sourceR.height;
			dx = destR.x;
			dy = destR.y;
			dw = destR.width;
			dh = destR.height;
		}
	}
	dx = dx | 0;
	dy = dy | 0;
	dx *= Renderer.scaleInt;
	dy *= Renderer.scaleInt;
	dw *= Renderer.scaleInt;
	dh *= Renderer.scaleInt;
	PhaserRenderer.drawImage(imageName,sx,sy,sw,sh,dx,dy,dw,dh,alpha / 255,color);
};
Renderer.drawSubImage = function(img,mask,x,y,sx,sy,sw,sh,color) {
	if(color == null) {
		color = 16777215;
	}
	Renderer.drawScaledSubImage(img,mask,sx,sy,sw,sh,x,y,sw,sh);
};
var ResolutionScaling = function(minW,minH,pixelPerfect) {
	this.limitMaxScale = 999999;
	this.alwaysHighestScale = true;
	this.minimumWidth = minW;
	this.minimumHeight = minH;
	this.pixelPerfectMode = pixelPerfect;
};
$hxClasses["ResolutionScaling"] = ResolutionScaling;
ResolutionScaling.__name__ = "ResolutionScaling";
ResolutionScaling.prototype = {
	feed: function(actualW,actualH) {
		if(this.pixelPerfectMode) {
			this.maxPixelScale = Math.floor(actualW / this.minimumWidth);
			var maxYPixelScale = Math.floor(actualH / this.minimumHeight);
			if(this.maxPixelScale > maxYPixelScale) {
				this.maxPixelScale = maxYPixelScale;
			}
			if(this.currentScale > this.maxPixelScale) {
				this.currentPixelScale = this.maxPixelScale;
			}
			if(this.alwaysHighestScale) {
				this.currentPixelScale = this.maxPixelScale;
			}
			if(this.currentPixelScale < 1) {
				this.currentPixelScale = 1;
			}
			if(this.currentPixelScale > this.limitMaxScale) {
				this.currentPixelScale = this.limitMaxScale;
			}
			this.rendererWidth = actualW / this.currentPixelScale | 0;
			this.rendererHeight = actualH / this.currentPixelScale | 0;
		}
	}
	,applyMouseAndRenderer: function() {
		Mouse.mouse.scaledScreen(1 / Renderer.scaleInt);
		Renderer.width = this.rendererWidth;
		Renderer.height = this.rendererHeight;
		Renderer.scaleInt = this.currentPixelScale;
	}
	,__class__: ResolutionScaling
};
var RetentionLogic = function() {
	this.gameStartDate = null;
};
$hxClasses["RetentionLogic"] = RetentionLogic;
RetentionLogic.__name__ = "RetentionLogic";
RetentionLogic.prototype = {
	calculateDayFromStart: function(rd) {
		if(this.gameStartDate == null) {
			this.gameStartDate = HxOverrides.strDate(rd.gameStartDate);
		}
		var timeMili = new Date().getTime() - this.gameStartDate.getTime();
		var timeDay = timeMili / 86400000;
		return Math.floor(timeDay);
	}
	,checkAndSendRetentionEvents: function(rd) {
		var dfs = this.calculateDayFromStart(rd);
		if(dfs > rd.latestDayRetention) {
			GameAnalyticsIntegration.SendProgressCompleteEvent("retention","day" + dfs);
			var _g = 0;
			var _g1 = RetentionLogic.rollingRetentionDays;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i <= dfs && rd.reportedRollingRetention.indexOf(i) == -1) {
					rd.reportedRollingRetention.push(i);
					GameAnalyticsIntegration.SendProgressCompleteEvent("rollingretention","day" + i);
				}
			}
			rd.latestDayRetention = dfs;
		} else {
			if(dfs < 0) {
				GameAnalyticsIntegration.SendProgressCompleteEvent("retentionnegative","day" + dfs);
				return;
			}
			if(dfs < rd.latestDayRetention) {
				GameAnalyticsIntegration.SendProgressCompleteEvent("retentionbackintime","day" + dfs,"day" + rd.latestDayRetention);
				return;
			}
		}
	}
	,__class__: RetentionLogic
};
var SaveAssistant = function() { };
$hxClasses["SaveAssistant"] = SaveAssistant;
SaveAssistant.__name__ = "SaveAssistant";
SaveAssistant.GetPersistenceMaster = function(jsonData) {
	if(jsonData != null && jsonData != "" && jsonData != "undefined") {
		var persistenceMaster = null;
		try {
			var parsed = JSON.parse(jsonData);
			persistenceMaster = parsed;
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace("save problem!",{ fileName : "Sources\\GRI\\logic/SaveAssistant.hx", lineNumber : 12, className : "SaveAssistant", methodName : "GetPersistenceMaster"});
			haxe_Log.trace(jsonData,{ fileName : "Sources\\GRI\\logic/SaveAssistant.hx", lineNumber : 13, className : "SaveAssistant", methodName : "GetPersistenceMaster"});
			ErrorX.exception = e;
		}
		if(persistenceMaster != null) {
			if(persistenceMaster.worldVersion >= 602 == false) {
				persistenceMaster.jsonGameplay = jsonData;
			}
		} else {
			return SaveAssistant.EmptyPersistence();
		}
		return persistenceMaster;
	} else {
		return SaveAssistant.EmptyPersistence();
	}
};
SaveAssistant.EmptyPersistence = function() {
	return { worldVersion : -1, jsonStory : null, jsonGameplay : null, jsonGeneral : null, jsonGameplayDimensions : null, jsonVillageDimensions : null, jsonVillageShared : null, jsonGeneralAllDimensions : null};
};
var ScalableDistributionData = function(atZeroValue,baseForExponential) {
	if(baseForExponential == null) {
		baseForExponential = 1;
	}
	if(atZeroValue == null) {
		atZeroValue = 1;
	}
	this.overrideValues = [atZeroValue];
	this.baseForExponential = baseForExponential;
};
$hxClasses["ScalableDistributionData"] = ScalableDistributionData;
ScalableDistributionData.__name__ = "ScalableDistributionData";
ScalableDistributionData.prototype = {
	setOverrideValue: function(index,value) {
		while(this.overrideValues.length <= index) this.overrideValues.push(-99999);
		this.overrideValues[index] = value;
	}
	,__class__: ScalableDistributionData
};
var ScalingLogic = function() { };
$hxClasses["ScalingLogic"] = ScalingLogic;
ScalingLogic.__name__ = "ScalingLogic";
ScalingLogic.getValue = function(value,distribution) {
	var base = 1;
	var overrideV = distribution.overrideValues;
	var expoente = value;
	if(overrideV != null) {
		if(overrideV.length > value) {
			if(overrideV[value] != -99999) {
				return overrideV[value];
			}
		}
		var index = ScalingLogic.findNextSmallerIndexThatIsNotIgnore(overrideV,value);
		if(index >= 0) {
			base = overrideV[index];
			expoente -= index;
		}
	}
	return base * Math.pow(distribution.baseForExponential,expoente) | 0;
};
ScalingLogic.findNextSmallerIndexThatIsNotIgnore = function(array,bigIndex) {
	if(bigIndex > array.length) {
		bigIndex = array.length;
	}
	var _g = 0;
	var _g1 = bigIndex;
	while(_g < _g1) {
		var i = _g++;
		var index = bigIndex - i - 1;
		if(array[index] != -99999) {
			return index;
		}
	}
	return -1;
};
var ScalingUtils = function() { };
$hxClasses["ScalingUtils"] = ScalingUtils;
ScalingUtils.__name__ = "ScalingUtils";
ScalingUtils.softCap = function(value,softCap) {
	if(value > softCap) {
		var diff = value - softCap;
		value += Math.log(diff + 2) | 0;
	}
	return value;
};
var SimpleMovementEffects = function(uiCreator) {
	this.simpleMovements = [];
	this.uiCreator = uiCreator;
};
$hxClasses["SimpleMovementEffects"] = SimpleMovementEffects;
SimpleMovementEffects.__name__ = "SimpleMovementEffects";
SimpleMovementEffects.prototype = {
	update: function(miliseconds) {
		var i = 0;
		while(i < this.simpleMovements.length) {
			var sm = this.simpleMovements[i];
			sm.milisecondsProgress += miliseconds;
			var route = sm.getCurrentRoute();
			if(route != null) {
				var progress = sm.getCurrentRouteProgress();
				if(progress < 0) {
					CrossTarget.alert("ERROR: SimpleMovementEffects route bug");
					throw haxe_Exception.thrown(null);
				}
				var position = route.getPosition(progress);
				sm.element.transform.position = position;
				++i;
			} else {
				sm.element.visible = false;
				HxOverrides.remove(this.simpleMovements,sm);
			}
		}
	}
	,startDropAndCollection: function(sprite,configuration,x,y,xf,yf) {
		var x1 = x;
		var y1 = y;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var this1 = new Vector2Default(x1,y1);
		var initialPosition = this1;
		var x = xf;
		var y = yf;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var endPosition = this1;
		var sme = new SimpleMovementEffect();
		sme.element = this.uiCreator.createImageElement(sprite);
		this.uiCreator.addElement(sme.element);
		var dd = configuration.dropDistance;
		var self = initialPosition;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x -= endPosition.x;
		self.y -= endPosition.y;
		var dis = self;
		var newLength = configuration.dropDistance;
		var self = dis;
		var self1 = self;
		var self2 = self1;
		var length = Math.sqrt(self2.x * self2.x + self2.y * self2.y);
		if(length > 0.0) {
			var self2 = self1;
			self2.x /= length;
			self2.y /= length;
		}
		var self1 = self;
		self1.x *= newLength;
		self1.y *= newLength;
		var self1 = self;
		var x = self1.x;
		var y = self1.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x += initialPosition.x;
		self.y += initialPosition.y;
		var finalDropPos = self;
		var self = endPosition;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var self_x = x;
		var self_y = y;
		self_x -= finalDropPos.x;
		self_y -= finalDropPos.y;
		var disCollect = Math.sqrt(self_x * self_x + self_y * self_y);
		var collectionTime = disCollect / configuration.collectSpeed;
		sme.route.push(new RouteUnit(initialPosition,finalDropPos,configuration.dropTimeMiliseconds,Easings.EXPO_OUT));
		sme.route.push(new RouteUnit(finalDropPos,endPosition,collectionTime * 1000 | 0,Easings.EXPO_IN));
		this.simpleMovements.push(sme);
	}
	,__class__: SimpleMovementEffects
};
var SimpleMovementEffect = function() {
	this.milisecondsProgress = 0;
	this.route = [];
};
$hxClasses["SimpleMovementEffect"] = SimpleMovementEffect;
SimpleMovementEffect.__name__ = "SimpleMovementEffect";
SimpleMovementEffect.prototype = {
	getCurrentRoute: function() {
		var aux = this.milisecondsProgress;
		var _g_current = 0;
		var _g_array = this.route;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			aux -= value.timeMiliseconds;
			if(aux < 0) {
				return value;
			}
		}
		return null;
	}
	,getCurrentRouteProgress: function() {
		var aux = this.milisecondsProgress;
		var _g_current = 0;
		var _g_array = this.route;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			aux -= value.timeMiliseconds;
			if(aux < 0) {
				var r = (aux + value.timeMiliseconds) / value.timeMiliseconds;
				r = Easing.getEasing(value.easing,r);
				return r;
			}
		}
		return -1;
	}
	,__class__: SimpleMovementEffect
};
var RouteUnit = function(initialPos,finalPos,timeMili,easing) {
	this.finalPos = finalPos;
	this.initialPos = initialPos;
	this.timeMiliseconds = timeMili;
	this.easing = easing;
};
$hxClasses["RouteUnit"] = RouteUnit;
RouteUnit.__name__ = "RouteUnit";
RouteUnit.prototype = {
	getPosition: function(progress) {
		var b = this.initialPos;
		var self = this.finalPos;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var self_x = x;
		var self_y = y;
		self_x -= b.x;
		self_y -= b.y;
		var x = self_x;
		var y = self_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var b_x = x;
		var b_y = y;
		b_x *= progress;
		b_y *= progress;
		var self = this.initialPos;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x += b_x;
		self.y += b_y;
		return self;
	}
	,__class__: RouteUnit
};
var DropAndCollectConfiguration = function(dropDistance,dropTimeMiliseconds,collectSpeed) {
	this.dropDistance = dropDistance;
	this.dropTimeMiliseconds = dropTimeMiliseconds;
	this.collectSpeed = collectSpeed;
};
$hxClasses["DropAndCollectConfiguration"] = DropAndCollectConfiguration;
DropAndCollectConfiguration.__name__ = "DropAndCollectConfiguration";
DropAndCollectConfiguration.prototype = {
	__class__: DropAndCollectConfiguration
};
var SkelDataUnit = function() {
};
$hxClasses["SkelDataUnit"] = SkelDataUnit;
SkelDataUnit.__name__ = "SkelDataUnit";
SkelDataUnit.prototype = {
	__class__: SkelDataUnit
};
var SkeletonLoaderX = function() {
	this.skelDatas = new haxe_ds_StringMap();
	this.skelJson = new spine_SkeletonJson(new AttachmentLoaderX());
};
$hxClasses["SkeletonLoaderX"] = SkeletonLoaderX;
SkeletonLoaderX.__name__ = "SkeletonLoaderX";
SkeletonLoaderX.prototype = {
	createSkeletonUnit: function(dataFileName,fileContent) {
		var sD = this.skelDatas.h[dataFileName];
		if(sD == null) {
			sD = this.readSkeletonData(dataFileName,fileContent);
		}
		var su = new SkeletonUnit();
		su.skeleton = new spine_Skeleton(sD.skelData);
		su.animationState = new spine_AnimationState(sD.skelAnimData);
		return su;
	}
	,readSkeletonData: function(fileName,fileContent) {
		var jsonText = fileContent;
		if(jsonText == null) {
			jsonText = CrossTarget.getTextResource(fileName);
		}
		var jsonV = new spine_support_utils_JsonDynamic(JSON.parse(jsonText));
		var skelData = this.skelJson.readSkeletonData(jsonV);
		var sdu = new SkelDataUnit();
		sdu.skelData = skelData;
		sdu.skelAnimData = new spine_AnimationStateData(skelData);
		this.skelDatas.h[fileName] = sdu;
		return sdu;
	}
	,__class__: SkeletonLoaderX
};
var SkeletonToTransform = function() {
};
$hxClasses["SkeletonToTransform"] = SkeletonToTransform;
SkeletonToTransform.__name__ = "SkeletonToTransform";
SkeletonToTransform.prototype = {
	__class__: SkeletonToTransform
};
var SkeletonToSprite = function(bone,slot,attach,sprite) {
	this.bone = bone;
	this.slot = slot;
	this.attachment = attach;
	this.sprite = sprite;
};
$hxClasses["SkeletonToSprite"] = SkeletonToSprite;
SkeletonToSprite.__name__ = "SkeletonToSprite";
SkeletonToSprite.prototype = {
	__class__: SkeletonToSprite
};
var SkeletonToText = function(bone,slot,font) {
	this.text = "SAMPLE";
	this.bone = bone;
	this.slot = slot;
	this.font = font;
};
$hxClasses["SkeletonToText"] = SkeletonToText;
SkeletonToText.__name__ = "SkeletonToText";
SkeletonToText.prototype = {
	__class__: SkeletonToText
};
var SkeletonToSpriteSheet = function(bone,slot,ss) {
	this.bone = bone;
	this.slot = slot;
	this.spriteSheet = ss;
};
$hxClasses["SkeletonToSpriteSheet"] = SkeletonToSpriteSheet;
SkeletonToSpriteSheet.__name__ = "SkeletonToSpriteSheet";
SkeletonToSpriteSheet.prototype = {
	__class__: SkeletonToSpriteSheet
};
var SkeletonUnit = function() {
	this.autoSpriteAlpha = 255;
	this.layer = -1;
	this.yAutoSpriteScale = 1.0;
	this.xAutoSpriteScale = 1.0;
	this.yAutoSpriteOffset = 0;
	this.xAutoSpriteOffset = 0;
	this.yDirection = 1.0;
	this.xDirection = 1.0;
	this.autoSpriteSheet = [];
	this.autoText = [];
	this.autoSprite = [];
	this.tBinds = [];
};
$hxClasses["SkeletonUnit"] = SkeletonUnit;
SkeletonUnit.__name__ = "SkeletonUnit";
SkeletonUnit.prototype = {
	startAnimation: function(animName,loop,track) {
		if(track == null) {
			track = 0;
		}
		if(loop == null) {
			loop = false;
		}
		var _this = this.skeleton;
		var slots = _this.slots;
		var n = _this.slots.length;
		var src = slots;
		var dest = _this.drawOrder;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,n);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + n));
		}
		var i = 0;
		while(i < n) {
			var result = slots[i];
			var _this = result;
			var _this1 = _this.color;
			var color = _this.data.color;
			_this1.r = color.r;
			_this1.g = color.g;
			_this1.b = color.b;
			_this1.a = color.a;
			if(_this.darkColor != null) {
				var _this2 = _this.darkColor;
				var color1 = _this.data.darkColor;
				_this2.r = color1.r;
				_this2.g = color1.g;
				_this2.b = color1.b;
				_this2.a = color1.a;
			}
			if(_this.data.attachmentName == null) {
				var attachment = null;
				if(_this.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this3 = result1;
						var result2 = _this.attachment;
						var _this4 = result2;
						tmp = (_this3.deformAttachment != null ? _this3.deformAttachment : _this3) != (_this4.deformAttachment != null ? _this4.deformAttachment : _this4);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = _this.deform;
						this1.splice(0,this1.length);
					}
					_this.attachment = attachment;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			} else {
				_this.attachment = null;
				var attachment1 = _this.bone.skeleton.getAttachment(_this.data.index,_this.data.attachmentName);
				if(_this.attachment != attachment1) {
					var tmp1;
					if(!(!((attachment1) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result3 = attachment1;
						var _this5 = result3;
						var result4 = _this.attachment;
						var _this6 = result4;
						tmp1 = (_this5.deformAttachment != null ? _this5.deformAttachment : _this5) != (_this6.deformAttachment != null ? _this6.deformAttachment : _this6);
					} else {
						tmp1 = true;
					}
					if(tmp1) {
						var this2 = _this.deform;
						this2.splice(0,this2.length);
					}
					_this.attachment = attachment1;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			}
			++i;
		}
		var _this = this.skeleton;
		var bones = _this.bones;
		var i = 0;
		var n = _this.bones.length;
		while(i < n) {
			var result = bones[i];
			var _this1 = result;
			var data = _this1.data;
			_this1.x = data.x;
			_this1.y = data.y;
			_this1.rotation = data.rotation;
			_this1.scaleX = data.scaleX;
			_this1.scaleY = data.scaleY;
			_this1.shearX = data.shearX;
			_this1.shearY = data.shearY;
			++i;
		}
		var ikConstraints = _this.ikConstraints;
		var i = 0;
		var n = _this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var constraint = result;
			constraint.mix = constraint.data.mix;
			constraint.softness = constraint.data.softness;
			constraint.bendDirection = constraint.data.bendDirection;
			constraint.compress = constraint.data.compress;
			constraint.stretch = constraint.data.stretch;
			++i;
		}
		var transformConstraints = _this.transformConstraints;
		var i = 0;
		var n = _this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			constraint.mixScaleX = data.mixScaleX;
			constraint.mixScaleY = data.mixScaleY;
			constraint.mixShearY = data.mixShearY;
			++i;
		}
		var pathConstraints = _this.pathConstraints;
		var i = 0;
		var n = _this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.position = data.position;
			constraint.spacing = data.spacing;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			++i;
		}
		var slots = _this.slots;
		var n = _this.slots.length;
		var src = slots;
		var dest = _this.drawOrder;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,n);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + n));
		}
		var i = 0;
		while(i < n) {
			var result = slots[i];
			var _this = result;
			var _this1 = _this.color;
			var color = _this.data.color;
			_this1.r = color.r;
			_this1.g = color.g;
			_this1.b = color.b;
			_this1.a = color.a;
			if(_this.darkColor != null) {
				var _this2 = _this.darkColor;
				var color1 = _this.data.darkColor;
				_this2.r = color1.r;
				_this2.g = color1.g;
				_this2.b = color1.b;
				_this2.a = color1.a;
			}
			if(_this.data.attachmentName == null) {
				var attachment = null;
				if(_this.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this3 = result1;
						var result2 = _this.attachment;
						var _this4 = result2;
						tmp = (_this3.deformAttachment != null ? _this3.deformAttachment : _this3) != (_this4.deformAttachment != null ? _this4.deformAttachment : _this4);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = _this.deform;
						this1.splice(0,this1.length);
					}
					_this.attachment = attachment;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			} else {
				_this.attachment = null;
				var attachment1 = _this.bone.skeleton.getAttachment(_this.data.index,_this.data.attachmentName);
				if(_this.attachment != attachment1) {
					var tmp1;
					if(!(!((attachment1) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result3 = attachment1;
						var _this5 = result3;
						var result4 = _this.attachment;
						var _this6 = result4;
						tmp1 = (_this5.deformAttachment != null ? _this5.deformAttachment : _this5) != (_this6.deformAttachment != null ? _this6.deformAttachment : _this6);
					} else {
						tmp1 = true;
					}
					if(tmp1) {
						var this2 = _this.deform;
						this2.splice(0,this2.length);
					}
					_this.attachment = attachment1;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			}
			++i;
		}
		var _this = this.animationState;
		var animation = _this.data.skeletonData.findAnimation(animName);
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + animName));
		}
		if(track < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var interrupt = true;
		var current;
		if(track < _this.tracks.length) {
			current = _this.tracks[track];
		} else {
			var this1 = _this.tracks;
			var size = track + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			current = null;
		}
		if(current != null) {
			if(current.nextTrackLast == -1) {
				_this.tracks[track] = current.mixingFrom;
				var _this1 = _this.queue;
				_this1.objects.push(1);
				_this1.objects.push(current);
				var _this1 = _this.queue;
				_this1.objects.push(2);
				_this1.objects.push(current);
				_this1.AnimationState_this.animationsChanged = true;
				var next = current.next;
				while(next != null) {
					var _this1 = _this.queue;
					_this1.objects.push(3);
					_this1.objects.push(next);
					next = next.next;
				}
				current.next = null;
				current = current.mixingFrom;
				interrupt = false;
			} else {
				var next = current.next;
				while(next != null) {
					var _this1 = _this.queue;
					_this1.objects.push(3);
					_this1.objects.push(next);
					next = next.next;
				}
				current.next = null;
			}
		}
		var entry = _this.trackEntryPool.obtain();
		entry.trackIndex = track;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(current == null) {
			tmp = 0;
		} else {
			var _this1 = _this.data;
			var from = current.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this1.tempAnimationStateDataKey.a1 = from;
			_this1.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this1.animationToMixTime;
			var key = _this1.tempAnimationStateDataKey;
			var defaultValue = _this1.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		var from;
		if(track < _this.tracks.length) {
			from = _this.tracks[track];
		} else {
			var this1 = _this.tracks;
			var size = track + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			from = null;
		}
		_this.tracks[track] = entry1;
		entry1.previous = null;
		if(from != null) {
			if(interrupt) {
				var _this1 = _this.queue;
				_this1.objects.push(1);
				_this1.objects.push(from);
			}
			entry1.mixingFrom = from;
			from.mixingTo = entry1;
			entry1.mixTime = 0;
			if(from.mixingFrom != null && from.mixDuration > 0) {
				entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
			}
			var this1 = from.timelinesRotation;
			this1.splice(0,this1.length);
		}
		var _this1 = _this.queue;
		_this1.objects.push(0);
		_this1.objects.push(entry1);
		_this1.AnimationState_this.animationsChanged = true;
		var _this1 = _this.queue;
		if(!_this1.drainDisabled) {
			_this1.drainDisabled = true;
			var listenersArray = _this1.AnimationState_this.listeners;
			var i = 0;
			while(i < _this1.objects.length) {
				var type = _this1.objects[i];
				var result = _this1.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this1.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this1.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this1.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this1.objects;
			this1.splice(0,this1.length);
			_this1.drainDisabled = false;
		}
	}
	,queueAnimation: function(animName,loop,track) {
		if(track == null) {
			track = 0;
		}
		if(loop == null) {
			loop = false;
		}
		var _this = this.animationState;
		var _this1 = this.animationState;
		var _this2 = 0 >= _this1.tracks.length ? null : _this1.tracks[0];
		var delay;
		if(_this2.loop) {
			var duration = _this2.animationEnd - _this2.animationStart;
			delay = duration == 0 ? _this2.animationStart : _this2.trackTime % duration + _this2.animationStart;
		} else {
			delay = Math.min(_this2.trackTime + _this2.animationStart,_this2.animationEnd);
		}
		var animation = _this.data.skeletonData.findAnimation(animName);
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + animName));
		}
		var delay1 = delay;
		if(track < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var last;
		if(track < _this.tracks.length) {
			last = _this.tracks[track];
		} else {
			var this1 = _this.tracks;
			var size = track + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			last = null;
		}
		if(last != null) {
			while(last.next != null) last = last.next;
		}
		var entry = _this.trackEntryPool.obtain();
		entry.trackIndex = track;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this1 = _this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this1.tempAnimationStateDataKey.a1 = from;
			_this1.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this1.animationToMixTime;
			var key = _this1.tempAnimationStateDataKey;
			var defaultValue = _this1.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		if(last == null) {
			var from;
			if(track < _this.tracks.length) {
				from = _this.tracks[track];
			} else {
				var this1 = _this.tracks;
				var size = track + 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					this1[size - 1] = null;
				}
				from = null;
			}
			_this.tracks[track] = entry1;
			entry1.previous = null;
			if(from != null) {
				var _this1 = _this.queue;
				_this1.objects.push(1);
				_this1.objects.push(from);
				entry1.mixingFrom = from;
				from.mixingTo = entry1;
				entry1.mixTime = 0;
				if(from.mixingFrom != null && from.mixDuration > 0) {
					entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
				}
				var this1 = from.timelinesRotation;
				this1.splice(0,this1.length);
			}
			var _this1 = _this.queue;
			_this1.objects.push(0);
			_this1.objects.push(entry1);
			_this1.AnimationState_this.animationsChanged = true;
			var _this1 = _this.queue;
			if(!_this1.drainDisabled) {
				_this1.drainDisabled = true;
				var listenersArray = _this1.AnimationState_this.listeners;
				var i = 0;
				while(i < _this1.objects.length) {
					var type = _this1.objects[i];
					var result = _this1.objects[i + 1];
					var entry = result;
					var listenersCount = listenersArray.array.length;
					var listeners = listenersArray.begin();
					while(true) {
						var _switchCond2 = type;
						if(_switchCond2 == 0) {
							if(entry.listener != null) {
								entry.listener.start(entry);
							}
							var ii = 0;
							while(ii < listenersCount) {
								var result1 = listeners[ii];
								result1.start(entry);
								++ii;
							}
							break;
						} else if(_switchCond2 == 1) {
							if(entry.listener != null) {
								entry.listener.interrupt(entry);
							}
							var ii1 = 0;
							while(ii1 < listenersCount) {
								var result2 = listeners[ii1];
								result2.interrupt(entry);
								++ii1;
							}
							break;
						} else if(_switchCond2 == 2) {
							if(entry.listener != null) {
								entry.listener.end(entry);
							}
							var ii2 = 0;
							while(ii2 < listenersCount) {
								var result3 = listeners[ii2];
								result3.end(entry);
								++ii2;
							}
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii3 = 0;
							while(ii3 < listenersCount) {
								var result4 = listeners[ii3];
								result4.dispose(entry);
								++ii3;
							}
							_this1.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 3) {
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii4 = 0;
							while(ii4 < listenersCount) {
								var result5 = listeners[ii4];
								result5.dispose(entry);
								++ii4;
							}
							_this1.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 4) {
							if(entry.listener != null) {
								entry.listener.complete(entry);
							}
							var ii5 = 0;
							while(ii5 < listenersCount) {
								var result6 = listeners[ii5];
								result6.complete(entry);
								++ii5;
							}
							break;
						} else if(_switchCond2 == 5) {
							var result7 = _this1.objects[i++ + 2];
							var event = result7;
							if(entry.listener != null) {
								entry.listener.event(entry,event);
							}
							var ii6 = 0;
							while(ii6 < listenersCount) {
								var result8 = listeners[ii6];
								result8.event(entry,event);
								++ii6;
							}
							break;
						}
						break;
					}
					listenersArray.end();
					i += 2;
				}
				var this1 = _this1.objects;
				this1.splice(0,this1.length);
				_this1.drainDisabled = false;
			}
		} else {
			last.next = entry1;
			entry1.previous = last;
			if(delay1 <= 0) {
				delay1 += last.getTrackComplete() - entry1.mixDuration;
			}
		}
		entry1.delay = delay1;
	}
	,isIdle: function() {
		var _this = this.animationState;
		var track = 0 >= _this.tracks.length ? null : _this.tracks[0];
		if(track == null) {
			return true;
		}
		if(track.trackTime >= track.animationEnd - track.animationStart && track.loop == false) {
			return true;
		}
		return track.animation == null;
	}
	,bind: function(boneName,transform,slotName,element,metaRenderBone) {
		var stt = new SkeletonToTransform();
		stt.bone = this.skeleton.findBone(boneName);
		if(metaRenderBone != null) {
			stt.metaRenderInfoBone = this.skeleton.findBone(metaRenderBone);
		}
		if(slotName != null) {
			stt.slot = this.skeleton.findSlot(slotName);
			if(stt.slot == null) {
				haxe_Log.trace("Slot not found!",{ fileName : "Sources\\SpineUtils/SpineManager.hx", lineNumber : 116, className : "SkeletonUnit", methodName : "bind"});
			}
		}
		stt.transform = transform;
		stt.uiElement = element;
		this.tBinds.push(stt);
	}
	,loadSlotTexts: function() {
		var _g = 0;
		var _g1 = this.skeleton.slots.length;
		while(_g < _g1) {
			var i = _g++;
			var slot = this.skeleton.slots[i];
			var slotName = this.skeleton.slots[i].data.name;
			if(slotName.indexOf("text:") != -1) {
				var fontName = HxOverrides.substr(slotName,"text:".length,null);
				var stt = new SkeletonToText(slot.bone,slot,fontName);
				this.autoText.push(stt);
			}
		}
	}
	,loadAttachmentSprites: function() {
		var _g = 0;
		var _g1 = this.skeleton.slots.length;
		while(_g < _g1) {
			var i = _g++;
			var slot = this.skeleton.slots[i];
			var slotName = this.skeleton.slots[i].data.name;
			slotName = StringTools.replace(slotName,"#","");
			slotName = StringTools.replace(slotName,"@","");
			if(slotName.indexOf("m:") != -1 == false) {
				if(slotName.indexOf("text:") != -1 == false) {
					var name = slotName;
					var sprite = SpriteLibrary.allSprites.h[name];
					if(sprite != null) {
						var boneName = slot.bone.data.name;
						var evName = "RNDMETA:" + boneName;
						var boneForRenderInfo = this.skeleton.findBone(evName);
						var sts = new SkeletonToSprite(slot.bone,slot,null,sprite);
						sts.renderMetaBone = boneForRenderInfo;
						this.autoSprite.push(sts);
					}
				}
			}
		}
	}
	,getCurrentAnimation: function() {
		var _this = this.animationState;
		var current = 0 >= _this.tracks.length ? null : _this.tracks[0];
		if(current != null && current.animation != null) {
			return current.animation.getName();
		}
		return null;
	}
	,loadSlotSpriteSheets: function(spriteSheets) {
		var _g = 0;
		var _g1 = this.skeleton.slots.length;
		while(_g < _g1) {
			var i = _g++;
			var slot = this.skeleton.slots[i];
			var slotName = this.skeleton.slots[i].data.name;
			if(slotName.indexOf("sps:") != -1) {
				var sheetName = HxOverrides.substr(slotName,"sps:".length,null);
				var stps = new SkeletonToSpriteSheet(slot.bone,slot,spriteSheets.h[sheetName]);
				this.autoSpriteSheet.push(stps);
			}
		}
	}
	,__class__: SkeletonUnit
};
var SpineGroup = function() {
	this.active = true;
	this.skeletons = [];
};
$hxClasses["SpineGroup"] = SpineGroup;
SpineGroup.__name__ = "SpineGroup";
SpineGroup.prototype = {
	__class__: SpineGroup
};
var SpineManager = function() {
	this.spriteSheets = new haxe_ds_StringMap();
	this.spineGroups = [];
	this.loader = new SkeletonLoaderX();
};
$hxClasses["SpineManager"] = SpineManager;
SpineManager.__name__ = "SpineManager";
SpineManager.prototype = {
	loadSkeletonUnit: function(skeletonFile,group,fileContent,autoLoadSprites) {
		if(autoLoadSprites == null) {
			autoLoadSprites = false;
		}
		var su = this.loader.createSkeletonUnit(skeletonFile,fileContent);
		if(autoLoadSprites) {
			su.loadAttachmentSprites();
			su.loadSlotTexts();
			su.loadSlotSpriteSheets(this.spriteSheets);
		}
		group.skeletons.push(su);
		return su;
	}
	,render: function(layer) {
		var _g_current = 0;
		var _g_array = this.spineGroups;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.active == false) {
				continue;
			}
			var _g = 0;
			var _g1 = value.skeletons;
			while(_g < _g1.length) {
				var unit = _g1[_g];
				++_g;
				if(unit.layer == layer) {
					if(unit.isIdle() == false) {
						var _g2_current = 0;
						var _g2_array = unit.autoSprite;
						while(_g2_current < _g2_array.length) {
							var _g3_value = _g2_array[_g2_current];
							var _g3_key = _g2_current++;
							var index1 = _g3_key;
							var value1 = _g3_value;
							if(value1.slot.attachment != null) {
								var metaRender = 0;
								if(value1.renderMetaBone != null) {
									metaRender = value1.renderMetaBone.worldX | 0;
								}
								var x = value1.bone.worldX * unit.xAutoSpriteScale + unit.xAutoSpriteOffset | 0;
								var y = -value1.bone.worldY * unit.yAutoSpriteScale + unit.yAutoSpriteOffset | 0;
								var scaleX = value1.slot.bone.scaleX;
								var scaleY = value1.slot.bone.scaleY;
								if(((value1.slot.attachment) instanceof spine_attachments_RegionAttachment)) {
									var attachReg = js_Boot.__cast(value1.slot.attachment , spine_attachments_RegionAttachment);
									scaleX *= attachReg.scaleX;
									scaleY *= attachReg.scaleY;
									x += attachReg.x | 0;
									y -= attachReg.y | 0;
								}
								Renderer.drawSprite(value1.sprite,null,x,y,unit.xAutoSpriteScale * scaleX,unit.yAutoSpriteScale * scaleY,0.5,0.5,ColorUtils.getColorFromSpineColor(value1.slot.color),value1.slot.color.a * unit.autoSpriteAlpha | 0,metaRender);
							}
						}
						var _g2_current1 = 0;
						var _g2_array1 = unit.autoText;
						while(_g2_current1 < _g2_array1.length) {
							var _g3_value1 = _g2_array1[_g2_current1];
							var _g3_key1 = _g2_current1++;
							var index2 = _g3_key1;
							var value2 = _g3_value1;
							var x1 = value2.bone.worldX + unit.xAutoSpriteOffset | 0;
							var y1 = -value2.bone.worldY + unit.yAutoSpriteOffset | 0;
							if(value2.slot.attachment != null) {
								XTextRender.drawTextMultiLine(value2.text,value2.font,x1,y1,-1,0.5,0.5,ColorUtils.getColorFromSpineColor(value2.slot.color),null);
							}
						}
						var _g2_current2 = 0;
						var _g2_array2 = unit.autoSpriteSheet;
						while(_g2_current2 < _g2_array2.length) {
							var _g3_value2 = _g2_array2[_g2_current2];
							var _g3_key2 = _g2_current2++;
							var index3 = _g3_key2;
							var value3 = _g3_value2;
							if(value3.slot.attachment != null) {
								var progress = value3.bone.shearX;
								if(progress < 0) {
									progress = 0;
								}
								if(progress > 1) {
									progress = 1;
								}
								var index4 = progress * (value3.spriteSheet.length - 1) | 0;
								var sprite = value3.spriteSheet[index4];
								var metaRender1 = 0;
								var x2 = value3.bone.worldX * unit.xAutoSpriteScale + unit.xAutoSpriteOffset | 0;
								var y2 = -value3.bone.worldY * unit.yAutoSpriteScale + unit.yAutoSpriteOffset | 0;
								var scaleX1 = value3.slot.bone.scaleX;
								var scaleY1 = value3.slot.bone.scaleY;
								if(((value3.slot.attachment) instanceof spine_attachments_RegionAttachment)) {
									var attachReg1 = js_Boot.__cast(value3.slot.attachment , spine_attachments_RegionAttachment);
									scaleX1 *= attachReg1.scaleX;
									scaleY1 *= attachReg1.scaleY;
									x2 += attachReg1.x | 0;
									y2 -= attachReg1.y | 0;
								}
								Renderer.drawSprite(sprite,null,x2,y2,unit.xAutoSpriteScale * scaleX1,unit.yAutoSpriteScale * scaleY1,0.5,0.5,ColorUtils.getColorFromSpineColor(value3.slot.color),value3.slot.color.a * unit.autoSpriteAlpha | 0,metaRender1);
							}
						}
					}
				}
			}
		}
	}
	,update: function(delta) {
		var _g_current = 0;
		var _g_array = this.spineGroups;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var _g = 0;
			var _g1 = value.skeletons;
			while(_g < _g1.length) {
				var unit = _g1[_g];
				++_g;
				var _this = unit.animationState;
				var delta1 = delta;
				delta1 *= _this.timeScale;
				var tracks = _this.tracks;
				var i = 0;
				var n = _this.tracks.length;
				while(i < n) {
					var result = tracks[i];
					var current = result;
					if(current == null) {
						++i;
						continue;
					}
					current.animationLast = current.nextAnimationLast;
					current.trackLast = current.nextTrackLast;
					var currentDelta = delta1 * current.timeScale;
					if(current.delay > 0) {
						current.delay -= currentDelta;
						if(current.delay > 0) {
							++i;
							continue;
						}
						currentDelta = -current.delay;
						current.delay = 0;
					}
					var next = current.next;
					if(next != null) {
						var nextTime = current.trackLast - next.delay;
						if(nextTime >= 0) {
							next.delay = 0;
							next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta1) * next.timeScale;
							current.trackTime += currentDelta;
							var from;
							if(i < _this.tracks.length) {
								from = _this.tracks[i];
							} else {
								var this1 = _this.tracks;
								var size = i + 1;
								var len = this1.length;
								if(len > size) {
									this1.splice(size,size - len);
								} else if(len < size) {
									this1[size - 1] = null;
								}
								from = null;
							}
							_this.tracks[i] = next;
							next.previous = null;
							if(from != null) {
								var _this1 = _this.queue;
								_this1.objects.push(1);
								_this1.objects.push(from);
								next.mixingFrom = from;
								from.mixingTo = next;
								next.mixTime = 0;
								if(from.mixingFrom != null && from.mixDuration > 0) {
									next.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
								}
								var this2 = from.timelinesRotation;
								this2.splice(0,this2.length);
							}
							var _this2 = _this.queue;
							_this2.objects.push(0);
							_this2.objects.push(next);
							_this2.AnimationState_this.animationsChanged = true;
							while(next.mixingFrom != null) {
								next.mixTime += delta1;
								next = next.mixingFrom;
							}
							++i;
							continue;
						}
					} else if(current.trackLast >= current.trackEnd && current.mixingFrom == null) {
						tracks[i] = null;
						var _this3 = _this.queue;
						_this3.objects.push(2);
						_this3.objects.push(current);
						_this3.AnimationState_this.animationsChanged = true;
						var next1 = current.next;
						while(next1 != null) {
							var _this4 = _this.queue;
							_this4.objects.push(3);
							_this4.objects.push(next1);
							next1 = next1.next;
						}
						current.next = null;
						++i;
						continue;
					}
					var tmp;
					if(current.mixingFrom != null) {
						var from1 = current.mixingFrom;
						if(from1 == null) {
							tmp = true;
						} else {
							var from2 = from1.mixingFrom;
							var finished;
							if(from2 == null) {
								finished = true;
							} else {
								var finished1 = _this.updateMixingFrom(from2,delta1);
								from2.animationLast = from2.nextAnimationLast;
								from2.trackLast = from2.nextTrackLast;
								if(from1.mixTime > 0 && from1.mixTime >= from1.mixDuration) {
									if(from2.totalAlpha == 0 || from1.mixDuration == 0) {
										from1.mixingFrom = from2.mixingFrom;
										if(from2.mixingFrom != null) {
											from2.mixingFrom.mixingTo = from1;
										}
										from1.interruptAlpha = from2.interruptAlpha;
										var _this5 = _this.queue;
										_this5.objects.push(2);
										_this5.objects.push(from2);
										_this5.AnimationState_this.animationsChanged = true;
									}
									finished = finished1;
								} else {
									from2.trackTime += delta1 * from2.timeScale;
									from1.mixTime += delta1;
									finished = false;
								}
							}
							from1.animationLast = from1.nextAnimationLast;
							from1.trackLast = from1.nextTrackLast;
							if(current.mixTime > 0 && current.mixTime >= current.mixDuration) {
								if(from1.totalAlpha == 0 || current.mixDuration == 0) {
									current.mixingFrom = from1.mixingFrom;
									if(from1.mixingFrom != null) {
										from1.mixingFrom.mixingTo = current;
									}
									current.interruptAlpha = from1.interruptAlpha;
									var _this6 = _this.queue;
									_this6.objects.push(2);
									_this6.objects.push(from1);
									_this6.AnimationState_this.animationsChanged = true;
								}
								tmp = finished;
							} else {
								from1.trackTime += delta1 * from1.timeScale;
								current.mixTime += delta1;
								tmp = false;
							}
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						var from3 = current.mixingFrom;
						current.mixingFrom = null;
						if(from3 != null) {
							from3.mixingTo = null;
						}
						while(from3 != null) {
							var _this7 = _this.queue;
							_this7.objects.push(2);
							_this7.objects.push(from3);
							_this7.AnimationState_this.animationsChanged = true;
							from3 = from3.mixingFrom;
						}
					}
					current.trackTime += currentDelta;
					++i;
				}
				var _this8 = _this.queue;
				if(!_this8.drainDisabled) {
					_this8.drainDisabled = true;
					var listenersArray = _this8.AnimationState_this.listeners;
					var i1 = 0;
					while(i1 < _this8.objects.length) {
						var type = _this8.objects[i1];
						var result1 = _this8.objects[i1 + 1];
						var entry = result1;
						var listenersCount = listenersArray.array.length;
						var listeners = listenersArray.begin();
						while(true) {
							var _switchCond2 = type;
							if(_switchCond2 == 0) {
								if(entry.listener != null) {
									entry.listener.start(entry);
								}
								var ii = 0;
								while(ii < listenersCount) {
									var result2 = listeners[ii];
									result2.start(entry);
									++ii;
								}
								break;
							} else if(_switchCond2 == 1) {
								if(entry.listener != null) {
									entry.listener.interrupt(entry);
								}
								var ii1 = 0;
								while(ii1 < listenersCount) {
									var result3 = listeners[ii1];
									result3.interrupt(entry);
									++ii1;
								}
								break;
							} else if(_switchCond2 == 2) {
								if(entry.listener != null) {
									entry.listener.end(entry);
								}
								var ii2 = 0;
								while(ii2 < listenersCount) {
									var result4 = listeners[ii2];
									result4.end(entry);
									++ii2;
								}
								if(entry.listener != null) {
									entry.listener.dispose(entry);
								}
								var ii3 = 0;
								while(ii3 < listenersCount) {
									var result5 = listeners[ii3];
									result5.dispose(entry);
									++ii3;
								}
								_this8.AnimationState_this.trackEntryPool.free(entry);
								break;
							} else if(_switchCond2 == 3) {
								if(entry.listener != null) {
									entry.listener.dispose(entry);
								}
								var ii4 = 0;
								while(ii4 < listenersCount) {
									var result6 = listeners[ii4];
									result6.dispose(entry);
									++ii4;
								}
								_this8.AnimationState_this.trackEntryPool.free(entry);
								break;
							} else if(_switchCond2 == 4) {
								if(entry.listener != null) {
									entry.listener.complete(entry);
								}
								var ii5 = 0;
								while(ii5 < listenersCount) {
									var result7 = listeners[ii5];
									result7.complete(entry);
									++ii5;
								}
								break;
							} else if(_switchCond2 == 5) {
								var result8 = _this8.objects[i1++ + 2];
								var event = result8;
								if(entry.listener != null) {
									entry.listener.event(entry,event);
								}
								var ii6 = 0;
								while(ii6 < listenersCount) {
									var result9 = listeners[ii6];
									result9.event(entry,event);
									++ii6;
								}
								break;
							}
							break;
						}
						listenersArray.end();
						i1 += 2;
					}
					var this3 = _this8.objects;
					this3.splice(0,this3.length);
					_this8.drainDisabled = false;
				}
				if(unit.isIdle() == false) {
					unit.animationState.apply(unit.skeleton);
					var _this9 = unit.skeleton;
					var bones = _this9.bones;
					var i2 = 0;
					var n1 = _this9.bones.length;
					while(i2 < n1) {
						var result10 = bones[i2];
						var bone = result10;
						bone.ax = bone.x;
						bone.ay = bone.y;
						bone.arotation = bone.rotation;
						bone.ascaleX = bone.scaleX;
						bone.ascaleY = bone.scaleY;
						bone.ashearX = bone.shearX;
						bone.ashearY = bone.shearY;
						++i2;
					}
					var cache = _this9.cache;
					var i3 = 0;
					var n2 = _this9.cache.length;
					while(i3 < n2) {
						var result11 = cache[i3];
						result11.update();
						++i3;
					}
					var _g2_current = 0;
					var _g2_array = unit.tBinds;
					while(_g2_current < _g2_array.length) {
						var _g3_value = _g2_array[_g2_current];
						var _g3_key = _g2_current++;
						var index1 = _g3_key;
						var value1 = _g3_value;
						var worldX = value1.bone.worldX * unit.xDirection;
						var worldY = -value1.bone.worldY * unit.yDirection;
						var self = value1.transform.position;
						self.x = worldX;
						self.y = worldY;
						var self1 = value1.transform.scale;
						self1.x = worldX;
						self1.y = worldY;
						value1.transform.active = true;
						if(value1.slot != null && value1.slot.attachment == null) {
							value1.transform.active = false;
						} else if(value1.slot != null) {
							if(value1.uiElement != null) {
								value1.uiElement.style.alpha = value1.slot.color.a * 255 | 0;
								value1.uiElement.style.color = ColorUtils.getColorFromSpineColor(value1.slot.color);
								if(value1.metaRenderInfoBone != null) {
									value1.uiElement.style.metaRenderInfo = value1.metaRenderInfoBone.worldX | 0;
								}
							}
						}
					}
					var _g2_current1 = 0;
					var _g2_array1 = unit.autoSprite;
					while(_g2_current1 < _g2_array1.length) {
						var _g3_value1 = _g2_array1[_g2_current1];
						var _g3_key1 = _g2_current1++;
						var index2 = _g3_key1;
						var value2 = _g3_value1;
					}
				} else {
					var _g2_current2 = 0;
					var _g2_array2 = unit.tBinds;
					while(_g2_current2 < _g2_array2.length) {
						var _g3_value2 = _g2_array2[_g2_current2];
						var _g3_key2 = _g2_current2++;
						var index3 = _g3_key2;
						var value3 = _g3_value2;
						value3.transform.active = false;
					}
				}
			}
		}
	}
	,addAndBind: function(icon,skeletonFile,skeletonFileContent,group,bone,slot,metaRenderBone) {
		var su = this.loadSkeletonUnit(skeletonFile,group,skeletonFileContent);
		su.bind(bone,icon.offsetAnimationTransform,slot,icon,metaRenderBone);
		return su;
	}
	,__class__: SpineManager
};
var SpriteLibrary = function() { };
$hxClasses["SpriteLibrary"] = SpriteLibrary;
SpriteLibrary.__name__ = "SpriteLibrary";
SpriteLibrary.createSpriteSheet = function(prefix,minDigits,startIndex,endIndex) {
	var sprites = [];
	var _g = startIndex;
	var _g1 = endIndex;
	while(_g < _g1) {
		var i = _g++;
		var digitsPresent = Math.floor(i / 10) + 1;
		var name = prefix;
		while(digitsPresent < minDigits) {
			name += "0";
			++digitsPresent;
		}
		name += i;
		sprites.push(SpriteLibrary.allSprites.h[name]);
	}
	return sprites;
};
SpriteLibrary.createSpriteSheetObjectFromSprites = function(sprites,fixedFrameDelayMs) {
	var ss = new SpriteSheet();
	var _g_current = 0;
	var _g_array = sprites;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		ss.spriteArray.push(new Frame(value));
	}
	ss.defaultFrameTimeMs = fixedFrameDelayMs;
	return ss;
};
SpriteLibrary.createSpriteSheetSplice = function(sprite,startFrame,endFrame,lines,columns,verticalSheet) {
	if(verticalSheet == null) {
		verticalSheet = false;
	}
	var frameW = sprite.rect.width / columns;
	var frameH = sprite.rect.height / lines;
	var sprites = [];
	var _g = startFrame;
	var _g1 = endFrame + 1;
	while(_g < _g1) {
		var frame = _g++;
		var xPos = frame % columns;
		var yPos = Math.floor(frame / columns);
		if(verticalSheet) {
			yPos = frame % lines;
			xPos = Math.floor(frame / lines);
		}
		sprites.push(Sprite.createSubSprite(sprite,xPos * frameW,yPos * frameH,frameW,frameH));
	}
	return sprites;
};
var SpriteSheet = function() {
	this.defaultFrameTimeMs = -1;
	this.spriteArray = [];
};
$hxClasses["SpriteSheet"] = SpriteSheet;
SpriteSheet.__name__ = "SpriteSheet";
SpriteSheet.prototype = {
	__class__: SpriteSheet
};
var Frame = function(sprite,frameTimeMs) {
	if(frameTimeMs == null) {
		frameTimeMs = -1;
	}
	this.sprite = sprite;
	this.frameTimeMs = frameTimeMs;
};
$hxClasses["Frame"] = Frame;
Frame.__name__ = "Frame";
Frame.prototype = {
	__class__: Frame
};
var SpriteSheetAnimationManager = function() {
	this.animations = [];
};
$hxClasses["SpriteSheetAnimationManager"] = SpriteSheetAnimationManager;
SpriteSheetAnimationManager.__name__ = "SpriteSheetAnimationManager";
SpriteSheetAnimationManager.prototype = {
	update: function(miliseconds) {
		var _g_current = 0;
		var _g_array = this.animations;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.run_state == GlobalData.STATE_ANIMATION_PLAY) {
				value.run_timeMs += miliseconds;
				var sheet = value.config_sheet;
				var aux = value.run_timeMs;
				var frameChosen = null;
				var _g2_current = 0;
				var _g2_array = sheet.spriteArray;
				while(_g2_current < _g2_array.length) {
					var _g3_value = _g2_array[_g2_current];
					var _g3_key = _g2_current++;
					var spriteId = _g3_key;
					var frame = _g3_value;
					var fTime = frame.frameTimeMs;
					if(fTime <= 0) {
						fTime = value.config_sheet.defaultFrameTimeMs;
					}
					if(aux < fTime) {
						frameChosen = frame;
						break;
					}
					aux -= fTime;
				}
				if(frameChosen == null) {
					if(value.config_loop == false) {
						this.changeState(value,GlobalData.STATE_ANIMATION_STOP);
					} else {
						value.run_timeMs = 0;
					}
				} else {
					var sprite = frameChosen.sprite;
					value.config_targetElement.setAllStyleSprites(sprite);
					value.config_targetElement.fitSprite();
					value.config_targetElement.transform.size.x *= value.scaleX;
					value.config_targetElement.transform.size.y *= value.scaleY;
				}
			}
		}
	}
	,changeState: function(value,arg1) {
		value.run_state = arg1;
	}
	,startAnimation: function(arg0) {
		if(this.animations.indexOf(arg0) == -1) {
			this.animations.push(arg0);
		}
		arg0.run_state = GlobalData.STATE_ANIMATION_PLAY;
		arg0.run_timeMs = 0;
	}
	,stopAnimation: function(arg0) {
		arg0.run_state = GlobalData.STATE_ANIMATION_STOP;
		arg0.run_timeMs = 0;
		HxOverrides.remove(this.animations,arg0);
	}
	,__class__: SpriteSheetAnimationManager
};
var SpriteSheetAnimation = function(config_sheet,config_target,config_loop) {
	if(config_loop == null) {
		config_loop = false;
	}
	this.scaleY = 1.0;
	this.scaleX = 1.0;
	this.config_loop = false;
	this.config_sheet = null;
	this.run_state = GlobalData.STATE_ANIMATION_STOP;
	this.run_timeMs = 0;
	this.config_sheet = config_sheet;
	this.config_targetElement = config_target;
	this.config_loop = config_loop;
};
$hxClasses["SpriteSheetAnimation"] = SpriteSheetAnimation;
SpriteSheetAnimation.__name__ = "SpriteSheetAnimation";
SpriteSheetAnimation.prototype = {
	__class__: SpriteSheetAnimation
};
var GRIStoryControlData = function() {
	this.eventHolder = new DataEventHolder();
	this.requestBattleTab = false;
	this.storyStartedFromAnotherTab = false;
	this.state = StoryControlState.MEMORY;
};
$hxClasses["GRIStoryControlData"] = GRIStoryControlData;
GRIStoryControlData.__name__ = "GRIStoryControlData";
GRIStoryControlData.prototype = {
	__class__: GRIStoryControlData
};
var StoryControlState = $hxEnums["StoryControlState"] = { __ename__:true,__constructs__:null
	,MEMORY: {_hx_name:"MEMORY",_hx_index:0,__enum__:"StoryControlState",toString:$estr}
	,STORY: {_hx_name:"STORY",_hx_index:1,__enum__:"StoryControlState",toString:$estr}
};
StoryControlState.__constructs__ = [StoryControlState.MEMORY,StoryControlState.STORY];
var StoryControlLogic = function() { };
$hxClasses["StoryControlLogic"] = StoryControlLogic;
StoryControlLogic.__name__ = "StoryControlLogic";
StoryControlLogic.createStoryControl = function(view) {
	var scd = new GRIStoryControlData();
	scd.view = view;
	scd.viewTab = new GRIViewMemoryTab();
	scd.viewStory = new GRIViewStory(view);
	return scd;
};
StoryControlLogic.Init = function(jsonStory,runtime) {
	runtime.cutscenes = [];
	var _g_current = 0;
	var _g_array = jsonStory;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var cutsceneGroup = JsonStoryTypes.jsonparsercutscenes.fromJson(value);
		var _g = 0;
		while(_g < cutsceneGroup.length) {
			var cs = cutsceneGroup[_g];
			++_g;
			runtime.cutscenes.push(cs);
		}
	}
	var cutscenes = runtime.cutscenes;
	var parser = new hscript_Parser();
	var _g = 0;
	var _g1 = cutscenes.length;
	while(_g < _g1) {
		var i = _g++;
		runtime.messageRuntimeInfo[i] = [];
		if(Object.prototype.hasOwnProperty.call(runtime.persistence.progressionData.h,cutscenes[i].id) == false) {
			runtime.persistence.progressionData.h[cutscenes[i].id] = { index : 0, timesCompleted : 0, visible : false, visibleSeen : false, wantToWatch : false};
		}
		var vs = cutscenes[i].visibilityScript;
		if(vs != null) {
			var script = parser.parseString(vs);
			runtime.visibilityConditionScripts.push(script);
		} else {
			runtime.visibilityConditionScripts.push(null);
		}
		var _g2 = 0;
		var _g3 = cutscenes[i].messages.length;
		while(_g2 < _g3) {
			var j = _g2++;
			var sc = cutscenes[i].messages[j].script;
			var script1 = null;
			if(sc != null) {
				script1 = parser.parseString(sc);
			}
			runtime.messageRuntimeInfo[i][j] = { script : script1};
		}
	}
};
StoryControlLogic.updateStoryButtons = function(runtime,view,storyView) {
	var _g = 0;
	var _g1 = runtime.cutscenes.length;
	while(_g < _g1) {
		var i = _g++;
		var prog = runtime.persistence.progressionData.h[runtime.cutscenes[i].id];
		if(runtime.cutsceneStartable == null && prog.timesCompleted == 0 && prog.visible == true && runtime.cutscene == null) {
			runtime.cutsceneStartable = runtime.cutscenes[i];
		}
		if(prog.visible && prog.timesCompleted > 0) {
			var completed = false;
			completed = prog.timesCompleted > 0;
			var resumable = prog.index > 0;
			var newLabel = prog.wantToWatch;
			var newLabelText = "NEW";
			if(prog.timesCompleted > 1) {
				newLabelText = "Watch later";
			}
			storyView.storyButtonFeed(i,runtime.cutscenes[i].title,completed,resumable,newLabel,newLabelText,view,i);
		} else {
			storyView.storyButtonHide(i);
		}
	}
};
StoryControlLogic.setupView = function(controlData) {
	var viewGRI = controlData.view;
	viewGRI.uiCreation.singleTag(GRIView.tagTabMemory);
	viewGRI.uiCreation.tags.push(StoryControlLogic.TAG_STORY_SCREEN);
	controlData.viewStory.setup();
	controlData.viewTab.setup(viewGRI);
	StoryControlLogic.changeStoryState(controlData,StoryControlState.MEMORY);
};
StoryControlLogic.changeStoryState = function(controlData,newState) {
	controlData.state = newState;
	var state = newState;
	controlData.view.ui.tagVisibility(StoryControlLogic.TAG_MEMORY_BUTTON_SCREEN,state == StoryControlState.MEMORY);
	controlData.view.ui.tagVisibility(StoryControlLogic.TAG_STORY_SCREEN,state == StoryControlState.STORY);
	controlData.view.ui.tagVisibility(GRIView.TAG_TAB_BUTTON,state != StoryControlState.STORY);
	if(newState == StoryControlState.MEMORY) {
		controlData.view.ui.enterCursorGroup(controlData.viewTab.cursorGroup);
	}
};
StoryControlLogic.startStory = function(controlData) {
	StoryControlLogic.changeStoryState(controlData,StoryControlState.STORY);
	if(controlData.view.currentTab != GRIView.tagTabMemory) {
		controlData.view.showTab(GRIView.idTabMemory);
		controlData.storyStartedFromAnotherTab = true;
	} else {
		controlData.storyStartedFromAnotherTab = false;
	}
	controlData.viewStory.startStory();
};
StoryControlLogic.update = function(update,controlData,executer) {
	Profiler.start("storycontrol_1");
	controlData.storyAdvancedThisFrame = false;
	controlData.eventHolder.dataEvents.length = 0;
	var viewGRI = controlData.view;
	viewGRI.ui.extendElementHeight(controlData.viewTab.scroll.viewport,95);
	viewGRI.ui.extendElementHeight(controlData.viewStory.scroll.viewport,95);
	viewGRI.uiCreation.singleTag(GRIView.tagTabMemory);
	viewGRI.uiCreation.tags.push(StoryControlLogic.TAG_MEMORY_BUTTON_SCREEN);
	controlData.runtime.cutsceneStartable = null;
	StoryControlLogic.updateStoryButtons(controlData.runtime,controlData.view,controlData.viewTab);
	var runtime = controlData.runtime;
	viewGRI.ui.genUI.updateAll();
	Profiler.end();
	Profiler.start("storycontrol_2");
	if(runtime.cutsceneStartable != null && runtime.cutscene == null) {
		controlData.eventHolder.dataEvents.push(StoryControlLogic.sceneStartedEventNatural(runtime.cutsceneStartable.id));
		StoryLogic.StartStory(runtime.cutsceneStartable.id,runtime);
		StoryControlLogic.startStory(controlData);
		viewGRI.ui.genUI.updateAll();
	}
	Profiler.start("storycontrol_logicupdate");
	StoryLogic.Update(runtime);
	Profiler.end();
	Profiler.start("storycontrol_visibility");
	StoryLogic.VisibilityUpdate(true,runtime,executer);
	Profiler.end();
	var cutscene = runtime.cutscene;
	viewGRI.uiCreation.singleTag(GRIView.tagTabMemory);
	viewGRI.uiCreation.tags.push(StoryControlLogic.TAG_STORY_SCREEN);
	if(cutscene != null) {
		var view = controlData.viewStory;
		while(view.amountOfStoryMessagesShown <= runtime.currentStoryProgression.index) {
			var m = cutscene.messages[view.amountOfStoryMessagesShown];
			var speakerImage = null;
			if(m.speaker != null) {
				speakerImage = runtime.speakerToImage.h[m.speaker.toLowerCase()];
			}
			view.latestMessageUpdate(m.body,m.speaker,speakerImage,view.amountOfStoryMessagesShown,0);
		}
	} else if(controlData.state == StoryControlState.STORY) {
		if(controlData.storyStartedFromAnotherTab) {
			controlData.storyStartedFromAnotherTab = false;
			controlData.requestBattleTab = true;
		}
		StoryControlLogic.changeStoryState(controlData,StoryControlState.MEMORY);
	}
	Profiler.end();
	Profiler.start("storycontrol_3");
	var _g_current = 0;
	var _g_array = viewGRI.ui.dataEvents;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var argument = value.intData;
		var cutscenes = controlData.runtime.cutscenes;
		if(value.stringData == GRIViewStory.DATA_BUTTON_ADVANCE) {
			StoryLogic.MessageAdvance(runtime);
			controlData.storyAdvancedThisFrame = true;
		}
		if(value.stringData == GRIViewStory.DATA_BUTTON_LATER) {
			StoryLogic.WatchLater(runtime);
		}
		if(value.stringData == GRIViewStory.DATA_BUTTON_SKIP) {
			StoryLogic.SkipStory(runtime);
		}
		if(value.stringData == GRIViewMemoryTab.DATA_START) {
			StoryLogic.StartStory(cutscenes[argument].id,runtime);
			StoryControlLogic.startStory(controlData);
		}
		if(value.stringData == GRIViewMemoryTab.DATA_RESTART) {
			StoryLogic.StartStory(cutscenes[argument].id,runtime);
			StoryControlLogic.startStory(controlData);
		}
		if(value.stringData == GRIViewMemoryTab.DATA_RESUME) {
			StoryLogic.StartStory(cutscenes[argument].id,runtime,true);
			StoryControlLogic.startStory(controlData);
		}
	}
	Profiler.end();
};
StoryControlLogic.ReadJsonPersistentData = function(json) {
	var persistence = JsonStoryTypes.jsonparserstory.fromJson(json);
	return persistence;
};
StoryControlLogic.GetJsonPersistentData = function(runtime) {
	return JsonStoryTypes.jsonwriterstory.write(runtime.persistence);
};
StoryControlLogic.tryStoryVisible = function(cutsceneId,data) {
	StoryLogic.forceCutsceneVisible(cutsceneId,false,data.runtime);
};
StoryControlLogic.sceneStartedEventNatural = function(sceneId) {
	var d = new Data();
	d.stringData = GRIViewStory.EVENT_STORY_START_NATURAL;
	d.stringData2 = sceneId;
	return d;
};
var StoryLogic = function() { };
$hxClasses["StoryLogic"] = StoryLogic;
StoryLogic.__name__ = "StoryLogic";
StoryLogic.Update = function(runtime) {
};
StoryLogic.RunScript = function(executer,script) {
};
StoryLogic.VisibilityUpdate = function(storyButtonsVisible,runtime,executer) {
	var cutsceneExtraDatas = runtime.cutsceneExtra;
	var _g = 0;
	var _g1 = runtime.cutscenes.length;
	while(_g < _g1) {
		var i = _g++;
		var cutsceneExtra = cutsceneExtraDatas[i];
		var cutsceneId = runtime.cutscenes[i].id;
		var prog = runtime.persistence.progressionData.h[cutsceneId];
		if(prog != null) {
			var visible = prog.visible;
			if(visible == false) {
				var autoVisibleOn = true;
				if(cutsceneExtra != null) {
					autoVisibleOn = cutsceneExtra.autoVisibilityOn;
				}
				if(autoVisibleOn) {
					var wantVisible = true;
					if(runtime.visibilityConditionScripts[i] != null) {
						wantVisible = executer.execute(runtime.visibilityConditionScripts[i]);
					}
					if(wantVisible) {
						prog.visible = true;
					}
				}
			}
			if(storyButtonsVisible) {
				if(prog.visible) {
					prog.visibleSeen = true;
				}
			}
		}
	}
};
StoryLogic.forceCutsceneVisible = function(cutsceneId,storyButtonsVisible,runtime) {
	var prog = runtime.persistence.progressionData.h[cutsceneId];
	if(prog != null) {
		var visible = prog.visible;
		if(visible == false) {
			var wantVisible = true;
			if(wantVisible) {
				prog.visible = true;
			}
		}
		if(storyButtonsVisible) {
			if(prog.visible) {
				prog.visibleSeen = true;
			}
		}
	}
};
StoryLogic.StartStory = function(sceneId,runtime,resume) {
	if(resume == null) {
		resume = false;
	}
	var progressionData = runtime.persistence.progressionData;
	if(resume == false) {
		progressionData.h[sceneId].index = 0;
	}
	runtime.currentStoryProgression = progressionData.h[sceneId];
	var _g = 0;
	var _g1 = runtime.cutscenes;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		if(a.id == sceneId) {
			runtime.currentCutsceneIndex = runtime.cutscenes.indexOf(a);
			runtime.cutscene = a;
			break;
		}
	}
};
StoryLogic.MessageAdvance = function(runtime) {
	if(runtime.currentStoryProgression == null) {
		return;
	}
	runtime.currentStoryProgression.index++;
	if(runtime.currentStoryProgression.index >= runtime.cutscene.messages.length) {
		runtime.currentStoryProgression.timesCompleted++;
		runtime.currentStoryProgression.index = 0;
		runtime.currentStoryProgression.wantToWatch = false;
		runtime.currentStoryProgression = null;
		runtime.cutscene = null;
	}
};
StoryLogic.SkipStory = function(runtime) {
	if(runtime.currentStoryProgression.timesCompleted <= 0) {
		runtime.currentStoryProgression.timesCompleted++;
	}
	runtime.currentStoryProgression.wantToWatch = false;
	runtime.currentStoryProgression = null;
	runtime.cutscene = null;
};
StoryLogic.WatchLater = function(runtime) {
	if(runtime.currentStoryProgression == null) {
		return;
	}
	if(runtime.currentStoryProgression.timesCompleted <= 0) {
		runtime.currentStoryProgression.timesCompleted++;
	}
	runtime.currentStoryProgression.wantToWatch = true;
	runtime.currentStoryProgression = null;
	runtime.cutscene = null;
};
var CutsceneExtraData = function(autoVisible) {
	this.autoVisibilityOn = true;
	this.autoVisibilityOn = autoVisible;
};
$hxClasses["CutsceneExtraData"] = CutsceneExtraData;
CutsceneExtraData.__name__ = "CutsceneExtraData";
CutsceneExtraData.prototype = {
	__class__: CutsceneExtraData
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var StringUtils = function() { };
$hxClasses["StringUtils"] = StringUtils;
StringUtils.__name__ = "StringUtils";
StringUtils.getHashCode = function(string) {
	var hc = 0;
	var _g = 0;
	var _g1 = string.length;
	while(_g < _g1) {
		var i = _g++;
		var code = HxOverrides.cca(string,i);
		hc = (hc << 5) - hc + code;
	}
	return hc;
};
var TalentData = function() {
	this.setData = null;
	this.spendCurrencyOnReroll = 50;
	this.getCurrencyOnTrain_valuePerLevel = 25;
	this.getCurrencyOnTrain_valueBase = 50;
	this.getCurrencyOnTrain_key = null;
};
$hxClasses["TalentData"] = TalentData;
TalentData.__name__ = "TalentData";
TalentData.prototype = {
	__class__: TalentData
};
var TalentRuntimeData = function() {
};
$hxClasses["TalentRuntimeData"] = TalentRuntimeData;
TalentRuntimeData.__name__ = "TalentRuntimeData";
TalentRuntimeData.prototype = {
	__class__: TalentRuntimeData
};
var TalentToSetData = function() {
};
$hxClasses["TalentToSetData"] = TalentToSetData;
TalentToSetData.__name__ = "TalentToSetData";
TalentToSetData.prototype = {
	__class__: TalentToSetData
};
var GRITalentContent = function() { };
$hxClasses["GRITalentContent"] = GRITalentContent;
GRITalentContent.__name__ = "GRITalentContent";
GRITalentContent.feedContent = function(model) {
	var _g_current = 0;
	var _g_array = model.battleManager.itemBases;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		if(value.type == PrototypeItemMaker.itemType_Weapon) {
			var talent = new TalentData();
			talent.talentName = "" + value.name + " Basics";
			talent.getCurrencyOnTrain_key = "" + value.name + " Practice Point";
			talent.setData = new TalentToSetData();
			talent.setData.battleCondition = new BMCondition(BMConditionType.ITEM_IN_SLOT_IS_OF_ITEM_TYPE,PrototypeItemMaker.itemType_Weapon,index);
			model.talents.push(talent);
		}
	}
	var rerollabeModsForEquipTalents = model.rerollabeModsForEquipTalents;
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(104,105);
	_g.h["Attack"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(null,_g));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(104,105);
	_g.h["Defense"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(null,_g));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(104,105);
	_g.h[BattleConstants.MAGICATTACK] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(null,_g));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(104,105);
	_g.h[BattleConstants.MAGICDEFENSE] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(null,_g));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(104,105);
	_g.h["Speed"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(null,_g));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(6,7);
	_g.h["Attack"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(_g,null));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(4,5);
	_g.h["Speed"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(_g,null));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(4,5);
	_g.h["Defense"] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(_g,null));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(6,7);
	_g.h[BattleConstants.MAGICATTACK] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(_g,null));
	var _g = new haxe_ds_StringMap();
	var value = RangeUtils.R(4,5);
	_g.h[BattleConstants.MAGICDEFENSE] = value;
	rerollabeModsForEquipTalents.push(ModBaseUtils.pureMod(_g,null));
};
var TalentModel = function() {
	this.random = new seedyrng_Random();
	this.formRankDistributionsOfSetRanks = new FormRankDistributionPerSetRank(15);
	this.rerollabeModsForEquipTalents = [];
	this.talentRuntime = [];
	this.talents = [];
};
$hxClasses["TalentModel"] = TalentModel;
TalentModel.__name__ = "TalentModel";
TalentModel.prototype = {
	rerollAndTrain: function(talentPos,set) {
		var talent = this.talents[talentPos];
		var talentPers = this.talentPers.talentToSet[talentPos];
		var key = talent.getCurrencyOnTrain_key;
		this.currency.spend(key,talent.spendCurrencyOnReroll);
		this.changeForm(talentPos,set);
		this.train(talentPos,set);
	}
	,trainOnly: function(talentPos,set) {
		var currencyKey = this.talents[talentPos].getCurrencyOnTrain_key;
		var p = this.talents[talentPos].spendCurrencyOnReroll;
		this.currency.spend(currencyKey,p);
		this.train(talentPos,set);
	}
	,train: function(talentPos,set) {
		var p = this.talents[talentPos].spendCurrencyOnReroll;
		var tSetPers = this.talentPers.talentToSet[talentPos].sets[set];
		tSetPers.pointXP += p;
		var maxXPPoint = this.getPointMaxXP(talentPos,set);
		if(tSetPers.pointXP >= maxXPPoint) {
			if(tSetPers.pointLevel < this.talentRuntime[talentPos].maxLevel) {
				tSetPers.pointXP = 0;
				tSetPers.pointLevel++;
			} else {
				tSetPers.pointXP = maxXPPoint;
			}
		}
	}
	,changeForm: function(talentPos,set) {
		var talentBase = this.talentSharedPers.talents[talentPos];
		var level = talentBase.level;
		var talent = this.talentPers.talentToSet[talentPos];
		var talentSet = talent.sets[set];
		var practiceLevelOfSet = talentSet.pointLevel;
		var distribution = this.formRankDistributionsOfSetRanks.distributions[practiceLevelOfSet];
		var mod = this.rerollabeModsForEquipTalents[this.random.randomInt(0,this.rerollabeModsForEquipTalents.length - 1)];
		var rank = WeightedDistributionLogic.getAPrize(distribution,this.random);
		var multiplier = Math.pow(1.4,rank);
		talentSet.rollBonus.attributes.h = Object.create(null);
		talentSet.rollBonus.attributeMultiplier.h = Object.create(null);
		talentSet.rollBonus.rank = rank;
		if(mod.statAdds != null) {
			var h = mod.statAdds.h;
			var _g_h = h;
			var _g_keys = Object.keys(h);
			var _g_length = _g_keys.length;
			var _g_current = 0;
			while(_g_current < _g_length) {
				var key = _g_keys[_g_current++];
				var _g1_key = key;
				var _g1_value = _g_h[key];
				var key1 = _g1_key;
				var value = _g1_value;
				var v = RandomExtender.Range(this.random,value);
				v = Math.ceil(v * multiplier);
				talentSet.rollBonus.attributes.h[key1] = v;
			}
		}
		if(mod.statMultipliers != null) {
			var h = mod.statMultipliers.h;
			var _g_h = h;
			var _g_keys = Object.keys(h);
			var _g_length = _g_keys.length;
			var _g_current = 0;
			while(_g_current < _g_length) {
				var key = _g_keys[_g_current++];
				var _g1_key = key;
				var _g1_value = _g_h[key];
				var key1 = _g1_key;
				var value = _g1_value;
				var v = RandomExtender.Range(this.random,value);
				var aboveHundred = v - 100;
				aboveHundred = Math.ceil(aboveHundred * multiplier);
				v = aboveHundred + 100;
				talentSet.rollBonus.attributeMultiplier.h[key1] = v;
			}
		}
		this.recalculateConditionalBonuses();
	}
	,recalculateConditionalBonuses: function() {
		if(this.battleManager.wdata == null) {
			return;
		}
		var hero = this.battleManager.wdata.hero;
		if(this.battleManager.heroConditionalBonus == null) {
			this.battleManager.heroConditionalBonus = [];
		}
		this.battleManager.heroConditionalBonus.length = 0;
		var _g_current = 0;
		var _g_array = this.talentPers.talentToSet;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var tSets = _g1_value;
			var tData = this.talents[index];
			if(tData != null) {
				var _g2_current = 0;
				var _g2_array = tSets.sets;
				while(_g2_current < _g2_array.length) {
					var _g3_value = _g2_array[_g2_current];
					var _g3_key = _g2_current++;
					var set = _g3_key;
					var tSet = _g3_value;
					if(tSet.rollBonus != null) {
						var cab = new ConditionalAttributeBonus();
						cab.AttributeBonuses = [tSet.rollBonus];
						if(tSet.grandBonus != null) {
							cab.AttributeBonuses.push(tSet.grandBonus);
						}
						cab.condition.conditions.push(tData.setData.battleCondition);
						cab.condition.conditions.push(TalentModel.setConditions[set]);
						this.battleManager.heroConditionalBonus.push(cab);
					}
				}
			}
		}
		this.battleManager.RecalculateAttributes(this.battleManager.wdata.hero);
	}
	,initializeData: function() {
		while(this.talentSharedPers.talents.length < this.talents.length) this.talentSharedPers.talents.push({ level : 0, xp : 0, seen : 0});
		while(this.talentPers.talentToSet.length < this.talents.length) {
			var tsp = { sets : []};
			var _g = 0;
			var _g1 = BattleManager.NUMBER_OF_EQUIPMENT_SETS;
			while(_g < _g1) {
				var i = _g++;
				tsp.sets.push({ pointXP : 0, grandBonus : { attributes : new haxe_ds_StringMap(), attributeMultiplier : new haxe_ds_StringMap(), rank : 0}, rollBonus : { attributes : new haxe_ds_StringMap(), attributeMultiplier : new haxe_ds_StringMap(), rank : 0}, pointLevel : 0});
			}
			this.talentPers.talentToSet.push(tsp);
		}
	}
	,study: function(talentId) {
		var timeCost = TalentModel.STUDY_COST_IN_TIME;
		this.currency.spend(BattleConstants.CURRENCY_TIME,timeCost);
		var tal = this.talents[talentId];
		var tsp = this.talentSharedPers.talents[talentId];
		this.currency.add(tal.getCurrencyOnTrain_key,tal.getCurrencyOnTrain_valueBase + tal.getCurrencyOnTrain_valuePerLevel * tsp.level);
		this.addXP(talentId,TalentModel.BASE_STUDY_GET_XP,true);
	}
	,canStudy: function(talentPos) {
		return this.currency.canSpend(BattleConstants.CURRENCY_TIME,TalentModel.STUDY_COST_IN_TIME);
	}
	,canChangeForm: function(currentTalent) {
		var tal = this.talents[currentTalent];
		return this.currency.canSpend(tal.getCurrencyOnTrain_key,tal.spendCurrencyOnReroll);
	}
	,initializeRuntime: function() {
		var _g_current = 0;
		var _g_array = this.talents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var trd = new TalentRuntimeData();
			trd.xpResource = new ScalableDistributionData(50,1.2);
			trd.xpResource.setOverrideValue(1,250);
			trd.xpResource.setOverrideValue(2,350);
			trd.xpResource.setOverrideValue(3,500);
			trd.practicePointMax = new ScalableDistributionData(150,1.2);
			trd.xpResource.setOverrideValue(1,200);
			trd.xpResource.setOverrideValue(2,400);
			trd.xpResource.setOverrideValue(3,550);
			trd.maxLevel = 3;
			this.talentRuntime.push(trd);
		}
	}
	,getMaxXP: function(talentId,level) {
		return ScalingLogic.getValue(level,this.talentRuntime[talentId].xpResource);
	}
	,addXP: function(talentId,xp,withLevelUp) {
		if(withLevelUp == null) {
			withLevelUp = false;
		}
		var tp = this.talentSharedPers.talents[talentId];
		var max = this.getMaxXP(talentId,tp.level);
		if(tp.xp > max) {
			tp.xp = max;
		}
		var xpT = tp.xp += xp;
		if(withLevelUp) {
			if(xpT >= max) {
				if(tp.level < this.talentRuntime[talentId].maxLevel) {
					var spill = xpT - max;
					tp.level++;
					tp.xp = spill;
				}
			}
		}
		if(tp.xp > max) {
			tp.xp = max;
		}
	}
	,getDistribution: function(currentTalent,set) {
		var talent = this.talentPers.talentToSet[currentTalent];
		var talentSet = talent.sets[set];
		var practiceLevelOfSet = talentSet.pointLevel;
		return this.formRankDistributionsOfSetRanks.distributions[practiceLevelOfSet];
	}
	,getPointMaxXP: function(talentPos,set) {
		var ppm = this.talentRuntime[talentPos].practicePointMax;
		var tSetPers = this.talentPers.talentToSet[talentPos].sets[set];
		var maxXPPoint = ScalingLogic.getValue(tSetPers.pointLevel,ppm);
		return maxXPPoint;
	}
	,getMaxLevelOfTalent: function(talentPos) {
		return this.talentRuntime[talentPos].maxLevel;
	}
	,getMaxLevelOfTalentPracticeSet: function(talentPos,i) {
		return this.talentSharedPers.talents[talentPos].level;
	}
	,__class__: TalentModel
};
var FormRankDistributionPerSetRank = function(maxRankPrize) {
	this.distributions = [];
	var ceiling = maxRankPrize + 1;
	var wd = new WeightedDistribution();
	wd.prizes.push(new WeightedPrize(0,4));
	wd.prizes.push(new WeightedPrize(1,1));
	this.distributions.push(wd);
	var wd = new WeightedDistribution();
	wd.prizes.push(new WeightedPrize(0,10));
	wd.prizes.push(new WeightedPrize(1,5));
	wd.prizes.push(new WeightedPrize(2,1));
	this.distributions.push(wd);
	var wd = new WeightedDistribution();
	wd.prizes.push(new WeightedPrize(0,5));
	wd.prizes.push(new WeightedPrize(1,10));
	wd.prizes.push(new WeightedPrize(2,3));
	wd.prizes.push(new WeightedPrize(3,1));
	this.distributions.push(wd);
	var wd = new WeightedDistribution();
	wd.prizes.push(new WeightedPrize(1,13));
	wd.prizes.push(new WeightedPrize(2,3));
	wd.prizes.push(new WeightedPrize(3,1));
	this.distributions.push(wd);
	var maxRank = 5;
	var type = 0;
	var length = ceiling;
	var _g = maxRank;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		this.distributions.push(this.createDistribution(i,0));
		this.distributions.push(this.createDistribution(i,1));
	}
};
$hxClasses["FormRankDistributionPerSetRank"] = FormRankDistributionPerSetRank;
FormRankDistributionPerSetRank.__name__ = "FormRankDistributionPerSetRank";
FormRankDistributionPerSetRank.prototype = {
	createDistribution: function(maxRank,type) {
		if(type == 0) {
			var wd = new WeightedDistribution();
			wd.prizes.push(new WeightedPrize(maxRank - 4,20));
			wd.prizes.push(new WeightedPrize(maxRank - 3,60));
			wd.prizes.push(new WeightedPrize(maxRank - 2,10));
			wd.prizes.push(new WeightedPrize(maxRank - 1,3));
			wd.prizes.push(new WeightedPrize(maxRank,1));
			return wd;
		}
		var wd = new WeightedDistribution();
		wd.prizes.push(new WeightedPrize(maxRank - 3,62));
		wd.prizes.push(new WeightedPrize(maxRank - 2,30));
		wd.prizes.push(new WeightedPrize(maxRank - 1,5));
		wd.prizes.push(new WeightedPrize(maxRank,3));
		return wd;
	}
	,__class__: FormRankDistributionPerSetRank
};
var ArcaniaActionsForTC = function(control) {
	this.optionTypeToRuntimeUnit = [];
	this.optionsType = [];
	this.control = control;
	this.arcaniaControl = control.villageControl.arcaniaControl;
	this.arcaniaControl.tripleChoiceinteg = this;
};
$hxClasses["ArcaniaActionsForTC"] = ArcaniaActionsForTC;
ArcaniaActionsForTC.__name__ = "ArcaniaActionsForTC";
ArcaniaActionsForTC.prototype = {
	updateButton: function(uiElement,runtimeUnit) {
		this.arcaniaControl.feedSingleAction(runtimeUnit,uiElement);
	}
	,getRuntimeUnitFromOption: function(option) {
		if(option == null) {
			return null;
		}
		var index = this.optionsType.indexOf(option.type);
		if(index >= 0) {
			var ru = this.optionTypeToRuntimeUnit[index];
			return ru;
		}
		return null;
	}
	,updateButtonWithOption: function(option,uiElement) {
		var ru = this.getRuntimeUnitFromOption(option);
		if(ru != null) {
			this.updateButton(uiElement,ru);
			return true;
		}
		return false;
	}
	,executeOption: function(option) {
		var ru = this.getRuntimeUnitFromOption(option);
		if(ru != null) {
			this.arcaniaControl.arcaniaModel.performAction(ru.positionInRuntimeTypeArray);
			return true;
		} else {
			return false;
		}
	}
	,refreshActionRelatedToOption: function(option) {
		var index = this.optionsType.indexOf(option.type);
		if(index >= 0) {
			var ru = this.optionTypeToRuntimeUnit[index];
			switch(option.type) {
			case triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN:
				var tmp = seedyrng_Seedy.randomInt(0,2) * 10;
				ru.basicData.result[0].amount = 30 + tmp;
				break;
			case triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE:
				ru.basicData.cost[0].amount = -this.arcaniaControl.arcaniaModel.findRuntimeUnit(ru.basicData.cost[0].id).getMax();
				break;
			}
		}
	}
	,loadJson: function() {
		this.arcaniaControl.arcaniaModel.loadActionJson(ArcaniaActionsForTC.actions);
	}
	,setupData: function() {
		this.getMoney = this.arcaniaControl.getRuntimeUnit("tc_get_money");
		this.getMoney.basicData.addTag(GRIArcaniaTags.EXPLORATION_MENU);
		this.addOption(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN,this.getMoney);
		this.addOptionWithRuntimeId(triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE,"tc_upgrade_wallet");
	}
	,addOptionWithRuntimeId: function(optionType,resId) {
		var ru = this.arcaniaControl.getRuntimeUnit(resId);
		ru.basicData.addTag(GRIArcaniaTags.EXPLORATION_MENU);
		this.addOption(optionType,ru);
	}
	,addOption: function(optiType,ru) {
		this.optionsType.push(optiType);
		this.optionTypeToRuntimeUnit.push(ru);
	}
	,__class__: ArcaniaActionsForTC
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var UICreation = function(manager) {
	this.activeLayer = 1;
	this.defaultLayer = 1;
	this.tags = [];
	this.manager = manager;
};
$hxClasses["UICreation"] = UICreation;
UICreation.__name__ = "UICreation";
UICreation.createEmptyElement = function(w,h) {
	var e = new UIElement();
	var self = e.transform.size;
	self.x = w;
	self.y = h;
	return e;
};
UICreation.prototype = {
	addWithOffset: function(element,parent,pivotX,pivotY,posX,posY,transferColor,transferState) {
		if(transferState == null) {
			transferState = false;
		}
		if(transferColor == null) {
			transferColor = false;
		}
		this.addElement(element);
		return this.offsetElement(element,parent,pivotX,pivotY,posX,posY,transferColor,transferState);
	}
	,addWithOffsetAdvanced: function(element,parent,pivotX,pivotY,pivotSourceX,pivotSourceY,posX,posY,transferColor,transferState) {
		if(transferState == null) {
			transferState = false;
		}
		if(transferColor == null) {
			transferColor = false;
		}
		var off = this.offsetElement(element,parent,pivotX,pivotY,posX,posY,transferColor,transferState);
		var self = off.pivotS;
		self.x = pivotSourceX;
		self.y = pivotSourceY;
		this.addElement(element);
		return off;
	}
	,addBackground: function(element,layoutId,margin,fitChildren) {
		if(fitChildren == null) {
			fitChildren = true;
		}
		if(element == null) {
			element = UICreation.createEmptyElement(0,0);
		}
		var l = this.manager.genUI.getLayout(layoutId);
		l.bgElement = element;
		l.bgFitChildren = fitChildren;
		l.margin = margin;
		this.addElement(element);
		this.manager.genUI.update(l);
		return l;
	}
	,offsetElement: function(element,parent,pivotX,pivotY,posX,posY,transferColor,transferState) {
		if(transferState == null) {
			transferState = false;
		}
		if(transferColor == null) {
			transferColor = false;
		}
		var x = posX;
		var y = posY;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var x = pivotX;
		var y = pivotY;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this2 = new Vector2Default(x,y);
		var x = pivotX;
		var y = pivotY;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this3 = new Vector2Default(x,y);
		var off = new UIOffset(element,parent,this1,this2,this3);
		if(element.mask == null) {
			element.mask = parent.mask;
		}
		off.transferColor = transferColor;
		off.transferState = transferState;
		this.manager.offsets.push(off);
		parent.offsets.push(off);
		return off;
	}
	,offsetElementAdvanced: function(element,parent,pivotX,pivotY,pivotSourceX,pivotSourceY,posX,posY,transferColor,transferState) {
		if(transferState == null) {
			transferState = false;
		}
		if(transferColor == null) {
			transferColor = false;
		}
		var off = this.offsetElement(element,parent,pivotX,pivotY,posX,posY,transferColor,transferState);
		var self = off.pivotS;
		self.x = pivotSourceX;
		self.y = pivotSourceY;
		return off;
	}
	,addElementInLayoutId: function(element,layoutId,fitLayoutWidth) {
		if(fitLayoutWidth == null) {
			fitLayoutWidth = false;
		}
		this.addElement(element);
		this.manager.genUI.addElementToLayout(element,layoutId);
		if(fitLayoutWidth) {
			this.manager.genUI.fitWidthOfLayout(element,layoutId);
		}
	}
	,addScrollToLayout: function(layoutId) {
		var scroll = this.manager.genUI.addScrollToLayout(layoutId);
		this.manager.registerScroll(scroll,this.activeLayer);
		return scroll;
	}
	,createImageElement: function(sprite,w,h) {
		if(h == null) {
			h = -1;
		}
		if(w == null) {
			w = -1;
		}
		var element = new UIElement();
		element.style.sprite = sprite;
		var self = element.transform.size;
		self.x = w;
		self.y = h;
		if(w == -1 || h == -1) {
			element.fitSprite();
		}
		return element;
	}
	,createBorder: function(w,h,color) {
		if(color == null) {
			color = 0;
		}
		var element = new UIElement();
		var self = element.transform.size;
		self.x = w;
		self.y = h;
		element.style.border = 1;
		element.style.borderColor = color;
		return element;
	}
	,singleTag: function(tag) {
		this.tags.length = 0;
		this.tags.push(tag);
	}
	,addElement: function(element,layer) {
		if(layer == null) {
			layer = -99999;
		}
		var l = this.activeLayer;
		if(layer != -99999) {
			l = layer;
		}
		this.manager.addElement(element,l);
		var _g = 0;
		var _g1 = this.tags;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			element.tags.push(s);
		}
	}
	,addFullScreenRect: function(color,tag) {
		var element = new UIElement();
		var self = element.transform.size;
		self.x = Renderer.width;
		self.y = Renderer.height;
		var self = element.transform.position;
		self.x = 0;
		self.y = 0;
		element.tags.push(tag);
		element.style.color = color;
		element.style.fill = true;
		this.addElement(element);
		return element;
	}
	,addEmptyElement: function(w,h,layout) {
		var element = new UIElement();
		var self = element.transform.size;
		self.x = w;
		self.y = h;
		if(layout == null) {
			this.addElement(element);
		} else {
			this.addElementInLayoutId(element,layout);
		}
		return element;
	}
	,offsetToLayoutViewport: function(header,layoutId,x,y,setFitChildren,fitChildren) {
		if(fitChildren == null) {
			fitChildren = false;
		}
		if(setFitChildren == null) {
			setFitChildren = false;
		}
		var lay = this.manager.genUI.getLayout(layoutId);
		if(lay.bgElement == null) {
			lay.bgElement = new UIElement();
			lay.bgElement.style.fill = true;
			lay.bgElement.style.color = 16777215;
		}
		if(setFitChildren) {
			lay.bgFitChildren = fitChildren;
		}
		var viewport = lay.bgElement;
		this.addWithOffset(header,viewport,0,0,x,y);
	}
	,addDropshadow: function(arg0,layoutId,ele) {
		var l = this.manager.genUI.getLayout(layoutId);
		if(l.dropShadowMap == null) {
			l.dropShadowMap = new haxe_ds_EnumValueMap();
		}
		l.dropShadowMap.set(arg0,ele);
		ele.hoverable = false;
	}
	,createFilledSquare: function(width,height,color,borderColor,borderSize) {
		if(borderSize == null) {
			borderSize = 0;
		}
		if(borderColor == null) {
			borderColor = 0;
		}
		var e = UICreation.createEmptyElement(width,height);
		e.style.fill = true;
		e.style.color = color;
		e.style.border = borderSize;
		e.style.borderColor = borderColor;
		return e;
	}
	,addSimpleBarNoText: function(x,y,width,height,fillColor,bgColor,borderSize,offsetParent) {
		var bg = this.createFilledSquare(width,height,bgColor,bgColor,borderSize);
		bg.style.fill = true;
		var fill = this.createFilledSquare(width / 2,height - borderSize * 2,fillColor,fillColor,0);
		var self = bg.transform.position;
		self.x = x;
		self.y = y;
		var self = fill.transform.position;
		self.x = x + borderSize;
		self.y = y + borderSize;
		if(offsetParent != null) {
			this.addWithOffset(bg,offsetParent,0,0,x,y);
			this.addWithOffset(fill,offsetParent,0,0,borderSize + x,borderSize + y);
		} else {
			var self = bg.transform.position;
			self.x = x;
			self.y = y;
			var self = fill.transform.position;
			self.x = x + borderSize;
			self.y = y + borderSize;
		}
		var maxWidth = width - borderSize * 2;
		return { barBack : bg, barPortion : fill, barMaxSize : maxWidth, leftText : null, mainText : null};
	}
	,addSlider: function(id,layout,cursorGroup,width,barwidth,labelWidth,fillColor,bgColor,textLeft,textFontLeft,textFontRight,height) {
		if(height == null) {
			height = 18;
		}
		var parent = this.addEmptyElement(width,height,layout);
		parent.style.fill = true;
		parent.style.alpha = 0;
		var barH = height - 10;
		var bar = this.addSimpleBarNoText(labelWidth,height * 0.5 - barH * 0.5,barwidth,barH,fillColor,bgColor,0,parent);
		var movingPortion = this.createFilledSquare(4,height,fillColor);
		if(textFontLeft != null) {
			var leftText = UICreation.createEmptyElement(labelWidth,height);
			leftText.textFont = textFontLeft;
			leftText.text = textLeft;
			leftText.style.colorText = fillColor;
			bar.leftText = leftText;
		}
		if(textFontRight != null) {
			var text = UICreation.createEmptyElement(width - barwidth - labelWidth,height);
			text.textFont = textFontLeft;
			text.text = textLeft;
			bar.mainText = text;
		}
		this.addElementInLayoutId(parent,layout);
		this.addWithOffset(bar.leftText,parent,0,0,0,0);
		this.addWithOffset(bar.mainText,parent,0,0,labelWidth + barwidth,0);
		this.addWithOffset(movingPortion,bar.barBack,0,0.5,0,0);
		parent.data.stringData = id;
		var uiSlider = new UISliderView();
		uiSlider.barView = bar;
		uiSlider.movable = movingPortion;
		uiSlider.parent = parent;
		this.manager.sliderManager.sliderViews.push(uiSlider);
		cursorGroup.elements.push(parent);
		return uiSlider;
	}
	,__class__: UICreation
};
var CursorGroup = function(firstElementToCursorElement) {
	if(firstElementToCursorElement == null) {
		firstElementToCursorElement = false;
	}
	this.avoidFirstElement = [];
	this.noElementActivateGroup = new haxe_ds_EnumValueMap();
	this.updateFirstElementToCurrentElement = false;
	this.elements = [];
	this.updateFirstElementToCurrentElement = firstElementToCursorElement;
};
$hxClasses["CursorGroup"] = CursorGroup;
CursorGroup.__name__ = "CursorGroup";
CursorGroup.prototype = {
	directionRelationship: function(d,other) {
		this.noElementActivateGroup.set(d,other);
		var dOther = DirectionUtils.getOpposite(d);
		other.noElementActivateGroup.set(dOther,this);
	}
	,__class__: CursorGroup
};
var Device = $hxEnums["Device"] = { __ename__:true,__constructs__:null
	,MOUSE: {_hx_name:"MOUSE",_hx_index:0,__enum__:"Device",toString:$estr}
	,KEYBOARD: {_hx_name:"KEYBOARD",_hx_index:1,__enum__:"Device",toString:$estr}
	,GAMEPAD: {_hx_name:"GAMEPAD",_hx_index:2,__enum__:"Device",toString:$estr}
};
Device.__constructs__ = [Device.MOUSE,Device.KEYBOARD,Device.GAMEPAD];
var UIElementManager = function(nLayers) {
	this.biggestHoveredElement = null;
	this.soundsToPlay = [];
	this.visibilityHogTags = [];
	this.inputHogTags = [];
	this.hover = new HoverManager();
	this.dataEventHolder = new DataEventHolder();
	this.scrolls = [];
	this.offsets = [];
	this.spriteSheetAnimations = new SpriteSheetAnimationManager();
	this.keyboardManager = new UIKeyboardManager();
	this.elementsHolder = [];
	var _g = 0;
	var _g1 = nLayers;
	while(_g < _g1) {
		var i = _g++;
		this.elementsHolder.push([]);
	}
	this.dataEvents = this.dataEventHolder.dataEvents;
	this.screen = new UIElement();
	this.sliderManager = new UISliderManager(this);
};
$hxClasses["UIElementManager"] = UIElementManager;
UIElementManager.__name__ = "UIElementManager";
UIElementManager.pointInTransform = function(ele,point,radiusBonus) {
	if(radiusBonus == null) {
		radiusBonus = 0;
	}
	if(radiusBonus != 0) {
		var cx = ele.get_centerX();
		var cy = ele.get_centerY();
		var disX = cx - point.x;
		var disY = cy - point.y;
		var disSq = disX * disX + disY * disY;
		if(disSq < radiusBonus * radiusBonus) {
			point.x = cx;
			point.y = cy;
		} else {
			var dis = Math.sqrt(disSq);
			var dirX = disX / dis;
			var dirY = disY / dis;
			point.x += dirX * radiusBonus;
			point.y += dirY * radiusBonus;
		}
	}
	var min = ele.position;
	var maxx = ele.size.x < 0 ? ele.position.x : ele.position.x + ele.size.x;
	var maxy = ele.size.y < 0 ? ele.position.y : ele.position.y + ele.size.y;
	var minx = ele.size.x < 0 ? ele.position.x + ele.size.x : ele.position.x;
	var miny = ele.size.y < 0 ? ele.position.y + ele.size.y : ele.position.y;
	var result = false;
	if(point.x >= minx && point.x <= maxx) {
		if(point.y >= miny && point.y <= maxy) {
			result = true;
		}
	}
	return result;
};
UIElementManager.fitTextHeight = function(element) {
	if(element == null) {
		return;
	}
	if(element.text == null) {
		return;
	}
	var w = element.transform.size.x | 0;
	if(w <= 0) {
		w = 999999;
	}
	var height = XTextRender.textHeight(element.text,element.textFont,w);
	element.transform.size.y = height;
};
UIElementManager.prototype = {
	Update: function(time,mouse) {
		Profiler.start("elements_loop_before");
		this.screen.transform.position.x = 0;
		this.screen.transform.position.y = 0;
		var self = this.screen.transform.size;
		self.x = Renderer.width;
		self.y = Renderer.height;
		this.biggestHoveredElement = null;
		var tmp;
		if(!(Mouse.mouse.mouseMoved.x != 0 || Mouse.mouse.mouseMoved.y != 0)) {
			var _this = Mouse.mouse.mousePressed;
			tmp = _this.state != _this.previousState && _this.state == true;
		} else {
			tmp = true;
		}
		if(tmp) {
			UIElementManager.latestDevice = Device.MOUSE;
		}
		if(Keyboard.keyboard.charsDown.length > 0) {
			UIElementManager.latestDevice = Device.KEYBOARD;
		}
		this.dataEvents.length = 0;
		Profiler.start("keyboard_manager");
		this.keyboardManager.update(this);
		Profiler.end();
		Profiler.start("slider_manager");
		this.sliderManager.update(time);
		Profiler.end();
		this.spriteSheetAnimations.update(time);
		var self = mouse.mouseMoved;
		var mouseMoved = self.x * self.x + self.y * self.y != 0;
		Profiler.start("offset_loop");
		var _g_current = 0;
		var _g_array = this.offsets;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var originPos = value.origin.transform.position;
			var b = value.offset;
			var self = originPos;
			var x = self.x;
			var y = self.y;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			var this1 = new Vector2Default(x,y);
			var self1 = this1;
			self1.x += b.x;
			self1.y += b.y;
			value.target.transform.position = self1;
			if(value.pivotD != null && value.pivotS != null) {
				value.target.transform.position.x += Pivot.calculateDimension(value.pivotS.x,value.pivotD.x,value.target.transform.size.x,value.origin.transform.size.x);
				value.target.transform.position.y += Pivot.calculateDimension(value.pivotS.y,value.pivotD.y,value.target.transform.size.y,value.origin.transform.size.y);
			}
			var doIt = value.horizontalSizeExtension;
			if(doIt == false) {
				doIt = false;
			}
			if(doIt) {
				var self2 = value.origin.transform.size;
				var self3 = value.origin.transform.position;
				var topPos = self2.x + self3.x;
				var self4 = value.target.transform.position;
				var value1 = topPos - self4.x;
				var self5 = value.target.transform.size;
				self5.x = value1;
			}
			var doIt1 = false;
			if(doIt1 == false) {
				doIt1 = value.verticalSizeExtension;
			}
			if(doIt1) {
				var self6 = value.origin.transform.size;
				var self7 = value.origin.transform.position;
				var topPos1 = self6.y + self7.y;
				var self8 = value.target.transform.position;
				var value2 = topPos1 - self8.y;
				var self9 = value.target.transform.size;
				self9.y = value2;
			}
			if(value.transferColor) {
				value.target.style.color = value.origin.style.color;
				if(value.target.styleHover != null && value.origin.styleHover != null) {
					value.target.styleHover.color = value.origin.styleHover.color;
				}
				if(value.target.styleSelected != null && value.origin.styleSelected != null) {
					value.target.styleSelected.color = value.origin.styleSelected.color;
				}
			}
			if(value.transferState) {
				value.target.selected = value.origin.selected;
				value.target.enabled = value.origin.enabled;
				value.target.hovered.state = value.origin.hovered.state;
				value.target.visible = value.origin.visible;
			}
		}
		Profiler.end("offset_loop");
		Profiler.end();
		Profiler.start("elements_loop");
		var _g = 0;
		var _g1 = this.elementsHolder;
		while(_g < _g1.length) {
			var elements = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < elements.length) {
				var e = elements[_g2];
				++_g2;
				var result = false;
				var _g_current = 0;
				var _g_array = e.tags;
				while(_g_current < _g_array.length) {
					var _g1_value = _g_array[_g_current];
					var _g1_key = _g_current++;
					var index = _g1_key;
					var value = _g1_value;
					if(value != null) {
						if(value.visible == false) {
							result = true;
							break;
						}
					}
				}
				if(result) {
					e.hovered.state = false;
					continue;
				}
				if(e.managedState) {
					e.clickedThisFrame = false;
					var _this = e.hovered;
					_this.previousState = _this.state;
					var _this1 = e.touch;
					_this1.previousState = _this1.state;
					if(this.inputHog) {
						var result1 = false;
						var _g_current1 = 0;
						var _g_array1 = e.tags;
						while(_g_current1 < _g_array1.length) {
							var _g1_value1 = _g_array1[_g_current1];
							var _g1_key1 = _g_current1++;
							var index1 = _g1_key1;
							var value1 = _g1_value1;
							if(value1 != null) {
								if(value1.inputHog == true) {
									result1 = true;
									break;
								}
							}
						}
						if(result1 == false) {
							continue;
						}
					}
					if(e.debug) {
						haxe_Log.trace("DEBUG: element hoverable " + (e.hoverable == null ? "null" : "" + e.hoverable),{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 150, className : "UIElementManager", methodName : "Update"});
					}
					var ele = e.transform;
					var point = mouse.get_mousePosition();
					var min = ele.position;
					var maxx = ele.size.x < 0 ? ele.position.x : ele.position.x + ele.size.x;
					var maxy = ele.size.y < 0 ? ele.position.y : ele.position.y + ele.size.y;
					var minx = ele.size.x < 0 ? ele.position.x + ele.size.x : ele.position.x;
					var miny = ele.size.y < 0 ? ele.position.y + ele.size.y : ele.position.y;
					var result2 = false;
					if(point.x >= minx && point.x <= maxx) {
						if(point.y >= miny && point.y <= maxy) {
							result2 = true;
						}
					}
					var mouseInside = result2;
					if(e.mask != null && mouseInside) {
						if(mouseInside) {
							var ele1 = e.mask;
							var point1 = mouse.get_mousePosition();
							var min1 = ele1.position;
							var maxx1 = ele1.size.x < 0 ? ele1.position.x : ele1.position.x + ele1.size.x;
							var maxy1 = ele1.size.y < 0 ? ele1.position.y : ele1.position.y + ele1.size.y;
							var minx1 = ele1.size.x < 0 ? ele1.position.x + ele1.size.x : ele1.position.x;
							var miny1 = ele1.size.y < 0 ? ele1.position.y + ele1.size.y : ele1.position.y;
							var result3 = false;
							if(point1.x >= minx1 && point1.x <= maxx1) {
								if(point1.y >= miny1 && point1.y <= maxy1) {
									result3 = true;
								}
							}
							mouseInside = result3;
						} else {
							mouseInside = false;
						}
					}
					if(e.debug) {
						haxe_Log.trace("DEBUG: element hoverable " + (e.hoverable == null ? "null" : "" + e.hoverable),{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 158, className : "UIElementManager", methodName : "Update"});
						haxe_Log.trace("DEBUG: element hovered " + Std.string(e.hovered.state),{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 159, className : "UIElementManager", methodName : "Update"});
					}
					if(e.hoverable) {
						var mouseHovering = mouseInside;
						if(mouseMoved && e.hoverBonus != -99999) {
							var ele2 = e.transform;
							var point2 = mouse.get_mousePosition();
							var radiusBonus = e.hoverBonus;
							if(radiusBonus == null) {
								radiusBonus = 0;
							}
							if(radiusBonus != 0) {
								var cx = ele2.get_centerX();
								var cy = ele2.get_centerY();
								var disX = cx - point2.x;
								var disY = cy - point2.y;
								var disSq = disX * disX + disY * disY;
								if(disSq < radiusBonus * radiusBonus) {
									point2.x = cx;
									point2.y = cy;
								} else {
									var dis = Math.sqrt(disSq);
									var dirX = disX / dis;
									var dirY = disY / dis;
									point2.x += dirX * radiusBonus;
									point2.y += dirY * radiusBonus;
								}
							}
							var min2 = ele2.position;
							var maxx2 = ele2.size.x < 0 ? ele2.position.x : ele2.position.x + ele2.size.x;
							var maxy2 = ele2.size.y < 0 ? ele2.position.y : ele2.position.y + ele2.size.y;
							var minx2 = ele2.size.x < 0 ? ele2.position.x + ele2.size.x : ele2.position.x;
							var miny2 = ele2.size.y < 0 ? ele2.position.y + ele2.size.y : ele2.position.y;
							var result4 = false;
							if(point2.x >= minx2 && point2.x <= maxx2) {
								if(point2.y >= miny2 && point2.y <= maxy2) {
									result4 = true;
								}
							}
							mouseHovering = result4;
							if(e.mask != null && mouseHovering) {
								if(mouseHovering) {
									var ele3 = e.mask;
									var point3 = mouse.get_mousePosition();
									var radiusBonus1 = e.hoverBonus;
									if(radiusBonus1 == null) {
										radiusBonus1 = 0;
									}
									if(radiusBonus1 != 0) {
										var cx1 = ele3.get_centerX();
										var cy1 = ele3.get_centerY();
										var disX1 = cx1 - point3.x;
										var disY1 = cy1 - point3.y;
										var disSq1 = disX1 * disX1 + disY1 * disY1;
										if(disSq1 < radiusBonus1 * radiusBonus1) {
											point3.x = cx1;
											point3.y = cy1;
										} else {
											var dis1 = Math.sqrt(disSq1);
											var dirX1 = disX1 / dis1;
											var dirY1 = disY1 / dis1;
											point3.x += dirX1 * radiusBonus1;
											point3.y += dirY1 * radiusBonus1;
										}
									}
									var min3 = ele3.position;
									var maxx3 = ele3.size.x < 0 ? ele3.position.x : ele3.position.x + ele3.size.x;
									var maxy3 = ele3.size.y < 0 ? ele3.position.y : ele3.position.y + ele3.size.y;
									var minx3 = ele3.size.x < 0 ? ele3.position.x + ele3.size.x : ele3.position.x;
									var miny3 = ele3.size.y < 0 ? ele3.position.y + ele3.size.y : ele3.position.y;
									var result5 = false;
									if(point3.x >= minx3 && point3.x <= maxx3) {
										if(point3.y >= miny3 && point3.y <= maxy3) {
											result5 = true;
										}
									}
									mouseHovering = result5;
								} else {
									mouseHovering = false;
								}
							}
						}
						e.hovered.state = (mouseHovering && (mouseMoved || e.hovered.state) || this.keyboardManager.cursoredElement == e && this.keyboardManager.selectionOn) && e.visible;
						if(e.debug) {
							haxe_Log.trace("DEBUG: element hoverable " + (e.hoverable == null ? "null" : "" + e.hoverable),{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 177, className : "UIElementManager", methodName : "Update"});
						}
						var _this2 = e.hovered;
						if(_this2.state != _this2.previousState && _this2.state == true) {
							if(e.hoverSound != -99999) {
								this.soundsToPlay.push(e.hoverSound);
							}
							if(e.debug) {
								haxe_Log.trace("DEBUG: " + e.id + " element hovered this frame",{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 184, className : "UIElementManager", methodName : "Update"});
							}
							var hovered = this.hover.hoverElement(e,this);
							if(mouseHovering && e.styleHover != null && mouseMoved) {
								this.keyboardManager.deselect();
							}
							UIElementManager.latestDeviceThatHovered = UIElementManager.latestDevice;
						}
						if(e.hovered.state && e.visible && e.biggestHoveredEnabled) {
							if(e.style.sprite != null || e.style.border > 0 || e.style.fill == true) {
								if(this.biggestHoveredElement == null) {
									this.biggestHoveredElement = e;
								} else {
									var _this3 = this.biggestHoveredElement.transform;
									var _this4 = e.transform;
									if(_this3.size.x * _this3.size.y < _this4.size.x * _this4.size.y) {
										this.biggestHoveredElement = e;
									}
								}
							}
						}
					}
					if(mouseInside) {
						if(e.enabled && e.visible) {
							if(e.touch.state == true) {
								var _this5 = mouse.mousePressed;
								if(_this5.state != _this5.previousState && _this5.state == false) {
									e.clickedThisFrame = true;
									e.touch.state = false;
								}
							}
							var _this6 = mouse.mousePressed;
							if(_this6.state != _this6.previousState && _this6.state == true) {
								e.touch.state = true;
							}
						}
					}
					if(mouse.mousePressed.state == false) {
						e.touch.state = false;
					}
					if(e.clickedThisFrame) {
						e.massEventStartTimeCounter = 0;
						if(e.data != null) {
							this.dataEvents.push(e.data);
						}
					}
					if(e.touch.state == true && e.massEventStartTime > 0 && e.enabled && e.visible) {
						var _this7 = e.touch;
						if(_this7.state != _this7.previousState && _this7.state == true) {
							e.massEventStartTimeCounter = 0;
						}
						if(e.massEventStartTimeCounter > e.massEventStartTime) {
							if(e.data != null) {
								this.dataEvents.push(e.data);
							}
						} else {
							e.massEventStartTimeCounter += time;
						}
					}
				}
			}
		}
		Profiler.end("elements_loop");
		Profiler.start("elements_loop_after");
		this.hover.checkHoverElementEnd(this);
		if(this.hover.hoverView != null) {
			if(this.hover.dirty && this.hover.hovered != null) {
				this.hover.hoverElement(this.hover.hovered,this);
			} else {
				UIElementManager.fitTextHeight(this.hover.hoverView.header);
			}
		}
		Profiler.end("elements_loop_after");
		Profiler.start("scroll_loop");
		var _g = 0;
		var _g1 = this.scrolls;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			UIScrollLogic.update(s,mouse.mouseMoved);
			if(this.keyboardManager.cursoredElement != null && UIElementManager.latestDevice != Device.MOUSE) {
				UIScrollLogic.acertainVisibility(s,this.keyboardManager.cursoredElement);
			}
			if(this.biggestHoveredElement != null && this.biggestHoveredElement.mask == s.viewport.transform) {
				UIScrollLogic.acertainVisibility(s,this.biggestHoveredElement);
			}
		}
		Profiler.end("scroll_loop");
	}
	,enterCursorGroup: function(cursorGroup) {
		this.keyboardManager.enterCursorGroup(cursorGroup,this);
	}
	,returnCursorGroup: function() {
		if(this.keyboardManager.previousCursorGroup != null) {
			haxe_Log.trace("RETURN",{ fileName : "Sources\\UIElements/UIElementManager.hx", lineNumber : 267, className : "UIElementManager", methodName : "returnCursorGroup"});
			this.keyboardManager.enterCursorGroup(this.keyboardManager.previousCursorGroup,this);
		}
	}
	,attemptElementTrigger: function(e) {
		if(this.isVisible(e) && e.enabled) {
			if(e.data != null) {
				this.dataEvents.push(e.data);
			}
		}
	}
	,elementTrigger: function(e) {
		if(e.data != null) {
			this.dataEvents.push(e.data);
		}
	}
	,renderElementsInLayer: function(l) {
		this.renderElements(this.elementsHolder[l]);
	}
	,renderElements: function(elements) {
		var _g = 0;
		while(_g < elements.length) {
			var element = elements[_g];
			++_g;
			var notification = null;
			if(this.notificationControl != null) {
				notification = this.notificationControl.getNotificationLike(element.data.stringData,element.data.intData);
			}
			var render = true;
			if(this.visibilityHog) {
				if(this.isTagVisibilityHog(element) == false) {
					render = false;
				}
			}
			var result = false;
			var _g_current = 0;
			var _g_array = element.tags;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value != null) {
					if(value.visible == false) {
						result = true;
						break;
					}
				}
			}
			if(result) {
				render = false;
			}
			if(element.visible == false) {
				render = false;
			}
			var notificationPresent = this.notificationControl != null && this.notificationControl.shouldRender(notification);
			if(render) {
				var style = element.style;
				if(element.enabled || element.styleDisabled == null) {
					if((element.touch.state || element.buttonActivator.state) && element.stylePressed != null) {
						style = element.stylePressed;
					} else if(element.selected && element.styleSelected != null) {
						style = element.styleSelected;
						if(element.styleSelectedHover != null && element.hovered.state) {
							style = element.styleSelectedHover;
						}
					} else if(element.hovered.state && element.styleHover != null) {
						style = element.styleHover;
					}
				} else {
					style = element.styleDisabled;
					if(element.styleDisabledHover != null && element.hovered.state) {
						style = element.styleDisabledHover;
					}
				}
				this.renderStyle(style,element.transform,element.offsetAnimationTransform,element.mask);
				if(notificationPresent) {
					if(element.hovered.state || element.selected) {
						if(notificationPresent) {
							if(notification.status == 2) {
								notification.status = 3;
							}
						}
					}
					if(notification.status == 1) {
						notification.status = 2;
					}
					var w = 14;
					var h = 14;
					var _this = element.transform;
					Renderer.drawSprite(autogen_GriPngs.whitediamond,element.mask,(_this.size.x < 0 ? _this.position.x : _this.position.x + _this.size.x) - 2 - w,element.transform.get_y() + 2,0.8,0.8,0,0,15375794);
				}
				if(element.text != null && element.textVisible) {
					var pivotX = element.textPivot.x;
					var pivotY = element.textPivot.y;
					var _this1 = element.transform;
					var bottomX = _this1.size.x < 0 ? _this1.position.x + _this1.size.x : _this1.position.x;
					var _this2 = element.transform;
					var bottomY = _this2.size.y < 0 ? _this2.position.y + _this2.size.y : _this2.position.y;
					var x = bottomX + element.transform.size.x * pivotX;
					var y = bottomY + element.transform.size.y * pivotY;
					if(element.offsetAnimationTransform.active) {
						x += element.offsetAnimationTransform.get_centerX();
						y += element.offsetAnimationTransform.get_centerY();
					}
					var c = style.color;
					if(style.colorText >= 0) {
						c = style.colorText;
					}
					XTextRender.drawTextMultiLine(element.text,element.textFont,x,y,element.transform.size.x,pivotX,pivotY,c,element.mask,element.style.alpha,element.emoticonLibrary);
				}
			} else if(notificationPresent && notification.status == 2) {
				notification.status = 3;
			}
		}
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.elementsHolder;
		while(_g < _g1.length) {
			var elements = _g1[_g];
			++_g;
			this.renderElements(elements);
		}
	}
	,feedElement: function(element,feed) {
		element.data.intData = feed.data.intData;
		element.data.stringData = feed.data.stringData;
		element.enabled = feed.enabled;
		element.text = feed.text;
		element.visible = feed.visible;
		if(feed.infoText != null && feed.infoText != "") {
			this.hover.setHoverGeneric(element,element.text,feed.infoText);
		} else {
			this.hover.removeHover(element);
		}
	}
	,updateBarLeftText: function(bar,text) {
		bar.leftText.text = text;
	}
	,updateBarValue: function(bar,value,maxValue) {
		var sc = value / maxValue;
		if(sc > 1) {
			sc = 1;
		}
		bar.barPortion.transform.size.x = sc * bar.barMaxSize;
		bar.mainText.text = value + "";
	}
	,endInputHog: function() {
		this.inputHog = false;
		var _g_current = 0;
		var _g_array = this.inputHogTags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.inputHog = false;
		}
	}
	,hogInput: function(tag) {
		this.inputHogTags.length = 0;
		this.inputHog = true;
		this.inputHogTags.push(tag);
		tag.inputHog = true;
	}
	,endVisibilityHog: function() {
		this.visibilityHog = false;
		var _g_current = 0;
		var _g_array = this.visibilityHogTags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.visibilityHog = false;
		}
	}
	,hogVisibility: function(tag) {
		this.visibilityHogTags.length = 0;
		this.visibilityHog = true;
		this.visibilityHogTags.push(tag);
		tag.visibilityHog = true;
	}
	,isTagVisibilityHog: function(e) {
		var _g_current = 0;
		var _g_array = e.tags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				if(value.visibilityHog == true) {
					return true;
				}
			}
		}
		return false;
	}
	,isTagHogInput: function(element) {
		var result = false;
		var _g_current = 0;
		var _g_array = element.tags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				if(value.inputHog == true) {
					result = true;
					break;
				}
			}
		}
		return result;
	}
	,isTagInvisible: function(element) {
		var result = false;
		var _g_current = 0;
		var _g_array = element.tags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				if(value.visible == false) {
					result = true;
					break;
				}
			}
		}
		return result;
	}
	,addElement: function(element,layer) {
		this.elementsHolder[layer].push(element);
	}
	,registerScroll: function(scroll,layer) {
		this.scrolls.push(scroll);
		this.addElement(scroll.viewport,layer);
	}
	,extendElementHeight: function(element,offsetBottom) {
		var _this = element.transform;
		_this.size.y = Renderer.height - offsetBottom - _this.position.y;
	}
	,renderStyle: function(style,transform,offsetAnimationTrasnform,mask) {
		var offsetX = 0;
		var offsetY = 0;
		if(offsetAnimationTrasnform.active) {
			offsetX = offsetAnimationTrasnform.get_centerX();
			offsetY = offsetAnimationTrasnform.get_centerY();
		}
		if(style.fill) {
			Renderer.fillRect(transform,style.color,mask,style.alpha);
		}
		if(style.sprite != null) {
			Renderer.sprite(style.sprite,transform,style,mask,offsetX,offsetY,style.metaRenderInfo);
		}
		if(style.ninePatch != null) {
			Renderer.NinePatch(style.ninePatch,transform,style,mask);
		}
		if(style.border > 0) {
			Renderer.drawRect(transform,style.borderColor,style.border,mask);
		}
	}
	,elementVisibility: function(elementId,visible) {
		this.getElement(elementId).visible = visible;
	}
	,tagVisibility: function(tag,visible) {
		tag.visible = visible;
	}
	,elementEnabled: function(elementId,enabled) {
		this.getElement(elementId).enabled = enabled;
	}
	,getElement: function(elementId) {
		var _g = 0;
		var _g1 = this.elementsHolder;
		while(_g < _g1.length) {
			var elements = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < elements.length) {
				var element = elements[_g2];
				++_g2;
				if(element.id == elementId) {
					return element;
				}
			}
		}
		return null;
	}
	,getElementWithDataInt: function(elementId,dataInt) {
		var _g = 0;
		var _g1 = this.elementsHolder;
		while(_g < _g1.length) {
			var elements = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < elements.length) {
				var element = elements[_g2];
				++_g2;
				if(element.id == elementId && element.data.intData == dataInt) {
					return element;
				}
			}
		}
		return null;
	}
	,elementTextId: function(elementId,text,fitTextHeight) {
		if(fitTextHeight == null) {
			fitTextHeight = false;
		}
		var e = this.getElement(elementId);
		this.elementText(e,text,fitTextHeight);
	}
	,elementText: function(e,text,fitTextHeight,heightBonus,maxWidth,fitTextWidth) {
		if(fitTextWidth == null) {
			fitTextWidth = false;
		}
		if(maxWidth == null) {
			maxWidth = -1;
		}
		if(heightBonus == null) {
			heightBonus = 0;
		}
		if(fitTextHeight == null) {
			fitTextHeight = false;
		}
		e.text = text;
		var maxW = e.transform.size.x;
		if(maxWidth >= 0) {
			maxW = maxWidth;
		}
		if(fitTextHeight && text != null) {
			e.transform.size.y = XTextRender.textHeight(text,e.textFont,maxW);
		}
		if(fitTextWidth && text != null) {
			var tmp = XTextRender.calculateTextWidth(text,e.textFont,maxW);
			e.transform.size.x = tmp + 1;
		}
		e.transform.size.y += heightBonus;
	}
	,isVisible: function(e) {
		if(e.visible == false) {
			return false;
		}
		var result = false;
		var _g_current = 0;
		var _g_array = e.tags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != null) {
				if(value.visible == false) {
					result = true;
					break;
				}
			}
		}
		var tagInvisible = result;
		if(tagInvisible == true) {
			return false;
		}
		if(this.visibilityHog) {
			if(this.isTagVisibilityHog(e) == false) {
				return false;
			}
		}
		return true;
	}
	,updateBarVisibility: function(bar,visible) {
		bar.barBack.visible = visible;
		bar.barPortion.visible = visible;
		bar.leftText.visible = visible;
		bar.mainText.visible = visible;
	}
	,bindLeftRight: function(left,right) {
		left.noElementActivateGroup.set(Direction.EAST,right);
		right.noElementActivateGroup.set(Direction.WEST,left);
	}
	,drawBarOnTop: function(ui,border,yDis,barHeight,barBackColor,barColor,ratio) {
		var x = ui.transform.position.x;
		var y = ui.transform.position.y - barHeight - yDis;
		var w = ui.transform.size.x;
		var h = barHeight;
		Renderer.fillRectSimple(barBackColor,x,y,w,h,ui.mask);
		Renderer.fillRectSimple(barColor,x + border,y + border,(w - border * 2) * ratio,h - border * 2,ui.mask);
	}
	,isHoggingVisibility: function() {
		return this.visibilityHog;
	}
	,isTagVisible: function(tag) {
		return tag.visible;
	}
	,__class__: UIElementManager
};
var UIElement = function() {
	this.biggestHoveredEnabled = true;
	this.debug = false;
	this.offsets = [];
	this.managedState = true;
	this.selected = false;
	this.visible = true;
	this.enabled = true;
	this.data = new Data();
	this.styleDisabled = null;
	this.styleDisabledHover = null;
	this.styleSelectedHover = null;
	this.styleSelected = null;
	this.styleHover = null;
	this.stylePressed = null;
	this.style = new Style();
	this.buttonActivator = new reusablemodel_BoolProperty();
	this.touch = new reusablemodel_BoolProperty();
	this.clickedThisFrame = false;
	this.hoverSound = -99999;
	this.hovered = new reusablemodel_BoolProperty();
	this.mask = null;
	var x = 0.5;
	var y = 0.5;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.textPivot = this1;
	this.textFont = "main";
	this.massEventStartTimeCounter = 0;
	this.massEventStartTime = -1;
	this.textVisible = true;
	this.text = null;
	this.offsetAnimationTransform = new XTransform();
	this.transform = new XTransform();
	this.tags = [];
	this.hoverable = true;
	this.hoverBonus = -99999;
	this.offsetAnimationTransform.active = false;
};
$hxClasses["UIElement"] = UIElement;
UIElement.__name__ = "UIElement";
UIElement.prototype = {
	fitSprite: function() {
		if(this.style.sprite != null) {
			var self = this.transform.size;
			self.x = this.style.sprite.rect.width;
			self.y = this.style.sprite.rect.height;
		}
	}
	,setAllStyleSprites: function(arg0) {
		this.style.sprite = arg0;
		if(this.styleDisabled != null) {
			this.styleDisabled.sprite = arg0;
		}
		if(this.styleDisabledHover != null) {
			this.styleDisabled.sprite = arg0;
		}
		if(this.styleHover != null) {
			this.styleHover.sprite = arg0;
		}
		if(this.stylePressed != null) {
			this.stylePressed.sprite = arg0;
		}
		if(this.styleSelected != null) {
			this.styleSelected.sprite = arg0;
		}
		if(this.styleSelectedHover != null) {
			this.styleSelectedHover.sprite = arg0;
		}
	}
	,__class__: UIElement
};
var UIElementFeed = function() {
	this.data = new Data();
	this.infoText = null;
	this.text = null;
	this.visible = true;
	this.enabled = true;
};
$hxClasses["UIElementFeed"] = UIElementFeed;
UIElementFeed.__name__ = "UIElementFeed";
UIElementFeed.prototype = {
	__class__: UIElementFeed
};
var UIFeedList = function() {
	this.header = null;
	this.feedList = [];
};
$hxClasses["UIFeedList"] = UIFeedList;
UIFeedList.__name__ = "UIFeedList";
UIFeedList.prototype = {
	invisibleAfterCap: function(vLength) {
		var _g = vLength;
		var _g1 = this.feedList.length;
		while(_g < _g1) {
			var i = _g++;
			this.feedList[i].visible = false;
		}
	}
	,element: function(index) {
		while(this.feedList.length <= index) {
			var uef = new UIElementFeed();
			this.feedList.push(uef);
		}
		return this.feedList[index];
	}
	,__class__: UIFeedList
};
var UIFeedLists = function() {
	this.feedLists = [];
};
$hxClasses["UIFeedLists"] = UIFeedLists;
UIFeedLists.__name__ = "UIFeedLists";
UIFeedLists.prototype = {
	initList: function(listHeader) {
		var ufl = new UIFeedList();
		ufl.header = listHeader;
		this.feedLists.push(ufl);
	}
	,set: function(list,element,text,infoText,enabled,visible) {
		if(visible == null) {
			visible = true;
		}
		if(enabled == null) {
			enabled = true;
		}
		var feed = this.feedLists[list].element(element);
		feed.text = text;
		feed.enabled = enabled;
		feed.infoText = infoText;
		feed.visible = visible;
	}
	,setData: function(list,element,data,dataN) {
		var feed = this.feedLists[list].element(element);
		feed.data.stringData = data;
		feed.data.intData = dataN;
	}
	,__class__: UIFeedLists
};
var UIOffset = function(target,origin,offset,pivotS,pivotD) {
	this.horizontalSizeExtension = false;
	this.verticalSizeExtension = false;
	this.transferState = false;
	this.transferColor = false;
	this.origin = origin;
	this.target = target;
	this.offset = offset;
	this.pivotS = pivotS;
	this.pivotD = pivotD;
};
$hxClasses["UIOffset"] = UIOffset;
UIOffset.__name__ = "UIOffset";
UIOffset.prototype = {
	sizeExtension: function(horizontalSize,verticalSize) {
		this.horizontalSizeExtension = horizontalSize;
		this.verticalSizeExtension = verticalSize;
	}
	,__class__: UIOffset
};
var Style = function() {
	this.metaRenderInfo = 0;
	this.alpha = 255;
	this.borderColor = 0;
	this.border = 0;
	this.ninePatch = null;
	this.colorText = -1;
	this.color = 16777215;
};
$hxClasses["Style"] = Style;
Style.__name__ = "Style";
Style.prototype = {
	setFill: function(color) {
		this.color = color;
		this.fill = true;
	}
	,clone: function() {
		var style = new Style();
		style.color = this.color;
		style.colorText = this.colorText;
		style.ninePatch = this.ninePatch;
		style.border = this.border;
		style.borderColor = this.borderColor;
		style.sprite = this.sprite;
		return style;
	}
	,__class__: Style
};
var NinePatch = function(borderSize,spriteN,imageSize,height) {
	if(height == null) {
		height = -1.0;
	}
	this.rect = new Rect(0,0,0,0);
	this.borderSize = 0;
	this.complexBorder = null;
	this.borderSize = borderSize;
	this.spriteName = spriteN;
	this.rect.width = imageSize;
	if(height == -1) {
		this.rect.height = imageSize;
	} else {
		this.rect.height = height;
	}
};
$hxClasses["NinePatch"] = NinePatch;
NinePatch.__name__ = "NinePatch";
NinePatch.prototype = {
	innerRectMode: function(arg0) {
		this.borderSize = -1;
		this.innerRect = arg0;
	}
	,__class__: NinePatch
};
var XTransform = function() {
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.pivot = this1;
	var x = 1;
	var y = 1;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.scale = this1;
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.size = this1;
	this.rotation = 0;
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.position = this1;
	this.active = true;
};
$hxClasses["XTransform"] = XTransform;
XTransform.__name__ = "XTransform";
XTransform.prototype = {
	get_x: function() {
		return this.position.x;
	}
	,set_x: function(x) {
		this.position.x = x;
		return x;
	}
	,get_y: function() {
		return this.position.y;
	}
	,set_y: function(y) {
		this.position.y = y;
		return y;
	}
	,get_centerX: function() {
		return this.position.x + this.size.x / 2;
	}
	,get_centerY: function() {
		return this.position.y + this.size.y / 2;
	}
	,set: function(x,y,w,h) {
		this.position.x = x;
		this.position.y = y;
		this.size.x = w;
		this.size.y = h;
	}
	,centerIn: function(cX,cY) {
		this.position.x = cX - this.size.x / 2;
		this.position.y = cY - this.size.y / 2;
	}
	,feedRect: function(rect) {
		if(rect == null) {
			rect = new Rect(0,0,0,0);
		}
		rect.x = this.position.x;
		rect.y = this.position.y;
		rect.width = this.size.x;
		rect.height = this.size.y;
		return rect;
	}
	,set_topX: function(topX) {
		this.size.x = topX - this.position.x;
		return this.size.x + this.position.x;
	}
	,get_topX: function() {
		if(this.size.x < 0) {
			return this.position.x;
		}
		return this.position.x + this.size.x;
	}
	,get_topY: function() {
		if(this.size.y < 0) {
			return this.position.y;
		}
		return this.position.y + this.size.y;
	}
	,set_topY: function(topY) {
		this.size.y = topY - this.position.y;
		return this.size.y + this.position.y;
	}
	,set_bottomX: function(x) {
		this.position.x = x;
		return x;
	}
	,get_bottomX: function() {
		if(this.size.x < 0) {
			return this.position.x + this.size.x;
		}
		return this.position.x;
	}
	,get_bottomY: function() {
		if(this.size.y < 0) {
			return this.position.y + this.size.y;
		}
		return this.position.y;
	}
	,set_bottomY: function(y) {
		this.position.y = y;
		return y;
	}
	,area: function() {
		return this.size.x * this.size.y;
	}
	,setPositionWithPivot: function(x,y,pivotX,pivotY) {
		this.position.x = x - this.size.x * pivotX;
		this.position.y = y - this.size.y * pivotY;
	}
	,__class__: XTransform
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",get_bottomY:"get_bottomY",get_bottomX:"get_bottomX",get_centerY:"get_centerY",get_centerX:"get_centerX",set_topY:"set_topY",get_topY:"get_topY",set_topX:"set_topX",get_topX:"get_topX"}
};
var GenMasterAccess = function(gen) {
	this.genMaster = gen;
};
$hxClasses["GenMasterAccess"] = GenMasterAccess;
GenMasterAccess.__name__ = "GenMasterAccess";
GenMasterAccess.prototype = {
	getLinearLayout: function(id) {
		var _g = 0;
		var _g1 = this.genMaster.linearLayouts;
		while(_g < _g1.length) {
			var unknown = _g1[_g];
			++_g;
			if(unknown.element.id == id) {
				return unknown;
			}
		}
		window.alert(Std.string("Layout not found " + id));
		return null;
	}
	,__class__: GenMasterAccess
};
var HoverInformation = function() {
	this.direction = Direction.EAST;
	this.enabled = true;
};
$hxClasses["HoverInformation"] = HoverInformation;
HoverInformation.__name__ = "HoverInformation";
HoverInformation.prototype = {
	__class__: HoverInformation
};
var HoverView = function(header,mainText,layoutId,tag,layoutBG,layoutObj) {
	this.header = header;
	this.mainText = mainText;
	this.layoutId = layoutId;
	this.tag = tag;
	this.layoutBG = layoutBG;
	this.layoutObj = layoutObj;
};
$hxClasses["HoverView"] = HoverView;
HoverView.__name__ = "HoverView";
HoverView.prototype = {
	__class__: HoverView
};
var HoverManager = function() {
	this.dirty = false;
	this.hovers = new haxe_ds_ObjectMap();
};
$hxClasses["HoverManager"] = HoverManager;
HoverManager.__name__ = "HoverManager";
HoverManager.prototype = {
	setHoverGeneric: function(element,header,mainText,direction,headerDisabled,mainTextDisabled) {
		if(direction == null) {
			direction = Direction.EAST;
		}
		var hover = this.hovers.h[element.__id__];
		if(hover == null) {
			hover = new HoverInformation();
			this.hovers.set(element,hover);
		}
		hover.enabled = true;
		hover.header = header;
		hover.mainText = mainText;
		hover.direction = direction;
		hover.headerElementDisabled = headerDisabled;
		hover.mainTextElementDisabled = mainTextDisabled;
		if(this.hovered == element) {
			if(this.hoverView.mainText.text != mainText) {
				this.dirty = true;
			}
		}
	}
	,removeHover: function(element) {
		var hover = this.hovers.h[element.__id__];
		if(hover != null) {
			hover.enabled = false;
		}
	}
	,hoverElement: function(element,manager) {
		this.dirty = false;
		if(this.hoverView != null) {
			var hover = this.hovers.h[element.__id__];
			if(hover != null && hover.enabled) {
				this.hovered = element;
				var maxW = this.hoverView.layoutObj.layout.element.width;
				if(element.enabled == false && hover.headerElementDisabled != null) {
					manager.elementText(this.hoverView.header,hover.headerElementDisabled,true,0,maxW,true);
					manager.elementText(this.hoverView.mainText,hover.mainTextElementDisabled,true,0,maxW,true);
				} else {
					manager.elementText(this.hoverView.header,hover.header,true,0,maxW,true);
					manager.elementText(this.hoverView.mainText,hover.mainText,true,0,maxW,true);
				}
				var direction = hover.direction;
				manager.tagVisibility(this.hoverView.tag,true);
				UIElementManager.fitTextHeight(this.hoverView.mainText);
				UIElementManager.fitTextHeight(this.hoverView.header);
				this.hoverView.header.transform.size.y = 40;
				if(this.hoverView.mainText.transform.size.y > 300) {
					this.hoverView.mainText.textFont = "main";
				} else {
					this.hoverView.mainText.textFont = "main14";
				}
				UIElementManager.fitTextHeight(this.hoverView.mainText);
				UIElementManager.fitTextHeight(this.hoverView.header);
				manager.genUI.updateAll();
				manager.genUI.layoutAsHover(element,this.hoverView.layoutId,direction,this.hoverView.layoutBG);
				return true;
			}
		}
		return false;
	}
	,checkHoverElementEnd: function(manager) {
		if(this.hovered != null) {
			if(this.hovered.hovered.state == false) {
				this.hovered = null;
				manager.tagVisibility(this.hoverView.tag,false);
			}
		}
	}
	,__class__: HoverManager
};
var UIKeyboardManager = function() {
	this.buttonPressToElementTrigger = new haxe_ds_IntMap();
	this.selectionOn = false;
};
$hxClasses["UIKeyboardManager"] = UIKeyboardManager;
UIKeyboardManager.__name__ = "UIKeyboardManager";
UIKeyboardManager.prototype = {
	cursorThisElement: function(e) {
		if(this.cursoredElement != null) {
			this.cursoredElement.hovered.state = false;
			this.cursoredElement.buttonActivator.state = false;
		}
		this.cursoredElement = e;
		if(this.currentCursorGroup.updateFirstElementToCurrentElement) {
			this.currentCursorGroup.firstElement = this.cursoredElement;
		}
		if(UIElementManager.latestDevice != Device.MOUSE) {
			this.selectionOn = true;
		}
	}
	,deselect: function() {
		this.selectionOn = false;
	}
	,enterCursorGroup: function(cg,ui) {
		if(cg != this.currentCursorGroup) {
			this.previousCursorGroup = this.currentCursorGroup;
		}
		this.currentCursorGroup = cg;
		var elementCursor = cg.firstElement;
		if(cg.firstElement == null) {
			if(cg.elements.length > 0) {
				elementCursor = cg.elements[0];
			}
		}
		if(elementCursor != null) {
			if(ui.isVisible(elementCursor) == false) {
				elementCursor = null;
				var _g = 0;
				var _g1 = cg.elements;
				while(_g < _g1.length) {
					var element = _g1[_g];
					++_g;
					if(ui.isVisible(element)) {
						elementCursor = element;
						break;
					}
				}
			}
		}
		if(elementCursor != null && cg.avoidFirstElement.indexOf(elementCursor) != -1) {
			var _g = 0;
			var _g1 = cg.elements;
			while(_g < _g1.length) {
				var element = _g1[_g];
				++_g;
				if(ui.isVisible(element) && cg.avoidFirstElement.indexOf(element) != -1 == false) {
					elementCursor = element;
					break;
				}
			}
		}
		if(elementCursor != null) {
			this.cursorThisElement(elementCursor);
		}
	}
	,moveCursor: function(xWeight,yWeight,ui) {
		var currentWeight = 9999999;
		var foundElement = null;
		var xStrong = Math.abs(xWeight) > Math.abs(yWeight);
		var yStrong = !xStrong;
		var _g_current = 0;
		var _g_array = this.currentCursorGroup.elements;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value != this.cursoredElement) {
				if(ui.isVisible(value)) {
					var xPortion = (value.transform.get_x() - this.cursoredElement.transform.get_x()) * xWeight;
					var yPortion = (value.transform.get_y() - this.cursoredElement.transform.get_y()) * yWeight;
					if(xStrong && yPortion < 0) {
						yPortion *= -1;
					}
					if(yStrong && xPortion < 0) {
						xPortion *= -1;
					}
					var weight = xPortion + yPortion;
					if(xStrong && xPortion == 0) {
						weight = 0;
					}
					if(yStrong && yPortion == 0) {
						weight = 0;
					}
					if(weight > 0 && weight < currentWeight) {
						currentWeight = weight;
						foundElement = value;
					}
				}
			}
		}
		return foundElement;
	}
	,update: function(ui) {
		var map = this.buttonPressToElementTrigger;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var button = _g1_key;
			var element = _g1_value;
			var _this = element.buttonActivator;
			_this.previousState = _this.state;
			if(Buttons.buttons.buttonsDown.indexOf(button) != -1) {
				ui.attemptElementTrigger(element);
			}
			element.buttonActivator.state = Buttons.buttons.buttonsPressed.indexOf(button) != -1;
		}
		if(this.currentCursorGroup != null) {
			if(this.currentCursorGroup.cancelGroup != null && Buttons.buttons.buttonsDown.indexOf(DefaultButtons.CANCEL) != -1) {
				this.enterCursorGroup(this.currentCursorGroup.cancelGroup,ui);
			}
			if(this.cursoredElement != null) {
				if(ui.isVisible(this.cursoredElement) == false) {
					this.enterCursorGroup(this.currentCursorGroup,ui);
				}
				var xWeight = 0;
				var yWeight = 0;
				var d = null;
				if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.RIGHT) != -1) {
					xWeight = 10000;
					yWeight = 1;
					d = Direction.EAST;
				}
				if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.LEFT) != -1) {
					xWeight = -10000;
					yWeight = 1;
					d = Direction.WEST;
				}
				if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.UP) != -1) {
					xWeight = 1;
					yWeight = -10000;
					d = Direction.NORTH;
				}
				if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.DOWN) != -1) {
					xWeight = 1;
					yWeight = 10000;
					d = Direction.SOUTH;
				}
				if(xWeight != 0 && yWeight != 0) {
					var newElement = this.moveCursor(xWeight,yWeight,ui);
					if(newElement != null) {
						this.cursorThisElement(newElement);
					} else {
						var noElementGroup = this.currentCursorGroup.noElementActivateGroup.get(d);
						if(noElementGroup != null) {
							var hasActive = false;
							var _g = 0;
							var _g1 = noElementGroup.elements;
							while(_g < _g1.length) {
								var element = _g1[_g];
								++_g;
								if(ui.isVisible(element)) {
									hasActive = true;
									break;
								}
							}
							if(hasActive) {
								this.enterCursorGroup(noElementGroup,ui);
							}
						}
					}
				}
			}
		}
		var cursoredElementReal = this.cursoredElement != null && this.cursoredElement.hovered.state == true && this.cursoredElement.enabled && ui.isVisible(this.cursoredElement);
		if(cursoredElementReal) {
			this.cursoredElement.buttonActivator.state = Buttons.buttons.buttonsPressed.indexOf(DefaultButtons.CONFIRM) != -1;
		}
		if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.CONFIRM) != -1) {
			if(cursoredElementReal) {
				var e = this.cursoredElement;
				if(e.data != null) {
					ui.dataEvents.push(e.data);
				}
				this.cursoredElement.touch.state = true;
			}
		}
	}
	,__class__: UIKeyboardManager
};
var UIManagerUnit = function(manager) {
	this._manager = manager;
};
$hxClasses["UIManagerUnit"] = UIManagerUnit;
UIManagerUnit.__name__ = "UIManagerUnit";
UIManagerUnit.prototype = {
	get_keyboard: function() {
		return this._manager.keyboardManager;
	}
	,__class__: UIManagerUnit
	,__properties__: {get_keyboard:"get_keyboard"}
};
var UIScroll = function(elementArray) {
	this.positionElements = true;
	this.margin = null;
	var x = 0;
	var y = 10;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.offset = this1;
	if(elementArray == null) {
		this.elements = [];
	} else {
		this.elements = elementArray;
	}
};
$hxClasses["UIScroll"] = UIScroll;
UIScroll.__name__ = "UIScroll";
UIScroll.prototype = {
	__class__: UIScroll
};
var UIScrollLogic = function() { };
$hxClasses["UIScrollLogic"] = UIScrollLogic;
UIScrollLogic.__name__ = "UIScrollLogic";
UIScrollLogic.scrollUp = function(scroll) {
	UIScrollLogic.moveScroll(scroll,9999);
};
UIScrollLogic.scrollDown = function(scroll) {
	UIScrollLogic.moveScroll(scroll,-9999);
};
UIScrollLogic.recalculateContentRect = function(scroll,uiManager) {
	if(scroll.content == null) {
		scroll.content = new Rect(9999,9999,0,0);
	}
	scroll.content.x = 9999;
	scroll.content.y = 9999;
	scroll.content.width = 0;
	scroll.content.height = 0;
	var rectAux = new Rect(0,0,0,0);
	var _g = 0;
	var _g1 = scroll.elements;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		if(uiManager.isVisible(e) == false) {
			continue;
		}
		e.mask = scroll.viewport.transform;
		e.transform.feedRect(rectAux);
		if(scroll.content.x > rectAux.x) {
			scroll.content.x = rectAux.x;
		}
		if(scroll.content.y > rectAux.y) {
			scroll.content.y = rectAux.y;
		}
		var _this = scroll.content;
		if(_this.x + _this.width < rectAux.x + rectAux.width) {
			var _this1 = scroll.content;
			_this1.width = rectAux.x + rectAux.width - _this1.x;
		}
		var _this2 = scroll.content;
		if(_this2.y + _this2.height < rectAux.y + rectAux.height) {
			var _this3 = scroll.content;
			_this3.height = rectAux.y + rectAux.height - _this3.y;
		}
		if(scroll.content.height < rectAux.height) {
			scroll.content.height = rectAux.height;
		}
	}
};
UIScrollLogic.update = function(scroll,deltaMouseMove) {
	var wantToMove = 0.0;
	if(scroll.viewport.hovered.state && Mouse.mouse.deltaWheelY != 0) {
		wantToMove = -Mouse.mouse.deltaWheelY;
	}
	var tmp;
	if(scroll.viewport.touch.state) {
		var self = deltaMouseMove;
		tmp = self.x * self.x + self.y * self.y > 0;
	} else {
		tmp = false;
	}
	if(tmp) {
		wantToMove = deltaMouseMove.y;
	}
	if(wantToMove != 0) {
		UIScrollLogic.moveScroll(scroll,wantToMove);
	}
};
UIScrollLogic.acertainVisibility = function(scroll,element) {
	if(scroll.elements.indexOf(element) != -1 || scroll.viewport.transform == element.mask) {
		var _this = element.transform;
		var bottomY = _this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y;
		var _this = scroll.viewport.transform;
		if((_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) > bottomY) {
			var _this = scroll.viewport.transform;
			UIScrollLogic.moveScroll(scroll,(_this.size.y < 0 ? _this.position.y + _this.size.y : _this.position.y) - bottomY);
		}
		var _this = scroll.viewport.transform;
		var _this1 = element.transform;
		if((_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) < (_this1.size.y < 0 ? _this1.position.y : _this1.position.y + _this1.size.y)) {
			var _this = scroll.viewport.transform;
			var _this1 = element.transform;
			UIScrollLogic.moveScroll(scroll,(_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) - (_this1.size.y < 0 ? _this1.position.y : _this1.position.y + _this1.size.y));
		}
	}
};
UIScrollLogic.calculateMaxOffsetY = function(scroll) {
	var addH = 10;
	if(scroll.margin != null) {
		addH = scroll.margin.height;
	}
	return scroll.viewport.transform.position.y - scroll.content.y + addH;
};
UIScrollLogic.calculateMinOffsetY = function(scroll) {
	var subY = 10;
	if(scroll.margin != null) {
		subY = scroll.margin.y;
	}
	var _this = scroll.viewport.transform;
	var _this1 = scroll.content;
	return (_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) - (_this1.y + _this1.height) - subY;
};
UIScrollLogic.moveScroll = function(scroll,wantToMove) {
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var self_x = x;
	var self_y = y;
	var self = scroll.offset;
	var self1 = self;
	var value = self1.x;
	self_x = value;
	var self1 = self;
	var value = self1.y;
	self_y = value;
	scroll.offset.y += wantToMove;
	var subY = 10;
	var addH = 10;
	if(scroll.margin != null) {
		subY = scroll.margin.y;
		addH = scroll.margin.height;
	}
	var _this = scroll.viewport.transform;
	var _this1 = scroll.content;
	var minoffSetY = (_this.size.y < 0 ? _this.position.y : _this.position.y + _this.size.y) - (_this1.y + _this1.height) - subY;
	var minoffSetY = UIScrollLogic.calculateMinOffsetY(scroll);
	if(scroll.offset.y < minoffSetY) {
		scroll.offset.y = minoffSetY;
	}
	var maxOffsetY = scroll.viewport.transform.position.y - scroll.content.y + addH;
	var maxoffSetY = UIScrollLogic.calculateMaxOffsetY(scroll);
	if(scroll.offset.y > maxOffsetY) {
		scroll.offset.y = maxOffsetY;
	}
	var deltaY = scroll.offset.y - self_y;
	if(deltaY != 0) {
		if(scroll.positionElements) {
			var _g = 0;
			var _g1 = scroll.elements;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				e.transform.position.y += scroll.offset.y - self_y;
			}
		}
		if(scroll.viewport.id == "story_main-scroll") {
			haxe_Log.trace("sss",{ fileName : "Sources\\UIElements/UIScroll.hx", lineNumber : 139, className : "UIScrollLogic", methodName : "moveScroll"});
		}
	}
	if(scroll.viewport.id == "story_main-scroll") {
		haxe_Log.trace("sss",{ fileName : "Sources\\UIElements/UIScroll.hx", lineNumber : 143, className : "UIScrollLogic", methodName : "moveScroll"});
	}
};
UIScrollLogic.getScrollProgressY = function(scroll) {
	if(scroll.content == null) {
		return -1;
	}
	if(scroll.viewport == null) {
		return -1;
	}
	var max = UIScrollLogic.calculateMaxOffsetY(scroll);
	var min = UIScrollLogic.calculateMinOffsetY(scroll);
	var v = scroll.offset.y;
	if(max == min) {
		return -1;
	}
	if(min > max) {
		return -1;
	}
	return (v - min) / (max - min);
};
var UISliderManager = function(manager) {
	this.sliderViews = [];
	UIManagerUnit.call(this,manager);
};
$hxClasses["UISliderManager"] = UISliderManager;
UISliderManager.__name__ = "UISliderManager";
UISliderManager.startControlling = function(slideView) {
	slideView.parent.selected = true;
};
UISliderManager.setSliderProgress = function(sliderView,progress) {
	var offset = sliderView.barView.barBack.offsets[0].offset;
	var desiredValue = progress * sliderView.barView.barBack.transform.size.x;
	offset.x = desiredValue;
	sliderView.barView.barPortion.transform.size.x = desiredValue;
	var p = progress * (sliderView.maxValue - sliderView.minValue) + sliderView.minValue | 0;
	sliderView.barView.mainText.text = p + "";
};
UISliderManager.currentSliderProgress = function(sliderView) {
	var offset = sliderView.barView.barBack.offsets[0].offset;
	var xRatio = offset.x / sliderView.barView.barBack.transform.size.x;
	return xRatio;
};
UISliderManager.__super__ = UIManagerUnit;
UISliderManager.prototype = $extend(UIManagerUnit.prototype,{
	update: function(miliseconds) {
		var _g_current = 0;
		var _g_array = this.sliderViews;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var slideView = value;
			var _this = value.parent.hovered;
			if(_this.state != _this.previousState && _this.state == true) {
				if(UIElementManager.latestDeviceThatHovered != Device.MOUSE) {
					UISliderManager.startControlling(slideView);
				}
			}
			if(value.parent.selected || value.parent.hovered.state) {
				var movingParent = slideView.barView.barBack;
				var desiredOffset = movingParent.offsets[0].offset.x;
				if(Mouse.mouse.mousePressed.state) {
					desiredOffset = Mouse.mouse.get_x() - movingParent.transform.get_x();
				} else {
					var increment = 3;
					var speed = 0.1;
					if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.LEFT) != -1) {
						desiredOffset -= increment;
					}
					if(Buttons.buttons.buttonsDown.indexOf(DefaultButtons.RIGHT) != -1) {
						desiredOffset += increment;
					}
					var movementSpeed = false;
					if(Buttons.buttons.buttonsPressed.indexOf(DefaultButtons.LEFT) != -1) {
						desiredOffset -= miliseconds * speed;
						movementSpeed = true;
					}
					if(Buttons.buttons.buttonsPressed.indexOf(DefaultButtons.RIGHT) != -1) {
						desiredOffset += miliseconds * speed;
						movementSpeed = true;
					}
					var tmp = movementSpeed == false;
				}
				if(desiredOffset < 0) {
					desiredOffset = 0;
				}
				if(desiredOffset > movingParent.transform.size.x) {
					desiredOffset = movingParent.transform.size.x;
				}
				UISliderManager.setSliderProgress(slideView,desiredOffset / movingParent.transform.size.x);
			}
			var _this1 = Mouse.mouse.mousePressed;
			if(_this1.state != _this1.previousState && _this1.state == false) {
				value.parent.selected = false;
			}
			var _g2_current = 0;
			var _g2_array = this._manager.dataEventHolder.dataEvents;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var index1 = _g3_key;
				var data = _g3_value;
				if(data.stringData == value.parent.data.stringData) {
					UISliderManager.startControlling(slideView);
				}
			}
		}
	}
	,__class__: UISliderManager
});
var UISliderView = function() {
	this.maxValue = 100;
	this.minValue = 0;
};
$hxClasses["UISliderView"] = UISliderView;
UISliderView.__name__ = "UISliderView";
UISliderView.prototype = {
	__class__: UISliderView
};
var UInt = {};
UInt.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var Vector2Default = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["Vector2Default"] = Vector2Default;
Vector2Default.__name__ = "Vector2Default";
Vector2Default.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
	,__class__: Vector2Default
};
var Vector2 = {};
Vector2.__properties__ = {get_rotatedRight:"get_rotatedRight",get_rotatedLeft:"get_rotatedLeft",get_normal:"get_normal",set_angle:"set_angle",get_angle:"get_angle",get_lengthSq:"get_lengthSq",get_length:"get_length",get_yAxis:"get_yAxis",get_xAxis:"get_xAxis",get_zero:"get_zero"};
Vector2._new = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.fromArray = function(rawData) {
	if(rawData.length != 2) {
		throw haxe_Exception.thrown("Invalid rawData.");
	}
	var x = rawData[0];
	var y = rawData[1];
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.fromPolar = function(angle,radius) {
	var x = radius * Math.cos(angle);
	var y = radius * Math.sin(angle);
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.fromVector2Shape = function(other) {
	var x = other.x;
	var y = other.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.dot = function(a,b) {
	return a.x * b.x + a.y * b.y;
};
Vector2.multiply = function(a,s) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x *= s;
	self.y *= s;
	return self;
};
Vector2.divide = function(a,s) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x /= s;
	self.y /= s;
	return self;
};
Vector2.add = function(a,b) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x += b.x;
	self.y += b.y;
	return self;
};
Vector2.subtract = function(a,b) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x -= b.x;
	self.y -= b.y;
	return self;
};
Vector2.negate = function(a) {
	var x = -a.x;
	var y = -a.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.x == b.x) {
			return a.y == b.y;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Vector2.lerp = function(a,b,t) {
	var x = (1.0 - t) * a.x + t * b.x;
	var y = (1.0 - t) * a.y + t * b.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.max = function(a,b) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x = Math.max(self.x,b.x);
	self.y = Math.max(self.y,b.y);
	return self;
};
Vector2.min = function(a,b) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	self.x = Math.min(self.x,b.x);
	self.y = Math.min(self.y,b.y);
	return self;
};
Vector2.project = function(a,b) {
	var self = a;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	var s = (self.x * b.x + self.y * b.y) / (b.x * b.x + b.y * b.y);
	var self1 = b;
	var self2 = self1;
	var value = self2.x;
	var self2 = self;
	self2.x = value;
	var self2 = self1;
	var value = self2.y;
	var self1 = self;
	self1.y = value;
	var self1 = self;
	self1.x *= s;
	self1.y *= s;
	return self;
};
Vector2.reflect = function(v,normal) {
	var self = v;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var self_x = x;
	var self_y = y;
	var s = (self_x * normal.x + self_y * normal.y) / (normal.x * normal.x + normal.y * normal.y);
	var self1 = normal;
	var self2 = self1;
	var value = self2.x;
	self_x = value;
	var self2 = self1;
	var value = self2.y;
	self_y = value;
	self_x *= s;
	self_y *= s;
	self_x *= 2.0;
	self_y *= 2.0;
	var self1 = self;
	self1.x -= self_x;
	self1.y -= self_y;
	return self;
};
Vector2.orthoNormalize = function(u,v) {
	var self = u;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self1 = self;
		self1.x /= length;
		self1.y /= length;
	}
	var self = v;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var a_x = x;
	var a_y = y;
	var s = (a_x * u.x + a_y * u.y) / (u.x * u.x + u.y * u.y);
	var self = u;
	var self1 = self;
	var value = self1.x;
	a_x = value;
	var self1 = self;
	var value = self1.y;
	a_y = value;
	a_x *= s;
	a_y *= s;
	var self = v;
	self.x -= a_x;
	self.y -= a_y;
	var self = v;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self1 = self;
		self1.x /= length;
		self1.y /= length;
	}
};
Vector2.set = function(this1,x,y) {
	var self = this1;
	self.x = x;
	self.y = y;
	return self;
};
Vector2.multiplyWith = function(this1,s) {
	var self = this1;
	self.x *= s;
	self.y *= s;
	return self;
};
Vector2.divideWith = function(this1,s) {
	var self = this1;
	self.x /= s;
	self.y /= s;
	return self;
};
Vector2.addWith = function(this1,a) {
	var self = this1;
	self.x += a.x;
	self.y += a.y;
	return self;
};
Vector2.subtractWith = function(this1,a) {
	var self = this1;
	self.x -= a.x;
	self.y -= a.y;
	return self;
};
Vector2.maxWith = function(this1,a) {
	var self = this1;
	self.x = Math.max(self.x,a.x);
	self.y = Math.max(self.y,a.y);
	return self;
};
Vector2.minWith = function(this1,a) {
	var self = this1;
	self.x = Math.min(self.x,a.x);
	self.y = Math.min(self.y,a.y);
	return self;
};
Vector2.projectOnto = function(this1,a) {
	var self = this1;
	var s = (self.x * a.x + self.y * a.y) / (a.x * a.x + a.y * a.y);
	var self1 = a;
	var self2 = self1;
	var value = self2.x;
	var self2 = self;
	self2.x = value;
	var self2 = self1;
	var value = self2.y;
	var self1 = self;
	self1.y = value;
	var self1 = self;
	self1.x *= s;
	self1.y *= s;
	return self;
};
Vector2.reflectBy = function(this1,normal) {
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var self_x = x;
	var self_y = y;
	var s = (self_x * normal.x + self_y * normal.y) / (normal.x * normal.x + normal.y * normal.y);
	var self1 = normal;
	var self2 = self1;
	var value = self2.x;
	self_x = value;
	var self2 = self1;
	var value = self2.y;
	self_y = value;
	self_x *= s;
	self_y *= s;
	self_x *= 2.0;
	self_y *= 2.0;
	var self1 = self;
	self1.x -= self_x;
	self1.y -= self_y;
	return self;
};
Vector2.copyTo = function(this1,target) {
	var self = this1;
	var self1 = self;
	var value = self1.x;
	var self1 = target;
	self1.x = value;
	var self1 = self;
	var value = self1.y;
	var self = target;
	self.y = value;
};
Vector2.copyToShape = function(this1,target) {
	var self = this1;
	target.x = self.x;
	target.y = self.y;
};
Vector2.copyFromShape = function(this1,source) {
	var self = this1;
	self.x = source.x;
	self.y = source.y;
};
Vector2.clone = function(this1) {
	var self = this1;
	var x = self.x;
	var y = self.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x;
	case 1:
		return self.y;
	default:
		throw haxe_Exception.thrown("Invalid element");
	}
};
Vector2.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x = value;
	case 1:
		return self.y = value;
	default:
		throw haxe_Exception.thrown("Invalid element");
	}
};
Vector2.applyNegate = function(this1) {
	var self = this1;
	self.x = -self.x;
	self.y = -self.y;
	return self;
};
Vector2.applyScalarFunc = function(this1,func) {
	var self = this1;
	var self1 = self;
	var value = func(self1.x);
	var self1 = self;
	self1.x = value;
	var self1 = self;
	var value = func(self1.y);
	var self1 = self;
	self1.y = value;
	return self;
};
Vector2.angleWith = function(this1,b) {
	var self = this1;
	var self1 = self;
	var self2 = b;
	return Math.acos((self.x * b.x + self.y * b.y) / (Math.sqrt(self1.x * self1.x + self1.y * self1.y) * Math.sqrt(self2.x * self2.x + self2.y * self2.y)));
};
Vector2.signedAngleWith = function(this1,b) {
	var self = this1;
	return -1;
};
Vector2.distanceTo = function(this1,b) {
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var self_x = x;
	var self_y = y;
	self_x -= b.x;
	self_y -= b.y;
	return Math.sqrt(self_x * self_x + self_y * self_y);
};
Vector2.normalize = function(this1) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self1 = self;
		self1.x /= length;
		self1.y /= length;
	}
	return self;
};
Vector2.normalizeTo = function(this1,newLength) {
	var self = this1;
	var self1 = self;
	var self2 = self1;
	var length = Math.sqrt(self2.x * self2.x + self2.y * self2.y);
	if(length > 0.0) {
		var self2 = self1;
		self2.x /= length;
		self2.y /= length;
	}
	var self1 = self;
	self1.x *= newLength;
	self1.y *= newLength;
	return self;
};
Vector2.clamp = function(this1,min,max) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length < min) {
		var self1 = self;
		var self2 = self1;
		var self3 = self2;
		var length1 = Math.sqrt(self3.x * self3.x + self3.y * self3.y);
		if(length1 > 0.0) {
			var self3 = self2;
			self3.x /= length1;
			self3.y /= length1;
		}
		var self2 = self1;
		self2.x *= min;
		self2.y *= min;
	} else if(length > max) {
		var self1 = self;
		var self2 = self1;
		var self3 = self2;
		var length = Math.sqrt(self3.x * self3.x + self3.y * self3.y);
		if(length > 0.0) {
			var self3 = self2;
			self3.x /= length;
			self3.y /= length;
		}
		var self2 = self1;
		self2.x *= max;
		self2.y *= max;
	}
	return self;
};
Vector2.rotate = function(this1,angle,pivot) {
	var self = this1;
	var cosAngle = Math.cos(angle);
	var sinAngle = Math.sin(angle);
	var dx = self.x;
	var dy = self.y;
	if(pivot != null) {
		dx = self.x - pivot.x;
		dy = self.y - pivot.y;
	}
	self.x = dx * cosAngle - dy * sinAngle;
	self.y = dx * sinAngle + dy * cosAngle;
	return self;
};
Vector2.rotateLeft = function(this1) {
	var self = this1;
	var newX = -self.y;
	self.y = self.x;
	self.x = newX;
	return self;
};
Vector2.rotateRight = function(this1) {
	var self = this1;
	var newX = self.y;
	self.y = -self.x;
	self.x = newX;
	return self;
};
Vector2.moveTo = function(this1,targetX,targetY,distance) {
	var disX = targetX - this1.x;
	var disY = targetY - this1.y;
	var disSq = disX * disX + disY * disY;
	if(disSq < distance * distance) {
		this1.x = targetX;
		this1.y = targetY;
		return true;
	} else {
		var dis = Math.sqrt(disSq);
		var dirX = disX / dis;
		var dirY = disY / dis;
		this1.x += dirX * distance;
		this1.y += dirY * distance;
		return false;
	}
};
Vector2.get_zero = function() {
	var x = 0.0;
	var y = 0.0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.get_xAxis = function() {
	var x = 1.0;
	var y = 0.0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.get_yAxis = function() {
	var x = 0.0;
	var y = 1.0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	return this1;
};
Vector2.get_length = function(this1) {
	var self = this1;
	return Math.sqrt(self.x * self.x + self.y * self.y);
};
Vector2.get_lengthSq = function(this1) {
	var self = this1;
	return self.x * self.x + self.y * self.y;
};
Vector2.get_angle = function(this1) {
	var self = this1;
	return Math.atan2(self.y,self.x);
};
Vector2.get_normal = function(this1) {
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self1 = self;
		self1.x /= length;
		self1.y /= length;
	}
	return self;
};
Vector2.get_rotatedLeft = function(this1) {
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	var newX = -self.y;
	self.y = self.x;
	self.x = newX;
	return self;
};
Vector2.get_rotatedRight = function(this1) {
	var self = this1;
	var self1 = self;
	var x = self1.x;
	var y = self1.y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	var self = this1;
	var newX = self.y;
	self.y = -self.x;
	self.x = newX;
	return self;
};
Vector2.set_angle = function(this1,angle) {
	var self = this1;
	var self1 = this1;
	var len = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	var y = len * Math.sin(angle);
	var self1 = self;
	self1.x = len * Math.cos(angle);
	self1.y = y;
	return angle;
};
var Emoticon = function(sprite,unicode) {
	this.sprite = sprite;
	this.character = unicode;
};
$hxClasses["Emoticon"] = Emoticon;
Emoticon.__name__ = "Emoticon";
Emoticon.prototype = {
	__class__: Emoticon
};
var XTextRender = function() { };
$hxClasses["XTextRender"] = XTextRender;
XTextRender.__name__ = "XTextRender";
XTextRender.textHeight = function(text,font,width) {
	if(width == null) {
		width = 9999999;
	}
	var font1 = BitmapText.getFont(font);
	var lineNumber = XTextRender.feedLineInformation(text,XTextRender.auxLines,font1,width);
	return lineNumber * font1.lineHeight;
};
XTextRender.calculateTextWidth = function(text,font,maxWidth) {
	if(maxWidth == null) {
		maxWidth = 9999999;
	}
	var font1 = BitmapText.getFont(font);
	var lineNumber = XTextRender.feedLineInformation(text,XTextRender.auxLines,font1,maxWidth);
	var width = 0;
	var _g = 0;
	var _g1 = lineNumber;
	while(_g < _g1) {
		var i = _g++;
		var value = XTextRender.auxLines[i];
		if(width < value.width) {
			width = value.width;
		}
	}
	return width;
};
XTextRender.textRectINCOMPLETE = function(rect,text,font) {
	var font1 = BitmapText.getFont(font);
	if(rect == null) {
		rect = XTextRender.aux;
	}
	var cursorX = 0;
	var cursorY = 0;
	var _g = 0;
	var _g1 = text.length;
	while(_g < _g1) {
		var i = _g++;
		var code = HxOverrides.cca(text,i);
		var letter = font1.letters.h[code];
		var x = cursorX + letter.xoffset;
		var y = cursorY + letter.yoffset;
		var w = letter.width;
		var h = letter.height;
	}
};
XTextRender.drawTextMultiLine = function(text,font,x,y,maxWidth,pivotx,pivoty,color,mask,alpha,emoticonLibrary) {
	if(alpha == null) {
		alpha = 255;
	}
	if(color == null) {
		color = -1;
	}
	if(pivoty == null) {
		pivoty = 0;
	}
	if(pivotx == null) {
		pivotx = 0;
	}
	var fontInfo = BitmapText.getFont(font);
	var lineNumber = XTextRender.feedLineInformation(text,XTextRender.auxLines,fontInfo,maxWidth);
	var cursorX = x;
	var cursorY = y - (lineNumber - 1) * fontInfo.lineHeight * pivoty;
	var _g = 0;
	var _g1 = lineNumber;
	while(_g < _g1) {
		var i = _g++;
		var line = XTextRender.auxLines[i];
		XTextRender.drawTextSingleLine(text,font,cursorX,cursorY,pivotx,pivoty,color,mask,line.start,line.end,alpha,emoticonLibrary);
		cursorY += fontInfo.lineHeight;
	}
};
XTextRender.drawTextSingleLine = function(text,font,x,y,pivotx,pivoty,color,mask,startIndex,finalIndex,alpha,emoticonLibrary) {
	if(alpha == null) {
		alpha = 255;
	}
	if(finalIndex == null) {
		finalIndex = -1;
	}
	if(startIndex == null) {
		startIndex = 0;
	}
	if(color == null) {
		color = -1;
	}
	if(pivoty == null) {
		pivoty = 0;
	}
	if(pivotx == null) {
		pivotx = 0;
	}
	if(finalIndex < 0) {
		finalIndex = text.length - 1;
	}
	var length = finalIndex + 1;
	var font1 = BitmapText.getFont(font);
	var cursorX = x;
	var cursorY = y;
	if(pivotx != 0 || pivoty != 0) {
		var width = 0;
		var _g = startIndex;
		var _g1 = length;
		while(_g < _g1) {
			var i = _g++;
			var code = HxOverrides.cca(text,i);
			var letter = font1.letters.h[code];
			if(letter != null) {
				if(i == text.length - 1) {
					width += letter.width + letter.xoffset;
				} else {
					width += letter.xadvance;
				}
			} else {
				var tmp = emoticonLibrary != null;
			}
		}
		cursorX = x - width * pivotx | 0;
		cursorY = y - font1.lineHeight * pivoty - 1 | 0;
	}
	var _g = startIndex;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var code = HxOverrides.cca(text,i);
		var letter = font1.letters.h[code];
		if(letter != null) {
			Renderer.drawScaledSubImage(font1.image,mask,letter.x,letter.y,letter.width,letter.height,cursorX + letter.xoffset,cursorY + letter.yoffset,letter.width,letter.height,color,alpha);
			cursorX += letter.xadvance;
		} else if(emoticonLibrary != null) {
			var emoji = emoticonLibrary.emoticonMap.h[code];
			if(emoji != null) {
				Renderer.drawSprite(emoji.sprite,mask,cursorX,cursorY + font1.lineHeight * 0.5,1,1,0,0.5,16777215,alpha);
				cursorX += emoji.sprite.rect.width + 1;
			}
		}
	}
};
XTextRender.feedLineInformation = function(text,lines,font,maxWidth) {
	if(maxWidth <= 0) {
		maxWidth = 9999999;
	}
	var line = 0;
	while(lines[line] == null) lines.push({ start : 0, width : 0, end : 0});
	lines[0].start = 0;
	var width = 0;
	var lastWordBreak = -1;
	var widthAtLastWordBreak = -1;
	var newLineInitialWidth = 0;
	var _g = 0;
	var _g1 = text.length;
	while(_g < _g1) {
		var i = _g++;
		var newLine = -1;
		if(HxOverrides.cca(text,i) == 32) {
			lastWordBreak = i;
			widthAtLastWordBreak = width;
		}
		if(HxOverrides.cca(text,i) == 10) {
			lines[line].end = i - 1;
			lines[line].width = width;
			newLine = i + 1;
		} else {
			var code = HxOverrides.cca(text,i);
			var letter = font.letters.h[code];
			if(letter != null) {
				if(i == text.length - 1) {
					width += letter.width + letter.xoffset;
				} else {
					width += letter.xadvance;
				}
			}
			lines[line].width = width;
			if(width >= maxWidth) {
				if(lastWordBreak >= 0) {
					lines[line].end = lastWordBreak - 1;
					newLine = lastWordBreak + 1;
					var widthOfLastWord = width - widthAtLastWordBreak;
					newLineInitialWidth = widthOfLastWord;
					lastWordBreak = -1;
				} else {
					lines[line].end = i - 1;
					newLine = i;
				}
				lines[line].width = widthAtLastWordBreak;
			}
		}
		if(newLine >= 0) {
			width = newLineInitialWidth;
			newLineInitialWidth = 0;
			++line;
			while(lines[line] == null) lines.push({ start : 0, width : 0, end : 0});
			lines[line].start = newLine;
			lines[line].width = newLineInitialWidth;
		}
	}
	lines[line].end = text.length - 1;
	return line + 1;
};
var BitmapText = function() { };
$hxClasses["BitmapText"] = BitmapText;
BitmapText.__name__ = "BitmapText";
BitmapText.loadFont = function(fontName,imageName,fontData) {
	var image = imageName;
	var data = fontData;
	var letters = new haxe_ds_IntMap();
	var x = Xml.parse(data.toString()).firstElement();
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	var xml = this1;
	var spaceWidth = 8;
	var chars = haxe_xml__$Access_NodeAccess.resolve(xml,"chars");
	var _g = 0;
	var _g1 = haxe_xml__$Access_NodeListAccess.resolve(chars,"char");
	while(_g < _g1.length) {
		var char = _g1[_g];
		++_g;
		var letter = { id : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"id")), x : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"x")), y : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"y")), width : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"width")), height : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"height")), xoffset : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"xoffset")), yoffset : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"yoffset")), xadvance : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"xadvance")), kernings : new haxe_ds_IntMap()};
		if(letter.id == BitmapText.spaceCharCode) {
			spaceWidth = letter.xadvance;
		}
		letters.h[letter.id] = letter;
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xml,"kernings")) {
		var kernings = haxe_xml__$Access_NodeAccess.resolve(xml,"kernings");
		var letter;
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess.resolve(kernings,"kerning");
		while(_g < _g1.length) {
			var kerning = _g1[_g];
			++_g;
			var key = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"first"));
			letter = letters.h[key];
			var this1 = letter.kernings;
			var key1 = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"second"));
			var value = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"amount"));
			this1.h[key1] = value;
		}
	}
	if(BitmapText.fontCache == null) {
		BitmapText.fontCache = new haxe_ds_StringMap();
	}
	var font = { size : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"info"),"size")), lineHeight : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"lineHeight")), spaceWidth : spaceWidth, image : image, letters : letters};
	BitmapText.fontCache.h[fontName] = font;
};
BitmapText.loadFontFnt = function(fontName,imageName,fontData) {
	var image = imageName;
	var data = fontData;
	var lines = data.split("\n");
	XTextFnt.letters = new haxe_ds_IntMap();
	var font = { size : -1, lineHeight : -1, spaceWidth : -1, image : image, letters : XTextFnt.letters};
	XTextFnt.currentFont = font;
	XTextFnt.currentFont.spaceWidth = 8;
	var _g_current = 0;
	var _g_array = lines;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		XTextFnt.readLine(value,font);
	}
	var font1 = font;
	if(BitmapText.fontCache == null) {
		BitmapText.fontCache = new haxe_ds_StringMap();
	}
	BitmapText.fontCache.h[fontName] = font1;
};
BitmapText.getFont = function(fontName) {
	return BitmapText.fontCache.h[fontName];
};
BitmapText.processFontFnt = function(name,image,data) {
	var lines = data.split("\n");
	XTextFnt.letters = new haxe_ds_IntMap();
	var font = { size : -1, lineHeight : -1, spaceWidth : -1, image : image, letters : XTextFnt.letters};
	XTextFnt.currentFont = font;
	XTextFnt.currentFont.spaceWidth = 8;
	var _g_current = 0;
	var _g_array = lines;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		XTextFnt.readLine(value,font);
	}
	var font1 = font;
	if(BitmapText.fontCache == null) {
		BitmapText.fontCache = new haxe_ds_StringMap();
	}
	BitmapText.fontCache.h[name] = font1;
};
BitmapText.processFont = function(name,image,data) {
	var letters = new haxe_ds_IntMap();
	var x = Xml.parse(data.toString()).firstElement();
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	var xml = this1;
	var spaceWidth = 8;
	var chars = haxe_xml__$Access_NodeAccess.resolve(xml,"chars");
	var _g = 0;
	var _g1 = haxe_xml__$Access_NodeListAccess.resolve(chars,"char");
	while(_g < _g1.length) {
		var char = _g1[_g];
		++_g;
		var letter = { id : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"id")), x : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"x")), y : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"y")), width : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"width")), height : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"height")), xoffset : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"xoffset")), yoffset : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"yoffset")), xadvance : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(char,"xadvance")), kernings : new haxe_ds_IntMap()};
		if(letter.id == BitmapText.spaceCharCode) {
			spaceWidth = letter.xadvance;
		}
		letters.h[letter.id] = letter;
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xml,"kernings")) {
		var kernings = haxe_xml__$Access_NodeAccess.resolve(xml,"kernings");
		var letter;
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess.resolve(kernings,"kerning");
		while(_g < _g1.length) {
			var kerning = _g1[_g];
			++_g;
			var key = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"first"));
			letter = letters.h[key];
			var this1 = letter.kernings;
			var key1 = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"second"));
			var value = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(kerning,"amount"));
			this1.h[key1] = value;
		}
	}
	if(BitmapText.fontCache == null) {
		BitmapText.fontCache = new haxe_ds_StringMap();
	}
	var font = { size : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"info"),"size")), lineHeight : Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"lineHeight")), spaceWidth : spaceWidth, image : image, letters : letters};
	BitmapText.fontCache.h[name] = font;
};
var XTextFnt = function() { };
$hxClasses["XTextFnt"] = XTextFnt;
XTextFnt.__name__ = "XTextFnt";
XTextFnt.processFont = function(name,image,data) {
	var lines = data.split("\n");
	XTextFnt.letters = new haxe_ds_IntMap();
	var font = { size : -1, lineHeight : -1, spaceWidth : -1, image : image, letters : XTextFnt.letters};
	XTextFnt.currentFont = font;
	XTextFnt.currentFont.spaceWidth = 8;
	var _g_current = 0;
	var _g_array = lines;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		XTextFnt.readLine(value,font);
	}
	return font;
};
XTextFnt.readLine = function(str,font) {
	str = StringTools.trim(str);
	var token = str.split(" ").shift();
	switch(token) {
	case "char":
		XTextFnt.readCharStr(str);
		break;
	case "chars":
		XTextFnt.readCharsStr(str);
		break;
	case "common":
		XTextFnt.readCommonStr(str);
		break;
	case "info":
		XTextFnt.readInfoStr(str);
		break;
	case "page":
		XTextFnt.readPagesStr(str);
		break;
	}
};
XTextFnt.readCharStr = function(str) {
	var tokens = str.split(" ");
	tokens.reverse();
	var letter = { id : 0, x : 0, y : 0, width : 0, height : 0, xoffset : 0, yoffset : 0, xadvance : 0, kernings : new haxe_ds_IntMap()};
	while(tokens.length > 0) {
		var t = tokens.pop();
		var datum = t.split("=");
		var data = datum[1];
		switch(datum[0]) {
		case "chnl":
			break;
		case "height":
			letter.height = Std.parseInt(data);
			break;
		case "id":
			letter.id = Std.parseInt(data);
			break;
		case "page":
			break;
		case "width":
			letter.width = Std.parseInt(data);
			break;
		case "x":
			letter.x = Std.parseInt(data);
			break;
		case "xadvance":
			letter.xadvance = Std.parseInt(data);
			break;
		case "xoffset":
			letter.xoffset = Std.parseInt(data);
			break;
		case "y":
			letter.y = Std.parseInt(data);
			break;
		case "yoffset":
			letter.yoffset = Std.parseInt(data);
			break;
		}
	}
	if(letter.id == BitmapText.spaceCharCode) {
		XTextFnt.currentFont.spaceWidth = letter.xadvance;
	}
	XTextFnt.currentFont.letters.h[letter.id] = letter;
};
XTextFnt.readCharsStr = function(str) {
};
XTextFnt.readPagesStr = function(str) {
};
XTextFnt.readCommonStr = function(str) {
	var tokens = str.split(" ");
	tokens.reverse();
	while(tokens.length > 0) {
		var t = tokens.pop();
		var datum = t.split("=");
		var data = datum[1];
		switch(datum[0]) {
		case "base":
			break;
		case "lineHeight":
			XTextFnt.currentFont.lineHeight = Std.parseInt(data);
			break;
		case "packed":
			break;
		case "pages":
			break;
		case "scaleH":
			break;
		case "scaleW":
			break;
		}
	}
};
XTextFnt.readInfoStr = function(str) {
	var tokens = str.split(" ");
	tokens.reverse();
	while(tokens.length > 0) {
		var t = tokens.pop();
		var datum = t.split("=");
		var data = datum[1];
		switch(datum[0]) {
		case "aa":
			break;
		case "bold":
			break;
		case "charset":
			break;
		case "face":
			break;
		case "italic":
			break;
		case "outline":
			break;
		case "padding":
			break;
		case "size":
			XTextFnt.currentFont.size = Std.parseInt(data);
			break;
		case "smooth":
			break;
		case "spacing":
			break;
		case "stretchH":
			break;
		case "unicode":
			break;
		}
	}
};
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.attributeMap.h);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var animation_AnimatorControl = function() {
	this.units = new PoolArray(animation_AnimatorControl.createAnimatorUnit);
	this.move = new animation_AnimatorMovementUtils(this);
};
$hxClasses["animation.AnimatorControl"] = animation_AnimatorControl;
animation_AnimatorControl.__name__ = "animation.AnimatorControl";
animation_AnimatorControl.createAnimatorUnit = function() {
	return new animation_AnimatorUnit();
};
animation_AnimatorControl.prototype = {
	update: function(milisecondsDelta) {
		var _g_current = 0;
		var _g_array = this.units.active;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var aUnit = _g1_value;
			var miliseconds = aUnit.milisecondsPassed += milisecondsDelta;
			var _g2_current = 0;
			var _g2_array = aUnit.keys;
			while(_g2_current < _g2_array.length) {
				var _g3_value = _g2_array[_g2_current];
				var _g3_key = _g2_current++;
				var keyType = _g3_key;
				var key = _g3_value;
				var value = -99999;
				if(key.frames.active.length > 0) {
					value = key.getValue(miliseconds);
				}
				if(value != -99999) {
					switch(keyType) {
					case animation_AnimatorConstants.KEY_X:
						var _g4_current = 0;
						var _g4_array = aUnit.elements;
						while(_g4_current < _g4_array.length) {
							var _g5_value = _g4_array[_g4_current];
							var _g5_key = _g4_current++;
							var index1 = _g5_key;
							var ele = _g5_value;
							var cy = ele.transform.get_centerY();
							ele.transform.centerIn(value,cy);
						}
						break;
					case animation_AnimatorConstants.KEY_Y:
						var _g4_current1 = 0;
						var _g4_array1 = aUnit.elements;
						while(_g4_current1 < _g4_array1.length) {
							var _g5_value1 = _g4_array1[_g4_current1];
							var _g5_key1 = _g4_current1++;
							var index2 = _g5_key1;
							var ele1 = _g5_value1;
							var cx = ele1.transform.get_centerX();
							ele1.transform.centerIn(cx,value);
						}
						break;
					}
				}
			}
			if(aUnit.followSpeed > 0) {
				var _g2_current1 = 0;
				var _g2_array1 = aUnit.elements;
				while(_g2_current1 < _g2_array1.length) {
					var _g3_value1 = _g2_array1[_g2_current1];
					var _g3_key1 = _g2_current1++;
					var index3 = _g3_key1;
					var value1 = _g3_value1;
					var followX = value1.transform.position.x;
					var followY = value1.transform.position.y;
					if(aUnit.followX != -99999) {
						followX = aUnit.followX;
					}
					if(aUnit.followY != -99999) {
						followY = aUnit.followY;
					}
					var this1 = value1.transform.position;
					var distance = aUnit.followSpeed * milisecondsDelta / 1000;
					var disX = followX - this1.x;
					var disY = followY - this1.y;
					var disSq = disX * disX + disY * disY;
					var tmp;
					if(disSq < distance * distance) {
						this1.x = followX;
						this1.y = followY;
						tmp = true;
					} else {
						var dis = Math.sqrt(disSq);
						var dirX = disX / dis;
						var dirY = disY / dis;
						this1.x += dirX * distance;
						this1.y += dirY * distance;
						tmp = false;
					}
					aUnit.followComplete = tmp;
				}
			}
		}
	}
	,clearAllAnimations: function(view) {
		var au = this.findActiveAnimationUnit(view);
		if(au == null) {
			return;
		}
		au.milisecondsPassed = 0;
		au.followSpeed = 0;
		au.followComplete = false;
		var _g_current = 0;
		var _g_array = au.keys;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.frames.freeAll();
		}
	}
	,isAnimating: function(view) {
		var au = this.findActiveAnimationUnit(view);
		if(au != null) {
			if(au.isFollowing()) {
				return true;
			}
			var _g_current = 0;
			var _g_array = au.keys;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(value.frames.hasActive()) {
					var _g2_current = 0;
					var _g2_array = value.frames.active;
					while(_g2_current < _g2_array.length) {
						var _g3_value = _g2_array[_g2_current];
						var _g3_key = _g2_current++;
						var index1 = _g3_key;
						var frame = _g3_value;
						if(frame.milisecond >= au.milisecondsPassed) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	,getOrCreateAnimationUnit: function(view) {
		var r = this.findActiveAnimationUnit(view);
		if(r != null) {
			return r;
		} else {
			var unit = this.units.activate();
			unit.elements.push(view);
			return unit;
		}
	}
	,findActiveAnimationUnit: function(view) {
		var _g_current = 0;
		var _g_array = this.units.active;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.elements.indexOf(view) != -1) {
				return value;
			}
		}
		return null;
	}
	,__class__: animation_AnimatorControl
};
var animation_AnimatorUnit = function() {
	this.followSpeed = 0;
	this.followY = -99999;
	this.followX = -99999;
	this.keys = [];
	this.milisecondsPassed = 0;
	this.elements = [];
	this.keys.push(new animation_AnimationKey());
	this.keys.push(new animation_AnimationKey());
};
$hxClasses["animation.AnimatorUnit"] = animation_AnimatorUnit;
animation_AnimatorUnit.__name__ = "animation.AnimatorUnit";
animation_AnimatorUnit.prototype = {
	feedTwoFrames: function(keyType,v1,v2,miliOffset1,miliOffset2) {
		var ak = this.keys[keyType];
		ak.setFreeFrame(v1 | 0,miliOffset1 + this.milisecondsPassed);
		ak.setFreeFrame(v2 | 0,miliOffset2 + this.milisecondsPassed);
	}
	,isFollowing: function() {
		if(this.followSpeed != 0) {
			return this.followComplete == false;
		} else {
			return false;
		}
	}
	,__class__: animation_AnimatorUnit
};
var animation_TimedValue = function() {
};
$hxClasses["animation.TimedValue"] = animation_TimedValue;
animation_TimedValue.__name__ = "animation.TimedValue";
animation_TimedValue.create = function() {
	return new animation_TimedValue();
};
animation_TimedValue.prototype = {
	__class__: animation_TimedValue
};
var animation_AnimationKey = function() {
	this.sortMethod = function(a,b) {
		return a.milisecond - b.milisecond;
	};
	this.frames = new PoolArray(animation_TimedValue.create);
};
$hxClasses["animation.AnimationKey"] = animation_AnimationKey;
animation_AnimationKey.__name__ = "animation.AnimationKey";
animation_AnimationKey.prototype = {
	setFreeFrame: function(v,time) {
		var f = this.frames.activate();
		f.milisecond = time;
		f.value = v;
		this.frames.active.sort(this.sortMethod);
	}
	,getValue: function(miliseconds,defaultValue) {
		if(defaultValue == null) {
			defaultValue = -99999;
		}
		var _g_current = 0;
		var _g_array = this.frames.active;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.milisecond == miliseconds) {
				return value.value;
			}
			if(value.milisecond > miliseconds) {
				if(index == 0) {
					return defaultValue;
				}
				if(index > 0) {
					var previousFrame = this.frames.active[index - 1];
					var normalizedTime = (miliseconds - previousFrame.milisecond) / (value.milisecond - previousFrame.milisecond);
					var value1 = (value.value - previousFrame.value) * normalizedTime + previousFrame.value;
					return value1 | 0;
				}
			}
		}
		return defaultValue;
	}
	,__class__: animation_AnimationKey
};
var animation_AnimatorControlUtility = function(control) {
	this._control = control;
};
$hxClasses["animation.AnimatorControlUtility"] = animation_AnimatorControlUtility;
animation_AnimatorControlUtility.__name__ = "animation.AnimatorControlUtility";
animation_AnimatorControlUtility.prototype = {
	__class__: animation_AnimatorControlUtility
};
var animation_AnimatorConstants = function() { };
$hxClasses["animation.AnimatorConstants"] = animation_AnimatorConstants;
animation_AnimatorConstants.__name__ = "animation.AnimatorConstants";
var animation_AnimatorMovementUtils = function(control) {
	var x = 0;
	var y = 0;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new Vector2Default(x,y);
	this.aux = this1;
	animation_AnimatorControlUtility.call(this,control);
};
$hxClasses["animation.AnimatorMovementUtils"] = animation_AnimatorMovementUtils;
animation_AnimatorMovementUtils.__name__ = "animation.AnimatorMovementUtils";
animation_AnimatorMovementUtils.__super__ = animation_AnimatorControlUtility;
animation_AnimatorMovementUtils.prototype = $extend(animation_AnimatorControlUtility.prototype,{
	moveAwayFrom: function(view,x,y,distance,miliseconds) {
		var unit = this._control.getOrCreateAnimationUnit(view);
		var radian = seedyrng_Seedy.random() * Math.PI * 2;
		var self = this.aux;
		self.x = distance;
		self.y = 0;
		var pivot = null;
		var self = this.aux;
		var cosAngle = Math.cos(radian);
		var sinAngle = Math.sin(radian);
		var dx = self.x;
		var dy = self.y;
		if(pivot != null) {
			dx = self.x - pivot.x;
			dy = self.y - pivot.y;
		}
		self.x = dx * cosAngle - dy * sinAngle;
		self.y = dx * sinAngle + dy * cosAngle;
		unit.feedTwoFrames(animation_AnimatorConstants.KEY_X,x,this.aux.x + x,0,miliseconds);
		unit.feedTwoFrames(animation_AnimatorConstants.KEY_Y,y,this.aux.y + y,0,miliseconds);
	}
	,moveTo: function(view,x,y,miliseconds,delay) {
		if(delay == null) {
			delay = 0;
		}
		var unit = this._control.getOrCreateAnimationUnit(view);
		var ix = view.transform.get_x() | 0;
		var iy = view.transform.get_y() | 0;
		unit.feedTwoFrames(animation_AnimatorConstants.KEY_X,ix,x,delay,miliseconds + delay);
		unit.feedTwoFrames(animation_AnimatorConstants.KEY_Y,iy,y,delay,miliseconds + delay);
	}
	,startFollowPosition: function(view,x,y,speed) {
		var unit = this._control.getOrCreateAnimationUnit(view);
		unit.followSpeed = speed;
		unit.followComplete = false;
		unit.followX = x;
		unit.followY = y;
	}
	,feedFollowPosition: function(view,x,y) {
		var unit = this._control.getOrCreateAnimationUnit(view);
		unit.followX = x;
		unit.followY = y;
	}
	,__class__: animation_AnimatorMovementUtils
});
var arcania_JsonInterpreter = function() { };
$hxClasses["arcania.JsonInterpreter"] = arcania_JsonInterpreter;
arcania_JsonInterpreter.__name__ = "arcania.JsonInterpreter";
arcania_JsonInterpreter.readChanges = function(dynamicChanges,signal) {
	if(signal == null) {
		signal = 1;
	}
	if(dynamicChanges == null) {
		return null;
	}
	var response = [];
	var access = dynamicChanges;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g1_value = _g_access[key];
		var _g1_key = key;
		var key1 = _g1_key;
		var value = _g1_value;
		var id = key1;
		var rc = new arcania_logic_ResourceChange(id,value * signal);
		response.push(rc);
	}
	return response;
};
arcania_JsonInterpreter.readBasic = function(basicDynamic) {
	var bd = new arcania_logic_BasicData(basicDynamic["id"],basicDynamic["name"]);
	if(Object.prototype.hasOwnProperty.call(basicDynamic,"max")) {
		var max = basicDynamic["max"];
		bd.max = max;
	}
	if(Object.prototype.hasOwnProperty.call(basicDynamic,"initial")) {
		bd.initialValue = basicDynamic["initial"];
	}
	bd.description = basicDynamic["desc"];
	bd.cost = arcania_JsonInterpreter.readChanges(basicDynamic["cost"],-1);
	bd.result = arcania_JsonInterpreter.readChanges(basicDynamic["result"],1);
	bd.requirements = arcania_JsonInterpreter.readRequirement(basicDynamic["require"]);
	bd.needs = arcania_JsonInterpreter.readRequirement(basicDynamic["need"]);
	bd.modPerAmount = arcania_JsonInterpreter.readMod(basicDynamic["mod"]);
	return bd;
};
arcania_JsonInterpreter.readSkills = function(json,actions,resources) {
	var output = [];
	if(json != null) {
		var master = JSON.parse(json);
		var _g = 0;
		while(_g < master.length) {
			var a = master[_g];
			++_g;
			var sd = new arcania_logic_SkillData();
			var skillBasic = arcania_JsonInterpreter.readBasic(a);
			sd.basicSkillData = skillBasic;
			var mainId = skillBasic.id;
			var mainN = skillBasic.name;
			var levelResource = new arcania_logic_BasicData(mainId + "-level",mainN);
			levelResource.max = 3;
			levelResource.regularRender = false;
			resources.push(levelResource);
			var xpResource = new arcania_logic_BasicData(mainId + "-xp",mainN + " xp");
			xpResource.requirements = [];
			levelResource.requirements = [];
			xpResource.requirements.push(arcania_logic_Requirement.createSimpleExistenceCondition(xpResource.id));
			levelResource.requirements.push(arcania_logic_Requirement.createSimpleExistenceCondition(levelResource.id));
			xpResource.regularRender = false;
			resources.push(xpResource);
			var acquireId = "" + mainId + "-acquire";
			var bd = new arcania_logic_BasicData(acquireId,"Acquire Skill: " + mainN);
			bd.max = 1;
			var ad = new arcania_logic_ActionData(bd);
			bd.cost = skillBasic.cost;
			bd.requirements = skillBasic.requirements;
			actions.push(ad);
			sd.actionAcquire = new arcania_logic_TargetId(bd.id);
			var bd1 = new arcania_logic_BasicData("" + mainId + "-study","Study: " + mainN);
			var ad1 = new arcania_logic_ActionData(bd1);
			bd1.boundSkillId = output.length;
			ad1.perpetual = true;
			ad1.duration = 3;
			bd1.result = arcania_JsonInterpreter.readChanges(JSON.parse("{\"" + xpResource.id + "\": 1}"),1);
			ad1.run = arcania_JsonInterpreter.readChanges(JSON.parse("{\"mental\": 1}"),-1);
			actions.push(ad1);
			sd.actionStudy = new arcania_logic_TargetId(bd1.id);
			bd1.requirements = [];
			arcania_JsonInterpreter.readRequirement(acquireId,bd1.requirements);
			sd.level = new arcania_logic_TargetId(levelResource.id);
			sd.xp = new arcania_logic_TargetId(xpResource.id);
			output.push(sd);
		}
	}
	return output;
};
arcania_JsonInterpreter.readActionsWithMaster = function(master,output) {
	if(output == null) {
		output = [];
	}
	var _g = 0;
	while(_g < master.length) {
		var a = master[_g];
		++_g;
		var action = new arcania_logic_ActionData(arcania_JsonInterpreter.readBasic(a));
		if(Object.prototype.hasOwnProperty.call(a,"duration")) {
			action.duration = a["duration"];
		}
		if(Object.prototype.hasOwnProperty.call(a,"perpetual")) {
			action.perpetual = a["perpetual"];
		}
		action.effect = arcania_JsonInterpreter.readChanges(a["effect"],1);
		action.run = arcania_JsonInterpreter.readChanges(a["run"],-1);
		output.push(action);
	}
	return output;
};
arcania_JsonInterpreter.readActions = function(json,output) {
	var master = JSON.parse(json);
	return arcania_JsonInterpreter.readActionsWithMaster(master,output);
};
arcania_JsonInterpreter.addToRequirement = function($require,req) {
	var _g_current = 0;
	var _g_array = arcania_logic_RelationshipComparison.comparisons;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var indexOf = $require.indexOf(value);
		if(indexOf >= 0) {
			var parts = $require.split(value);
			req.targetId = new arcania_logic_TargetId(parts[0]);
			req.relationship = value;
			req.targetNumber = Std.parseInt(parts[1]);
			return;
		}
	}
	req.targetId = new arcania_logic_TargetId($require);
	req.relationship = arcania_logic_RelationshipComparison.BIGGER;
	req.targetNumber = 0;
};
arcania_JsonInterpreter.readRequirement = function($require,reqs) {
	if($require == null) {
		return null;
	}
	if(reqs == null) {
		reqs = [];
	}
	var h = arcania_logic_LogicalOperatorString.map.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var key1 = _g1_key;
		var value = _g1_value;
		var indexOf = $require.indexOf(key1);
		if(indexOf >= 0) {
			if(reqs.length == 0) {
				reqs.push(new arcania_logic_Requirement());
			}
			var req = reqs[0];
			req.child1 = new arcania_logic_Requirement();
			var part1 = HxOverrides.substr($require,0,indexOf);
			var part2 = HxOverrides.substr($require,indexOf + 1,null);
			arcania_JsonInterpreter.addToRequirement(part1,req);
			arcania_JsonInterpreter.addToRequirement(part2,req.child1);
			req.logicalOperatorWithChildren = value;
			return reqs;
		}
	}
	var req = new arcania_logic_Requirement();
	arcania_JsonInterpreter.addToRequirement($require,req);
	reqs.push(req);
	return reqs;
};
arcania_JsonInterpreter.readBasicArray = function(jsonResources) {
	var res = [];
	if(jsonResources != null) {
		var master = JSON.parse(jsonResources);
		var _g_current = 0;
		var _g_array = master;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			res.push(arcania_JsonInterpreter.readBasic(value));
		}
	}
	return res;
};
arcania_JsonInterpreter.readMod = function(json) {
	if(json == null) {
		return null;
	}
	var mods = [];
	var access = json;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g1_value = _g_access[key];
		var _g1_key = key;
		var key1 = _g1_key;
		var value = _g1_value;
		var parts = key1.split(".");
		var type = arcania_logic_ModType.MAX;
		if(parts.length == 2) {
			if(parts[1] == "max") {
				type = arcania_logic_ModType.MAX;
			}
			if(parts[1] == "exponential_max_multiply") {
				type = arcania_logic_ModType.EXPONENTIAL_MAX_MULTIPLY;
			}
			if(parts[1] == "rate") {
				type = arcania_logic_ModType.RATE;
			}
			if(parts[1] == "result") {
				type = arcania_logic_ModType.RESULT;
			}
		} else {
			window.alert(Std.string("Unsupported mod format! " + key1));
		}
		var mod = new arcania_logic_Mod(type);
		mod.targetId = new arcania_logic_TargetId(parts[0]);
		mod.value = value;
		mods.push(mod);
	}
	return mods;
};
var arcania_JsonInterpreterProcedural = function() { };
$hxClasses["arcania.JsonInterpreterProcedural"] = arcania_JsonInterpreterProcedural;
arcania_JsonInterpreterProcedural.__name__ = "arcania.JsonInterpreterProcedural";
arcania_JsonInterpreterProcedural.readActions = function(json,output) {
	var master = JSON.parse(json);
	var resultReturn = [];
	var _g = 0;
	while(_g < master.length) {
		var a = master[_g];
		++_g;
		var nameBase = a["name"];
		var idBase = a["id"];
		var max = a["max"];
		var run = a["run"];
		var procCost = arcania_JsonInterpreterProcedural.loadProceduralList(a["proceduralcost"]);
		var procResult = arcania_JsonInterpreterProcedural.loadProceduralList(a["proceduralresult"]);
		var proceduralDuration = arcania_JsonInterpreterProcedural.loadProceduralAmount(a["proceduralduration"]);
		var _g1 = 0;
		var _g2 = max;
		while(_g1 < _g2) {
			var i = _g1++;
			var this1 = { };
			var action = this1;
			action["name"] = "" + Std.string(nameBase) + " " + (i + 1);
			action["id"] = "" + Std.string(idBase) + i;
			var previousId = "" + Std.string(idBase) + (i - 1);
			action["desc"] = a["desc"];
			action["run"] = run;
			action["max"] = 1;
			if(i == 0) {
				action["require"] = a["require"];
			} else {
				action["require"] = previousId;
			}
			var cost = arcania_JsonInterpreterProcedural.generateNextChangeArray(procCost,i);
			var result = arcania_JsonInterpreterProcedural.generateNextChangeArray(procResult,i);
			arcania_JsonInterpreterProcedural.generateNextValue(proceduralDuration,i);
			action["duration"] = proceduralDuration.runtimeCalculatedValue;
			action["cost"] = cost;
			action["result"] = result;
			resultReturn.push(action);
		}
		var json = JSON.stringify(resultReturn);
	}
	return arcania_JsonInterpreter.readActionsWithMaster(resultReturn,output);
};
arcania_JsonInterpreterProcedural.generateNextChangeArray = function(source,i) {
	var this1 = { };
	var da = this1;
	var h = source.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var id = _g1_key;
		var value = _g1_value;
		arcania_JsonInterpreterProcedural.generateNextValue(value,i);
		if(value.runtimeCalculatedValue > 0) {
			da[id] = value.runtimeCalculatedValue | 0;
		}
	}
	return da;
};
arcania_JsonInterpreterProcedural.generateNextValue = function(value,i) {
	if(value.delay == i) {
		value.runtimeCalculatedValue = value.initial;
	}
	if(value.delay < i) {
		if(value.add_delay < i) {
			value.runtimeCalculatedValue += value.add;
		}
		if(value.growth > 1) {
			value.runtimeCalculatedValue *= value.growth;
		}
	}
};
arcania_JsonInterpreterProcedural.loadProceduralList = function(arg0) {
	var map = new haxe_ds_StringMap();
	var access = arg0;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g1_value = _g_access[key];
		var _g1_key = key;
		var index = _g1_key;
		var d = _g1_value;
		var value = d;
		arcania_JsonInterpreterProcedural.loadProceduralAmount(value);
		map.h[index] = value;
	}
	return map;
};
arcania_JsonInterpreterProcedural.loadProceduralAmount = function(value) {
	if(value.add > 0 == false) {
		value.add = 0;
	}
	if(value.add_delay > 0 == false) {
		value.add_delay = 0;
	}
	if(value.growth > 1 == false) {
		value.growth = 1;
	}
	if(value.delay > 0 == false) {
		value.delay = 0;
	}
	return value;
};
var arcania_logic_BasicData = function(id,name) {
	this.initialValue = 0;
	this.max = -1;
	this.regularRender = true;
	this.tags = [];
	this.boundSkillId = -1;
	this.id = id;
	this.name = name;
};
$hxClasses["arcania.logic.BasicData"] = arcania_logic_BasicData;
arcania_logic_BasicData.__name__ = "arcania.logic.BasicData";
arcania_logic_BasicData.prototype = {
	addTag: function(arg0) {
		while(this.tags.length <= arg0.pos) this.tags.push(false);
		this.tags[arg0.pos] = true;
	}
	,hasAnyTag: function() {
		var _g_current = 0;
		var _g_array = this.tags;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value == true) {
				return true;
			}
		}
		return false;
	}
	,__class__: arcania_logic_BasicData
};
var arcania_logic_LogicalOperator = $hxEnums["arcania.logic.LogicalOperator"] = { __ename__:true,__constructs__:null
	,NONE: {_hx_name:"NONE",_hx_index:0,__enum__:"arcania.logic.LogicalOperator",toString:$estr}
	,AND: {_hx_name:"AND",_hx_index:1,__enum__:"arcania.logic.LogicalOperator",toString:$estr}
	,OR: {_hx_name:"OR",_hx_index:2,__enum__:"arcania.logic.LogicalOperator",toString:$estr}
	,XOR: {_hx_name:"XOR",_hx_index:3,__enum__:"arcania.logic.LogicalOperator",toString:$estr}
	,NOT: {_hx_name:"NOT",_hx_index:4,__enum__:"arcania.logic.LogicalOperator",toString:$estr}
};
arcania_logic_LogicalOperator.__constructs__ = [arcania_logic_LogicalOperator.NONE,arcania_logic_LogicalOperator.AND,arcania_logic_LogicalOperator.OR,arcania_logic_LogicalOperator.XOR,arcania_logic_LogicalOperator.NOT];
var arcania_logic_LogicalOperatorString = function() { };
$hxClasses["arcania.logic.LogicalOperatorString"] = arcania_logic_LogicalOperatorString;
arcania_logic_LogicalOperatorString.__name__ = "arcania.logic.LogicalOperatorString";
var arcania_logic_ResourceChange = function(id,amount) {
	this.id = new arcania_logic_TargetId(id);
	this.amount = amount;
};
$hxClasses["arcania.logic.ResourceChange"] = arcania_logic_ResourceChange;
arcania_logic_ResourceChange.__name__ = "arcania.logic.ResourceChange";
arcania_logic_ResourceChange.sync = function(cost,target) {
	if(cost == null) {
		return null;
	}
	var r = target;
	if(r == null) {
		r = [];
	}
	var _g_current = 0;
	var _g_array = cost;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		r.push(new arcania_logic_ResourceChange(value.id.id,value.amount));
	}
	return r;
};
arcania_logic_ResourceChange.prototype = {
	__class__: arcania_logic_ResourceChange
};
var arcania_logic_TargetId = function(id) {
	this.id = id;
};
$hxClasses["arcania.logic.TargetId"] = arcania_logic_TargetId;
arcania_logic_TargetId.__name__ = "arcania.logic.TargetId";
arcania_logic_TargetId.prototype = {
	__class__: arcania_logic_TargetId
};
var arcania_logic_RelationshipComparison = function() { };
$hxClasses["arcania.logic.RelationshipComparison"] = arcania_logic_RelationshipComparison;
arcania_logic_RelationshipComparison.__name__ = "arcania.logic.RelationshipComparison";
var arcania_logic_Requirement = function() {
};
$hxClasses["arcania.logic.Requirement"] = arcania_logic_Requirement;
arcania_logic_Requirement.__name__ = "arcania.logic.Requirement";
arcania_logic_Requirement.createSimpleExistenceCondition = function(arg0) {
	var req = new arcania_logic_Requirement();
	req.targetId = new arcania_logic_TargetId(arg0);
	req.relationship = arcania_logic_RelationshipComparison.BIGGER;
	req.targetNumber = 0;
	return req;
};
arcania_logic_Requirement.prototype = {
	__class__: arcania_logic_Requirement
};
var arcania_logic_SkillData = function() {
};
$hxClasses["arcania.logic.SkillData"] = arcania_logic_SkillData;
arcania_logic_SkillData.__name__ = "arcania.logic.SkillData";
arcania_logic_SkillData.prototype = {
	__class__: arcania_logic_SkillData
};
var arcania_logic_ModType = $hxEnums["arcania.logic.ModType"] = { __ename__:true,__constructs__:null
	,MAX: {_hx_name:"MAX",_hx_index:0,__enum__:"arcania.logic.ModType",toString:$estr}
	,EXPONENTIAL_MAX_MULTIPLY: {_hx_name:"EXPONENTIAL_MAX_MULTIPLY",_hx_index:1,__enum__:"arcania.logic.ModType",toString:$estr}
	,RESULT: {_hx_name:"RESULT",_hx_index:2,__enum__:"arcania.logic.ModType",toString:$estr}
	,RATE: {_hx_name:"RATE",_hx_index:3,__enum__:"arcania.logic.ModType",toString:$estr}
};
arcania_logic_ModType.__constructs__ = [arcania_logic_ModType.MAX,arcania_logic_ModType.EXPONENTIAL_MAX_MULTIPLY,arcania_logic_ModType.RESULT,arcania_logic_ModType.RATE];
var arcania_logic_Mod = function(modType) {
	this.modType = modType;
};
$hxClasses["arcania.logic.Mod"] = arcania_logic_Mod;
arcania_logic_Mod.__name__ = "arcania.logic.Mod";
arcania_logic_Mod.prototype = {
	__class__: arcania_logic_Mod
};
var arcania_logic_TrainingMod = function() {
	this.loop = false;
	this.mods = [];
};
$hxClasses["arcania.logic.TrainingMod"] = arcania_logic_TrainingMod;
arcania_logic_TrainingMod.__name__ = "arcania.logic.TrainingMod";
arcania_logic_TrainingMod.prototype = {
	__class__: arcania_logic_TrainingMod
};
var arcania_logic_ActionData = function(basicData) {
	this.perpetual = false;
	this.duration = 0;
	this.basic = basicData;
};
$hxClasses["arcania.logic.ActionData"] = arcania_logic_ActionData;
arcania_logic_ActionData.__name__ = "arcania.logic.ActionData";
arcania_logic_ActionData.prototype = {
	__class__: arcania_logic_ActionData
};
var arcania_logic_RuntimeUnit = function() {
	this.maxModMultiply = 1;
	this.maxMod = 0;
	this.rateModMili = 0;
	this.requestSpotlightForExternal = new reusablemodel_FrameProperty(0);
	this.externalSpotlight = 0;
	this.forceHide = false;
	this.positionInRuntimeTypeArray = 0;
	this.actionData = null;
};
$hxClasses["arcania.logic.RuntimeUnit"] = arcania_logic_RuntimeUnit;
arcania_logic_RuntimeUnit.__name__ = "arcania.logic.RuntimeUnit";
arcania_logic_RuntimeUnit.prototype = {
	getMax: function() {
		return this.basicData.max * this.maxModMultiply + this.maxMod | 0;
	}
	,isMaxed: function() {
		var m = this.getMax();
		if(m < 0) {
			return false;
		}
		return this.retentionData.amount >= m;
	}
	,__class__: arcania_logic_RuntimeUnit
};
var arcania_logic_SkillRuntime = function() {
};
$hxClasses["arcania.logic.SkillRuntime"] = arcania_logic_SkillRuntime;
arcania_logic_SkillRuntime.__name__ = "arcania.logic.SkillRuntime";
arcania_logic_SkillRuntime.prototype = {
	__class__: arcania_logic_SkillRuntime
};
var arcania_logic_RuntimeHolder = function() {
	this.events = [];
	this.searchMaps = [];
	this.fixedEventRuntime = [];
	this.resourceRuntime = [];
	this.actionRuntime = [];
	this.skillRuntime = [];
	this.unitArrays = [this.actionRuntime,this.resourceRuntime,this.fixedEventRuntime];
	var _g = 0;
	var _g1 = this.unitArrays.length;
	while(_g < _g1) {
		var i = _g++;
		this.searchMaps.push(new haxe_ds_StringMap());
	}
};
$hxClasses["arcania.logic.RuntimeHolder"] = arcania_logic_RuntimeHolder;
arcania_logic_RuntimeHolder.__name__ = "arcania.logic.RuntimeHolder";
arcania_logic_RuntimeHolder.prototype = {
	init: function(model) {
		var persistence = model.persistence;
		var actions = model.actions;
		var resources = model.resources;
		var map = this.searchMaps[0];
		var _g = 0;
		var _g1 = actions.length;
		while(_g < _g1) {
			var i = _g++;
			var runtimeUnit = new arcania_logic_RuntimeUnit();
			runtimeUnit.actionData = actions[i];
			runtimeUnit.basicData = actions[i].basic;
			runtimeUnit.retentionData = persistence.actions.h[runtimeUnit.basicData.id];
			if(runtimeUnit.retentionData == null) {
				runtimeUnit.retentionData = { amount : 0, progressMiliseconds : 0, seen : 0, rateProgressMicro : 0};
				var v = runtimeUnit.retentionData;
				persistence.actions.h[runtimeUnit.basicData.id] = v;
			}
			var tmp = runtimeUnit.retentionData.rateProgressMicro > 0 == false;
			this.actionRuntime.push(runtimeUnit);
			runtimeUnit.positionInRuntimeTypeArray = i;
			map.h[runtimeUnit.basicData.id] = runtimeUnit;
		}
		var basicArray = resources;
		var persistenceMap = persistence.resources;
		var runtimeArray = this.resourceRuntime;
		var map = this.searchMaps[1];
		this.readBasicArray(basicArray,persistenceMap,runtimeArray,map);
		this.readBasicArray(model.events,persistence.events,this.fixedEventRuntime,this.searchMaps[2]);
		var _g2_current = 0;
		var _g2_array = model.skills;
		while(_g2_current < _g2_array.length) {
			var _g3_value = _g2_array[_g2_current];
			var _g3_key = _g2_current++;
			var skillId = _g3_key;
			var skillD = _g3_value;
			var sr = new arcania_logic_SkillRuntime();
			sr.acquireSkill = this.findUnit(skillD.actionAcquire);
			sr.studySkill = this.findUnit(skillD.actionStudy);
			sr.level = this.findUnit(skillD.level);
			sr.xp = this.findUnit(skillD.xp);
			this.skillRuntime.push(sr);
		}
	}
	,findUnit: function(id) {
		var idS = id.id;
		return this.findUnitWithString(idS);
	}
	,findUnitWithString: function(idS) {
		var _g_current = 0;
		var _g_array = this.searchMaps;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var v = value.h[idS];
			if(v != null) {
				return v;
			}
		}
		haxe_Log.trace("Error: id not found " + idS,{ fileName : "Sources/arcania/logic/ArcaniaModel.hx", lineNumber : 136, className : "arcania.logic.RuntimeHolder", methodName : "findUnitWithString"});
		return null;
	}
	,readBasicArray: function(basicArray,persistenceMap,runtimeArray,map) {
		var _g = 0;
		var _g1 = basicArray.length;
		while(_g < _g1) {
			var i = _g++;
			var runtimeUnit = new arcania_logic_RuntimeUnit();
			runtimeUnit.basicData = basicArray[i];
			runtimeUnit.retentionData = persistenceMap.h[runtimeUnit.basicData.id];
			if(runtimeUnit.retentionData == null) {
				runtimeUnit.retentionData = { amount : runtimeUnit.basicData.initialValue, progressMiliseconds : 0, seen : 0, rateProgressMicro : 0};
				var v = runtimeUnit.retentionData;
				persistenceMap.h[runtimeUnit.basicData.id] = v;
			}
			var tmp = runtimeUnit.retentionData.rateProgressMicro > 0 == false;
			runtimeArray.push(runtimeUnit);
			map.h[runtimeUnit.basicData.id] = runtimeUnit;
		}
	}
	,__class__: arcania_logic_RuntimeHolder
};
var audio_SoundPlayer = function() {
	var this1 = new Array(300);
	this.loopingSFX = this1;
	this.randomPlaylistMode = false;
	this.currentMusic = -1;
	this.latestVolumeSent = -1;
	this.musicMultiplier = 5;
	this.sfxVolume = 100;
	this.musicVolume = 100;
	this.masterVolume = 100;
	this.playLists = [];
	this.currentPlayList = -1;
	this.queuedMusic = -1;
	var _g = 0;
	var _g1 = this.loopingSFX.length;
	while(_g < _g1) {
		var i = _g++;
		this.loopingSFX[i] = false;
	}
};
$hxClasses["audio.SoundPlayer"] = audio_SoundPlayer;
audio_SoundPlayer.__name__ = "audio.SoundPlayer";
audio_SoundPlayer.prototype = {
	registerPlaylist: function(playl) {
		this.playLists.push(playl);
		return this.playLists.length - 1;
	}
	,update: function(miliseconds) {
		if(this.queuedMusic >= 0) {
			if(CrossTarget.audioReady()) {
				this.playMusic(this.queuedMusic);
				this.queuedMusic = -1;
			}
		}
		if(this.calculateMusicVolume() != this.latestVolumeSent) {
			if(this.currentMusic >= 0) {
				CrossTarget.setMusicVolume(this.currentMusic,this.calculateMusicVolume());
			}
			this.latestVolumeSent = this.calculateMusicVolume();
		}
		if(CrossTarget.audioReady()) {
			if(this.currentPlayList >= 0 && CrossTarget.isMusicPlaying() == false) {
				if(this.randomPlaylistMode) {
					var playList = this.playLists[this.currentPlayList];
					var music = seedyrng_Seedy.choice(playList);
					this.playMusic(music);
				} else {
					var index = this.playLists[this.currentPlayList].indexOf(this.currentMusic);
					++index;
					if(this.playLists[this.currentPlayList].length <= index) {
						index = 0;
					}
					this.playMusic(this.playLists[this.currentPlayList][index]);
				}
			}
		}
	}
	,calculateMusicVolume: function() {
		var volTenThousand = this.masterVolume * this.musicMultiplier * this.musicVolume / 100;
		return volTenThousand | 0;
	}
	,loadMusicAndSoundEffectsFiles: function(musicFiles,soundEffectFiles) {
		CrossTarget.loadMusicAndSoundEffectFiles(musicFiles,soundEffectFiles);
	}
	,playMusic: function(musicIndex) {
		if(CrossTarget.audioReady()) {
			this.currentMusic = musicIndex;
			CrossTarget.playMusic(musicIndex,this.calculateMusicVolume());
		} else {
			this.queuedMusic = musicIndex;
		}
	}
	,playSfx: function(sfxIndex) {
		if(CrossTarget.audioReady()) {
			CrossTarget.playSfx(sfxIndex,this.masterVolume * this.sfxVolume | 0,false);
		}
	}
	,loopSfx: function(sfxIndex) {
		if(CrossTarget.audioReady() && !this.loopingSFX[sfxIndex]) {
			CrossTarget.playSfx(sfxIndex,this.masterVolume * this.sfxVolume | 0,true);
			this.loopingSFX[sfxIndex] = true;
		}
	}
	,stopLoopSfx: function(sfxIndex) {
		if(this.loopingSFX[sfxIndex]) {
			this.loopingSFX[sfxIndex] = false;
			CrossTarget.stopSfx(sfxIndex);
		}
	}
	,startPlaylist: function(pl) {
		this.currentPlayList = pl;
		var music = 0;
		if(this.randomPlaylistMode) {
			var playList = this.playLists[this.currentPlayList];
			music = seedyrng_Seedy.choice(playList);
		} else {
			seedyrng_Seedy.shuffle(this.playLists[this.currentPlayList]);
			music = this.playLists[this.currentPlayList][0];
		}
		this.playMusic(music);
	}
	,changePlaylistIfDifferent: function(playlist) {
		if(playlist != this.currentPlayList) {
			this.startPlaylist(playlist);
		}
	}
	,stopMusic: function() {
		this.currentPlayList = -1;
		this.currentMusic = -1;
		CrossTarget.stopMusic();
	}
	,__class__: audio_SoundPlayer
};
var autogen_AllMusic = function() { };
$hxClasses["autogen.AllMusic"] = autogen_AllMusic;
autogen_AllMusic.__name__ = "autogen.AllMusic";
var autogen_GriTxts = function() { };
$hxClasses["autogen.GriTxts"] = autogen_GriTxts;
autogen_GriTxts.__name__ = "autogen.GriTxts";
var autogen_LayoutIdsGen = function() { };
$hxClasses["autogen.LayoutIdsGen"] = autogen_LayoutIdsGen;
autogen_LayoutIdsGen.__name__ = "autogen.LayoutIdsGen";
var gribattle_BattleActorsView = function(view) {
	var _g = new haxe_ds_StringMap();
	_g.h["regen"] = autogen_GriPngs.leaf;
	_g.h["protect"] = autogen_GriPngs.shield;
	_g.h["haste"] = autogen_GriPngs.boot;
	this.buffToIcon = _g;
	this.actorStatInBattle = [null,null];
	this.debuffIconDefault = Sprite.create("arrowdown",15,22);
	this.buffIconDefault = Sprite.create("arrowup",15,22);
	this.buffIcons = [[],[]];
	this.hpBars = [];
	GRIViewUnitBase.call(this,view);
};
$hxClasses["gribattle.BattleActorsView"] = gribattle_BattleActorsView;
gribattle_BattleActorsView.__name__ = "gribattle.BattleActorsView";
gribattle_BattleActorsView.__super__ = GRIViewUnitBase;
gribattle_BattleActorsView.prototype = $extend(GRIViewUnitBase.prototype,{
	setup: function() {
		var hpBar = this._view.addBar(this.barXPosition(0),gribattle_BattleActorsView.HP_BAR_Y_POSITION,"hp","heroBattleHPbar",gribattle_BattleActorsView.BATTLE_HP_BAR_TAG[0],null,this.get_ui().screen,0.5,0.5,0,0);
		this.get_ui().hover.setHoverGeneric(hpBar.barBack,"Life",ActorViewLogic.AttributeExplanation.h["LifeMax"],null,"","");
		this.hpBars.push(hpBar);
		this.actorStatInBattle[0] = new ActorView(gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_LAYOUT[0]);
		this.actorStatInBattle[0].tagId = gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_TAG[0];
		var hpBar = this._view.addBar(this.barXPosition(1),gribattle_BattleActorsView.HP_BAR_Y_POSITION,"hp","heroBattleHPbar",gribattle_BattleActorsView.BATTLE_HP_BAR_TAG[1],null,this.get_ui().screen,0.5,0.5,0,0);
		this.get_ui().hover.setHoverGeneric(hpBar.barBack,"Life",ActorViewLogic.AttributeExplanation.h["LifeMax"],null,"","");
		this.hpBars.push(hpBar);
		this.actorStatInBattle[1] = new ActorView(gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_LAYOUT[1]);
		this.actorStatInBattle[1].tagId = gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_TAG[1];
	}
	,barXPosition: function(i) {
		var dis = 160;
		var offset = 1 - i;
		return dis - gribattle_BattleActorsView.HP_BAR_LENGTH / 2 - offset * (dis * 2);
	}
	,buffUpdate: function(actorPos,buffPos,duration,buffId,buff) {
		var icon = this.buffToIcon.h[buffId];
		if(icon == null) {
			if(buff == false) {
				icon = this.debuffIconDefault;
			} else {
				icon = this.buffIconDefault;
			}
		}
		var buffV = this.buffIcons[actorPos][buffPos];
		buffV.duration.text = "" + duration;
		buffV.icon.style.sprite = icon;
		buffV.icon.fitSprite();
		var color = GRIView.COLOR_BUFF;
		if(!buff) {
			color = GRIView.COLOR_DEBUFF;
		}
		buffV.icon.style.color = color;
		buffV.duration.style.color = color;
		if(Object.prototype.hasOwnProperty.call(GRIControl.buffToExplanation.h,buffId)) {
			var tmp = GRIControl.buffToExplanation.h[buffId];
			this.get_view().ui.hover.setHoverGeneric(buffV.icon,buffId,tmp);
		} else {
			this.get_view().ui.hover.setHoverGeneric(buffV.icon,buffId,"");
		}
	}
	,buffViewGeneration: function(actorPos,buffLen) {
		var buffArray = this.buffIcons[actorPos];
		var tag = gribattle_BattleActorsView.ACTOR_VIEWS_TAG[actorPos];
		while(buffArray.length < buffLen) {
			var buffTurn;
			var buffImage;
			buffTurn = this.get_view().addText("buffamnt" + buffArray.length,"99",GRIView.ARCHETYPE_SIMPLE,null,tag);
			var xText = this.barXPosition(actorPos) + 24 * buffArray.length + 12;
			this.get_uiCreation().addWithOffset(buffTurn,this.get_ui().screen,0.5,0.5,xText,gribattle_BattleActorsView.HP_BAR_Y_POSITION - 30);
			buffImage = this.get_uiCreation().createImageElement(autogen_GriPngs.boot);
			buffImage.tags.push(tag);
			this.get_uiCreation().addWithOffset(buffImage,this.get_ui().screen,0.5,0.5,xText,gribattle_BattleActorsView.HP_BAR_Y_POSITION - 30 + 15);
			buffArray.push({ icon : buffImage, duration : buffTurn, parent : null});
		}
		var _g_current = 0;
		var _g_array = buffArray;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			value.duration.visible = index < buffLen;
			value.icon.visible = index < buffLen;
		}
	}
	,__class__: gribattle_BattleActorsView
});
var gribattle_BattleControl = function(control) {
	GRIControlUnitBase.call(this,control);
};
$hxClasses["gribattle.BattleControl"] = gribattle_BattleControl;
gribattle_BattleControl.__name__ = "gribattle.BattleControl";
gribattle_BattleControl.__super__ = GRIControlUnitBase;
gribattle_BattleControl.prototype = $extend(GRIControlUnitBase.prototype,{
	setupView: function() {
		this.eventProcess = new gribattle_BattleControlEventProcess(this._control);
		this.eventProcess.battleControl = this;
		this.battleView = new gribattle_BattleMainView(this._control.view);
		this.battleView.setup();
	}
	,update: function(miliseconds) {
		this.battleView.update();
		this.get_view().uiCreation.singleTag(GRIView.tagTabBattle);
		var hero = this.get_bm().wdata.hero;
		var enemy = this.get_bm().wdata.enemy;
		this.eventProcess.update(miliseconds);
		this.eventProcess.processEvents();
		var ard = this._control.getAreaRenderFromRegionViewData();
		if(this.battleView.battleBackground != null) {
			if(ard != null && ard.backgroundSprite != null) {
				this.battleView.battleBackground.style.sprite = ard.backgroundSprite;
			} else {
				var rr = this._control.getRegionRenderFromRegionViewData();
				if(rr != null) {
					this.battleView.battleBackground.style.sprite = rr.backgroundSprite;
				}
			}
		}
		this.battleView.enemySprite.visible = enemy != null;
		if(enemy != null && enemy.attributesCalculated.h["Life"] <= 0) {
			this.battleView.enemySprite.visible = false;
		}
		var area = this.get_bm().wdata.battleArea;
		var region = this.get_bm().wdata.battleAreaRegion;
		var enemyNameLabel = this._control.getEnemyNameSimple(area,region);
		if(this._previousEnemyLabel != enemyNameLabel) {
			var imName = "enemy_" + StringTools.replace(enemyNameLabel.toLowerCase()," ","");
			var sprite = autogen_GriPngs.allSprites.h[imName];
			this._previousEnemyLabel = enemyNameLabel;
			this.battleView.changeEnemySprite(sprite);
		}
		var level = this.get_bm().wdata.hero.level;
		this.battleView.levelText.text = "Level " + level;
		if(this.get_bm().isXPCap() == false) {
			this.get_ui().updateBarValue(this.battleView.xpBar,hero.xp.value,hero.xp.calculatedMax);
		} else {
			this.battleView.xpBar.mainText.text = "MAXED";
		}
		if(this.get_bm().isLevelCap()) {
			this.battleView.xpBar.mainText.text = "max level";
		}
		this.battleView.xpBar.barBack.visible = !this.get_bm().isLevelCap();
		this.battleView.xpBar.barPortion.visible = !this.get_bm().isLevelCap();
		var actor = this.get_bm().wdata.hero;
		var rc = this.get_bm().GetAttribute(actor,"MPRechargeCount");
		var mp = this.get_bm().GetAttribute(actor,"MP");
		var mpmax = this.get_bm().GetAttribute(actor,"MPMax");
		var mpBar = this.battleView.mpBar;
		if(rc < 10000) {
			mp = rc;
			mpmax = 10000;
			this.get_view().ui.updateBarLeftText(mpBar,"charge");
			mpBar.barPortion.style.sprite = GRIView.SPRITE_PINKGRAD;
		} else {
			this.get_view().ui.updateBarLeftText(mpBar,"mp");
			mpBar.barPortion.style.sprite = GRIView.SPRITE_BLUEGRAD;
		}
		this.get_view().ui.updateBarValue(mpBar,mp,mpmax);
		var _g = 0;
		while(_g < 2) {
			var i = _g++;
			var actor = this.get_bm().wdata.hero;
			if(i == 1) {
				actor = this.get_bm().wdata.enemy;
			}
			if(actor != null) {
				var hp = this.get_bm().GetAttribute(actor,"Life");
				var hpMax = this.get_bm().GetAttribute(actor,"LifeMax");
				this.get_view().ui.updateBarValue(this.battleView.actorsView.hpBars[i],hp,hpMax);
				this.battleView.actorsView.buffViewGeneration(i,actor.buffs.length);
				var _g_current = 0;
				var _g_array = actor.buffs;
				while(_g_current < _g_array.length) {
					var _g1_value = _g_array[_g_current];
					var _g1_key = _g_current++;
					var index = _g1_key;
					var value = _g1_value;
					this.battleView.actorsView.buffUpdate(i,index,value.duration,value.uniqueId,!value.debuff);
				}
			} else {
				this.battleView.actorsView.buffViewGeneration(i,0);
			}
			this.get_view().ui.tagVisibility(gribattle_BattleActorsView.BATTLE_HP_BAR_TAG[i],actor != null);
			if(actor == this.get_bm().wdata.enemy) {
				var tmp = actor != null && actor.attributesCalculated.h["Life"] > 0;
				this.get_view().ui.tagVisibility(this.battleView.actorsView.actorStatInBattle[i].tagId,tmp);
			}
			ActorViewLogic.feed(actor,this.battleView.actorsView.actorStatInBattle[i],this.get_view(),null,false,this.get_bm().statsToShowActors[i],null,-1,null,false,"main14");
		}
		this.battleView.setView.highlight(this.get_bm().wdata.hero.chosenEquipSet);
		var action = this.get_bm().wdata.playerActions.h["equipset_menu"];
		this.get_view().ui.tagVisibility(GRISetView.SETVIEWTAG,action.visible);
		var hoverActorView = null;
		var actorHover = null;
		var header = null;
		var changeSet = -1;
		var direction = Direction.WEST;
		var heroElement = this.battleView.heroElement;
		if(heroElement.hovered.state && this.get_view().ui.isVisible(heroElement)) {
			direction = Direction.EAST;
			hoverActorView = heroElement;
			actorHover = this.get_bm().wdata.hero;
			header = Local.getString("PLAYER STATS");
		}
		var enemySprite = this.battleView.enemySprite;
		enemySprite.hoverable = true;
		if(enemySprite.hovered.state && this.get_view().ui.isVisible(enemySprite)) {
			hoverActorView = this.battleView.enemySprite;
			actorHover = this.get_bm().wdata.enemy;
			header = Local.getString("ENEMY STATS");
		}
		var setView = this.battleView.setView;
		var _g1_current = 0;
		var _g1_array = setView.buttons;
		while(_g1_current < _g1_array.length) {
			var _g2_value = _g1_array[_g1_current];
			var _g2_key = _g1_current++;
			var index = _g2_key;
			var value = _g2_value;
			if(value.hovered.state) {
				direction = Direction.NORTH;
				hoverActorView = value;
				actorHover = this.get_bm().wdata.hero;
				changeSet = index;
			}
		}
		this.get_view().ui.tagVisibility(GRIView.TAG_HOVER_ACTOR,hoverActorView != null);
		if(hoverActorView != null && actorHover != null) {
			this.get_view().uiCreation.tags.length = 0;
			this.get_view().uiCreation.activeLayer = GRIView.LAYER_HOVER;
			if(changeSet >= 0) {
				ActorViewLogic.feed(actorHover,this.get_view().actorHoverView,this.get_view(),null,true,null,null,changeSet,this.get_battleManager());
				var after = this.get_battleManager().getStatsIfSet(actorHover,changeSet);
				ActorViewLogic.feed(actorHover,this.get_view().actorHoverView,this.get_view(),header,true,null,after,changeSet,this.get_battleManager());
			} else {
				ActorViewLogic.feed(actorHover,this.get_view().actorHoverView,this.get_view(),header,true,null,null);
			}
			this.get_view().ui.genUI.layoutAsHover(hoverActorView,GRIView.LAYOUT_HOVER_ACTOR,direction);
			this.get_view().uiCreation.activeLayer = GRIView.LAYER_DEFAULT;
		}
		var heroElement = this.battleView.heroElement;
		var text = "";
		var skel = this.battleView.heroSkeleton;
		skel.autoSpriteAlpha = 255;
		var sleepAnim = skel.getCurrentAnimation() == "sleep";
		var dyingAnim = skel.getCurrentAnimation() == "hurt";
		if(this.get_bm().wdata.sleeping) {
			text = "REST";
			if(!sleepAnim) {
				skel.startAnimation("sleep",true);
			}
		} else if(sleepAnim) {
			skel.startAnimation("idle",true);
		}
		if(this.get_bm().wdata.recovering) {
			text = "RECOVER";
			if(dyingAnim == false && skel.getCurrentAnimation() != "hit") {
				skel.startAnimation("hurt",true);
			}
		} else if(dyingAnim) {
			skel.startAnimation("idle",true);
		}
		heroElement.text = text;
		var _g1_current = 0;
		var _g1_array = this.get_ui().dataEvents;
		while(_g1_current < _g1_array.length) {
			var _g2_value = _g1_array[_g1_current];
			var _g2_key = _g1_current++;
			var index = _g2_key;
			var value = _g2_value;
			if(value.stringData == gribattle_BattleMainView.HERO_ELEMENT_ID) {
				if(this.get_bm().wdata.recovering == false) {
					this.get_bm().sleepToggle();
				}
			}
		}
		var musicPlaying = true;
		if(this._control.storyControl.state == StoryControlState.STORY) {
			musicPlaying = false;
		}
		if(musicPlaying) {
			var ad = this.get_battleManager().getAreaData();
			var rd = this.get_battleManager().getCurrentRegion();
			var playlist = this._control.griSounds.battlePlaylist;
			if(rd.type == RegionType.CHALLENGE) {
				playlist = this._control.griSounds.challengePlaylist;
			} else if(rd.type == RegionType.SEMIPROCEDURAL) {
				if(ad != null && ad.enemy != null && ad.enemy.nEnemies == 1) {
					playlist = this._control.griSounds.bossPlaylist;
				}
			} else if(this.get_battleManager().wdata.necessaryToKillInArea <= 3) {
				playlist = this._control.griSounds.bossPlaylist;
			}
			this._control.griSounds.soundPlayer.changePlaylistIfDifferent(playlist);
		} else {
			this._control.griSounds.soundPlayer.stopMusic();
		}
		var loopSound = -1;
		if(this.get_battleManager().wdata.recovering && musicPlaying) {
			loopSound = autogen_AllSfx.battle_sfx_recovery;
		} else {
			this._control.griSounds.soundPlayer.stopLoopSfx(autogen_AllSfx.battle_sfx_recovery);
		}
		if(this.get_battleManager().wdata.sleeping && musicPlaying) {
			loopSound = autogen_AllSfx.skills_sfx_skill_priest;
		} else {
			this._control.griSounds.soundPlayer.stopLoopSfx(autogen_AllSfx.skills_sfx_skill_priest);
		}
		if(loopSound >= 0) {
			this._control.griSounds.soundPlayer.loopSfx(loopSound);
		}
	}
	,setupBattleButtons: function() {
		var _gthis = this;
		var createButtonFromAction = function(actionId,label,buttontype,layoutid,warning,button,tag,cursorGroup) {
			if(button == null) {
				button = -1;
			}
			if(buttontype == null) {
				buttontype = "mainbutton";
			}
			if(cursorGroup == null) {
				cursorGroup = _gthis.get_view().mainCursorGroup;
			}
			var element = _gthis.get_view().addButton(actionId,label,buttontype,layoutid,tag,cursorGroup);
			if(button >= 0) {
				_gthis.get_view().ui.keyboardManager.buttonPressToElementTrigger.h[button] = element;
			}
			_gthis._control.eventToAction.h[actionId] = actionId;
			if(warning != null) {
				_gthis._control.eventToWarning.h[actionId] = warning;
			}
			return element;
		};
		this.get_view().sleepButton = createButtonFromAction("sleep","Sleep",GRIView.ARCHETYPE_BUTTON_SMALL,gribattle_BattleMainView.LOWERBUTTON_LAYOUT,null,-1,null,this.get_view().lowerCursorGroup);
		this.get_view().mainCursorGroup.avoidFirstElement.push(this.get_view().sleepButton);
		this.get_view().ui.hover.setHoverGeneric(this.get_view().sleepButton,"Nap / Wake up","Recover your HP. If you are fighting an elite enemy, it can also be used to run away.");
		this._control.eventToAction.h["repeat"] = "repeat";
		var prestigeWarn = "Your XP gains will increase by a small amount" + ". \nYou will keep all permanent stat bonuses. \n\nYou will go back to Level 1. \nYour progress in all regions will be reset. \nAll that is not equipped will be lost. \nAll that is equipped will lose strength.";
		createButtonFromAction("prestige","Soul Crush",GRIView.ARCHETYPE_BUTTON_SMALL,"subbuttons",{ title : "Soul Crush", description : prestigeWarn, buttonYes : "Soul Crush", buttonFalse : "Cancel"},-1,null,this.get_view().upperCursorGroup);
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			var skillSlotId = i;
			var bid = "battleaction_" + i;
			var b = createButtonFromAction(bid,"",GRIView.ARCHETYPE_BUTTON_BATTLE_SKILL,autogen_LayoutIdsGen.NEOBATTLE_BUTTONS,null,GRIButtons.SKILL_BUTTON_1 + i,GRIView.TAG_BATTLE_BUTTON);
			b.data.soundData = -99999;
			var icon = this.get_view().uiCreation.createImageElement(autogen_GriPngs.skillScure,b.transform.size.x - 6,b.transform.size.y - 6);
			icon.tags.push(GRIView.TAG_BATTLE_BUTTON);
			this.get_view().uiCreation.addWithOffset(icon,b,0.5,0.5,0,0,false,true);
			icon.styleDisabled = icon.style.clone();
			icon.styleDisabled.color = GRIView.COLOR_DISABLED_BUTTON;
			icon.managedState = false;
			icon.style.color = 10066329;
			icon.styleSelected = icon.style.clone();
			icon.styleSelected.color = 16777215;
			icon.styleHover = icon.styleSelected.clone();
			icon.styleHover.color = 16777215;
			var mpT = this.get_view().addText("","mp",GRIView.ARCHETYPE_SIMPLE,null,GRIView.TAG_BATTLE_BUTTON);
			var self = mpT.textPivot;
			self.x = 0.5;
			self.y = 0;
			this.get_view().uiCreation.addWithOffset(mpT,b,0.5,0,0,3,false,true);
			mpT.managedState = false;
			var icon1 = mpT;
			icon1.styleDisabled = icon1.style.clone();
			icon1.styleDisabled.color = GRIView.COLOR_DISABLED_BUTTON;
			icon1.styleSelected = icon1.style.clone();
			icon1.styleSelected.color = GRIView.COLOR_TEXT_ACTION_HOVER;
			icon1.styleHover = icon1.styleSelected.clone();
			icon1.styleHover.color = GRIView.COLOR_TEXT_ACTION_HOVER;
		}
		var tmp = this.get_view();
		this.get_view().battleTabSteamButton = tmp.addButton(GRIViewTitle.DATA_STEAM,"Get full version","",GRIView.LAYOUT_MAIN_BATTLE_BUTTON,null,this.get_view().mainCursorGroup);
		this.get_view().battleTabSteamButton.visible = false;
		var tmp = this.get_view();
		this.get_view().battleTabCharaChangeButton = tmp.addButton(GRIViewTitle.DATA_CONTINUE,"Play as Lu","",GRIView.LAYOUT_MAIN_BATTLE_BUTTON,null,this.get_view().mainCursorGroup);
		this.get_view().battleTabCharaChangeButton.data.intData = 1;
		this.get_view().battleTabCharaChangeButton.visible = false;
	}
	,__class__: gribattle_BattleControl
});
var gribattle_BattleControlEventProcess = function(control) {
	this.damageEffectEnemyTimer = -1;
	this.damageEffectEnemyCounter = 0;
	GRIControlUnitBase.call(this,control);
};
$hxClasses["gribattle.BattleControlEventProcess"] = gribattle_BattleControlEventProcess;
gribattle_BattleControlEventProcess.__name__ = "gribattle.BattleControlEventProcess";
gribattle_BattleControlEventProcess.__super__ = GRIControlUnitBase;
gribattle_BattleControlEventProcess.prototype = $extend(GRIControlUnitBase.prototype,{
	update: function(delta) {
		if(this.damageEffectEnemyTimer > 0) {
			this.damageEffectEnemyTimer -= delta;
			if(this.damageEffectEnemyTimer <= 0) {
				this.damageEffectEnemyCounter = 0;
			}
		}
	}
	,processEvents: function() {
		var battleView = this.battleControl.battleView;
		var yOffHero = -30 * this.battleControl.battleView.heroSkeleton.yAutoSpriteScale;
		var _g_current = 0;
		var _g_array = this.get_battleManager().events;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var e = value;
			var data = e.data;
			var dataString = e.dataString;
			var event = e;
			if(e.type == EventTypes.ActorAppear) {
				this.battleControl.battleView.enemySkeleton.startAnimation("appear");
			}
			if(e.type == EventTypes.ActorLevelUp) {
				this.get_view().griEffects.showEffectInSkeleton(this.battleControl.battleView.heroSkeleton,this.get_view().griEffects.levelupEffect,"level_up",0,yOffHero);
			}
			if(event.type == EventTypes.GetXP) {
				this.get_view().griEffects.showXP(data,this.battleControl.battleView.enemySprite,dataString);
			}
			if(e.type == EventTypes.ActorDead) {
				if(e.target != null) {
					if(e.target.type == 0) {
						this.get_view().griEffects.showEffect(battleView.heroElement,this.get_view().griEffects.bloodEffect,"splatter");
					} else {
						this.get_view().griEffects.showEffect(battleView.enemySprite,this.get_view().griEffects.bloodEffect,"splatter");
					}
				}
			}
			if(e.type == EventTypes.heal) {
				this.get_view().griEffects.showText("+" + e.data,battleView.heroElement);
				var skelHit = this.battleControl.battleView.heroSkeleton;
				this.get_view().griEffects.showEffectInSkeleton(skelHit,this.get_view().griEffects.hitEffect,"sps_heal",0,yOffHero,2,2);
				this._control.griSounds.soundPlayer.playSfx(autogen_AllSfx.skills_sfx_skill_heal);
			}
			if(e.type == EventTypes.BuffRefresh) {
				var animName = "sps_buff";
				var sfx = autogen_AllSfx.skills_sfx_skill_haste;
				if(e.data == BattleConstants.DEBUFF) {
					animName = "sps_debuff";
					sfx = autogen_AllSfx.skills_sfx_skill_debuffer;
				}
				this._control.griSounds.soundPlayer.playSfx(sfx);
				if(e.target.type == 0) {
					var skelHit1 = this.battleControl.battleView.heroSkeleton;
					this.get_view().griEffects.showEffectInSkeleton(skelHit1,this.get_view().griEffects.hitEffect,animName,0,yOffHero,2,2);
				} else {
					var enemySprite = this.battleControl.battleView.enemySprite;
					this.get_view().griEffects.showHitEffect(enemySprite,animName,2,2);
				}
			}
			if(e.type == EventTypes.EquipDrop) {
				var finalX = this.get_view().tabEquipButton.transform.get_centerX();
				var finalY = this.get_view().tabEquipButton.transform.get_centerY();
				var startX = battleView.enemySprite.transform.get_centerX();
				var startY = battleView.enemySprite.transform.get_centerY();
				this.get_view().simpleMoveEffects.startDropAndCollection(autogen_GriPngs.loot_bag,DropAndCollectConfiguration.DEFAULT_VALUE,startX,startY,finalX,finalY);
				this._control.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_get_loot);
			}
			if(e.type == EventTypes.ActorAttack) {
				var hurtSound = autogen_AllSfx.battle_sfx_enemy_get_hurt;
				var tmp = seedyrng_Seedy.random() > 0.4;
				var attackSound = -1;
				if(e.target.type == 0) {
					hurtSound = autogen_AllSfx.battle_sfx_hero_hurt;
					var enemySprite1 = this.battleControl.battleView.enemySprite;
					this.battleControl.battleView.enemySkeleton.startAnimation("attack");
					var skelHit2 = this.battleControl.battleView.heroSkeleton;
					skelHit2.startAnimation("hit",true);
					skelHit2.queueAnimation("idle",true);
					this.get_view().griEffects.showEffectInSkeleton(skelHit2,this.get_view().griEffects.hitEffect,"hit_animation3",0,yOffHero,0.208984375,0.208984375);
					this.get_view().griEffects.showDamageNumber(e.data,null,skelHit2,0,yOffHero);
					if(e.dataString != null) {
						this.get_view().griEffects.showText(e.dataString,enemySprite1);
					}
					if(this.get_bm().isHeroAlive() == false) {
						this.get_view().griEffects.showEffect(battleView.heroElement,this.get_view().griEffects.bloodEffect,"splatter");
						this.get_view().griEffects.showEffectInList(battleView.heroElement,this.get_view().griEffects.bloodSplatters,this.get_view().griEffects.bloodSplattersAnims,50);
					}
				} else {
					attackSound = autogen_AllSfx.battle_sfx_slash;
					var enemySprite2 = this.battleControl.battleView.enemySprite;
					this.battleControl.battleView.enemySkeleton.startAnimation("hit");
					this.damageEffectEnemyCounter++;
					this.damageEffectEnemyTimer = gribattle_BattleControlEventProcess.damageEffectEnemyTimer_duration;
					if(this.damageEffectEnemyCounter > 1) {
						var x = 20;
						var y = 0;
						if(y == null) {
							y = 0;
						}
						if(x == null) {
							x = 0;
						}
						var self_x = x;
						var self_y = y;
						var tmp1 = this.damageEffectEnemyCounter == 1;
						var angle = this.damageEffectEnemyCounter * 60;
						var pivot = null;
						var cosAngle = Math.cos(angle);
						var sinAngle = Math.sin(angle);
						var dx = self_x;
						var dy = self_y;
						if(pivot != null) {
							dx = self_x - pivot.x;
							dy = self_y - pivot.y;
						}
						self_x = dx * cosAngle - dy * sinAngle;
						self_y = dx * sinAngle + dy * cosAngle;
						this.get_view().griEffects.showDamageNumber(e.data,this.battleControl.battleView.enemySprite,null,self_x,self_y);
					} else {
						this.get_view().griEffects.showDamageNumber(e.data,this.battleControl.battleView.enemySprite);
					}
					var anim = "attack";
					var hitAnim = "hit_animation3";
					var scaleX = 0.208984375;
					var scaleY = 0.208984375;
					if(e.dataString3 != null) {
						var anim3 = GRIViewSkill.SKILL_TO_HIT_EFFECT_ANIMATION.h[e.dataString3];
						if(anim3 != null) {
							hitAnim = anim3;
							scaleX = 2;
							scaleY = 2;
						}
						var anim2 = GRIViewSkill.SKILL_TO_ATTACK_ANIMATION.h[e.dataString3];
						if(anim2 != null) {
							anim = anim2;
						}
						if(Object.prototype.hasOwnProperty.call(GRIViewSkill.SKILL_TO_SFX.h,e.dataString3)) {
							attackSound = GRIViewSkill.SKILL_TO_SFX.h[e.dataString3];
						}
					}
					if(anim == "attack") {
						gribattle_BattleControlEventProcess.static_attack_aux++;
						gribattle_BattleControlEventProcess.static_attack_aux %= 3;
						if(gribattle_BattleControlEventProcess.static_attack_aux > 0) {
							anim += gribattle_BattleControlEventProcess.static_attack_aux + 1;
						}
					}
					this.get_view().griEffects.showHitEffect(enemySprite2,hitAnim,scaleX,scaleY);
					this.battleControl.battleView.heroSkeleton.startAnimation(anim,true);
					this.battleControl.battleView.heroSkeleton.queueAnimation("idle",true);
					if(e.dataString != null) {
						this.get_view().griEffects.showText(e.dataString,battleView.heroElement);
					}
					if(e.data2 > 0) {
						this.get_view().griEffects.showDamageNumber(e.data2,battleView.heroElement,null,null,null,"Blood");
					}
					if(this.get_bm().hasEnemyAlive() == false) {
						this.get_view().griEffects.showEffect(enemySprite2,this.get_view().griEffects.bloodEffect,"splatter");
						this.get_view().griEffects.showEffectInList(enemySprite2,this.get_view().griEffects.bloodSplatters,this.get_view().griEffects.bloodSplattersAnims,60);
						this._control.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_enemy_die);
					}
				}
				if(attackSound >= 0) {
					this._control.griSounds.soundPlayer.playSfx(attackSound);
				}
				this._control.griSounds.soundPlayer.playSfx(hurtSound);
			}
		}
	}
	,__class__: gribattle_BattleControlEventProcess
});
var gribattle_BattleMainView = function(view) {
	GRIViewUnitBase.call(this,view);
};
$hxClasses["gribattle.BattleMainView"] = gribattle_BattleMainView;
gribattle_BattleMainView.__name__ = "gribattle.BattleMainView";
gribattle_BattleMainView.__super__ = GRIViewUnitBase;
gribattle_BattleMainView.prototype = $extend(GRIViewUnitBase.prototype,{
	update: function() {
		var X_ACTOR_DISTANCE = 177;
		var Y_ACTOR_DISTANCE_FEET = 60;
		var self = this.battleBackground.transform.size;
		self.x = Renderer.width;
		self.y = Renderer.height - this.blackStripe.transform.size.y;
		if(this.get_view().currentTab != GRIView.tagTabBattle) {
			var self = this.battleBackground.transform.size;
			self.x = 0;
			self.y = 0;
		}
		this.enemySprite.fitSprite();
		var fh = this.enemySprite.transform;
		var self = fh.size;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x *= 2;
		self.y *= 2;
		fh.size = self;
		this.enemySprite.transform.size.x *= -1;
		var self = this.enemySprite.transform.position;
		self.x = Renderer.width / 2 - this.enemySprite.transform.size.x / 2 + X_ACTOR_DISTANCE;
		self.y = Renderer.height / 2 - this.enemySprite.transform.size.y + Y_ACTOR_DISTANCE_FEET;
		this.heroSkeleton.xAutoSpriteOffset = Renderer.width / 2 - X_ACTOR_DISTANCE | 0;
		this.heroSkeleton.yAutoSpriteOffset = Renderer.height / 2 + Y_ACTOR_DISTANCE_FEET | 0;
		this.heroElement.transform.setPositionWithPivot(this.heroSkeleton.xAutoSpriteOffset,this.heroSkeleton.yAutoSpriteOffset,0.5,1);
		this.blackStripe.transform.size.x = Renderer.width;
	}
	,setup: function() {
		this.actorsView = new gribattle_BattleActorsView(this._view);
		this.get_view().uiCreation.singleTag(GRIView.tagTabBattle);
		this.actorsView.setup();
		this.get_view().uiCreation.singleTag(GRIView.tagTabBattle);
		this.get_uiCreation().activeLayer = GRIView.LAYER_BACKGROUND;
		var e = new UIElement();
		e.style.fill = true;
		e.style.color = 7105644;
		var cave = this._view.uiCreation.createImageElement(autogen_GriPngs.back_cave,autogen_GriPngs.back_cave.rect.width * 6,autogen_GriPngs.back_cave.rect.height * 6);
		this.battleBackground = cave;
		e.transform = cave.transform;
		cave.style.alpha = 70;
		this._view.ui.addElement(e,0);
		this._view.ui.addElement(cave,0);
		cave.hoverable = false;
		e.hoverable = false;
		var bg = this._view.uiCreation.addBackground(null,gribattle_BattleMainView.XP_LAYOUT,null,false).bgElement;
		this.get_uiCreation().addWithOffset(this.get_uiCreation().createImageElement(autogen_GriPngs.dark_background,693,141),this.get_ui().screen,0,1,0,0).target.hoverable = false;
		this.blackStripe = this.get_uiCreation().addWithOffset(this.get_uiCreation().createImageElement(null,-1,40),this.get_ui().screen,0,1,0,0).target;
		this.blackStripe.style.fill = true;
		this.blackStripe.style.color = GRIView.COLOR_BACKGROUND;
		this.blackStripe.hoverable = false;
		this.get_uiCreation().activeLayer = this.get_uiCreation().defaultLayer;
		var spine = this.get_view().spine;
		this.heroSkeleton = spine.loadSkeletonUnit("spine_hero",this.get_view().griEffects.getSpineGroup(GRIView.tagTabBattle),autogen_GriTxts.spine_hero,true);
		this.heroSkeleton.layer = this.get_uiCreation().activeLayer;
		this.heroSkeleton.startAnimation("idle",true);
		this.heroSkeleton.xAutoSpriteScale = 2;
		this.heroSkeleton.yAutoSpriteScale = 2;
		var fh = this.get_uiCreation();
		fh.activeLayer++;
		this.heroElement = this.get_uiCreation().addEmptyElement(100,100,null);
		this.heroElement.data.stringData = gribattle_BattleMainView.HERO_ELEMENT_ID;
		var fh = this.get_uiCreation();
		fh.activeLayer--;
		this.heroElement.style.colorText = GRIView.COLOR_TEXT_HEADER;
		this.heroElement.textFont = "main16";
		var e = this.get_uiCreation().createImageElement(autogen_GriPngs.enemy_goblin,1,1);
		e.fitSprite();
		this.get_view().uiCreation.addElement(e,GRIView.LAYER_DEFAULT);
		e.biggestHoveredEnabled = false;
		this.enemySprite = e;
		var spine = this.get_view().spine;
		var skeletonU = spine.addAndBind(e,"spine_character",autogen_GriTxts.spine_character,this.get_view().griEffects.getSpineGroup(GRIView.tagTabBattle),"main","character","metarender");
		this.enemySkeleton = skeletonU;
		this.enemySkeleton.xDirection = -1;
		var LEVEL_PADDING_X = 225;
		this.xpBar = this.get_view().addBar(105 + LEVEL_PADDING_X,8,"XP",GRIView.ARCHETYPE_BAR_TIMID,null,null,bg);
		this.levelText = this.get_view().uiCreation.addWithOffset(this._view.addText("","Level N",GRIView.ARCHETYPE_HEADER,null),bg,0,0,LEVEL_PADDING_X,6).target;
		this.setView = new GRISetView(5,autogen_LayoutIdsGen.NEOSET_BUTTONS,this._view,this._view.setCursorGroup,false);
		var bg = this._view.uiCreation.addBackground(null,autogen_LayoutIdsGen.NEOMP,null,false).bgElement;
		this.mpBar = this.get_view().addBar(0,0,"mp","heroBattleMPbar",new Tag(),null,bg);
		this.get_ui().hover.setHoverGeneric(this.mpBar.barBack,"MP",ActorViewLogic.AttributeExplanation.h["MPMax"],null,"","");
		this.get_view().uiCreation.tags.length = 0;
	}
	,changeEnemySprite: function(sprite) {
		this.enemySprite.style.sprite = sprite;
		this.enemySprite.fitSprite();
		var fh = this.enemySprite.transform;
		var self = fh.size;
		var x = self.x;
		var y = self.y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var this1 = new Vector2Default(x,y);
		var self = this1;
		self.x *= 2;
		self.y *= 2;
		fh.size = self;
		this.enemySprite.transform.size.x *= -1;
	}
	,__class__: gribattle_BattleMainView
});
var gribattle_BattlePrizeUnitControl = function() {
	this.doingFinalMovement = false;
};
$hxClasses["gribattle.BattlePrizeUnitControl"] = gribattle_BattlePrizeUnitControl;
gribattle_BattlePrizeUnitControl.__name__ = "gribattle.BattlePrizeUnitControl";
gribattle_BattlePrizeUnitControl.prototype = {
	update: function(miliseconds) {
	}
	,setupInitialMovement: function(x,y,animator) {
		var self = this.view.transform.position;
		self.x = x;
		self.y = y;
		var distance = 80;
		var miliseconds = 90;
		animator.move.moveAwayFrom(this.view,x,y,distance,miliseconds);
		this.doingFinalMovement = false;
	}
	,goToPosition: function(x,y,delay,animator) {
		animator.move.moveTo(this.view,x,y,250,delay);
	}
	,startFollowMouse: function(animator) {
		animator.move.startFollowPosition(this.view,Mouse.mouse.get_x(),Mouse.mouse.get_y(),1000);
	}
	,followMouseUpdate: function(animator) {
		animator.move.feedFollowPosition(this.view,Mouse.mouse.get_x(),Mouse.mouse.get_y());
	}
	,setupFinalMovement: function(animator) {
		animator.clearAllAnimations(this.view);
		this.doingFinalMovement = true;
	}
	,hasCompletedFinalMovement: function(animator) {
		if(this.doingFinalMovement) {
			return !animator.isAnimating(this.view);
		} else {
			return false;
		}
	}
	,__class__: gribattle_BattlePrizeUnitControl
};
var gribattle_BattlePrizeControl = function(control) {
	this.goToPositionCountReset = 0;
	this.goToPositionRepeated = 0;
	this.unitControlsAA = new AdvancedArray();
	this.unitControls = [];
	this.control = control;
};
$hxClasses["gribattle.BattlePrizeControl"] = gribattle_BattlePrizeControl;
gribattle_BattlePrizeControl.__name__ = "gribattle.BattlePrizeControl";
gribattle_BattlePrizeControl.prototype = {
	initView: function() {
		this.prizeView = new gribattle_BattlePrizeView(this.control.view);
	}
	,update: function(miliseconds) {
		if(this.goToPositionCountReset > 0) {
			this.goToPositionCountReset -= miliseconds;
			if(this.goToPositionCountReset <= 0) {
				this.goToPositionRepeated = 0;
			}
		}
		var bps = this.control.battleManager.wdata.battlePrizes;
		if(bps != null) {
			var numberOfPrizes = bps.length;
			var _g_current = 0;
			var _g_array = this.unitControls;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(index >= numberOfPrizes) {
					value.view.visible = false;
				}
			}
			if(this.control.battleManager.wdata.enemy == null) {
				this.control.battleManager.requestPrizeCollection();
			}
			var _g_current = 0;
			var _g_array = bps;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				var bpc = this.unitControlsAA.getElement(index,this.unitControls);
				if(bpc == null) {
					bpc = this.unitControlsAA.setElement(index,this.unitControls,new gribattle_BattlePrizeUnitControl());
					bpc.view = this.prizeView.createView();
				}
				bpc.view.visible = value != null;
				var anim = this.control.view.animatorControl;
				if(value != null) {
					if(value.status == BattlePrizeStatus.NEW) {
						value.status = BattlePrizeStatus.PROCESSED;
						var x = this.control.battleControl.battleView.enemySprite.transform.get_centerX();
						var y = this.control.battleControl.battleView.enemySprite.transform.get_centerY();
						bpc.setupInitialMovement(x,y,this.control.view.animatorControl);
					}
					var ele = bpc.view.transform;
					var point = Mouse.mouse.get_mousePosition();
					var radiusBonus = 200;
					if(radiusBonus == null) {
						radiusBonus = 0;
					}
					if(radiusBonus != 0) {
						var cx = ele.get_centerX();
						var cy = ele.get_centerY();
						var disX = cx - point.x;
						var disY = cy - point.y;
						var disSq = disX * disX + disY * disY;
						if(disSq < radiusBonus * radiusBonus) {
							point.x = cx;
							point.y = cy;
						} else {
							var dis = Math.sqrt(disSq);
							var dirX = disX / dis;
							var dirY = disY / dis;
							point.x += dirX * radiusBonus;
							point.y += dirY * radiusBonus;
						}
					}
					var min = ele.position;
					var maxx = ele.size.x < 0 ? ele.position.x : ele.position.x + ele.size.x;
					var maxy = ele.size.y < 0 ? ele.position.y : ele.position.y + ele.size.y;
					var minx = ele.size.x < 0 ? ele.position.x + ele.size.x : ele.position.x;
					var miny = ele.size.y < 0 ? ele.position.y + ele.size.y : ele.position.y;
					var result = false;
					if(point.x >= minx && point.x <= maxx) {
						if(point.y >= miny && point.y <= maxy) {
							result = true;
						}
					}
					var nearMouse = result;
					if(value.status == BattlePrizeStatus.PROCESSED) {
						bpc.hoverGet = false;
						if(nearMouse) {
							value.status = BattlePrizeStatus.CONSUME_REQUEST;
							bpc.hoverGet = true;
						}
					}
					if(value.status == BattlePrizeStatus.CONSUMED && bpc.controlLastState != BattlePrizeStatus.CONSUMED) {
						bpc.setupFinalMovement(anim);
						if(nearMouse) {
							bpc.startFollowMouse(anim);
						} else {
							var e = this.control.battleControl.battleView.heroElement;
							var x1 = e.transform.get_centerX();
							var y1 = e.transform.get_centerY();
							bpc.goToPosition(x1,y1,0,anim);
						}
					}
					if(value.status == BattlePrizeStatus.CONSUMED) {
						if(bpc.hasCompletedFinalMovement(anim)) {
							this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_getgold);
							var pt = this.control.getPrizeText(value);
							this.control.view.griEffects.showFadeUpText(bpc.view.transform.get_centerX(),bpc.view.transform.get_centerY() - 15 * this.goToPositionRepeated,pt);
							this.goToPositionRepeated++;
							this.goToPositionCountReset = 500;
							this.control.battleManager.freeBattlePrize(index);
						} else if(bpc.hoverGet) {
							bpc.followMouseUpdate(anim);
						}
					}
					bpc.controlLastState = value.status;
				}
			}
		}
	}
	,__class__: gribattle_BattlePrizeControl
};
var gribattle_BattlePrizeView = function(view) {
	this.view = view;
};
$hxClasses["gribattle.BattlePrizeView"] = gribattle_BattlePrizeView;
gribattle_BattlePrizeView.__name__ = "gribattle.BattlePrizeView";
gribattle_BattlePrizeView.prototype = {
	createView: function() {
		this.view.uiCreation.singleTag(GRIView.tagTabBattle);
		var v = this.view.uiCreation.createImageElement(autogen_GriPngs.icon_gold,32,32);
		v.hoverBonus = 200;
		this.view.uiCreation.addElement(v);
		var self = v.transform.position;
		self.x = 300;
		self.y = 300;
		return v;
	}
	,__class__: gribattle_BattlePrizeView
};
var gribattle_BattleSkillControl = function(control) {
	this.control = control;
};
$hxClasses["gribattle.BattleSkillControl"] = gribattle_BattleSkillControl;
gribattle_BattleSkillControl.__name__ = "gribattle.BattleSkillControl";
gribattle_BattleSkillControl.prototype = {
	loadSkills: function() {
		var proto = new PrototypeSkillMaker();
		proto.init();
		this.control.battleManager.skillBases = proto.skills;
	}
	,setupView: function() {
		this.skillView = new GRIViewSkill();
		var _g_current = 0;
		var _g_array = this.control.battleManager.skillBases;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			var id = value.id;
			var imName = "skillS" + id.toLowerCase();
			imName = StringTools.replace(imName," ","");
			var sprite = autogen_GriPngs.allSprites.h[imName];
			this.skillView.skillToImage.push(sprite);
		}
	}
	,__class__: gribattle_BattleSkillControl
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:true,__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
var haxe_CallStack = {};
haxe_CallStack.callStack = function() {
	return haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.callStack());
};
haxe_CallStack.exceptionStack = function(fullStack) {
	if(fullStack == null) {
		fullStack = false;
	}
	var eStack = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.exceptionStack());
	return fullStack ? eStack : haxe_CallStack.subtract(eStack,haxe_CallStack.callStack());
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	var _g1 = stack;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.subtract = function(this1,stack) {
	var startIndex = -1;
	var i = -1;
	while(++i < this1.length) {
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var j = _g++;
			if(haxe_CallStack.equalItems(this1[i],stack[j])) {
				if(startIndex < 0) {
					startIndex = i;
				}
				++i;
				if(i >= this1.length) {
					break;
				}
			} else {
				startIndex = -1;
			}
		}
		if(startIndex >= 0) {
			break;
		}
	}
	if(startIndex >= 0) {
		return this1.slice(0,startIndex);
	} else {
		return this1;
	}
};
haxe_CallStack.equalItems = function(item1,item2) {
	if(item1 == null) {
		if(item2 == null) {
			return true;
		} else {
			return false;
		}
	} else {
		switch(item1._hx_index) {
		case 0:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 0) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 1) {
				var m2 = item2.m;
				var m1 = item1.m;
				return m1 == m2;
			} else {
				return false;
			}
			break;
		case 2:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 2) {
				var item21 = item2.s;
				var file2 = item2.file;
				var line2 = item2.line;
				var col2 = item2.column;
				var col1 = item1.column;
				var line1 = item1.line;
				var file1 = item1.file;
				var item11 = item1.s;
				if(file1 == file2 && line1 == line2 && col1 == col2) {
					return haxe_CallStack.equalItems(item11,item21);
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 3:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 3) {
				var class2 = item2.classname;
				var method2 = item2.method;
				var method1 = item1.method;
				var class1 = item1.classname;
				if(class1 == class2) {
					return method1 == method2;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 4) {
				var v2 = item2.v;
				var v1 = item1.v;
				return v1 == v2;
			} else {
				return false;
			}
			break;
		}
	}
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var s1 = s.s;
		var file = s.file;
		var line = s.line;
		var col = s.column;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var cname = s.classname;
		var meth = s.method;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
	this.__skipStack = 0;
	var old = Error.prepareStackTrace;
	Error.prepareStackTrace = function(e) { return e.stack; }
	if(((native) instanceof Error)) {
		this.stack = native.stack;
	} else {
		var e = null;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,haxe_Exception);
			e = this;
		} else {
			e = new Error();
			if(typeof(e.stack) == "undefined") {
				try { throw e; } catch(_) {}
				this.__skipStack++;
			}
		}
		this.stack = e.stack;
	}
	Error.prepareStackTrace = old;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		e.__skipStack++;
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,details: function() {
		if(this.get_previous() == null) {
			var tmp = "Exception: " + this.toString();
			var tmp1 = this.get_stack();
			return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
		} else {
			var result = "";
			var e = this;
			var prev = null;
			while(e != null) {
				if(prev == null) {
					var result1 = "Exception: " + e.get_message();
					var tmp = e.get_stack();
					result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
				} else {
					var prevStack = haxe_CallStack.subtract(e.get_stack(),prev.get_stack());
					result = "Exception: " + e.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
				}
				prev = e;
				e = e.get_previous();
			}
			return result;
		}
	}
	,__shiftStack: function() {
		this.__skipStack++;
	}
	,get_message: function() {
		return this.message;
	}
	,get_previous: function() {
		return this.__previousException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,get_stack: function() {
		var _g = this.__exceptionStack;
		if(_g == null) {
			var value = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.normalize(this.stack),this.__skipStack);
			this.setProperty("__exceptionStack",value);
			return value;
		} else {
			var s = _g;
			return s;
		}
	}
	,setProperty: function(name,value) {
		try {
			Object.defineProperty(this,name,{ value : value});
		} catch( _g ) {
			this[name] = value;
		}
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_previous:"get_previous",get_stack:"get_stack",get_message:"get_message"}
});
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_NativeStackTrace = function() { };
$hxClasses["haxe.NativeStackTrace"] = haxe_NativeStackTrace;
haxe_NativeStackTrace.__name__ = "haxe.NativeStackTrace";
haxe_NativeStackTrace.saveStack = function(e) {
	haxe_NativeStackTrace.lastError = e;
};
haxe_NativeStackTrace.callStack = function() {
	var e = new Error("");
	var stack = haxe_NativeStackTrace.tryHaxeStack(e);
	if(typeof(stack) == "undefined") {
		try {
			throw e;
		} catch( _g ) {
		}
		stack = e.stack;
	}
	return haxe_NativeStackTrace.normalize(stack,2);
};
haxe_NativeStackTrace.exceptionStack = function() {
	return haxe_NativeStackTrace.normalize(haxe_NativeStackTrace.tryHaxeStack(haxe_NativeStackTrace.lastError));
};
haxe_NativeStackTrace.toHaxe = function(s,skip) {
	if(skip == null) {
		skip = 0;
	}
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(skip > i) {
				continue;
			}
			var line = stack[i];
			var matched = line.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
			if(matched != null) {
				var path = matched[1].split(".");
				if(path[0] == "$hxClasses") {
					path.shift();
				}
				var meth = path.pop();
				var file = matched[2];
				var line1 = Std.parseInt(matched[3]);
				var column = Std.parseInt(matched[4]);
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else if(skip > 0 && Array.isArray(s)) {
		return s.slice(skip);
	} else {
		return s;
	}
};
haxe_NativeStackTrace.tryHaxeStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = haxe_NativeStackTrace.prepareHxStackTrace;
	var stack = e.stack;
	Error.prepareStackTrace = oldValue;
	return stack;
};
haxe_NativeStackTrace.prepareHxStackTrace = function(e,callsites) {
	var stack = [];
	var _g = 0;
	while(_g < callsites.length) {
		var site = callsites[_g];
		++_g;
		if(haxe_NativeStackTrace.wrapCallSite != null) {
			site = haxe_NativeStackTrace.wrapCallSite(site);
		}
		var method = null;
		var fullName = site.getFunctionName();
		if(fullName != null) {
			var idx = fullName.lastIndexOf(".");
			if(idx >= 0) {
				var className = fullName.substring(0,idx);
				var methodName = fullName.substring(idx + 1);
				method = haxe_StackItem.Method(className,methodName);
			} else {
				method = haxe_StackItem.Method(null,fullName);
			}
		}
		var fileName = site.getFileName();
		var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
		if(haxe_NativeStackTrace.wrapCallSite != null && fileAddr > 0) {
			fileName = fileName.substring(fileAddr + 6);
		}
		stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
	}
	return stack;
};
haxe_NativeStackTrace.normalize = function(stack,skipItems) {
	if(skipItems == null) {
		skipItems = 0;
	}
	if(Array.isArray(stack) && skipItems > 0) {
		return stack.slice(skipItems);
	} else if(typeof(stack) == "string") {
		switch(stack.substring(0,6)) {
		case "Error\n":case "Error:":
			++skipItems;
			break;
		default:
		}
		return haxe_NativeStackTrace.skipLines(stack,skipItems);
	} else {
		return stack;
	}
};
haxe_NativeStackTrace.skipLines = function(stack,skip,pos) {
	if(pos == null) {
		pos = 0;
	}
	if(skip > 0) {
		pos = stack.indexOf("\n",pos);
		if(pos < 0) {
			return "";
		} else {
			return haxe_NativeStackTrace.skipLines(stack,--skip,pos + 1);
		}
	} else {
		return stack.substring(pos);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
	this.__skipStack++;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getInt64: function(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	,setInt64: function(pos,v) {
		this.setInt32(pos,v.low);
		this.setInt32(pos + 4,v.high);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Sha1 = function() {
};
$hxClasses["haxe.crypto.Sha1"] = haxe_crypto_Sha1;
haxe_crypto_Sha1.__name__ = "haxe.crypto.Sha1";
haxe_crypto_Sha1.make = function(b) {
	var h = new haxe_crypto_Sha1().doEncode(haxe_crypto_Sha1.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(20));
	var p = 0;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[3] >>> 24;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[4] >>> 24;
	out.b[p++] = h[4] >> 16 & 255;
	out.b[p++] = h[4] >> 8 & 255;
	out.b[p++] = h[4] & 255;
	return out;
};
haxe_crypto_Sha1.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var _g = 0;
	var _g1 = nblk * 16;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var _g = 0;
	var _g1 = b.length;
	while(_g < _g1) {
		var i = _g++;
		var p = i >> 2;
		blks[p] |= b.b[i] << 24 - ((i & 3) << 3);
	}
	var i = b.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = b.length * 8;
	return blks;
};
haxe_crypto_Sha1.prototype = {
	doEncode: function(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					var num = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];
					w[j] = num << 1 | num >>> 31;
				}
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				++j;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,ft: function(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) {
			return 1518500249;
		}
		if(t < 40) {
			return 1859775393;
		}
		if(t < 60) {
			return -1894007588;
		}
		return -899497514;
	}
	,__class__: haxe_crypto_Sha1
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = "haxe.ds.GenericCell";
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = "haxe.ds.GenericStack";
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	return this1;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml__$Access_NodeListAccess = {};
haxe_xml__$Access_NodeListAccess.resolve = function(this1,name) {
	var l = [];
	var x = this1.elementsNamed(name);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
		}
		var this1 = x1;
		l.push(this1);
	}
	return l;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__:true,__constructs__:null
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s"],$_)
};
hscript_Const.__constructs__ = [hscript_Const.CInt,hscript_Const.CFloat,hscript_Const.CString];
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__:true,__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIdent",$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EVar",$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EParent",$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EObject",$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EDoWhile",$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
};
hscript_Expr.__constructs__ = [hscript_Expr.EConst,hscript_Expr.EIdent,hscript_Expr.EVar,hscript_Expr.EParent,hscript_Expr.EBlock,hscript_Expr.EField,hscript_Expr.EBinop,hscript_Expr.EUnop,hscript_Expr.ECall,hscript_Expr.EIf,hscript_Expr.EWhile,hscript_Expr.EFor,hscript_Expr.EBreak,hscript_Expr.EContinue,hscript_Expr.EFunction,hscript_Expr.EReturn,hscript_Expr.EArray,hscript_Expr.EArrayDecl,hscript_Expr.ENew,hscript_Expr.EThrow,hscript_Expr.ETry,hscript_Expr.EObject,hscript_Expr.ETernary,hscript_Expr.ESwitch,hscript_Expr.EDoWhile,hscript_Expr.EMeta,hscript_Expr.ECheckType];
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__:true,__constructs__:null
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTPath",$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTFun",$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTAnon",$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTParent",$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTOpt",$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTNamed",$_.__params__ = ["n","t"],$_)
};
hscript_CType.__constructs__ = [hscript_CType.CTPath,hscript_CType.CTFun,hscript_CType.CTAnon,hscript_CType.CTParent,hscript_CType.CTOpt,hscript_CType.CTNamed];
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__:true,__constructs__:null
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidChar",$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnexpected",$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_name:"EUnterminatedString",_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_name:"EUnterminatedComment",_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidPreprocessor",$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnknownVariable",$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidIterator",$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidOp",$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidAccess",$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="ECustom",$_.__params__ = ["msg"],$_)
};
hscript_Error.__constructs__ = [hscript_Error.EInvalidChar,hscript_Error.EUnexpected,hscript_Error.EUnterminatedString,hscript_Error.EUnterminatedComment,hscript_Error.EInvalidPreprocessor,hscript_Error.EUnknownVariable,hscript_Error.EInvalidIterator,hscript_Error.EInvalidOp,hscript_Error.EInvalidAccess,hscript_Error.ECustom];
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__:true,__constructs__:null
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DPackage",$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DImport",$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DClass",$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DTypedef",$_.__params__ = ["c"],$_)
};
hscript_ModuleDecl.__constructs__ = [hscript_ModuleDecl.DPackage,hscript_ModuleDecl.DImport,hscript_ModuleDecl.DClass,hscript_ModuleDecl.DTypedef];
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__:true,__constructs__:null
	,APublic: {_hx_name:"APublic",_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_name:"APrivate",_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_name:"AInline",_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_name:"AOverride",_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_name:"AStatic",_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_name:"AMacro",_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
hscript_FieldAccess.__constructs__ = [hscript_FieldAccess.APublic,hscript_FieldAccess.APrivate,hscript_FieldAccess.AInline,hscript_FieldAccess.AOverride,hscript_FieldAccess.AStatic,hscript_FieldAccess.AMacro];
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__:true,__constructs__:null
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_._hx_name="KFunction",$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_._hx_name="KVar",$_.__params__ = ["v"],$_)
};
hscript_FieldKind.__constructs__ = [hscript_FieldKind.KFunction,hscript_FieldKind.KVar];
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__:true,__constructs__:null
	,SBreak: {_hx_name:"SBreak",_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_name:"SContinue",_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_name:"SReturn",_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
hscript__$Interp_Stop.__constructs__ = [hscript__$Interp_Stop.SBreak,hscript__$Interp_Stop.SContinue,hscript__$Interp_Stop.SReturn];
var hscript_Interp = function() {
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	this.resetVariables();
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = "hscript.Interp";
hscript_Interp.prototype = {
	resetVariables: function() {
		var _gthis = this;
		this.variables = new haxe_ds_StringMap();
		this.variables.h["null"] = null;
		this.variables.h["true"] = true;
		this.variables.h["false"] = false;
		var this1 = this.variables;
		var value = Reflect.makeVarArgs(function(el) {
			var inf = _gthis.posInfos();
			var v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		});
		this1.h["trace"] = value;
	}
	,posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		this.binops.h["+"] = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		this.binops.h["-"] = function(e1,e2) {
			return me.expr(e1) - me.expr(e2);
		};
		this.binops.h["*"] = function(e1,e2) {
			return me.expr(e1) * me.expr(e2);
		};
		this.binops.h["/"] = function(e1,e2) {
			return me.expr(e1) / me.expr(e2);
		};
		this.binops.h["%"] = function(e1,e2) {
			return me.expr(e1) % me.expr(e2);
		};
		this.binops.h["&"] = function(e1,e2) {
			return me.expr(e1) & me.expr(e2);
		};
		this.binops.h["|"] = function(e1,e2) {
			return me.expr(e1) | me.expr(e2);
		};
		this.binops.h["^"] = function(e1,e2) {
			return me.expr(e1) ^ me.expr(e2);
		};
		this.binops.h["<<"] = function(e1,e2) {
			return me.expr(e1) << me.expr(e2);
		};
		this.binops.h[">>"] = function(e1,e2) {
			return me.expr(e1) >> me.expr(e2);
		};
		this.binops.h[">>>"] = function(e1,e2) {
			return me.expr(e1) >>> me.expr(e2);
		};
		this.binops.h["=="] = function(e1,e2) {
			return me.expr(e1) == me.expr(e2);
		};
		this.binops.h["!="] = function(e1,e2) {
			return me.expr(e1) != me.expr(e2);
		};
		this.binops.h[">="] = function(e1,e2) {
			return me.expr(e1) >= me.expr(e2);
		};
		this.binops.h["<="] = function(e1,e2) {
			return me.expr(e1) <= me.expr(e2);
		};
		this.binops.h[">"] = function(e1,e2) {
			return me.expr(e1) > me.expr(e2);
		};
		this.binops.h["<"] = function(e1,e2) {
			return me.expr(e1) < me.expr(e2);
		};
		this.binops.h["||"] = function(e1,e2) {
			if(me.expr(e1) != true) {
				return me.expr(e2) == true;
			} else {
				return true;
			}
		};
		this.binops.h["&&"] = function(e1,e2) {
			if(me.expr(e1) == true) {
				return me.expr(e2) == true;
			} else {
				return false;
			}
		};
		this.binops.h["="] = $bind(this,this.assign);
		this.binops.h["..."] = function(e1,e2) {
			return new IntIterator(me.expr(e1),me.expr(e2));
		};
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v1,v2) {
			return v1 - v2;
		});
		this.assignOp("*=",function(v1,v2) {
			return v1 * v2;
		});
		this.assignOp("/=",function(v1,v2) {
			return v1 / v2;
		});
		this.assignOp("%=",function(v1,v2) {
			return v1 % v2;
		});
		this.assignOp("&=",function(v1,v2) {
			return v1 & v2;
		});
		this.assignOp("|=",function(v1,v2) {
			return v1 | v2;
		});
		this.assignOp("^=",function(v1,v2) {
			return v1 ^ v2;
		});
		this.assignOp("<<=",function(v1,v2) {
			return v1 << v2;
		});
		this.assignOp(">>=",function(v1,v2) {
			return v1 >> v2;
		});
		this.assignOp(">>>=",function(v1,v2) {
			return v1 >>> v2;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var l = this.locals.h[id];
			if(l == null) {
				this.variables.h[id] = v;
			} else {
				l.r = v;
			}
			break;
		case 5:
			var e = e1.e;
			var f = e1.f;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var e = e1.e;
			var index = e1.index;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp("=");
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		this.binops.h[op] = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var l = this.locals.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.variables.h[id] = v;
			} else {
				l.r = v;
			}
			break;
		case 5:
			var e = e1.e;
			var f = e1.f;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var e = e1.e;
			var index = e1.index;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp(op);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var l = this.locals.h[id];
			var v = l == null ? this.variables.h[id] : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.variables.h[id] = v;
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.variables.h[id] = v + delta;
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var e1 = e.e;
			var f = e.f;
			var obj = this.expr(e1);
			var v = this.get(obj,f);
			if(prefix) {
				v += delta;
				this.set(obj,f,v);
			} else {
				this.set(obj,f,v + delta);
			}
			return v;
		case 16:
			var e1 = e.e;
			var index = e.index;
			var arr = this.expr(e1);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				var v = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v + delta);
				}
				return v;
			} else {
				var v = arr[index1];
				if(prefix) {
					v += delta;
					arr[index1] = v;
				} else {
					arr[index1] = v + delta;
				}
				return v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw haxe_Exception.thrown(e);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var e = _g1;
				switch(e._hx_index) {
				case 0:
					throw haxe_Exception.thrown("Invalid break");
				case 1:
					throw haxe_Exception.thrown("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw _g;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var h1 = h.h;
		var k_h = h1;
		var k_keys = Object.keys(h1);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			h2.h[k] = h.h[k];
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			this.locals.h[d.n] = d.old;
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw haxe_Exception.thrown(e);
		} else {
			throw haxe_Exception.thrown(e);
		}
	}
	,rethrow: function(e) {
		throw haxe_Exception.thrown(e);
	}
	,resolve: function(id) {
		var l = this.locals.h[id];
		if(l != null) {
			return l.r;
		}
		var v = this.variables.h[id];
		if(v == null && !Object.prototype.hasOwnProperty.call(this.variables.h,id)) {
			var e = hscript_Error.EUnknownVariable(id);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var _g = e.t;
			var n = e.n;
			var e1 = e.e;
			this.declared.push({ n : n, old : this.locals.h[n]});
			var this1 = this.locals;
			var value = e1 == null ? null : this.expr(e1);
			this1.h[n] = { r : value};
			return null;
		case 3:
			var e1 = e.e;
			return this.expr(e1);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e1 = exprs[_g];
				++_g;
				v = this.expr(e1);
			}
			this.restore(old);
			return v;
		case 5:
			var e1 = e.e;
			var f = e.f;
			return this.get(this.expr(e1),f);
		case 6:
			var op = e.op;
			var e1 = e.e1;
			var e2 = e.e2;
			var fop = this.binops.h[op];
			if(fop == null) {
				var e3 = hscript_Error.EInvalidOp(op);
				throw haxe_Exception.thrown(e3);
			}
			return fop(e1,e2);
		case 7:
			var op = e.op;
			var prefix = e.prefix;
			var e1 = e.e;
			switch(op) {
			case "!":
				return this.expr(e1) != true;
			case "++":
				return this.increment(e1,prefix,1);
			case "-":
				return -this.expr(e1);
			case "--":
				return this.increment(e1,prefix,-1);
			case "~":
				return ~this.expr(e1);
			default:
				var e1 = hscript_Error.EInvalidOp(op);
				throw haxe_Exception.thrown(e1);
			}
			break;
		case 8:
			var e1 = e.e;
			var params = e.params;
			var args = [];
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				args.push(this.expr(p));
			}
			if(e1._hx_index == 5) {
				var e2 = e1.e;
				var f = e1.f;
				var obj = this.expr(e2);
				if(obj == null) {
					var e2 = hscript_Error.EInvalidAccess(f);
					throw haxe_Exception.thrown(e2);
				}
				return this.fcall(obj,f,args);
			} else {
				return this.call(null,this.expr(e1),args);
			}
			break;
		case 9:
			var econd = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			if(this.expr(econd) == true) {
				return this.expr(e1);
			} else if(e2 == null) {
				return null;
			} else {
				return this.expr(e2);
			}
			break;
		case 10:
			var econd = e.cond;
			var e1 = e.e;
			this.whileLoop(econd,e1);
			return null;
		case 11:
			var v = e.v;
			var it = e.it;
			var e1 = e.e;
			this.forLoop(v,it,e1);
			return null;
		case 12:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SBreak);
		case 13:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SContinue);
		case 14:
			var _g = e.ret;
			var params = e.args;
			var fexpr = e.e;
			var name = e.name;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				if(p.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f = function(args) {
				if((args == null ? 0 : args.length) != params.length) {
					if(args.length < minParams) {
						var str = "Invalid number of parameters. Got " + args.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						var e = hscript_Error.ECustom(str);
						throw haxe_Exception.thrown(e);
					}
					var args2 = [];
					var extraParams = args.length - minParams;
					var pos = 0;
					var _g = 0;
					while(_g < params.length) {
						var p = params[_g];
						++_g;
						if(p.opt) {
							if(extraParams > 0) {
								args2.push(args[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args[pos++]);
						}
					}
					args = args2;
				}
				var old = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g = 0;
				var _g1 = params.length;
				while(_g < _g1) {
					var i = _g++;
					me.locals.h[params[i].name] = { r : args[i]};
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( _g ) {
						haxe_NativeStackTrace.lastError = _g;
						var e = haxe_Exception.caught(_g).unwrap();
						me.locals = old;
						me.depth = depth;
						throw haxe_Exception.thrown(e);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old;
				me.depth = depth;
				return r;
			};
			var f1 = Reflect.makeVarArgs(f);
			if(name != null) {
				if(this.depth == 0) {
					this.variables.h[name] = f1;
				} else {
					this.declared.push({ n : name, old : this.locals.h[name]});
					var ref = { r : f1};
					this.locals.h[name] = ref;
					capturedLocals.h[name] = ref;
				}
			}
			return f1;
		case 15:
			var e1 = e.e;
			this.returnValue = e1 == null ? null : this.expr(e1);
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SReturn);
		case 16:
			var e1 = e.e;
			var index = e.index;
			var arr = this.expr(e1);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr = e.e;
			var tmp;
			if(arr.length > 0) {
				var _g = arr[0];
				if(_g._hx_index == 6) {
					var _g1 = _g.e1;
					var _g1 = _g.e2;
					tmp = _g.op == "=>";
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g = 0;
				while(_g < arr.length) {
					var e1 = arr[_g];
					++_g;
					if(e1._hx_index == 6) {
						if(e1.op == "=>") {
							var eKey = e1.e1;
							var eValue = e1.e2;
							var key = this.expr(eKey);
							var value = this.expr(eValue);
							isAllString = isAllString && typeof(key) == "string";
							isAllInt = isAllInt && (typeof(key) == "number" && ((key | 0) === key));
							isAllObject = isAllObject && Reflect.isObject(key);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key);
							keys.push(key);
							values.push(value);
						} else {
							throw haxe_Exception.thrown("=> expected");
						}
					} else {
						throw haxe_Exception.thrown("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw haxe_Exception.thrown("Inconsistent key types");
				}
				var _g = 0;
				var _g1 = keys.length;
				while(_g < _g1) {
					var n = _g++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n],values[n]);
				}
				return map;
			} else {
				var a = [];
				var _g = 0;
				while(_g < arr.length) {
					var e1 = arr[_g];
					++_g;
					a.push(this.expr(e1));
				}
				return a;
			}
			break;
		case 18:
			var cl = e.cl;
			var params1 = e.params;
			var a = [];
			var _g = 0;
			while(_g < params1.length) {
				var e1 = params1[_g];
				++_g;
				a.push(this.expr(e1));
			}
			return this.cnew(cl,a);
		case 19:
			var e1 = e.e;
			throw haxe_Exception.thrown(this.expr(e1));
		case 20:
			var _g = e.t;
			var e1 = e.e;
			var n = e.v;
			var ecatch = e.ecatch;
			var old = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v = this.expr(e1);
				this.restore(old);
				this.inTry = oldTry;
				return v;
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					this.inTry = oldTry;
					throw haxe_Exception.thrown(err);
				} else {
					var err = _g1;
					this.restore(old);
					this.inTry = oldTry;
					this.declared.push({ n : n, old : this.locals.h[n]});
					this.locals.h[n] = { r : err};
					var v = this.expr(ecatch);
					this.restore(old);
					return v;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g = 0;
			while(_g < fl.length) {
				var f = fl[_g];
				++_g;
				this.set(o,f.name,this.expr(f.e));
			}
			return o;
		case 22:
			var econd = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			if(this.expr(econd) == true) {
				return this.expr(e1);
			} else {
				return this.expr(e2);
			}
			break;
		case 23:
			var e1 = e.e;
			var cases = e.cases;
			var def = e.defaultExpr;
			var val = this.expr(e1);
			var match = false;
			var _g = 0;
			while(_g < cases.length) {
				var c = cases[_g];
				++_g;
				var _g1 = 0;
				var _g2 = c.values;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(this.expr(v) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var econd = e.cond;
			var e1 = e.e;
			this.doWhileLoop(econd,e1);
			return null;
		case 25:
			var _g = e.name;
			var _g = e.args;
			var e1 = e.e;
			return this.expr(e1);
		case 26:
			var _g = e.t;
			var e1 = e.e;
			return this.expr(e1);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var err = _g1;
				switch(err._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw haxe_Exception.thrown(err);
				}
			} else {
				throw _g;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
		}
		if(v.hasNext == null || v.next == null) {
			var e = hscript_Error.EInvalidIterator(v);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		this.declared.push({ n : n, old : this.locals.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			this1.h[n] = value;
			try {
				this.expr(e);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__implements(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw haxe_Exception.thrown(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw haxe_Exception.thrown(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__:true,__constructs__:null
	,TEof: {_hx_name:"TEof",_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TConst",$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TId",$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TOp",$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_name:"TPOpen",_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_name:"TPClose",_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_name:"TBrOpen",_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_name:"TBrClose",_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_name:"TDot",_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_name:"TComma",_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_name:"TSemicolon",_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_name:"TBkOpen",_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_name:"TBkClose",_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_name:"TQuestion",_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_name:"TDoubleDot",_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TMeta",$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TPrepro",$_.__params__ = ["s"],$_)
};
hscript_Token.__constructs__ = [hscript_Token.TEof,hscript_Token.TConst,hscript_Token.TId,hscript_Token.TOp,hscript_Token.TPOpen,hscript_Token.TPClose,hscript_Token.TBrOpen,hscript_Token.TBrClose,hscript_Token.TDot,hscript_Token.TComma,hscript_Token.TSemicolon,hscript_Token.TBkOpen,hscript_Token.TBkClose,hscript_Token.TQuestion,hscript_Token.TDoubleDot,hscript_Token.TMeta,hscript_Token.TPrepro];
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			this.opPriority.h[x] = i;
			if(i == 9) {
				this.opRightAssoc.h[x] = true;
			}
		}
	}
	var x = "!";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "++";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "--";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "-";
	this.unops.h[x] = x == "++" || x == "--";
	var x = "~";
	this.unops.h[x] = x == "++" || x == "--";
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = "hscript.Parser";
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(err);
		}
	}
	,invalidChar: function(c) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidChar(c));
		}
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g = 0;
		var _g1 = this.identChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.idents[HxOverrides.cca(this.identChars,i)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		this.readPos = 0;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		var err = hscript_Error.EUnexpected(this.tokenString(tk));
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(err);
		}
		return null;
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		if(e == null) {
			return false;
		}
		switch(e._hx_index) {
		case 2:
			var _g = e.n;
			var t = e.t;
			var e1 = e.e;
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					var _g = t.fields;
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			var _g = e.e;
			return true;
		case 6:
			var _g = e.op;
			var _g = e.e1;
			var e1 = e.e2;
			return this.isBlock(e1);
		case 7:
			var _g = e.op;
			var prefix = e.prefix;
			var e1 = e.e;
			if(!prefix) {
				return this.isBlock(e1);
			} else {
				return false;
			}
			break;
		case 9:
			var _g = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			if(e2 != null) {
				return this.isBlock(e2);
			} else {
				return this.isBlock(e1);
			}
			break;
		case 10:
			var _g = e.cond;
			var e1 = e.e;
			return this.isBlock(e1);
		case 11:
			var _g = e.v;
			var _g = e.it;
			var e1 = e.e;
			return this.isBlock(e1);
		case 14:
			var _g = e.args;
			var _g = e.name;
			var _g = e.ret;
			var e1 = e.e;
			return this.isBlock(e1);
		case 15:
			var e1 = e.e;
			if(e1 != null) {
				return this.isBlock(e1);
			} else {
				return false;
			}
			break;
		case 20:
			var _g = e.e;
			var _g = e.v;
			var _g = e.t;
			var e1 = e.ecatch;
			return this.isBlock(e1);
		case 21:
			var _g = e.fl;
			return true;
		case 23:
			var _g = e.e;
			var _g = e.cases;
			var _g = e.defaultExpr;
			return true;
		case 24:
			var _g = e.cond;
			var e1 = e.e;
			return this.isBlock(e1);
		case 25:
			var _g = e.name;
			var _g = e.args;
			var e1 = e.e;
			return this.isBlock(e1);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma && e != null) {
				if(e._hx_index == 2) {
					var _g = e.n;
					var _g1 = e.t;
					var _g2 = e.e;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 1:
					var c = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c._hx_index == 2) {
						var s = c.s;
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk.s;
					id = i;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				return this.parseExprNext(hscript_Expr.EConst(c));
			case 2:
				var id = tk.s;
				var e = this.parseStructure(id);
				if(e == null) {
					e = hscript_Expr.EIdent(id);
				}
				return this.parseExprNext(e);
			case 3:
				var op = tk.s;
				if(Object.prototype.hasOwnProperty.call(this.unops.h,op)) {
					var start = 0;
					var e = this.parseExpr();
					if(op == "-" && e != null) {
						if(e._hx_index == 0) {
							var _g = e.c;
							switch(_g._hx_index) {
							case 0:
								var i = _g.v;
								return hscript_Expr.EConst(hscript_Const.CInt(-i));
							case 1:
								var f = _g.f;
								return hscript_Expr.EConst(hscript_Const.CFloat(-f));
							default:
							}
						}
					}
					return this.makeUnop(op,e);
				}
				return this.unexpected(tk);
			case 4:
				var e = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e));
					case 9:
						if(e._hx_index == 1) {
							var v = e.v;
							return this.parseLambda([{ name : v}],0);
						}
						break;
					case 14:
						var t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e,t));
							case 9:
								if(e._hx_index == 1) {
									var v = e.v;
									return this.parseLambda([{ name : v, t : t}],0);
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						var c = tk.c;
						if(this.allowJSON) {
							if(c._hx_index == 2) {
								var _g = c.s;
								var tk2 = this.token();
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk2,_this.head);
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
							}
						} else {
							var _this = this.tokens;
							_this.head = new haxe_ds_GenericCell(tk,_this.head);
						}
						break;
					case 2:
						var _g = tk.s;
						var tk2 = this.token();
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk2,_this.head);
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
						if(tk2 != null) {
							if(tk2._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
					}
				}
				var a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose || this.resumeErrors && tk == hscript_Token.TEof) {
						break;
					}
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				var a = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose && (!this.resumeErrors || tk != hscript_Token.TEof)) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
					a.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a.length == 1 && a[0] != null) {
					var _g = a[0];
					switch(_g._hx_index) {
					case 10:
						var _g1 = _g.cond;
						var _g1 = _g.e;
						var tmp = "__a_" + this.uid++;
						var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e);
					case 11:
						var _g1 = _g.v;
						var _g1 = _g.it;
						var _g1 = _g.e;
						var tmp = "__a_" + this.uid++;
						var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e);
					case 24:
						var _g1 = _g.cond;
						var _g1 = _g.e;
						var tmp = "__a_" + this.uid++;
						var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e);
					default:
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a));
			case 15:
				var id = tk.s;
				if(this.allowMetadata) {
					var args = this.parseMetaArgs();
					return hscript_Expr.EMeta(id,args,this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
		}
		var t = this.token();
		if(!Type.enumEq(t,hscript_Token.TOp("->"))) {
			this.unexpected(t);
		}
		var eret = this.parseExpr();
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(eret));
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				if(_g == null) {
					var tk = _g;
					this.unexpected(tk);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						var tk1 = _g;
						this.unexpected(tk1);
					}
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		if(e == null) {
			return null;
		}
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			var _g = e.e;
			if(_g.length == 1) {
				var e1 = _g[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var cond = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			edef = e2 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e1),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var cond = e.cond;
			var e2 = e.e;
			edef = hscript_Expr.EWhile(cond,this.mapCompr(tmp,e2));
			break;
		case 11:
			var v = e.v;
			var it = e.it;
			var e2 = e.e;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e2));
			break;
		case 24:
			var cond = e.cond;
			var e2 = e.e;
			edef = hscript_Expr.EDoWhile(cond,this.mapCompr(tmp,e2));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		if(e == null && this.resumeErrors) {
			return null;
		}
		switch(e._hx_index) {
		case 6:
			var bop = e.op;
			var e1 = e.e1;
			var e2 = e.e2;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e1 = e.cond;
			var e2 = e.e1;
			var e3 = e.e2;
			return hscript_Expr.ETernary(this.makeUnop(op,e1),e2,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		if(e == null && this.resumeErrors) {
			return hscript_Expr.EBinop(op,e1,e);
		}
		switch(e._hx_index) {
		case 6:
			var op2 = e.op;
			var e2 = e.e1;
			var e3 = e.e2;
			if(this.opPriority.h[op] <= this.opPriority.h[op2] && !Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e2 = e.cond;
			var e3 = e.e1;
			var e4 = e.e2;
			if(Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e2),e3,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("in"))) {
				this.unexpected(t);
			}
			var eiter = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e);
		case "function":
			var tk = this.token();
			var name = null;
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else if(tk._hx_index == 2) {
				var id = tk.s;
				name = id;
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var cond = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e1 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk = this.token();
			if(tk == hscript_Token.TSemicolon) {
				semic = true;
				tk = this.token();
			}
			if(Type.enumEq(tk,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				if(semic) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this.head);
				}
			}
			return hscript_Expr.EIf(cond,e1,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			_hx_loop1: while(true) {
				var tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 4:
						break _hx_loop1;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk);
						break _hx_loop1;
					}
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk = this.token();
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			var e = tk == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e);
		case "switch":
			var e = this.parseExpr();
			var def = null;
			var cases = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			_hx_loop2: while(true) {
				var tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 2:
						switch(tk.s) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								var e1 = this.parseExpr();
								c.values.push(e1);
								tk = this.token();
								if(tk == null) {
									this.unexpected(tk);
									break;
								} else {
									switch(tk._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk);
										break _hx_loop3;
									}
								}
							}
							var exprs = [];
							_hx_loop4: while(true) {
								tk = this.token();
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop4;
										} else {
											this.parseFullExpr(exprs);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk);
							}
							var t = this.token();
							if(t != hscript_Token.TDoubleDot) {
								this.unexpected(t);
							}
							var exprs1 = [];
							_hx_loop5: while(true) {
								tk = this.token();
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
								if(tk == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop5;
										} else {
											this.parseFullExpr(exprs1);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk);
							break _hx_loop2;
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk);
						break _hx_loop2;
					}
				}
			}
			return hscript_Expr.ESwitch(e,cases,def);
		case "throw":
			var e = this.parseExpr();
			return hscript_Expr.EThrow(e);
		case "try":
			var e = this.parseExpr();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("catch"))) {
				this.unexpected(t);
			}
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			var t = null;
			if(this.allowTypes) {
				t = this.parseType();
			} else {
				var t1 = this.token();
				if(!Type.enumEq(t1,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t1);
				}
			}
			var t1 = this.token();
			if(t1 != hscript_Token.TPClose) {
				this.unexpected(t1);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e,vname,t,ec);
		case "var":
			var ident = this.getIdent();
			var tk = this.token();
			var t = null;
			if(tk == hscript_Token.TDoubleDot && this.allowTypes) {
				t = this.parseType();
				tk = this.token();
			}
			var e = null;
			if(Type.enumEq(tk,hscript_Token.TOp("="))) {
				e = this.parseExpr();
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			}
			return hscript_Expr.EVar(ident,t,e);
		case "while":
			var econd = this.parseExpr();
			var e = this.parseExpr();
			return hscript_Expr.EWhile(econd,e);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				var op = tk.s;
				if(op == "->") {
					switch(e1._hx_index) {
					case 1:
						var i = e1.v;
						var eret = this.parseExpr();
						return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
					case 3:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i = _hx_tmp.v;
							var eret = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
						}
						break;
					case 26:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i = _hx_tmp.v;
							var t = e1.t;
							var eret = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i, t : t}],hscript_Expr.EReturn(eret));
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				if(this.unops.h[op]) {
					var tmp;
					if(!this.isBlock(e1)) {
						if(e1._hx_index == 3) {
							var _g = e1.e;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = true;
					}
					if(tmp) {
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
				}
				return this.makeBinop(op,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				var field = this.getIdent();
				return this.parseExprNext(hscript_Expr.EField(e1,field));
			case 11:
				var e2 = this.parseExpr();
				var t = this.token();
				if(t != hscript_Token.TBkClose) {
					this.unexpected(t);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				var e2 = this.parseExpr();
				var t = this.token();
				if(t != hscript_Token.TDoubleDot) {
					this.unexpected(t);
				}
				var e3 = this.parseExpr();
				return hscript_Expr.ETernary(e1,e2,e3);
			default:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return e1;
			}
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
					break;
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				var v = t.s;
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				var path = this.parsePath();
				var params = null;
				t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				} else if(t._hx_index == 3) {
					var op = t.s;
					if(op == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									var op = t.s;
									if(op == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(op,0) == 62) {
										var _this = this.tokens;
										_this.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op,1,null)),_this.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
							break;
						}
					} else {
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(t,_this.head);
					}
				} else {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				var a = this.token();
				var b = this.token();
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(b,_this.head);
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(a,_this.head);
				var withReturn = function(args) {
					var _g = _gthis.token();
					if(_g == null) {
						var t = _g;
						_gthis.unexpected(t);
					} else if(_g._hx_index == 3) {
						if(_g.s != "->") {
							var t = _g;
							_gthis.unexpected(t);
						}
					} else {
						var t = _g;
						_gthis.unexpected(t);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					var t1 = this.parseType();
					var _g = this.token();
					if(_g == null) {
						var t2 = _g;
						return this.unexpected(t2);
					} else {
						switch(_g._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t1));
						case 9:
							var args = [t1];
							while(true) {
								args.push(this.parseType());
								if(!this.maybe(hscript_Token.TComma)) {
									break;
								}
							}
							var t1 = this.token();
							if(t1 != hscript_Token.TPClose) {
								this.unexpected(t1);
							}
							return withReturn(args);
						default:
							var t1 = _g;
							return this.unexpected(t1);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						var _g = a.s;
						if(b == null) {
							var t1 = this.parseType();
							var _g = this.token();
							if(_g == null) {
								var t2 = _g;
								return this.unexpected(t2);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t1));
								case 9:
									var args = [t1];
									while(true) {
										args.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									var t1 = _g;
									return this.unexpected(t1);
								}
							}
						} else if(b._hx_index == 14) {
							var _g = [];
							var _g1 = 0;
							var _g2 = this.parseFunctionArgs();
							while(_g1 < _g2.length) {
								var arg = _g2[_g1];
								++_g1;
								var _g3 = arg.value;
								if(_g3 != null) {
									var v = _g3;
									if(!this.resumeErrors) {
										throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
									}
								}
								_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							var args = _g;
							return withReturn(args);
						} else {
							var t1 = this.parseType();
							var _g = this.token();
							if(_g == null) {
								var t2 = _g;
								return this.unexpected(t2);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t1));
								case 9:
									var args = [t1];
									while(true) {
										args.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									var t1 = _g;
									return this.unexpected(t1);
								}
							}
						}
						break;
					case 5:
						var _g = [];
						var _g1 = 0;
						var _g2 = this.parseFunctionArgs();
						while(_g1 < _g2.length) {
							var arg = _g2[_g1];
							++_g1;
							var _g3 = arg.value;
							if(_g3 != null) {
								var v = _g3;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
								}
							}
							_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
						}
						var args = _g;
						return withReturn(args);
					default:
						var t1 = this.parseType();
						var _g = this.token();
						if(_g == null) {
							var t2 = _g;
							return this.unexpected(t2);
						} else {
							switch(_g._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t1));
							case 9:
								var args = [t1];
								while(true) {
									args.push(this.parseType());
									if(!this.maybe(hscript_Token.TComma)) {
										break;
									}
								}
								var t1 = this.token();
								if(t1 != hscript_Token.TPClose) {
									this.unexpected(t1);
								}
								return withReturn(args);
							default:
								var t1 = _g;
								return this.unexpected(t1);
							}
						}
					}
				}
				break;
			case 6:
				var fields = [];
				var meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
						break;
					} else {
						switch(t._hx_index) {
						case 2:
							var _g = t.s;
							if(_g == "var") {
								var name = this.getIdent();
								var t1 = this.token();
								if(t1 != hscript_Token.TDoubleDot) {
									this.unexpected(t1);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								var t2 = this.token();
								if(t2 != hscript_Token.TSemicolon) {
									this.unexpected(t2);
								}
							} else {
								var name1 = _g;
								var t3 = this.token();
								if(t3 != hscript_Token.TDoubleDot) {
									this.unexpected(t3);
								}
								fields.push({ name : name1, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							var name2 = t.s;
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : name2, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
							break _hx_loop8;
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var _g = t2.ret;
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = content;
		this.readPos = 0;
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			} else if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidOp("Unsupported class type parameters"));
			}
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				} else if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						break _hx_loop2;
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
					break;
				}
			}
			var fields = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t = this.token();
				if(t != hscript_Token.TDot) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				}
				t = this.token();
				if(t == null) {
					this.unexpected(t);
				} else {
					switch(t._hx_index) {
					case 2:
						var id = t.s;
						path.push(id);
						break;
					case 3:
						if(t.s == "*") {
							star = true;
						} else {
							this.unexpected(t);
						}
						break;
					default:
						this.unexpected(t);
					}
				}
			}
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path = this.parsePath();
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DPackage(path);
		case "typedef":
			var name = this.getIdent();
			var params = this.parseParams();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TOp("="))) {
				this.unexpected(t);
			}
			var t = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name, meta : meta, params : params, isPrivate : isPrivate, t : t});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		_hx_loop1: while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else {
					var tmp;
					if(type != null) {
						if(type == null) {
							tmp = false;
						} else if(type._hx_index == 2) {
							var _g = type.fields;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t3 = this.token();
						if(t3 != hscript_Token.TSemicolon) {
							this.unexpected(t3);
						}
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
				break _hx_loop1;
			}
		}
		return null;
	}
	,readChar: function() {
		return this.input.charCodeAt(this.readPos++);
	}
	,readString: function(until) {
		var c = 0;
		var b_b = "";
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			var c = this.input.charCodeAt(this.readPos++);
			if(c != c) {
				this.line = old;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
				}
				break;
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b_b += String.fromCodePoint(c);
					break;
				case 47:
					if(this.allowJSON) {
						b_b += String.fromCodePoint(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b_b += String.fromCodePoint(10);
					break;
				case 114:
					b_b += String.fromCodePoint(13);
					break;
				case 116:
					b_b += String.fromCodePoint(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var char = this.input.charCodeAt(this.readPos++);
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							if(char != char) {
								this.line = old;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
								}
							}
							this.invalidChar(char);
						}
					}
					b_b += String.fromCodePoint(k);
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b_b += String.fromCodePoint(c);
			}
		}
		return b_b;
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.input.charCodeAt(this.readPos++);
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			if(char != char) {
				this.char = char;
				return hscript_Token.TEof;
			}
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.input.charCodeAt(this.readPos++);
				switch(char) {
				case 46:
					char = this.input.charCodeAt(this.readPos++);
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.input.charCodeAt(this.readPos++);
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.input.charCodeAt(this.readPos++) == 46) {
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						if(tk == null) {
							var _this1 = this.tokens;
							_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								var _g = tk.c;
								if(_g._hx_index == 0) {
									var e = _g.v;
									pow = e;
								} else {
									var _this2 = this.tokens;
									_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										var _this3 = this.tokens;
										_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
									} else if(tk._hx_index == 1) {
										var _g1 = tk.c;
										if(_g1._hx_index == 0) {
											var e1 = _g1.v;
											pow = -e1;
										} else {
											var _this4 = this.tokens;
											_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
										}
									} else {
										var _this5 = this.tokens;
										_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
									}
								} else {
									var _this6 = this.tokens;
									_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
								}
								break;
							default:
								var _this7 = this.tokens;
								_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.input.charCodeAt(this.readPos++);
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.input.charCodeAt(this.readPos++);
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.input.charCodeAt(this.readPos++);
		}
	}
	,preprocValue: function(id) {
		return this.preprocesorValues.h[id];
	}
	,parsePreproCond: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				var id = tk.s;
				return hscript_Expr.EIdent(id);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			var _g = e.e1;
			var _g1 = e.e2;
			switch(e.op) {
			case "&&":
				var e1 = _g;
				var e2 = _g1;
				if(this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e1 = _g;
				var e2 = _g1;
				if(!this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return true;
				}
				break;
			default:
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		case 7:
			var _g = e.prefix;
			if(e.op == "!") {
				var e1 = e.e;
				return !this.evalPreproCond(e1);
			} else {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		default:
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
			}
			return false;
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = this.readPos;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Unclosed"));
				}
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			while(char != 13 && char != 10) {
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					break;
				}
			}
			this.char = char;
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			while(true) {
				while(char != 42) {
					if(char == 10) {
						this.line++;
					}
					char = this.input.charCodeAt(this.readPos++);
					if(char != char) {
						this.line = old;
						if(!this.resumeErrors) {
							throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
						}
						break;
					}
				}
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					this.line = old;
					if(!this.resumeErrors) {
						throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
					}
					break;
				}
				if(char == 47) {
					break;
				}
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s = t.s;
			return s;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id = t.s;
			return "#" + id;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = "hscript.Tools";
hscript_Tools.iter = function(e,f) {
	switch(e._hx_index) {
	case 0:
		var _g = e.c;
		break;
	case 1:
		var _g = e.v;
		break;
	case 2:
		var _g = e.n;
		var _g = e.t;
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 3:
		var e1 = e.e;
		f(e1);
		break;
	case 4:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 5:
		var _g = e.f;
		var e1 = e.e;
		f(e1);
		break;
	case 6:
		var _g = e.op;
		var e1 = e.e1;
		var e2 = e.e2;
		f(e1);
		f(e2);
		break;
	case 7:
		var _g = e.op;
		var _g = e.prefix;
		var e1 = e.e;
		f(e1);
		break;
	case 8:
		var e1 = e.e;
		var args = e.params;
		f(e1);
		var _g = 0;
		while(_g < args.length) {
			var a = args[_g];
			++_g;
			f(a);
		}
		break;
	case 9:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		f(c);
		f(e1);
		if(e2 != null) {
			f(e2);
		}
		break;
	case 10:
		var c = e.cond;
		var e1 = e.e;
		f(c);
		f(e1);
		break;
	case 11:
		var _g = e.v;
		var it = e.it;
		var e1 = e.e;
		f(it);
		f(e1);
		break;
	case 12:case 13:
		break;
	case 14:
		var _g = e.args;
		var _g = e.name;
		var _g = e.ret;
		var e1 = e.e;
		f(e1);
		break;
	case 15:
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 16:
		var e1 = e.e;
		var i = e.index;
		f(e1);
		f(i);
		break;
	case 17:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 18:
		var _g = e.cl;
		var el = e.params;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 19:
		var e1 = e.e;
		f(e1);
		break;
	case 20:
		var _g = e.v;
		var _g = e.t;
		var e1 = e.e;
		var c = e.ecatch;
		f(e1);
		f(c);
		break;
	case 21:
		var fl = e.fl;
		var _g = 0;
		while(_g < fl.length) {
			var fi = fl[_g];
			++_g;
			f(fi.e);
		}
		break;
	case 22:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		f(c);
		f(e1);
		f(e2);
		break;
	case 23:
		var e1 = e.e;
		var cases = e.cases;
		var def = e.defaultExpr;
		f(e1);
		var _g = 0;
		while(_g < cases.length) {
			var c = cases[_g];
			++_g;
			var _g1 = 0;
			var _g2 = c.values;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				f(v);
			}
			f(c.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var c = e.cond;
		var e1 = e.e;
		f(c);
		f(e1);
		break;
	case 25:
		var name = e.name;
		var args = e.args;
		var e1 = e.e;
		if(args != null) {
			var _g = 0;
			while(_g < args.length) {
				var a = args[_g];
				++_g;
				f(a);
			}
		}
		f(e1);
		break;
	case 26:
		var _g = e.t;
		var e1 = e.e;
		f(e1);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	switch(e._hx_index) {
	case 0:
		var _g = e.c;
		edef = e;
		break;
	case 1:
		var _g = e.v;
		edef = e;
		break;
	case 2:
		var n = e.n;
		var t = e.t;
		var e1 = e.e;
		edef = hscript_Expr.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e1 = e.e;
		edef = hscript_Expr.EParent(f(e1));
		break;
	case 4:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.EBlock(_g);
		break;
	case 5:
		var e1 = e.e;
		var fi = e.f;
		edef = hscript_Expr.EField(f(e1),fi);
		break;
	case 6:
		var op = e.op;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.EBinop(op,f(e1),f(e2));
		break;
	case 7:
		var op = e.op;
		var pre = e.prefix;
		var e1 = e.e;
		edef = hscript_Expr.EUnop(op,pre,f(e1));
		break;
	case 8:
		var e1 = e.e;
		var args = e.params;
		var edef1 = f(e1);
		var _g = [];
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			_g.push(f(a));
		}
		edef = hscript_Expr.ECall(edef1,_g);
		break;
	case 9:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.EIf(f(c),f(e1),e2 != null ? f(e2) : null);
		break;
	case 10:
		var c = e.cond;
		var e1 = e.e;
		edef = hscript_Expr.EWhile(f(c),f(e1));
		break;
	case 11:
		var v = e.v;
		var it = e.it;
		var e1 = e.e;
		edef = hscript_Expr.EFor(v,f(it),f(e1));
		break;
	case 12:case 13:
		edef = e;
		break;
	case 14:
		var args = e.args;
		var e1 = e.e;
		var name = e.name;
		var t = e.ret;
		edef = hscript_Expr.EFunction(args,f(e1),name,t);
		break;
	case 15:
		var e1 = e.e;
		edef = hscript_Expr.EReturn(e1 != null ? f(e1) : null);
		break;
	case 16:
		var e1 = e.e;
		var i = e.index;
		edef = hscript_Expr.EArray(f(e1),f(i));
		break;
	case 17:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.EArrayDecl(_g);
		break;
	case 18:
		var cl = e.cl;
		var el = e.params;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.ENew(cl,_g);
		break;
	case 19:
		var e1 = e.e;
		edef = hscript_Expr.EThrow(f(e1));
		break;
	case 20:
		var e1 = e.e;
		var v = e.v;
		var t = e.t;
		var c = e.ecatch;
		edef = hscript_Expr.ETry(f(e1),v,t,f(c));
		break;
	case 21:
		var fl = e.fl;
		var _g = [];
		var _g1 = 0;
		while(_g1 < fl.length) {
			var fi = fl[_g1];
			++_g1;
			_g.push({ name : fi.name, e : f(fi.e)});
		}
		edef = hscript_Expr.EObject(_g);
		break;
	case 22:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.ETernary(f(c),f(e1),f(e2));
		break;
	case 23:
		var e1 = e.e;
		var cases = e.cases;
		var def = e.defaultExpr;
		var edef1 = f(e1);
		var _g = [];
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = [];
			var _g3 = 0;
			var _g4 = c.values;
			while(_g3 < _g4.length) {
				var v = _g4[_g3];
				++_g3;
				_g2.push(f(v));
			}
			_g.push({ values : _g2, expr : f(c.expr)});
		}
		edef = hscript_Expr.ESwitch(edef1,_g,def == null ? null : f(def));
		break;
	case 24:
		var c = e.cond;
		var e1 = e.e;
		edef = hscript_Expr.EDoWhile(f(c),f(e1));
		break;
	case 25:
		var name = e.name;
		var args = e.args;
		var e1 = e.e;
		var edef1;
		if(args == null) {
			edef1 = null;
		} else {
			var _g = [];
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				_g.push(f(a));
			}
			edef1 = _g;
		}
		edef = hscript_Expr.EMeta(name,edef1,f(e1));
		break;
	case 26:
		var e1 = e.e;
		var t = e.t;
		edef = hscript_Expr.ECheckType(f(e1),t);
		break;
	}
	return edef;
};
hscript_Tools.expr = function(e) {
	return e;
};
hscript_Tools.mk = function(e,p) {
	return e;
};
var hxjsonast_Error = function(message,pos) {
	this.message = message;
	this.pos = pos;
};
$hxClasses["hxjsonast.Error"] = hxjsonast_Error;
hxjsonast_Error.__name__ = "hxjsonast.Error";
hxjsonast_Error.prototype = {
	__class__: hxjsonast_Error
};
var hxjsonast_Json = function(value,pos) {
	this.value = value;
	this.pos = pos;
};
$hxClasses["hxjsonast.Json"] = hxjsonast_Json;
hxjsonast_Json.__name__ = "hxjsonast.Json";
hxjsonast_Json.prototype = {
	__class__: hxjsonast_Json
};
var hxjsonast_JsonValue = $hxEnums["hxjsonast.JsonValue"] = { __ename__:true,__constructs__:null
	,JString: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"hxjsonast.JsonValue",toString:$estr}; },$_._hx_name="JString",$_.__params__ = ["s"],$_)
	,JNumber: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hxjsonast.JsonValue",toString:$estr}; },$_._hx_name="JNumber",$_.__params__ = ["s"],$_)
	,JObject: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hxjsonast.JsonValue",toString:$estr}; },$_._hx_name="JObject",$_.__params__ = ["fields"],$_)
	,JArray: ($_=function(values) { return {_hx_index:3,values:values,__enum__:"hxjsonast.JsonValue",toString:$estr}; },$_._hx_name="JArray",$_.__params__ = ["values"],$_)
	,JBool: ($_=function(b) { return {_hx_index:4,b:b,__enum__:"hxjsonast.JsonValue",toString:$estr}; },$_._hx_name="JBool",$_.__params__ = ["b"],$_)
	,JNull: {_hx_name:"JNull",_hx_index:5,__enum__:"hxjsonast.JsonValue",toString:$estr}
};
hxjsonast_JsonValue.__constructs__ = [hxjsonast_JsonValue.JString,hxjsonast_JsonValue.JNumber,hxjsonast_JsonValue.JObject,hxjsonast_JsonValue.JArray,hxjsonast_JsonValue.JBool,hxjsonast_JsonValue.JNull];
var hxjsonast_JObjectField = function(name,namePos,value) {
	this.name = name;
	this.namePos = namePos;
	this.value = value;
};
$hxClasses["hxjsonast.JObjectField"] = hxjsonast_JObjectField;
hxjsonast_JObjectField.__name__ = "hxjsonast.JObjectField";
hxjsonast_JObjectField.prototype = {
	__class__: hxjsonast_JObjectField
};
var hxjsonast_Parser = function(source,filename) {
	this.source = source;
	this.filename = filename;
	this.pos = 0;
};
$hxClasses["hxjsonast.Parser"] = hxjsonast_Parser;
hxjsonast_Parser.__name__ = "hxjsonast.Parser";
hxjsonast_Parser.parse = function(source,filename) {
	return new hxjsonast_Parser(source,filename).doParse();
};
hxjsonast_Parser.prototype = {
	doParse: function() {
		var result = this.parseRec();
		var c;
		while(true) {
			c = this.source.charCodeAt(this.pos++);
			var c1 = c;
			if(!(c1 == c1)) {
				break;
			}
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				this.invalidChar();
			}
		}
		return result;
	}
	,parseRec: function() {
		while(true) {
			var c = this.source.charCodeAt(this.pos++);
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			case 34:
				var save = this.pos;
				var s = this.parseString();
				return new hxjsonast_Json(hxjsonast_JsonValue.JString(s),new hxjsonast_Position(this.filename,save - 1,this.pos));
			case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var start = this.pos - 1;
				var minus = c == 45;
				var digit = !minus;
				var zero = c == 48;
				var point = false;
				var e = false;
				var pm = false;
				var end = false;
				while(true) {
					switch(this.source.charCodeAt(this.pos++)) {
					case 43:case 45:
						if(!e || pm) {
							this.invalidNumber(start);
						}
						digit = false;
						pm = true;
						break;
					case 46:
						if(minus || point || e) {
							this.invalidNumber(start);
						}
						digit = false;
						point = true;
						break;
					case 48:
						if(zero && !point) {
							this.invalidNumber(start);
						}
						if(minus) {
							minus = false;
							zero = true;
						}
						digit = true;
						break;
					case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						if(zero && !point) {
							this.invalidNumber(start);
						}
						if(minus) {
							minus = false;
						}
						digit = true;
						zero = false;
						break;
					case 69:case 101:
						if(minus || zero || e) {
							this.invalidNumber(start);
						}
						digit = false;
						e = true;
						break;
					default:
						if(!digit) {
							this.invalidNumber(start);
						}
						this.pos--;
						end = true;
					}
					if(end) {
						break;
					}
				}
				var s1 = HxOverrides.substr(this.source,start,this.pos - start);
				return new hxjsonast_Json(hxjsonast_JsonValue.JNumber(s1),new hxjsonast_Position(this.filename,start,this.pos));
			case 91:
				var values = [];
				var comma = null;
				var startPos = this.pos - 1;
				while(true) switch(this.source.charCodeAt(this.pos++)) {
				case 9:case 10:case 13:case 32:
					break;
				case 44:
					if(comma) {
						comma = false;
					} else {
						this.invalidChar();
					}
					break;
				case 93:
					if(comma == false) {
						this.invalidChar();
					}
					return new hxjsonast_Json(hxjsonast_JsonValue.JArray(values),new hxjsonast_Position(this.filename,startPos,this.pos));
				default:
					if(comma) {
						this.invalidChar();
					}
					this.pos--;
					values.push(this.parseRec());
					comma = true;
				}
				break;
			case 102:
				var save1 = this.pos;
				if(this.source.charCodeAt(this.pos++) != 97 || this.source.charCodeAt(this.pos++) != 108 || this.source.charCodeAt(this.pos++) != 115 || this.source.charCodeAt(this.pos++) != 101) {
					this.pos = save1;
					this.invalidChar();
				}
				return new hxjsonast_Json(hxjsonast_JsonValue.JBool(false),new hxjsonast_Position(this.filename,save1 - 1,this.pos));
			case 110:
				var save2 = this.pos;
				if(this.source.charCodeAt(this.pos++) != 117 || this.source.charCodeAt(this.pos++) != 108 || this.source.charCodeAt(this.pos++) != 108) {
					this.pos = save2;
					this.invalidChar();
				}
				return new hxjsonast_Json(hxjsonast_JsonValue.JNull,new hxjsonast_Position(this.filename,save2 - 1,this.pos));
			case 116:
				var save3 = this.pos;
				if(this.source.charCodeAt(this.pos++) != 114 || this.source.charCodeAt(this.pos++) != 117 || this.source.charCodeAt(this.pos++) != 101) {
					this.pos = save3;
					this.invalidChar();
				}
				return new hxjsonast_Json(hxjsonast_JsonValue.JBool(true),new hxjsonast_Position(this.filename,save3 - 1,this.pos));
			case 123:
				var fields = [];
				var names_h = Object.create(null);
				var field = null;
				var fieldPos = null;
				var comma1 = null;
				var startPos1 = this.pos - 1;
				while(true) switch(this.source.charCodeAt(this.pos++)) {
				case 9:case 10:case 13:case 32:
					break;
				case 34:
					if(field != null || comma1) {
						this.invalidChar();
					}
					var fieldStartPos = this.pos - 1;
					field = this.parseString();
					fieldPos = new hxjsonast_Position(this.filename,fieldStartPos,this.pos);
					if(Object.prototype.hasOwnProperty.call(names_h,field)) {
						throw haxe_Exception.thrown(new hxjsonast_Error("Duplicate field name \"" + field + "\"",fieldPos));
					} else {
						names_h[field] = true;
					}
					break;
				case 44:
					if(comma1) {
						comma1 = false;
					} else {
						this.invalidChar();
					}
					break;
				case 58:
					if(field == null) {
						this.invalidChar();
					}
					fields.push(new hxjsonast_JObjectField(field,fieldPos,this.parseRec()));
					field = null;
					fieldPos = null;
					comma1 = true;
					break;
				case 125:
					if(field != null || comma1 == false) {
						this.invalidChar();
					}
					return new hxjsonast_Json(hxjsonast_JsonValue.JObject(fields),new hxjsonast_Position(this.filename,startPos1,this.pos));
				default:
					this.invalidChar();
				}
				break;
			default:
				this.invalidChar();
			}
		}
	}
	,parseString: function() {
		var start = this.pos;
		var buf = null;
		while(true) {
			var c = this.source.charCodeAt(this.pos++);
			if(c == 34) {
				break;
			}
			if(c == 92) {
				if(buf == null) {
					buf = new StringBuf();
				}
				var s = this.source;
				var len = this.pos - start - 1;
				buf.b += len == null ? HxOverrides.substr(s,start,null) : HxOverrides.substr(s,start,len);
				c = this.source.charCodeAt(this.pos++);
				switch(c) {
				case 34:case 47:case 92:
					buf.b += String.fromCodePoint(c);
					break;
				case 98:
					buf.b += String.fromCodePoint(8);
					break;
				case 102:
					buf.b += String.fromCodePoint(12);
					break;
				case 110:
					buf.b += String.fromCodePoint(10);
					break;
				case 114:
					buf.b += String.fromCodePoint(13);
					break;
				case 116:
					buf.b += String.fromCodePoint(9);
					break;
				case 117:
					var uc = Std.parseInt("0x" + HxOverrides.substr(this.source,this.pos,4));
					this.pos += 4;
					buf.b += String.fromCodePoint(uc);
					break;
				default:
					throw haxe_Exception.thrown(new hxjsonast_Error("Invalid escape sequence \\" + String.fromCodePoint(c),new hxjsonast_Position(this.filename,this.pos - 2,this.pos)));
				}
				start = this.pos;
			} else if(c != c) {
				this.pos--;
				throw haxe_Exception.thrown(new hxjsonast_Error("Unclosed string",new hxjsonast_Position(this.filename,start - 1,this.pos)));
			}
		}
		if(buf == null) {
			return HxOverrides.substr(this.source,start,this.pos - start - 1);
		} else {
			var s = this.source;
			var len = this.pos - start - 1;
			buf.b += len == null ? HxOverrides.substr(s,start,null) : HxOverrides.substr(s,start,len);
			return buf.b;
		}
	}
	,parseNumber: function(c) {
		var start = this.pos - 1;
		var minus = c == 45;
		var digit = !minus;
		var zero = c == 48;
		var point = false;
		var e = false;
		var pm = false;
		var end = false;
		while(true) {
			switch(this.source.charCodeAt(this.pos++)) {
			case 43:case 45:
				if(!e || pm) {
					this.invalidNumber(start);
				}
				digit = false;
				pm = true;
				break;
			case 46:
				if(minus || point || e) {
					this.invalidNumber(start);
				}
				digit = false;
				point = true;
				break;
			case 48:
				if(zero && !point) {
					this.invalidNumber(start);
				}
				if(minus) {
					minus = false;
					zero = true;
				}
				digit = true;
				break;
			case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				if(zero && !point) {
					this.invalidNumber(start);
				}
				if(minus) {
					minus = false;
				}
				digit = true;
				zero = false;
				break;
			case 69:case 101:
				if(minus || zero || e) {
					this.invalidNumber(start);
				}
				digit = false;
				e = true;
				break;
			default:
				if(!digit) {
					this.invalidNumber(start);
				}
				this.pos--;
				end = true;
			}
			if(end) {
				break;
			}
		}
		var s = HxOverrides.substr(this.source,start,this.pos - start);
		return new hxjsonast_Json(hxjsonast_JsonValue.JNumber(s),new hxjsonast_Position(this.filename,start,this.pos));
	}
	,nextChar: function() {
		return this.source.charCodeAt(this.pos++);
	}
	,mk: function(pos,value) {
		return new hxjsonast_Json(value,pos);
	}
	,mkPos: function(min,max) {
		return new hxjsonast_Position(this.filename,min,max);
	}
	,invalidChar: function() {
		this.pos--;
		throw haxe_Exception.thrown(new hxjsonast_Error("Invalid character: " + this.source.charAt(this.pos),new hxjsonast_Position(this.filename,this.pos,this.pos + 1)));
	}
	,invalidNumber: function(start) {
		throw haxe_Exception.thrown(new hxjsonast_Error("Invalid number: " + this.source.substring(start,this.pos),new hxjsonast_Position(this.filename,start,this.pos)));
	}
	,__class__: hxjsonast_Parser
};
var hxjsonast_Position = function(file,min,max) {
	this.file = file;
	this.min = min;
	this.max = max;
};
$hxClasses["hxjsonast.Position"] = hxjsonast_Position;
hxjsonast_Position.__name__ = "hxjsonast.Position";
hxjsonast_Position.prototype = {
	__class__: hxjsonast_Position
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		return null;
	}
};
var json2object_Error = $hxEnums["json2object.Error"] = { __ename__:true,__constructs__:null
	,IncorrectType: ($_=function(variable,expected,pos) { return {_hx_index:0,variable:variable,expected:expected,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="IncorrectType",$_.__params__ = ["variable","expected","pos"],$_)
	,IncorrectEnumValue: ($_=function(value,expected,pos) { return {_hx_index:1,value:value,expected:expected,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="IncorrectEnumValue",$_.__params__ = ["value","expected","pos"],$_)
	,InvalidEnumConstructor: ($_=function(value,expected,pos) { return {_hx_index:2,value:value,expected:expected,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="InvalidEnumConstructor",$_.__params__ = ["value","expected","pos"],$_)
	,UninitializedVariable: ($_=function(variable,pos) { return {_hx_index:3,variable:variable,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="UninitializedVariable",$_.__params__ = ["variable","pos"],$_)
	,UnknownVariable: ($_=function(variable,pos) { return {_hx_index:4,variable:variable,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="UnknownVariable",$_.__params__ = ["variable","pos"],$_)
	,ParserError: ($_=function(message,pos) { return {_hx_index:5,message:message,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="ParserError",$_.__params__ = ["message","pos"],$_)
	,CustomFunctionException: ($_=function(e,pos) { return {_hx_index:6,e:e,pos:pos,__enum__:"json2object.Error",toString:$estr}; },$_._hx_name="CustomFunctionException",$_.__params__ = ["e","pos"],$_)
};
json2object_Error.__constructs__ = [json2object_Error.IncorrectType,json2object_Error.IncorrectEnumValue,json2object_Error.InvalidEnumConstructor,json2object_Error.UninitializedVariable,json2object_Error.UnknownVariable,json2object_Error.ParserError,json2object_Error.CustomFunctionException];
var json2object_InternalError = $hxEnums["json2object.InternalError"] = { __ename__:true,__constructs__:null
	,AbstractNoJsonRepresentation: ($_=function(name) { return {_hx_index:0,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="AbstractNoJsonRepresentation",$_.__params__ = ["name"],$_)
	,CannotGenerateSchema: ($_=function(name) { return {_hx_index:1,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="CannotGenerateSchema",$_.__params__ = ["name"],$_)
	,HandleExpr: {_hx_name:"HandleExpr",_hx_index:2,__enum__:"json2object.InternalError",toString:$estr}
	,ParsingThrow: {_hx_name:"ParsingThrow",_hx_index:3,__enum__:"json2object.InternalError",toString:$estr}
	,UnsupportedAbstractEnumType: ($_=function(name) { return {_hx_index:4,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="UnsupportedAbstractEnumType",$_.__params__ = ["name"],$_)
	,UnsupportedEnumAbstractValue: ($_=function(name) { return {_hx_index:5,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="UnsupportedEnumAbstractValue",$_.__params__ = ["name"],$_)
	,UnsupportedMapKeyType: ($_=function(name) { return {_hx_index:6,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="UnsupportedMapKeyType",$_.__params__ = ["name"],$_)
	,UnsupportedSchemaObjectType: ($_=function(name) { return {_hx_index:7,name:name,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="UnsupportedSchemaObjectType",$_.__params__ = ["name"],$_)
	,UnsupportedSchemaType: ($_=function(type) { return {_hx_index:8,type:type,__enum__:"json2object.InternalError",toString:$estr}; },$_._hx_name="UnsupportedSchemaType",$_.__params__ = ["type"],$_)
};
json2object_InternalError.__constructs__ = [json2object_InternalError.AbstractNoJsonRepresentation,json2object_InternalError.CannotGenerateSchema,json2object_InternalError.HandleExpr,json2object_InternalError.ParsingThrow,json2object_InternalError.UnsupportedAbstractEnumType,json2object_InternalError.UnsupportedEnumAbstractValue,json2object_InternalError.UnsupportedMapKeyType,json2object_InternalError.UnsupportedSchemaObjectType,json2object_InternalError.UnsupportedSchemaType];
var json2object_CustomFunctionError = function(message) {
	this.message = message;
};
$hxClasses["json2object.CustomFunctionError"] = json2object_CustomFunctionError;
json2object_CustomFunctionError.__name__ = "json2object.CustomFunctionError";
json2object_CustomFunctionError.prototype = {
	__class__: json2object_CustomFunctionError
};
var json2object_ErrorUtils = function() { };
$hxClasses["json2object.ErrorUtils"] = json2object_ErrorUtils;
json2object_ErrorUtils.__name__ = "json2object.ErrorUtils";
json2object_ErrorUtils.convertError = function(e) {
	var pos;
	switch(e._hx_index) {
	case 0:
		var _g = e.variable;
		var _g = e.expected;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 1:
		var _g = e.value;
		var _g = e.expected;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 2:
		var _g = e.value;
		var _g = e.expected;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 3:
		var _g = e.variable;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 4:
		var _g = e.variable;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 5:
		var _g = e.message;
		var pos1 = e.pos;
		pos = pos1;
		break;
	case 6:
		var _g = e.e;
		var pos1 = e.pos;
		pos = pos1;
		break;
	}
	var header = "";
	if(pos != null) {
		var file = pos.file == "" ? "line" : "" + pos.file + ":";
		if(pos.lines.length == 1) {
			header = "" + file + pos.lines[0].number + ": characters " + pos.lines[0].start + "-" + pos.lines[0].end + " : ";
		} else if(pos.lines.length > 1) {
			header = "" + file + pos.lines[0].number + ": lines " + pos.lines[0].number + "-" + pos.lines[pos.lines.length - 1].number + " : ";
		}
	}
	switch(e._hx_index) {
	case 0:
		var _g = e.pos;
		var variable = e.variable;
		var expected = e.expected;
		return header + ("Variable '" + variable + "' should be of type '" + expected + "'");
	case 1:
		var _g = e.pos;
		var variable = e.value;
		var expected = e.expected;
		return header + ("Identifier '" + variable + "' isn't part of '" + expected + "'");
	case 2:
		var _g = e.pos;
		var variable = e.value;
		var expected = e.expected;
		return header + ("Enum argument '" + variable + "' should be of type '" + expected + "'");
	case 3:
		var _g = e.pos;
		var variable = e.variable;
		return header + ("Variable '" + variable + "' should be in the json");
	case 4:
		var _g = e.pos;
		var variable = e.variable;
		return header + ("Variable '" + variable + "' isn't part of the schema");
	case 5:
		var _g = e.pos;
		var message = e.message;
		return header + ("Parser error: " + message);
	case 6:
		var _g = e.pos;
		var e1 = e.e;
		return header + ("Custom function exception: " + (e1 == null ? "null" : Std.string(e1)));
	}
};
json2object_ErrorUtils.convertErrorArray = function(e) {
	var f = json2object_ErrorUtils.convertError;
	var result = new Array(e.length);
	var _g = 0;
	var _g1 = e.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(e[i]);
	}
	return result.join("\n");
};
var json2object_JsonParser = function() { };
$hxClasses["json2object.JsonParser"] = json2object_JsonParser;
json2object_JsonParser.__name__ = "json2object.JsonParser";
var json2object_JsonWriter = function() { };
$hxClasses["json2object.JsonWriter"] = json2object_JsonWriter;
json2object_JsonWriter.__name__ = "json2object.JsonWriter";
var json2object_PositionUtils = function(content) {
	this.linesInfo = [];
	var s = 0;
	var e = 0;
	var i = 0;
	var lineCount = 0;
	while(i < content.length) switch(content.charAt(i)) {
	case "\n":
		e = i;
		this.linesInfo.push({ number : lineCount, start : s, end : e});
		++lineCount;
		++i;
		s = i;
		break;
	case "\r":
		e = i;
		if(content.charAt(i + 1) == "\n") {
			++e;
		}
		this.linesInfo.push({ number : lineCount, start : s, end : e});
		++lineCount;
		i = e + 1;
		s = i;
		break;
	default:
		++i;
	}
	this.linesInfo.push({ number : lineCount, start : s, end : i});
};
$hxClasses["json2object.PositionUtils"] = json2object_PositionUtils;
json2object_PositionUtils.__name__ = "json2object.PositionUtils";
json2object_PositionUtils.prototype = {
	convertPosition: function(position) {
		var file = position.file;
		var min = position.min;
		var max = position.max;
		var pos = { file : file, min : min + 1, max : max + 1, lines : []};
		var lastLine = this.linesInfo.length - 1;
		var bounds_min = 0;
		var bounds_max = lastLine;
		if(min > this.linesInfo[0].end) {
			while(bounds_max > bounds_min) {
				var i = (bounds_min + bounds_max) / 2 | 0;
				var line = this.linesInfo[i];
				if(line.start == min) {
					bounds_min = i;
					bounds_max = i;
				}
				if(line.end < min) {
					bounds_min = i + 1;
				}
				if(line.start > min || line.end >= min && line.start < min) {
					bounds_max = i;
				}
			}
		}
		var _g = bounds_min;
		var _g1 = this.linesInfo.length;
		while(_g < _g1) {
			var i = _g++;
			var line = this.linesInfo[i];
			if(line.start <= min && line.end >= max) {
				pos.lines.push({ number : line.number + 1, start : min - line.start + 1, end : max - line.start + 1});
				break;
			}
			if(line.start <= min && min <= line.end) {
				pos.lines.push({ number : line.number + 1, start : min - line.start + 1, end : line.end + 1});
			}
			if(line.start <= max && max <= line.end) {
				pos.lines.push({ number : line.number + 1, start : line.start + 1, end : max - line.start + 1});
			}
			if(line.start >= max || line.end >= max) {
				break;
			}
		}
		return pos;
	}
	,revert: function(position) {
		return new hxjsonast_Position(position.file,position.min - 1,position.max - 1);
	}
	,__class__: json2object_PositionUtils
};
var json2object_writer_StringUtils = function() { };
$hxClasses["json2object.writer.StringUtils"] = json2object_writer_StringUtils;
json2object_writer_StringUtils.__name__ = "json2object.writer.StringUtils";
json2object_writer_StringUtils.quote = function(s) {
	var buf_b = "";
	buf_b += String.fromCodePoint(34);
	var i = 0;
	while(true) {
		var c = s.charCodeAt(i++);
		if(c != c) {
			break;
		}
		switch(c) {
		case 8:
			buf_b += "\\b";
			break;
		case 9:
			buf_b += "\\t";
			break;
		case 10:
			buf_b += "\\n";
			break;
		case 12:
			buf_b += "\\f";
			break;
		case 13:
			buf_b += "\\r";
			break;
		case 34:
			buf_b += "\\\"";
			break;
		case 92:
			buf_b += "\\\\";
			break;
		default:
			buf_b += String.fromCodePoint(c);
		}
	}
	buf_b += String.fromCodePoint(34);
	return buf_b;
};
var macros_FileEmbedder = function() { };
$hxClasses["macros.FileEmbedder"] = macros_FileEmbedder;
macros_FileEmbedder.__name__ = "macros.FileEmbedder";
var reusablemodel_BoolProperty = function() {
	this.previousState = false;
	this.state = false;
};
$hxClasses["reusablemodel.BoolProperty"] = reusablemodel_BoolProperty;
reusablemodel_BoolProperty.__name__ = "reusablemodel.BoolProperty";
reusablemodel_BoolProperty.prototype = {
	updated: function() {
		return this.state != this.previousState;
	}
	,isTrueThisFrame: function() {
		if(this.state != this.previousState) {
			return this.state == true;
		} else {
			return false;
		}
	}
	,isFalseThisFrame: function() {
		if(this.state != this.previousState) {
			return this.state == false;
		} else {
			return false;
		}
	}
	,startFrame: function() {
		this.previousState = this.state;
	}
	,__class__: reusablemodel_BoolProperty
};
var reusablemodel_FrameCountSystem = function() {
	this.frame = 0;
};
$hxClasses["reusablemodel.FrameCountSystem"] = reusablemodel_FrameCountSystem;
reusablemodel_FrameCountSystem.__name__ = "reusablemodel.FrameCountSystem";
reusablemodel_FrameCountSystem.prototype = {
	update: function() {
		this.frame++;
		if(this.frame > 99999999) {
			this.frame = 0;
		}
	}
	,__class__: reusablemodel_FrameCountSystem
};
var reusablemodel_FrameProperty = function(data) {
	this.frame = 0;
	this._data = data;
};
$hxClasses["reusablemodel.FrameProperty"] = reusablemodel_FrameProperty;
reusablemodel_FrameProperty.__name__ = "reusablemodel.FrameProperty";
reusablemodel_FrameProperty.prototype = {
	setData: function(data,frame) {
		this.frame = frame;
		this._data = data;
	}
	,isUpdated: function(frame) {
		return this.frame == frame;
	}
	,get_data: function() {
		return this._data;
	}
	,__class__: reusablemodel_FrameProperty
	,__properties__: {get_data:"get_data"}
};
var seedyrng_Seedy = function() { };
$hxClasses["seedyrng.Seedy"] = seedyrng_Seedy;
seedyrng_Seedy.__name__ = "seedyrng.Seedy";
seedyrng_Seedy.newInstance = function() {
	return new seedyrng_Random(null,new seedyrng_Xorshift128Plus());
};
seedyrng_Seedy.random = function() {
	return seedyrng_Seedy.instance.random();
};
seedyrng_Seedy.randomInt = function(lower,upper) {
	return seedyrng_Seedy.instance.randomInt(lower,upper);
};
seedyrng_Seedy.uniform = function(lower,upper) {
	return seedyrng_Seedy.instance.uniform(lower,upper);
};
seedyrng_Seedy.choice = function(array) {
	return seedyrng_Seedy.instance.choice(array);
};
seedyrng_Seedy.shuffle = function(array) {
	seedyrng_Seedy.instance.shuffle(array);
};
var spine_Animation = function(name,timelines,duration) {
	this.duration = 0;
	this.hashCode = Math.random() * 99999999 | 0;
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.name = name;
	this.duration = duration;
	var capacity = timelines.length;
	var this1 = [];
	this.timelineIds = this1;
	this.setTimelines(timelines);
};
$hxClasses["spine.Animation"] = spine_Animation;
spine_Animation.__name__ = "spine.Animation";
spine_Animation.prototype = {
	getTimelines: function() {
		return this.timelines;
	}
	,setTimelines: function(timelines) {
		if(timelines == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("timelines cannot be null."));
		}
		this.timelines = timelines;
		var n = timelines.length;
		var this1 = this.timelineIds;
		this1.splice(0,this1.length);
		var items = timelines;
		var i = 0;
		while(i < n) {
			var result = items[i];
			spine_support_utils_ObjectSet.addAll(this.timelineIds,result.getPropertyIds());
			++i;
		}
	}
	,hasTimeline: function(propertyIds) {
		var _g = 0;
		var _g1 = propertyIds;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			if(this.timelineIds.indexOf(id) != -1) {
				return true;
			}
		}
		return false;
	}
	,getDuration: function() {
		return this.duration;
	}
	,setDuration: function(duration) {
		this.duration = duration;
	}
	,apply: function(skeleton,lastTime,time,loop,events,alpha,blend,direction) {
		if(skeleton == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
		}
		if(loop && this.duration != 0) {
			time %= this.duration;
			if(lastTime > 0) {
				lastTime %= this.duration;
			}
		}
		var timelines = this.timelines;
		var i = 0;
		var n = this.timelines.length;
		while(i < n) {
			var result = timelines[i];
			result.apply(skeleton,lastTime,time,events,alpha,blend,direction);
			++i;
		}
	}
	,getName: function() {
		return this.name;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: spine_Animation
};
var spine_Timeline = function(frameCount,propertyIds) {
	if(propertyIds == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("propertyIds cannot be null."));
	}
	this._propertyIds = propertyIds;
	var length = frameCount * this.getFrameEntries();
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.frames = array;
};
$hxClasses["spine.Timeline"] = spine_Timeline;
spine_Timeline.__name__ = "spine.Timeline";
spine_Timeline.search = function(frames,time) {
	var n = frames.length;
	var i = 1;
	while(i < n) {
		if(frames[i] > time) {
			return i - 1;
		}
		++i;
	}
	return n - 1;
};
spine_Timeline.searchWithStep = function(frames,time,step) {
	var n = frames.length;
	var i = step;
	while(i < n) {
		if(frames[i] > time) {
			return i - step;
		}
		i += step;
	}
	return n - step;
};
spine_Timeline.prototype = {
	getPropertyIds: function() {
		return this._propertyIds;
	}
	,getFrames: function() {
		return this.frames;
	}
	,getFrameEntries: function() {
		return 1;
	}
	,getFrameCount: function() {
		return this.frames.length / this.getFrameEntries() | 0;
	}
	,getDuration: function() {
		return this.frames[this.frames.length - this.getFrameEntries()];
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
	}
	,__class__: spine_Timeline
};
var spine_BoneTimeline = function() { };
$hxClasses["spine.BoneTimeline"] = spine_BoneTimeline;
spine_BoneTimeline.__name__ = "spine.BoneTimeline";
spine_BoneTimeline.__isInterface__ = true;
spine_BoneTimeline.prototype = {
	__class__: spine_BoneTimeline
};
var spine_SlotTimeline = function() { };
$hxClasses["spine.SlotTimeline"] = spine_SlotTimeline;
spine_SlotTimeline.__name__ = "spine.SlotTimeline";
spine_SlotTimeline.__isInterface__ = true;
spine_SlotTimeline.prototype = {
	__class__: spine_SlotTimeline
};
var spine_CurveTimeline = function(frameCount,bezierCount,propertyIds) {
	spine_Timeline.call(this,frameCount,propertyIds);
	var length = frameCount + bezierCount * 18;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.curves = array;
	this.curves[frameCount - 1] = 1;
};
$hxClasses["spine.CurveTimeline"] = spine_CurveTimeline;
spine_CurveTimeline.__name__ = "spine.CurveTimeline";
spine_CurveTimeline.__super__ = spine_Timeline;
spine_CurveTimeline.prototype = $extend(spine_Timeline.prototype,{
	setLinear: function(frame) {
		this.curves[frame] = 0;
	}
	,setStepped: function(frame) {
		this.curves[frame] = 1;
	}
	,getCurveType: function(frame) {
		return this.curves[frame] | 0;
	}
	,shrink: function(bezierCount) {
		var size = this.getFrameCount() + bezierCount * 18;
		if(this.curves.length > size) {
			var length = size;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			var newCurves = array;
			var src = this.curves;
			var dest = newCurves;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,size);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + size));
			}
			this.curves = newCurves;
		}
	}
	,setBezier: function(bezier,frame,value,time1,value1,cx1,cy1,cx2,cy2,time2,value2) {
		var curves = this.curves;
		var i = this.getFrameCount() + bezier * 18;
		if(value == 0) {
			curves[frame] = 2 + i;
		}
		var tmpx = (time1 - cx1 * 2 + cx2) * 0.03;
		var tmpy = (value1 - cy1 * 2 + cy2) * 0.03;
		var dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006;
		var dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;
		var ddx = tmpx * 2 + dddx;
		var ddy = tmpy * 2 + dddy;
		var dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667;
		var dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;
		var x = time1 + dx;
		var y = value1 + dy;
		var n = i + 18;
		while(i < n) {
			curves[i] = x;
			curves[i + 1] = y;
			dx += ddx;
			dy += ddy;
			ddx += dddx;
			ddy += dddy;
			x += dx;
			y += dy;
			i += 2;
		}
	}
	,getBezierValue: function(time,frameIndex,valueOffset,i) {
		var curves = this.curves;
		if(curves[i] > time) {
			var x = this.frames[frameIndex];
			var y = this.frames[frameIndex + valueOffset];
			return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);
		}
		var n = i + 18;
		i += 2;
		while(i < n) {
			if(curves[i] >= time) {
				var x = curves[i - 2];
				var y = curves[i - 1];
				return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);
			}
			i += 2;
		}
		frameIndex += this.getFrameEntries();
		var x = curves[n - 2];
		var y = curves[n - 1];
		return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);
	}
	,__class__: spine_CurveTimeline
});
var spine_CurveTimeline1 = function(frameCount,bezierCount,propertyId) {
	spine_CurveTimeline.call(this,frameCount,bezierCount,[propertyId]);
};
$hxClasses["spine.CurveTimeline1"] = spine_CurveTimeline1;
spine_CurveTimeline1.__name__ = "spine.CurveTimeline1";
spine_CurveTimeline1.__super__ = spine_CurveTimeline;
spine_CurveTimeline1.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 2;
	}
	,setFrame: function(frame,time,value) {
		frame <<= 1;
		this.frames[frame] = time;
		this.frames[frame + 1] = value;
	}
	,getCurveValue: function(time) {
		var frames = this.frames;
		var i = frames.length - 2;
		var ii = 2;
		while(ii <= i) {
			if(frames[ii] > time) {
				i = ii - 2;
				break;
			}
			ii += 2;
		}
		var curveType = this.curves[i >> 1] | 0;
		var _continueAfterSwitch0 = false;
		while(true) {
			var _switchCond0 = curveType;
			if(_switchCond0 == 0) {
				var before = frames[i];
				var value = frames[i + 1];
				return value + (time - before) / (frames[i + 2] - before) * (frames[i + 2 + 1] - value);
			} else if(_switchCond0 == 1) {
				return frames[i + 1];
			}
			break;
		}
		return this.getBezierValue(time,i,1,curveType - 2);
	}
	,__class__: spine_CurveTimeline1
});
var spine_CurveTimeline2 = function(frameCount,bezierCount,propertyId1,propertyId2) {
	spine_CurveTimeline.call(this,frameCount,bezierCount,[propertyId1,propertyId2]);
};
$hxClasses["spine.CurveTimeline2"] = spine_CurveTimeline2;
spine_CurveTimeline2.__name__ = "spine.CurveTimeline2";
spine_CurveTimeline2.__super__ = spine_CurveTimeline;
spine_CurveTimeline2.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 3;
	}
	,setFrame: function(frame,time,value1,value2) {
		frame *= 3;
		this.frames[frame] = time;
		this.frames[frame + 1] = value1;
		this.frames[frame + 2] = value2;
	}
	,__class__: spine_CurveTimeline2
});
var spine_RotateTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,0 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.RotateTimeline"] = spine_RotateTimeline;
spine_RotateTimeline.__name__ = "spine.RotateTimeline";
spine_RotateTimeline.__interfaces__ = [spine_BoneTimeline];
spine_RotateTimeline.__super__ = spine_CurveTimeline1;
spine_RotateTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		if(time < this.frames[0]) {
			var _continueAfterSwitch1 = false;
			while(true) {
				var _switchCond1 = blend;
				if(_switchCond1 == 0) {
					bone.rotation = bone.data.rotation;
					return;
				} else if(_switchCond1 == 1) {
					bone.rotation += (bone.data.rotation - bone.rotation) * alpha;
				}
				break;
			}
			return;
		}
		var r = this.getCurveValue(time);
		var _continueAfterSwitch2 = false;
		while(true) {
			var _switchCond2 = blend;
			if(_switchCond2 == 0) {
				bone.rotation = bone.data.rotation + r * alpha;
				break;
			} else if(_switchCond2 == 1) {
				r += bone.data.rotation - bone.rotation;
				bone.rotation += r * alpha;
			} else if(_switchCond2 == 2) {
				r += bone.data.rotation - bone.rotation;
				bone.rotation += r * alpha;
			} else if(_switchCond2 == 3) {
				bone.rotation += r * alpha;
			}
			break;
		}
	}
	,__class__: spine_RotateTimeline
});
var spine_TranslateTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline2.call(this,frameCount,bezierCount,1 + "|" + boneIndex,2 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.TranslateTimeline"] = spine_TranslateTimeline;
spine_TranslateTimeline.__name__ = "spine.TranslateTimeline";
spine_TranslateTimeline.__interfaces__ = [spine_BoneTimeline];
spine_TranslateTimeline.__super__ = spine_CurveTimeline2;
spine_TranslateTimeline.prototype = $extend(spine_CurveTimeline2.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch3 = false;
			while(true) {
				var _switchCond3 = blend;
				if(_switchCond3 == 0) {
					bone.x = bone.data.x;
					bone.y = bone.data.y;
					return;
				} else if(_switchCond3 == 1) {
					bone.x += (bone.data.x - bone.x) * alpha;
					bone.y += (bone.data.y - bone.y) * alpha;
				}
				break;
			}
			return;
		}
		var x = 0;
		var y = 0;
		var i = spine_Timeline.searchWithStep(frames,time,3);
		var curveType = this.curves[i / 3 | 0] | 0;
		var _continueAfterSwitch4 = false;
		while(true) {
			var _switchCond4 = curveType;
			if(_switchCond4 == 0) {
				var before = frames[i];
				x = frames[i + 1];
				y = frames[i + 2];
				var t = (time - before) / (frames[i + 3] - before);
				x += (frames[i + 3 + 1] - x) * t;
				y += (frames[i + 3 + 2] - y) * t;
				break;
			} else if(_switchCond4 == 1) {
				x = frames[i + 1];
				y = frames[i + 2];
				break;
			} else {
				x = this.getBezierValue(time,i,1,curveType - 2 | 0);
				y = this.getBezierValue(time,i,2,curveType + 18 - 2);
			}
			break;
		}
		var _continueAfterSwitch5 = false;
		while(true) {
			var _switchCond5 = blend;
			if(_switchCond5 == 0) {
				bone.x = bone.data.x + x * alpha;
				bone.y = bone.data.y + y * alpha;
				break;
			} else if(_switchCond5 == 1) {
				bone.x += (bone.data.x + x - bone.x) * alpha;
				bone.y += (bone.data.y + y - bone.y) * alpha;
				break;
			} else if(_switchCond5 == 2) {
				bone.x += (bone.data.x + x - bone.x) * alpha;
				bone.y += (bone.data.y + y - bone.y) * alpha;
				break;
			} else if(_switchCond5 == 3) {
				bone.x += x * alpha;
				bone.y += y * alpha;
			}
			break;
		}
	}
	,__class__: spine_TranslateTimeline
});
var spine_TranslateXTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,1 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.TranslateXTimeline"] = spine_TranslateXTimeline;
spine_TranslateXTimeline.__name__ = "spine.TranslateXTimeline";
spine_TranslateXTimeline.__interfaces__ = [spine_BoneTimeline];
spine_TranslateXTimeline.__super__ = spine_CurveTimeline1;
spine_TranslateXTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch6 = false;
			while(true) {
				var _switchCond6 = blend;
				if(_switchCond6 == 0) {
					bone.x = bone.data.x;
					return;
				} else if(_switchCond6 == 1) {
					bone.x += (bone.data.x - bone.x) * alpha;
				}
				break;
			}
			return;
		}
		var x = this.getCurveValue(time);
		var _continueAfterSwitch7 = false;
		while(true) {
			var _switchCond7 = blend;
			if(_switchCond7 == 0) {
				bone.x = bone.data.x + x * alpha;
				break;
			} else if(_switchCond7 == 1) {
				bone.x += (bone.data.x + x - bone.x) * alpha;
				break;
			} else if(_switchCond7 == 2) {
				bone.x += (bone.data.x + x - bone.x) * alpha;
				break;
			} else if(_switchCond7 == 3) {
				bone.x += x * alpha;
			}
			break;
		}
	}
	,__class__: spine_TranslateXTimeline
});
var spine_TranslateYTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,2 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.TranslateYTimeline"] = spine_TranslateYTimeline;
spine_TranslateYTimeline.__name__ = "spine.TranslateYTimeline";
spine_TranslateYTimeline.__interfaces__ = [spine_BoneTimeline];
spine_TranslateYTimeline.__super__ = spine_CurveTimeline1;
spine_TranslateYTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch8 = false;
			while(true) {
				var _switchCond8 = blend;
				if(_switchCond8 == 0) {
					bone.y = bone.data.y;
					return;
				} else if(_switchCond8 == 1) {
					bone.y += (bone.data.y - bone.y) * alpha;
				}
				break;
			}
			return;
		}
		var y = this.getCurveValue(time);
		var _continueAfterSwitch9 = false;
		while(true) {
			var _switchCond9 = blend;
			if(_switchCond9 == 0) {
				bone.y = bone.data.y + y * alpha;
				break;
			} else if(_switchCond9 == 1) {
				bone.y += (bone.data.y + y - bone.y) * alpha;
				break;
			} else if(_switchCond9 == 2) {
				bone.y += (bone.data.y + y - bone.y) * alpha;
				break;
			} else if(_switchCond9 == 3) {
				bone.y += y * alpha;
			}
			break;
		}
	}
	,__class__: spine_TranslateYTimeline
});
var spine_ScaleTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline2.call(this,frameCount,bezierCount,3 + "|" + boneIndex,4 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ScaleTimeline"] = spine_ScaleTimeline;
spine_ScaleTimeline.__name__ = "spine.ScaleTimeline";
spine_ScaleTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ScaleTimeline.__super__ = spine_CurveTimeline2;
spine_ScaleTimeline.prototype = $extend(spine_CurveTimeline2.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch10 = false;
			while(true) {
				var _switchCond10 = blend;
				if(_switchCond10 == 0) {
					bone.scaleX = bone.data.scaleX;
					bone.scaleY = bone.data.scaleY;
					return;
				} else if(_switchCond10 == 1) {
					bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;
					bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;
				}
				break;
			}
			return;
		}
		var x = 0;
		var y = 0;
		var i = spine_Timeline.searchWithStep(frames,time,3);
		var curveType = this.curves[i / 3 | 0] | 0;
		var _continueAfterSwitch11 = false;
		while(true) {
			var _switchCond11 = curveType;
			if(_switchCond11 == 0) {
				var before = frames[i];
				x = frames[i + 1];
				y = frames[i + 2];
				var t = (time - before) / (frames[i + 3] - before);
				x += (frames[i + 3 + 1] - x) * t;
				y += (frames[i + 3 + 2] - y) * t;
				break;
			} else if(_switchCond11 == 1) {
				x = frames[i + 1];
				y = frames[i + 2];
				break;
			} else {
				x = this.getBezierValue(time,i,1,curveType - 2 | 0);
				y = this.getBezierValue(time,i,2,curveType + 18 - 2);
			}
			break;
		}
		x *= bone.data.scaleX;
		y *= bone.data.scaleY;
		if(alpha == 1) {
			if(blend == 3) {
				bone.scaleX += x - bone.data.scaleX;
				bone.scaleY += y - bone.data.scaleY;
			} else {
				bone.scaleX = x;
				bone.scaleY = y;
			}
		} else {
			var bx = 0;
			var by = 0;
			if(direction == 1) {
				var _continueAfterSwitch12 = false;
				while(true) {
					var _switchCond12 = blend;
					if(_switchCond12 == 0) {
						bx = bone.data.scaleX;
						by = bone.data.scaleY;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond12 == 1) {
						bx = bone.scaleX;
						by = bone.scaleY;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond12 == 2) {
						bx = bone.scaleX;
						by = bone.scaleY;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond12 == 3) {
						bx = bone.scaleX;
						by = bone.scaleY;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bone.data.scaleX) * alpha;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - bone.data.scaleY) * alpha;
					}
					break;
				}
			} else {
				var _continueAfterSwitch13 = false;
				while(true) {
					var _switchCond13 = blend;
					if(_switchCond13 == 0) {
						bx = Math.abs(bone.data.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						by = Math.abs(bone.data.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond13 == 1) {
						bx = Math.abs(bone.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						by = Math.abs(bone.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond13 == 2) {
						bx = Math.abs(bone.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						by = Math.abs(bone.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond13 == 3) {
						bx = x > 0 ? 1 : x < 0 ? -1 : 0;
						by = y > 0 ? 1 : y < 0 ? -1 : 0;
						bone.scaleX = Math.abs(bone.scaleX) * bx + (x - Math.abs(bone.data.scaleX) * bx) * alpha;
						bone.scaleY = Math.abs(bone.scaleY) * by + (y - Math.abs(bone.data.scaleY) * by) * alpha;
					}
					break;
				}
			}
		}
	}
	,__class__: spine_ScaleTimeline
});
var spine_ScaleXTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,3 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ScaleXTimeline"] = spine_ScaleXTimeline;
spine_ScaleXTimeline.__name__ = "spine.ScaleXTimeline";
spine_ScaleXTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ScaleXTimeline.__super__ = spine_CurveTimeline1;
spine_ScaleXTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch14 = false;
			while(true) {
				var _switchCond14 = blend;
				if(_switchCond14 == 0) {
					bone.scaleX = bone.data.scaleX;
					return;
				} else if(_switchCond14 == 1) {
					bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;
				}
				break;
			}
			return;
		}
		var x = this.getCurveValue(time) * bone.data.scaleX;
		if(alpha == 1) {
			if(blend == 3) {
				bone.scaleX += x - bone.data.scaleX;
			} else {
				bone.scaleX = x;
			}
		} else {
			var bx = 0;
			if(direction == 1) {
				var _continueAfterSwitch15 = false;
				while(true) {
					var _switchCond15 = blend;
					if(_switchCond15 == 0) {
						bx = bone.data.scaleX;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						break;
					} else if(_switchCond15 == 1) {
						bx = bone.scaleX;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						break;
					} else if(_switchCond15 == 2) {
						bx = bone.scaleX;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bx) * alpha;
						break;
					} else if(_switchCond15 == 3) {
						bx = bone.scaleX;
						bone.scaleX = bx + (Math.abs(x) * (bx > 0 ? 1 : bx < 0 ? -1 : 0) - bone.data.scaleX) * alpha;
					}
					break;
				}
			} else {
				var _continueAfterSwitch16 = false;
				while(true) {
					var _switchCond16 = blend;
					if(_switchCond16 == 0) {
						bx = Math.abs(bone.data.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						break;
					} else if(_switchCond16 == 1) {
						bx = Math.abs(bone.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						break;
					} else if(_switchCond16 == 2) {
						bx = Math.abs(bone.scaleX) * (x > 0 ? 1 : x < 0 ? -1 : 0);
						bone.scaleX = bx + (x - bx) * alpha;
						break;
					} else if(_switchCond16 == 3) {
						bx = x > 0 ? 1 : x < 0 ? -1 : 0;
						bone.scaleX = Math.abs(bone.scaleX) * bx + (x - Math.abs(bone.data.scaleX) * bx) * alpha;
					}
					break;
				}
			}
		}
	}
	,__class__: spine_ScaleXTimeline
});
var spine_ScaleYTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,4 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ScaleYTimeline"] = spine_ScaleYTimeline;
spine_ScaleYTimeline.__name__ = "spine.ScaleYTimeline";
spine_ScaleYTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ScaleYTimeline.__super__ = spine_CurveTimeline1;
spine_ScaleYTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch17 = false;
			while(true) {
				var _switchCond17 = blend;
				if(_switchCond17 == 0) {
					bone.scaleY = bone.data.scaleY;
					return;
				} else if(_switchCond17 == 1) {
					bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;
				}
				break;
			}
			return;
		}
		var y = this.getCurveValue(time) * bone.data.scaleY;
		if(alpha == 1) {
			if(blend == 3) {
				bone.scaleY += y - bone.data.scaleY;
			} else {
				bone.scaleY = y;
			}
		} else {
			var by = 0;
			if(direction == 1) {
				var _continueAfterSwitch18 = false;
				while(true) {
					var _switchCond18 = blend;
					if(_switchCond18 == 0) {
						by = bone.data.scaleY;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond18 == 1) {
						by = bone.scaleY;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond18 == 2) {
						by = bone.scaleY;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - by) * alpha;
						break;
					} else if(_switchCond18 == 3) {
						by = bone.scaleY;
						bone.scaleY = by + (Math.abs(y) * (by > 0 ? 1 : by < 0 ? -1 : 0) - bone.data.scaleY) * alpha;
					}
					break;
				}
			} else {
				var _continueAfterSwitch19 = false;
				while(true) {
					var _switchCond19 = blend;
					if(_switchCond19 == 0) {
						by = Math.abs(bone.data.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond19 == 1) {
						by = Math.abs(bone.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond19 == 2) {
						by = Math.abs(bone.scaleY) * (y > 0 ? 1 : y < 0 ? -1 : 0);
						bone.scaleY = by + (y - by) * alpha;
						break;
					} else if(_switchCond19 == 3) {
						by = y > 0 ? 1 : y < 0 ? -1 : 0;
						bone.scaleY = Math.abs(bone.scaleY) * by + (y - Math.abs(bone.data.scaleY) * by) * alpha;
					}
					break;
				}
			}
		}
	}
	,__class__: spine_ScaleYTimeline
});
var spine_ShearTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline2.call(this,frameCount,bezierCount,5 + "|" + boneIndex,6 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ShearTimeline"] = spine_ShearTimeline;
spine_ShearTimeline.__name__ = "spine.ShearTimeline";
spine_ShearTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ShearTimeline.__super__ = spine_CurveTimeline2;
spine_ShearTimeline.prototype = $extend(spine_CurveTimeline2.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch20 = false;
			while(true) {
				var _switchCond20 = blend;
				if(_switchCond20 == 0) {
					bone.shearX = bone.data.shearX;
					bone.shearY = bone.data.shearY;
					return;
				} else if(_switchCond20 == 1) {
					bone.shearX += (bone.data.shearX - bone.shearX) * alpha;
					bone.shearY += (bone.data.shearY - bone.shearY) * alpha;
				}
				break;
			}
			return;
		}
		var x = 0;
		var y = 0;
		var i = spine_Timeline.searchWithStep(frames,time,3);
		var curveType = this.curves[i / 3 | 0] | 0;
		var _continueAfterSwitch21 = false;
		while(true) {
			var _switchCond21 = curveType;
			if(_switchCond21 == 0) {
				var before = frames[i];
				x = frames[i + 1];
				y = frames[i + 2];
				var t = (time - before) / (frames[i + 3] - before);
				x += (frames[i + 3 + 1] - x) * t;
				y += (frames[i + 3 + 2] - y) * t;
				break;
			} else if(_switchCond21 == 1) {
				x = frames[i + 1];
				y = frames[i + 2];
				break;
			} else {
				x = this.getBezierValue(time,i,1,curveType - 2 | 0);
				y = this.getBezierValue(time,i,2,curveType + 18 - 2);
			}
			break;
		}
		var _continueAfterSwitch22 = false;
		while(true) {
			var _switchCond22 = blend;
			if(_switchCond22 == 0) {
				bone.shearX = bone.data.shearX + x * alpha;
				bone.shearY = bone.data.shearY + y * alpha;
				break;
			} else if(_switchCond22 == 1) {
				bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;
				bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;
				break;
			} else if(_switchCond22 == 2) {
				bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;
				bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;
				break;
			} else if(_switchCond22 == 3) {
				bone.shearX += x * alpha;
				bone.shearY += y * alpha;
			}
			break;
		}
	}
	,__class__: spine_ShearTimeline
});
var spine_ShearXTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,5 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ShearXTimeline"] = spine_ShearXTimeline;
spine_ShearXTimeline.__name__ = "spine.ShearXTimeline";
spine_ShearXTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ShearXTimeline.__super__ = spine_CurveTimeline1;
spine_ShearXTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch23 = false;
			while(true) {
				var _switchCond23 = blend;
				if(_switchCond23 == 0) {
					bone.shearX = bone.data.shearX;
					return;
				} else if(_switchCond23 == 1) {
					bone.shearX += (bone.data.shearX - bone.shearX) * alpha;
				}
				break;
			}
			return;
		}
		var x = this.getCurveValue(time);
		var _continueAfterSwitch24 = false;
		while(true) {
			var _switchCond24 = blend;
			if(_switchCond24 == 0) {
				bone.shearX = bone.data.shearX + x * alpha;
				break;
			} else if(_switchCond24 == 1) {
				bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;
				break;
			} else if(_switchCond24 == 2) {
				bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;
				break;
			} else if(_switchCond24 == 3) {
				bone.shearX += x * alpha;
			}
			break;
		}
	}
	,__class__: spine_ShearXTimeline
});
var spine_ShearYTimeline = function(frameCount,bezierCount,boneIndex) {
	this.boneIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,6 + "|" + boneIndex);
	this.boneIndex = boneIndex;
};
$hxClasses["spine.ShearYTimeline"] = spine_ShearYTimeline;
spine_ShearYTimeline.__name__ = "spine.ShearYTimeline";
spine_ShearYTimeline.__interfaces__ = [spine_BoneTimeline];
spine_ShearYTimeline.__super__ = spine_CurveTimeline1;
spine_ShearYTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getBoneIndex: function() {
		return this.boneIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var bone = skeleton.bones[this.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch25 = false;
			while(true) {
				var _switchCond25 = blend;
				if(_switchCond25 == 0) {
					bone.shearY = bone.data.shearY;
					return;
				} else if(_switchCond25 == 1) {
					bone.shearY += (bone.data.shearY - bone.shearY) * alpha;
				}
				break;
			}
			return;
		}
		var y = this.getCurveValue(time);
		var _continueAfterSwitch26 = false;
		while(true) {
			var _switchCond26 = blend;
			if(_switchCond26 == 0) {
				bone.shearY = bone.data.shearY + y * alpha;
				break;
			} else if(_switchCond26 == 1) {
				bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;
				break;
			} else if(_switchCond26 == 2) {
				bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;
				break;
			} else if(_switchCond26 == 3) {
				bone.shearY += y * alpha;
			}
			break;
		}
	}
	,__class__: spine_ShearYTimeline
});
var spine_RGBATimeline = function(frameCount,bezierCount,slotIndex) {
	this.slotIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[7 + "|" + slotIndex,8 + "|" + slotIndex]);
	this.slotIndex = slotIndex;
};
$hxClasses["spine.RGBATimeline"] = spine_RGBATimeline;
spine_RGBATimeline.__name__ = "spine.RGBATimeline";
spine_RGBATimeline.__interfaces__ = [spine_SlotTimeline];
spine_RGBATimeline.__super__ = spine_CurveTimeline;
spine_RGBATimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 5;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,setFrame: function(frame,time,r,g,b,a) {
		frame *= 5;
		this.frames[frame] = time;
		this.frames[frame + 1] = r;
		this.frames[frame + 2] = g;
		this.frames[frame + 3] = b;
		this.frames[frame + 4] = a;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var frames = this.frames;
		var color = slot.color;
		if(time < frames[0]) {
			var setup = slot.data.color;
			var _continueAfterSwitch27 = false;
			while(true) {
				var _switchCond27 = blend;
				if(_switchCond27 == 0) {
					color.r = setup.r;
					color.g = setup.g;
					color.b = setup.b;
					color.a = setup.a;
					return;
				} else if(_switchCond27 == 1) {
					color.r += (setup.r - color.r) * alpha;
					color.g += (setup.g - color.g) * alpha;
					color.b += (setup.b - color.b) * alpha;
					color.a += (setup.a - color.a) * alpha;
				}
				break;
			}
			return;
		}
		var r = 0;
		var g = 0;
		var b = 0;
		var a = 0;
		var i = spine_Timeline.searchWithStep(frames,time,5);
		var curveType = this.curves[i / 5 | 0] | 0;
		var _continueAfterSwitch28 = false;
		while(true) {
			var _switchCond28 = curveType;
			if(_switchCond28 == 0) {
				var before = frames[i];
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				a = frames[i + 4];
				var t = (time - before) / (frames[i + 5] - before);
				r += (frames[i + 5 + 1] - r) * t;
				g += (frames[i + 5 + 2] - g) * t;
				b += (frames[i + 5 + 3] - b) * t;
				a += (frames[i + 5 + 4] - a) * t;
				break;
			} else if(_switchCond28 == 1) {
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				a = frames[i + 4];
				break;
			} else {
				r = this.getBezierValue(time,i,1,curveType - 2 | 0);
				g = this.getBezierValue(time,i,2,curveType + 18 - 2);
				b = this.getBezierValue(time,i,3,curveType + 36 - 2);
				a = this.getBezierValue(time,i,4,curveType + 54 - 2);
			}
			break;
		}
		if(alpha == 1) {
			color.r = r;
			color.g = g;
			color.b = b;
			color.a = a;
		} else {
			if(blend == 0) {
				var color1 = slot.data.color;
				color.r = color1.r;
				color.g = color1.g;
				color.b = color1.b;
				color.a = color1.a;
			}
			color.r += (r - color.r) * alpha;
			color.g += (g - color.g) * alpha;
			color.b += (b - color.b) * alpha;
			color.a += (a - color.a) * alpha;
		}
	}
	,__class__: spine_RGBATimeline
});
var spine_RGBTimeline = function(frameCount,bezierCount,slotIndex) {
	this.slotIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[7 + "|" + slotIndex]);
	this.slotIndex = slotIndex;
};
$hxClasses["spine.RGBTimeline"] = spine_RGBTimeline;
spine_RGBTimeline.__name__ = "spine.RGBTimeline";
spine_RGBTimeline.__interfaces__ = [spine_SlotTimeline];
spine_RGBTimeline.__super__ = spine_CurveTimeline;
spine_RGBTimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 4;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,setFrame: function(frame,time,r,g,b) {
		frame <<= 2;
		this.frames[frame] = time;
		this.frames[frame + 1] = r;
		this.frames[frame + 2] = g;
		this.frames[frame + 3] = b;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var frames = this.frames;
		var color = slot.color;
		if(time < frames[0]) {
			var setup = slot.data.color;
			var _continueAfterSwitch29 = false;
			while(true) {
				var _switchCond29 = blend;
				if(_switchCond29 == 0) {
					color.r = setup.r;
					color.g = setup.g;
					color.b = setup.b;
					return;
				} else if(_switchCond29 == 1) {
					color.r += (setup.r - color.r) * alpha;
					color.g += (setup.g - color.g) * alpha;
					color.b += (setup.b - color.b) * alpha;
				}
				break;
			}
			return;
		}
		var r = 0;
		var g = 0;
		var b = 0;
		var i = spine_Timeline.searchWithStep(frames,time,4);
		var curveType = this.curves[i >> 2] | 0;
		var _continueAfterSwitch30 = false;
		while(true) {
			var _switchCond30 = curveType;
			if(_switchCond30 == 0) {
				var before = frames[i];
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				var t = (time - before) / (frames[i + 4] - before);
				r += (frames[i + 4 + 1] - r) * t;
				g += (frames[i + 4 + 2] - g) * t;
				b += (frames[i + 4 + 3] - b) * t;
				break;
			} else if(_switchCond30 == 1) {
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				break;
			} else {
				r = this.getBezierValue(time,i,1,curveType - 2);
				g = this.getBezierValue(time,i,2,curveType + 18 - 2);
				b = this.getBezierValue(time,i,3,curveType + 36 - 2);
			}
			break;
		}
		if(alpha == 1) {
			color.r = r;
			color.g = g;
			color.b = b;
		} else {
			if(blend == 0) {
				var setup = slot.data.color;
				color.r = setup.r;
				color.g = setup.g;
				color.b = setup.b;
			}
			color.r += (r - color.r) * alpha;
			color.g += (g - color.g) * alpha;
			color.b += (b - color.b) * alpha;
		}
	}
	,__class__: spine_RGBTimeline
});
var spine_AlphaTimeline = function(frameCount,bezierCount,slotIndex) {
	this.slotIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,8 + "|" + slotIndex);
	this.slotIndex = slotIndex;
};
$hxClasses["spine.AlphaTimeline"] = spine_AlphaTimeline;
spine_AlphaTimeline.__name__ = "spine.AlphaTimeline";
spine_AlphaTimeline.__interfaces__ = [spine_SlotTimeline];
spine_AlphaTimeline.__super__ = spine_CurveTimeline1;
spine_AlphaTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getSlotIndex: function() {
		return this.slotIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var frames = this.frames;
		var color = slot.color;
		if(time < frames[0]) {
			var setup = slot.data.color;
			var _continueAfterSwitch31 = false;
			while(true) {
				var _switchCond31 = blend;
				if(_switchCond31 == 0) {
					color.a = setup.a;
					return;
				} else if(_switchCond31 == 1) {
					color.a += (setup.a - color.a) * alpha;
				}
				break;
			}
			return;
		}
		var a = this.getCurveValue(time);
		if(alpha == 1) {
			color.a = a;
		} else {
			if(blend == 0) {
				color.a = slot.data.color.a;
			}
			color.a += (a - color.a) * alpha;
		}
	}
	,__class__: spine_AlphaTimeline
});
var spine_RGBA2Timeline = function(frameCount,bezierCount,slotIndex) {
	this.slotIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[7 + "|" + slotIndex,8 + "|" + slotIndex,9 + "|" + slotIndex]);
	this.slotIndex = slotIndex;
};
$hxClasses["spine.RGBA2Timeline"] = spine_RGBA2Timeline;
spine_RGBA2Timeline.__name__ = "spine.RGBA2Timeline";
spine_RGBA2Timeline.__interfaces__ = [spine_SlotTimeline];
spine_RGBA2Timeline.__super__ = spine_CurveTimeline;
spine_RGBA2Timeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 8;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,setFrame: function(frame,time,r,g,b,a,r2,g2,b2) {
		frame <<= 3;
		this.frames[frame] = time;
		this.frames[frame + 1] = r;
		this.frames[frame + 2] = g;
		this.frames[frame + 3] = b;
		this.frames[frame + 4] = a;
		this.frames[frame + 5] = r2;
		this.frames[frame + 6] = g2;
		this.frames[frame + 7] = b2;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var frames = this.frames;
		var light = slot.color;
		var dark = slot.darkColor;
		if(time < frames[0]) {
			var setupLight = slot.data.color;
			var setupDark = slot.data.darkColor;
			var _continueAfterSwitch32 = false;
			while(true) {
				var _switchCond32 = blend;
				if(_switchCond32 == 0) {
					light.r = setupLight.r;
					light.g = setupLight.g;
					light.b = setupLight.b;
					light.a = setupLight.a;
					dark.r = setupDark.r;
					dark.g = setupDark.g;
					dark.b = setupDark.b;
					return;
				} else if(_switchCond32 == 1) {
					light.r += (setupLight.r - light.r) * alpha;
					light.g += (setupLight.g - light.g) * alpha;
					light.b += (setupLight.b - light.b) * alpha;
					light.a += (setupLight.a - light.a) * alpha;
					dark.r += (setupDark.r - dark.r) * alpha;
					dark.g += (setupDark.g - dark.g) * alpha;
					dark.b += (setupDark.b - dark.b) * alpha;
				}
				break;
			}
			return;
		}
		var r = 0;
		var g = 0;
		var b = 0;
		var a = 0;
		var r2 = 0;
		var g2 = 0;
		var b2 = 0;
		var i = spine_Timeline.searchWithStep(frames,time,8);
		var curveType = this.curves[i >> 3] | 0;
		var _continueAfterSwitch33 = false;
		while(true) {
			var _switchCond33 = curveType;
			if(_switchCond33 == 0) {
				var before = frames[i];
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				a = frames[i + 4];
				r2 = frames[i + 5];
				g2 = frames[i + 6];
				b2 = frames[i + 7];
				var t = (time - before) / (frames[i + 8] - before);
				r += (frames[i + 8 + 1] - r) * t;
				g += (frames[i + 8 + 2] - g) * t;
				b += (frames[i + 8 + 3] - b) * t;
				a += (frames[i + 8 + 4] - a) * t;
				r2 += (frames[i + 8 + 5] - r2) * t;
				g2 += (frames[i + 8 + 6] - g2) * t;
				b2 += (frames[i + 8 + 7] - b2) * t;
				break;
			} else if(_switchCond33 == 1) {
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				a = frames[i + 4];
				r2 = frames[i + 5];
				g2 = frames[i + 6];
				b2 = frames[i + 7];
				break;
			} else {
				r = this.getBezierValue(time,i,1,curveType - 2);
				g = this.getBezierValue(time,i,2,curveType + 18 - 2);
				b = this.getBezierValue(time,i,3,curveType + 36 - 2);
				a = this.getBezierValue(time,i,4,curveType + 54 - 2);
				r2 = this.getBezierValue(time,i,5,curveType + 72 - 2);
				g2 = this.getBezierValue(time,i,6,curveType + 90 - 2);
				b2 = this.getBezierValue(time,i,7,curveType + 108 - 2);
			}
			break;
		}
		if(alpha == 1) {
			light.r = r;
			light.g = g;
			light.b = b;
			light.a = a;
			dark.r = r2;
			dark.g = g2;
			dark.b = b2;
		} else {
			if(blend == 0) {
				var color = slot.data.color;
				light.r = color.r;
				light.g = color.g;
				light.b = color.b;
				light.a = color.a;
				var setupDark = slot.data.darkColor;
				dark.r = setupDark.r;
				dark.g = setupDark.g;
				dark.b = setupDark.b;
			}
			light.r += (r - light.r) * alpha;
			light.g += (g - light.g) * alpha;
			light.b += (b - light.b) * alpha;
			light.a += (a - light.a) * alpha;
			dark.r += (r2 - dark.r) * alpha;
			dark.g += (g2 - dark.g) * alpha;
			dark.b += (b2 - dark.b) * alpha;
		}
	}
	,__class__: spine_RGBA2Timeline
});
var spine_RGB2Timeline = function(frameCount,bezierCount,slotIndex) {
	this.slotIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[7 + "|" + slotIndex,9 + "|" + slotIndex]);
	this.slotIndex = slotIndex;
};
$hxClasses["spine.RGB2Timeline"] = spine_RGB2Timeline;
spine_RGB2Timeline.__name__ = "spine.RGB2Timeline";
spine_RGB2Timeline.__interfaces__ = [spine_SlotTimeline];
spine_RGB2Timeline.__super__ = spine_CurveTimeline;
spine_RGB2Timeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 7;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,setFrame: function(frame,time,r,g,b,r2,g2,b2) {
		frame *= 7;
		this.frames[frame] = time;
		this.frames[frame + 1] = r;
		this.frames[frame + 2] = g;
		this.frames[frame + 3] = b;
		this.frames[frame + 4] = r2;
		this.frames[frame + 5] = g2;
		this.frames[frame + 6] = b2;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var frames = this.frames;
		var light = slot.color;
		var dark = slot.darkColor;
		if(time < frames[0]) {
			var setupLight = slot.data.color;
			var setupDark = slot.data.darkColor;
			var _continueAfterSwitch34 = false;
			while(true) {
				var _switchCond34 = blend;
				if(_switchCond34 == 0) {
					light.r = setupLight.r;
					light.g = setupLight.g;
					light.b = setupLight.b;
					dark.r = setupDark.r;
					dark.g = setupDark.g;
					dark.b = setupDark.b;
					return;
				} else if(_switchCond34 == 1) {
					light.r += (setupLight.r - light.r) * alpha;
					light.g += (setupLight.g - light.g) * alpha;
					light.b += (setupLight.b - light.b) * alpha;
					dark.r += (setupDark.r - dark.r) * alpha;
					dark.g += (setupDark.g - dark.g) * alpha;
					dark.b += (setupDark.b - dark.b) * alpha;
				}
				break;
			}
			return;
		}
		var r = 0;
		var g = 0;
		var b = 0;
		var r2 = 0;
		var g2 = 0;
		var b2 = 0;
		var i = spine_Timeline.searchWithStep(frames,time,7);
		var curveType = this.curves[i / 7 | 0] | 0;
		var _continueAfterSwitch35 = false;
		while(true) {
			var _switchCond35 = curveType;
			if(_switchCond35 == 0) {
				var before = frames[i];
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				r2 = frames[i + 4];
				g2 = frames[i + 5];
				b2 = frames[i + 6];
				var t = (time - before) / (frames[i + 7] - before);
				r += (frames[i + 7 + 1] - r) * t;
				g += (frames[i + 7 + 2] - g) * t;
				b += (frames[i + 7 + 3] - b) * t;
				r2 += (frames[i + 7 + 4] - r2) * t;
				g2 += (frames[i + 7 + 5] - g2) * t;
				b2 += (frames[i + 7 + 6] - b2) * t;
				break;
			} else if(_switchCond35 == 1) {
				r = frames[i + 1];
				g = frames[i + 2];
				b = frames[i + 3];
				r2 = frames[i + 4];
				g2 = frames[i + 5];
				b2 = frames[i + 6];
				break;
			} else {
				r = this.getBezierValue(time,i,1,curveType - 2 | 0);
				g = this.getBezierValue(time,i,2,curveType + 18 - 2);
				b = this.getBezierValue(time,i,3,curveType + 36 - 2);
				r2 = this.getBezierValue(time,i,4,curveType + 54 - 2);
				g2 = this.getBezierValue(time,i,5,curveType + 72 - 2);
				b2 = this.getBezierValue(time,i,6,curveType + 90 - 2);
			}
			break;
		}
		if(alpha == 1) {
			light.r = r;
			light.g = g;
			light.b = b;
			dark.r = r2;
			dark.g = g2;
			dark.b = b2;
		} else {
			if(blend == 0) {
				var setupLight = slot.data.color;
				var setupDark = slot.data.darkColor;
				light.r = setupLight.r;
				light.g = setupLight.g;
				light.b = setupLight.b;
				dark.r = setupDark.r;
				dark.g = setupDark.g;
				dark.b = setupDark.b;
			}
			light.r += (r - light.r) * alpha;
			light.g += (g - light.g) * alpha;
			light.b += (b - light.b) * alpha;
			dark.r += (r2 - dark.r) * alpha;
			dark.g += (g2 - dark.g) * alpha;
			dark.b += (b2 - dark.b) * alpha;
		}
	}
	,__class__: spine_RGB2Timeline
});
var spine_AttachmentTimeline = function(frameCount,slotIndex) {
	this.slotIndex = 0;
	spine_Timeline.call(this,frameCount,[10 + "|" + slotIndex]);
	this.slotIndex = slotIndex;
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	this.attachmentNames = array;
};
$hxClasses["spine.AttachmentTimeline"] = spine_AttachmentTimeline;
spine_AttachmentTimeline.__name__ = "spine.AttachmentTimeline";
spine_AttachmentTimeline.__interfaces__ = [spine_SlotTimeline];
spine_AttachmentTimeline.__super__ = spine_Timeline;
spine_AttachmentTimeline.prototype = $extend(spine_Timeline.prototype,{
	getFrameCount: function() {
		return this.frames.length;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,getAttachmentNames: function() {
		return this.attachmentNames;
	}
	,setFrame: function(frame,time,attachmentName) {
		this.frames[frame] = time;
		this.attachmentNames[frame] = attachmentName;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		if(direction == 1) {
			if(blend == 0) {
				var attachmentName = slot.data.attachmentName;
				var attachment = attachmentName == null ? null : skeleton.getAttachment(this.slotIndex,attachmentName);
				if(slot.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result = attachment;
						var _this = result;
						var result = slot.attachment;
						var _this1 = result;
						tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = slot.deform;
						this1.splice(0,this1.length);
					}
					slot.attachment = attachment;
					slot.attachmentTime = slot.bone.skeleton.time;
				}
			}
			return;
		}
		if(time < this.frames[0]) {
			if(blend == 0 || blend == 1) {
				var attachmentName = slot.data.attachmentName;
				var attachment = attachmentName == null ? null : skeleton.getAttachment(this.slotIndex,attachmentName);
				if(slot.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result = attachment;
						var _this = result;
						var result = slot.attachment;
						var _this1 = result;
						tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = slot.deform;
						this1.splice(0,this1.length);
					}
					slot.attachment = attachment;
					slot.attachmentTime = slot.bone.skeleton.time;
				}
			}
			return;
		}
		var attachmentName = this.attachmentNames[spine_Timeline.search(this.frames,time)];
		var attachment = attachmentName == null ? null : skeleton.getAttachment(this.slotIndex,attachmentName);
		if(slot.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = slot.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = slot.deform;
				this1.splice(0,this1.length);
			}
			slot.attachment = attachment;
			slot.attachmentTime = slot.bone.skeleton.time;
		}
	}
	,setAttachment: function(skeleton,slot,attachmentName) {
		var attachment = attachmentName == null ? null : skeleton.getAttachment(this.slotIndex,attachmentName);
		if(slot.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = slot.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = slot.deform;
				this1.splice(0,this1.length);
			}
			slot.attachment = attachment;
			slot.attachmentTime = slot.bone.skeleton.time;
		}
	}
	,__class__: spine_AttachmentTimeline
});
var spine_DeformTimeline = function(frameCount,bezierCount,slotIndex,attachment) {
	this.slotIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[11 + "|" + slotIndex + "|" + attachment.id]);
	this.slotIndex = slotIndex;
	this.attachment = attachment;
	var length = frameCount;
	var length2 = 0;
	if(length2 == null) {
		length2 = 0;
	}
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var len2 = length2 | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	var _g = 0;
	var _g1 = len2;
	while(_g < _g1) {
		var i = _g++;
		var length = length2;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array1 = this1;
		if(length > 0) {
			var len1 = array1.length;
			if(len1 > len) {
				array1.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array1.push(0);
					++len1;
				}
			}
		}
		array[i] = array1;
	}
	this.vertices = array;
};
$hxClasses["spine.DeformTimeline"] = spine_DeformTimeline;
spine_DeformTimeline.__name__ = "spine.DeformTimeline";
spine_DeformTimeline.__interfaces__ = [spine_SlotTimeline];
spine_DeformTimeline.__super__ = spine_CurveTimeline;
spine_DeformTimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameCount: function() {
		return this.frames.length;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,getAttachment: function() {
		return this.attachment;
	}
	,getVertices: function() {
		return this.vertices;
	}
	,setFrame: function(frame,time,vertices) {
		this.frames[frame] = time;
		this.vertices[frame] = vertices;
	}
	,setBezier: function(bezier,frame,value,time1,value1,cx1,cy1,cx2,cy2,time2,value2) {
		var curves = this.curves;
		var i = this.frames.length + bezier * 18;
		if(value == 0) {
			curves[frame] = 2 + i;
		}
		var tmpx = (time1 - cx1 * 2 + cx2) * 0.03;
		var tmpy = cy2 * 0.03 - cy1 * 0.06;
		var dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006;
		var dddy = (cy1 - cy2 + 0.33333333) * 0.018;
		var ddx = tmpx * 2 + dddx;
		var ddy = tmpy * 2 + dddy;
		var dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667;
		var dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;
		var x = time1 + dx;
		var y = dy;
		var n = i + 18;
		while(i < n) {
			curves[i] = x;
			curves[i + 1] = y;
			dx += ddx;
			dy += ddy;
			ddx += dddx;
			ddy += dddy;
			x += dx;
			y += dy;
			i += 2;
		}
	}
	,getCurvePercent: function(time,frame) {
		var curves = this.curves;
		var i = curves[frame] | 0;
		var _continueAfterSwitch36 = false;
		while(true) {
			var _switchCond36 = i;
			if(_switchCond36 == 0) {
				var x = this.frames[frame];
				return (time - x) / (this.frames[frame + this.getFrameEntries()] - x);
			} else if(_switchCond36 == 1) {
				return 0;
			}
			break;
		}
		i -= 2;
		if(curves[i] > time) {
			var x = this.frames[frame];
			return curves[i + 1] * (time - x) / (curves[i] - x);
		}
		var n = i + 18;
		i += 2;
		while(i < n) {
			if(curves[i] >= time) {
				var x = curves[i - 2];
				var y = curves[i - 1];
				return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);
			}
			i += 2;
		}
		var x = curves[n - 2];
		var y = curves[n - 1];
		return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var slot = skeleton.slots[this.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		var slotAttachment = slot.attachment;
		var tmp;
		if(((slotAttachment) instanceof spine_attachments_VertexAttachment)) {
			var result = slotAttachment;
			var _this = result;
			tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != this.attachment;
		} else {
			tmp = true;
		}
		if(tmp) {
			return;
		}
		var deformArray = slot.deform;
		if(deformArray.length == 0) {
			blend = 0;
		}
		var vertices = this.vertices;
		var vertexCount = vertices[0].length;
		var frames = this.frames;
		if(time < frames[0]) {
			var result = slotAttachment;
			var vertexAttachment = result;
			var _continueAfterSwitch37 = false;
			while(true) {
				var _switchCond37 = blend;
				if(_switchCond37 == 0) {
					deformArray.splice(0,deformArray.length);
					return;
				} else if(_switchCond37 == 1) {
					if(alpha == 1) {
						deformArray.splice(0,deformArray.length);
						return;
					}
					var len = deformArray.length;
					if(len > vertexCount) {
						deformArray.splice(vertexCount,vertexCount - len);
					} else if(len < vertexCount) {
						while(len < vertexCount) {
							deformArray.push(0);
							++len;
						}
					}
					var deform = deformArray;
					if(vertexAttachment.bones == null) {
						var setupVertices = vertexAttachment.vertices;
						var i = 0;
						while(i < vertexCount) {
							deform[i] += (setupVertices[i] - deform[i]) * alpha;
							++i;
						}
					} else {
						alpha = 1 - alpha;
						var i1 = 0;
						while(i1 < vertexCount) {
							deform[i1] *= alpha;
							++i1;
						}
					}
				}
				break;
			}
			return;
		}
		var len = deformArray.length;
		if(len > vertexCount) {
			deformArray.splice(vertexCount,vertexCount - len);
		} else if(len < vertexCount) {
			while(len < vertexCount) {
				deformArray.push(0);
				++len;
			}
		}
		var deform = deformArray;
		if(time >= frames[frames.length - 1]) {
			var lastVertices = vertices[frames.length - 1];
			if(alpha == 1) {
				if(blend == 3) {
					var result = slotAttachment;
					var vertexAttachment = result;
					if(vertexAttachment.bones == null) {
						var setupVertices = vertexAttachment.vertices;
						var i = 0;
						while(i < vertexCount) {
							deform[i] += lastVertices[i] - setupVertices[i];
							++i;
						}
					} else {
						var i = 0;
						while(i < vertexCount) {
							deform[i] += lastVertices[i];
							++i;
						}
					}
				} else {
					var src = lastVertices;
					var dest = deform;
					if(src == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
					}
					if(dest == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
					}
					try {
						spine_support_utils_Array.copy(src,0,dest,0,vertexCount);
					} catch( _g ) {
						haxe_NativeStackTrace.lastError = _g;
						throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + vertexCount));
					}
				}
			} else {
				var _continueAfterSwitch38 = false;
				while(true) {
					var _switchCond38 = blend;
					if(_switchCond38 == 0) {
						var result = slotAttachment;
						var vertexAttachment = result;
						if(vertexAttachment.bones == null) {
							var setupVertices = vertexAttachment.vertices;
							var i = 0;
							while(i < vertexCount) {
								var setup = setupVertices[i];
								deform[i] = setup + (lastVertices[i] - setup) * alpha;
								++i;
							}
						} else {
							var i1 = 0;
							while(i1 < vertexCount) {
								deform[i1] = lastVertices[i1] * alpha;
								++i1;
							}
						}
						break;
					} else if(_switchCond38 == 1) {
						var i2 = 0;
						while(i2 < vertexCount) {
							deform[i2] += (lastVertices[i2] - deform[i2]) * alpha;
							++i2;
						}
						break;
					} else if(_switchCond38 == 2) {
						var i3 = 0;
						while(i3 < vertexCount) {
							deform[i3] += (lastVertices[i3] - deform[i3]) * alpha;
							++i3;
						}
						break;
					} else if(_switchCond38 == 3) {
						var result1 = slotAttachment;
						var vertexAttachment1 = result1;
						if(vertexAttachment1.bones == null) {
							var setupVertices1 = vertexAttachment1.vertices;
							var i4 = 0;
							while(i4 < vertexCount) {
								deform[i4] += (lastVertices[i4] - setupVertices1[i4]) * alpha;
								++i4;
							}
						} else {
							var i5 = 0;
							while(i5 < vertexCount) {
								deform[i5] += lastVertices[i5] * alpha;
								++i5;
							}
						}
					}
					break;
				}
			}
			return;
		}
		var frame = spine_Timeline.search(frames,time);
		var percent = this.getCurvePercent(time,frame);
		var prevVertices = vertices[frame];
		var nextVertices = vertices[frame + 1];
		if(alpha == 1) {
			if(blend == 3) {
				var result = slotAttachment;
				var vertexAttachment = result;
				if(vertexAttachment.bones == null) {
					var setupVertices = vertexAttachment.vertices;
					var i = 0;
					while(i < vertexCount) {
						var prev = prevVertices[i];
						deform[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];
						++i;
					}
				} else {
					var i = 0;
					while(i < vertexCount) {
						var prev = prevVertices[i];
						deform[i] += prev + (nextVertices[i] - prev) * percent;
						++i;
					}
				}
			} else {
				var i = 0;
				while(i < vertexCount) {
					var prev = prevVertices[i];
					deform[i] = prev + (nextVertices[i] - prev) * percent;
					++i;
				}
			}
		} else {
			var _continueAfterSwitch39 = false;
			while(true) {
				var _switchCond39 = blend;
				if(_switchCond39 == 0) {
					var result = slotAttachment;
					var vertexAttachment = result;
					if(vertexAttachment.bones == null) {
						var setupVertices = vertexAttachment.vertices;
						var i = 0;
						while(i < vertexCount) {
							var prev = prevVertices[i];
							var setup = setupVertices[i];
							deform[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;
							++i;
						}
					} else {
						var i1 = 0;
						while(i1 < vertexCount) {
							var prev1 = prevVertices[i1];
							deform[i1] = (prev1 + (nextVertices[i1] - prev1) * percent) * alpha;
							++i1;
						}
					}
					break;
				} else if(_switchCond39 == 1) {
					var i2 = 0;
					while(i2 < vertexCount) {
						var prev2 = prevVertices[i2];
						deform[i2] += (prev2 + (nextVertices[i2] - prev2) * percent - deform[i2]) * alpha;
						++i2;
					}
					break;
				} else if(_switchCond39 == 2) {
					var i3 = 0;
					while(i3 < vertexCount) {
						var prev3 = prevVertices[i3];
						deform[i3] += (prev3 + (nextVertices[i3] - prev3) * percent - deform[i3]) * alpha;
						++i3;
					}
					break;
				} else if(_switchCond39 == 3) {
					var result1 = slotAttachment;
					var vertexAttachment1 = result1;
					if(vertexAttachment1.bones == null) {
						var setupVertices1 = vertexAttachment1.vertices;
						var i4 = 0;
						while(i4 < vertexCount) {
							var prev4 = prevVertices[i4];
							deform[i4] += (prev4 + (nextVertices[i4] - prev4) * percent - setupVertices1[i4]) * alpha;
							++i4;
						}
					} else {
						var i5 = 0;
						while(i5 < vertexCount) {
							var prev5 = prevVertices[i5];
							deform[i5] += (prev5 + (nextVertices[i5] - prev5) * percent) * alpha;
							++i5;
						}
					}
				}
				break;
			}
		}
	}
	,__class__: spine_DeformTimeline
});
var spine_EventTimeline = function(frameCount) {
	spine_Timeline.call(this,frameCount,spine_EventTimeline.propertyIds);
	var length = frameCount;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	this.events = array;
};
$hxClasses["spine.EventTimeline"] = spine_EventTimeline;
spine_EventTimeline.__name__ = "spine.EventTimeline";
spine_EventTimeline.__super__ = spine_Timeline;
spine_EventTimeline.prototype = $extend(spine_Timeline.prototype,{
	getFrameCount: function() {
		return this.frames.length;
	}
	,getEvents: function() {
		return this.events;
	}
	,setFrame: function(frame,event) {
		this.frames[frame] = event.time;
		this.events[frame] = event;
	}
	,apply: function(skeleton,lastTime,time,firedEvents,alpha,blend,direction) {
		if(firedEvents == null) {
			return;
		}
		var frames = this.frames;
		var frameCount = frames.length;
		if(lastTime > time) {
			this.apply(skeleton,lastTime,999999999,firedEvents,alpha,blend,direction);
			lastTime = -1;
		} else if(lastTime >= frames[frameCount - 1]) {
			return;
		}
		if(time < frames[0]) {
			return;
		}
		var i = 0;
		if(lastTime < frames[0]) {
			i = 0;
		} else {
			i = spine_Timeline.search(frames,lastTime) + 1;
			var frameTime = frames[i];
			while(i > 0) {
				if(frames[i - 1] != frameTime) {
					break;
				}
				--i;
			}
		}
		while(i < frameCount && time >= frames[i]) {
			firedEvents.push(this.events[i]);
			++i;
		}
	}
	,__class__: spine_EventTimeline
});
var spine_DrawOrderTimeline = function(frameCount) {
	spine_Timeline.call(this,frameCount,spine_DrawOrderTimeline.propertyIds);
	var length = frameCount;
	var length2 = 0;
	if(length2 == null) {
		length2 = 0;
	}
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var len2 = length2 | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	var _g = 0;
	var _g1 = len2;
	while(_g < _g1) {
		var i = _g++;
		var length = length2;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array1 = this1;
		if(length != 0) {
			var len1 = array1.length;
			if(len1 > len) {
				array1.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array1.push(0);
					++len1;
				}
			}
		}
		array[i] = array1;
	}
	this.drawOrders = array;
};
$hxClasses["spine.DrawOrderTimeline"] = spine_DrawOrderTimeline;
spine_DrawOrderTimeline.__name__ = "spine.DrawOrderTimeline";
spine_DrawOrderTimeline.__super__ = spine_Timeline;
spine_DrawOrderTimeline.prototype = $extend(spine_Timeline.prototype,{
	getFrameCount: function() {
		return this.frames.length;
	}
	,getDrawOrders: function() {
		return this.drawOrders;
	}
	,setFrame: function(frame,time,drawOrder) {
		this.frames[frame] = time;
		this.drawOrders[frame] = drawOrder;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		if(direction == 1) {
			if(blend == 0) {
				var src = skeleton.slots;
				var dest = skeleton.drawOrder;
				var length = skeleton.slots.length;
				if(src == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
				}
				if(dest == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
				}
				try {
					spine_support_utils_Array.copy(src,0,dest,0,length);
				} catch( _g ) {
					haxe_NativeStackTrace.lastError = _g;
					throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
				}
			}
			return;
		}
		if(time < this.frames[0]) {
			if(blend == 0 || blend == 1) {
				var src = skeleton.slots;
				var dest = skeleton.drawOrder;
				var length = skeleton.slots.length;
				if(src == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
				}
				if(dest == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
				}
				try {
					spine_support_utils_Array.copy(src,0,dest,0,length);
				} catch( _g ) {
					haxe_NativeStackTrace.lastError = _g;
					throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
				}
			}
			return;
		}
		var drawOrderToSetupIndex = this.drawOrders[spine_Timeline.search(this.frames,time)];
		if(drawOrderToSetupIndex == null) {
			var src = skeleton.slots;
			var dest = skeleton.drawOrder;
			var length = skeleton.slots.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			var slots = skeleton.slots;
			var drawOrder = skeleton.drawOrder;
			var i = 0;
			var n = drawOrderToSetupIndex.length;
			while(i < n) {
				drawOrder[i] = slots[drawOrderToSetupIndex[i]];
				++i;
			}
		}
	}
	,__class__: spine_DrawOrderTimeline
});
var spine_IkConstraintTimeline = function(frameCount,bezierCount,ikConstraintIndex) {
	this.ikConstraintIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[14 + "|" + ikConstraintIndex]);
	this.ikConstraintIndex = ikConstraintIndex;
};
$hxClasses["spine.IkConstraintTimeline"] = spine_IkConstraintTimeline;
spine_IkConstraintTimeline.__name__ = "spine.IkConstraintTimeline";
spine_IkConstraintTimeline.__super__ = spine_CurveTimeline;
spine_IkConstraintTimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 6;
	}
	,getIkConstraintIndex: function() {
		return this.ikConstraintIndex;
	}
	,setFrame: function(frame,time,mix,softness,bendDirection,compress,stretch) {
		frame *= 6;
		this.frames[frame] = time;
		this.frames[frame + 1] = mix;
		this.frames[frame + 2] = softness;
		this.frames[frame + 3] = bendDirection;
		this.frames[frame + 4] = compress ? 1 : 0;
		this.frames[frame + 5] = stretch ? 1 : 0;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var constraint = skeleton.ikConstraints[this.ikConstraintIndex];
		if(!constraint.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var _continueAfterSwitch40 = false;
			while(true) {
				var _switchCond40 = blend;
				if(_switchCond40 == 0) {
					constraint.mix = constraint.data.mix;
					constraint.softness = constraint.data.softness;
					constraint.bendDirection = constraint.data.bendDirection;
					constraint.compress = constraint.data.compress;
					constraint.stretch = constraint.data.stretch;
					return;
				} else if(_switchCond40 == 1) {
					constraint.mix += (constraint.data.mix - constraint.mix) * alpha;
					constraint.softness += (constraint.data.softness - constraint.softness) * alpha;
					constraint.bendDirection = constraint.data.bendDirection;
					constraint.compress = constraint.data.compress;
					constraint.stretch = constraint.data.stretch;
				}
				break;
			}
			return;
		}
		var mix = 0;
		var softness = 0;
		var i = spine_Timeline.searchWithStep(frames,time,6);
		var curveType = this.curves[i / 6 | 0] | 0;
		var _continueAfterSwitch41 = false;
		while(true) {
			var _switchCond41 = curveType;
			if(_switchCond41 == 0) {
				var before = frames[i];
				mix = frames[i + 1];
				softness = frames[i + 2];
				var t = (time - before) / (frames[i + 6] - before);
				mix += (frames[i + 6 + 1] - mix) * t;
				softness += (frames[i + 6 + 2] - softness) * t;
				break;
			} else if(_switchCond41 == 1) {
				mix = frames[i + 1];
				softness = frames[i + 2];
				break;
			} else {
				mix = this.getBezierValue(time,i,1,curveType - 2 | 0);
				softness = this.getBezierValue(time,i,2,curveType + 18 - 2);
			}
			break;
		}
		if(blend == 0) {
			constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;
			constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;
			if(direction == 1) {
				constraint.bendDirection = constraint.data.bendDirection;
				constraint.compress = constraint.data.compress;
				constraint.stretch = constraint.data.stretch;
			} else {
				constraint.bendDirection = frames[i + 3] | 0;
				constraint.compress = frames[i + 4] != 0;
				constraint.stretch = frames[i + 5] != 0;
			}
		} else {
			constraint.mix += (mix - constraint.mix) * alpha;
			constraint.softness += (softness - constraint.softness) * alpha;
			if(direction == 0) {
				constraint.bendDirection = frames[i + 3] | 0;
				constraint.compress = frames[i + 4] != 0;
				constraint.stretch = frames[i + 5] != 0;
			}
		}
	}
	,__class__: spine_IkConstraintTimeline
});
var spine_TransformConstraintTimeline = function(frameCount,bezierCount,transformConstraintIndex) {
	this.transformConstraintIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[15 + "|" + transformConstraintIndex]);
	this.transformConstraintIndex = transformConstraintIndex;
};
$hxClasses["spine.TransformConstraintTimeline"] = spine_TransformConstraintTimeline;
spine_TransformConstraintTimeline.__name__ = "spine.TransformConstraintTimeline";
spine_TransformConstraintTimeline.__super__ = spine_CurveTimeline;
spine_TransformConstraintTimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 7;
	}
	,getTransformConstraintIndex: function() {
		return this.transformConstraintIndex;
	}
	,setFrame: function(frame,time,mixRotate,mixX,mixY,mixScaleX,mixScaleY,mixShearY) {
		frame *= 7;
		this.frames[frame] = time;
		this.frames[frame + 1] = mixRotate;
		this.frames[frame + 2] = mixX;
		this.frames[frame + 3] = mixY;
		this.frames[frame + 4] = mixScaleX;
		this.frames[frame + 5] = mixScaleY;
		this.frames[frame + 6] = mixShearY;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var constraint = skeleton.transformConstraints[this.transformConstraintIndex];
		if(!constraint.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var data = constraint.data;
			var _continueAfterSwitch42 = false;
			while(true) {
				var _switchCond42 = blend;
				if(_switchCond42 == 0) {
					constraint.mixRotate = data.mixRotate;
					constraint.mixX = data.mixX;
					constraint.mixY = data.mixY;
					constraint.mixScaleX = data.mixScaleX;
					constraint.mixScaleY = data.mixScaleY;
					constraint.mixShearY = data.mixShearY;
					return;
				} else if(_switchCond42 == 1) {
					constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;
					constraint.mixX += (data.mixX - constraint.mixX) * alpha;
					constraint.mixY += (data.mixY - constraint.mixY) * alpha;
					constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;
					constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;
					constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;
				}
				break;
			}
			return;
		}
		var rotate = 0;
		var x = 0;
		var y = 0;
		var scaleX = 0;
		var scaleY = 0;
		var shearY = 0;
		var i = spine_Timeline.searchWithStep(frames,time,7);
		var curveType = this.curves[i / 7 | 0] | 0;
		var _continueAfterSwitch43 = false;
		while(true) {
			var _switchCond43 = curveType;
			if(_switchCond43 == 0) {
				var before = frames[i];
				rotate = frames[i + 1];
				x = frames[i + 2];
				y = frames[i + 3];
				scaleX = frames[i + 4];
				scaleY = frames[i + 5];
				shearY = frames[i + 6];
				var t = (time - before) / (frames[i + 7] - before);
				rotate += (frames[i + 7 + 1] - rotate) * t;
				x += (frames[i + 7 + 2] - x) * t;
				y += (frames[i + 7 + 3] - y) * t;
				scaleX += (frames[i + 7 + 4] - scaleX) * t;
				scaleY += (frames[i + 7 + 5] - scaleY) * t;
				shearY += (frames[i + 7 + 6] - shearY) * t;
				break;
			} else if(_switchCond43 == 1) {
				rotate = frames[i + 1];
				x = frames[i + 2];
				y = frames[i + 3];
				scaleX = frames[i + 4];
				scaleY = frames[i + 5];
				shearY = frames[i + 6];
				break;
			} else {
				rotate = this.getBezierValue(time,i,1,curveType - 2 | 0);
				x = this.getBezierValue(time,i,2,curveType + 18 - 2);
				y = this.getBezierValue(time,i,3,curveType + 36 - 2);
				scaleX = this.getBezierValue(time,i,4,curveType + 54 - 2);
				scaleY = this.getBezierValue(time,i,5,curveType + 72 - 2);
				shearY = this.getBezierValue(time,i,6,curveType + 90 - 2);
			}
			break;
		}
		if(blend == 0) {
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;
			constraint.mixX = data.mixX + (x - data.mixX) * alpha;
			constraint.mixY = data.mixY + (y - data.mixY) * alpha;
			constraint.mixScaleX = data.mixScaleX + (scaleX - data.mixScaleX) * alpha;
			constraint.mixScaleY = data.mixScaleY + (scaleY - data.mixScaleY) * alpha;
			constraint.mixShearY = data.mixShearY + (shearY - data.mixShearY) * alpha;
		} else {
			constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;
			constraint.mixX += (x - constraint.mixX) * alpha;
			constraint.mixY += (y - constraint.mixY) * alpha;
			constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;
			constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;
			constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;
		}
	}
	,__class__: spine_TransformConstraintTimeline
});
var spine_PathConstraintPositionTimeline = function(frameCount,bezierCount,pathConstraintIndex) {
	this.pathConstraintIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,16 + "|" + pathConstraintIndex);
	this.pathConstraintIndex = pathConstraintIndex;
};
$hxClasses["spine.PathConstraintPositionTimeline"] = spine_PathConstraintPositionTimeline;
spine_PathConstraintPositionTimeline.__name__ = "spine.PathConstraintPositionTimeline";
spine_PathConstraintPositionTimeline.__super__ = spine_CurveTimeline1;
spine_PathConstraintPositionTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getPathConstraintIndex: function() {
		return this.pathConstraintIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var constraint = skeleton.pathConstraints[this.pathConstraintIndex];
		if(!constraint.active) {
			return;
		}
		if(time < this.frames[0]) {
			var _continueAfterSwitch44 = false;
			while(true) {
				var _switchCond44 = blend;
				if(_switchCond44 == 0) {
					constraint.position = constraint.data.position;
					return;
				} else if(_switchCond44 == 1) {
					constraint.position += (constraint.data.position - constraint.position) * alpha;
				}
				break;
			}
			return;
		}
		var position = this.getCurveValue(time);
		if(blend == 0) {
			constraint.position = constraint.data.position + (position - constraint.data.position) * alpha;
		} else {
			constraint.position += (position - constraint.position) * alpha;
		}
	}
	,__class__: spine_PathConstraintPositionTimeline
});
var spine_PathConstraintSpacingTimeline = function(frameCount,bezierCount,pathConstraintIndex) {
	this.pathConstraintIndex = 0;
	spine_CurveTimeline1.call(this,frameCount,bezierCount,17 + "|" + pathConstraintIndex);
	this.pathConstraintIndex = pathConstraintIndex;
};
$hxClasses["spine.PathConstraintSpacingTimeline"] = spine_PathConstraintSpacingTimeline;
spine_PathConstraintSpacingTimeline.__name__ = "spine.PathConstraintSpacingTimeline";
spine_PathConstraintSpacingTimeline.__super__ = spine_CurveTimeline1;
spine_PathConstraintSpacingTimeline.prototype = $extend(spine_CurveTimeline1.prototype,{
	getPathConstraintIndex: function() {
		return this.pathConstraintIndex;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var constraint = skeleton.pathConstraints[this.pathConstraintIndex];
		if(!constraint.active) {
			return;
		}
		if(time < this.frames[0]) {
			var _continueAfterSwitch45 = false;
			while(true) {
				var _switchCond45 = blend;
				if(_switchCond45 == 0) {
					constraint.spacing = constraint.data.spacing;
					return;
				} else if(_switchCond45 == 1) {
					constraint.spacing += (constraint.data.spacing - constraint.spacing) * alpha;
				}
				break;
			}
			return;
		}
		var spacing = this.getCurveValue(time);
		if(blend == 0) {
			constraint.spacing = constraint.data.spacing + (spacing - constraint.data.spacing) * alpha;
		} else {
			constraint.spacing += (spacing - constraint.spacing) * alpha;
		}
	}
	,__class__: spine_PathConstraintSpacingTimeline
});
var spine_PathConstraintMixTimeline = function(frameCount,bezierCount,pathConstraintIndex) {
	this.pathConstraintIndex = 0;
	spine_CurveTimeline.call(this,frameCount,bezierCount,[18 + "|" + pathConstraintIndex]);
	this.pathConstraintIndex = pathConstraintIndex;
};
$hxClasses["spine.PathConstraintMixTimeline"] = spine_PathConstraintMixTimeline;
spine_PathConstraintMixTimeline.__name__ = "spine.PathConstraintMixTimeline";
spine_PathConstraintMixTimeline.__super__ = spine_CurveTimeline;
spine_PathConstraintMixTimeline.prototype = $extend(spine_CurveTimeline.prototype,{
	getFrameEntries: function() {
		return 4;
	}
	,getPathConstraintIndex: function() {
		return this.pathConstraintIndex;
	}
	,setFrame: function(frame,time,mixRotate,mixX,mixY) {
		frame <<= 2;
		this.frames[frame] = time;
		this.frames[frame + 1] = mixRotate;
		this.frames[frame + 2] = mixX;
		this.frames[frame + 3] = mixY;
	}
	,apply: function(skeleton,lastTime,time,events,alpha,blend,direction) {
		var constraint = skeleton.pathConstraints[this.pathConstraintIndex];
		if(!constraint.active) {
			return;
		}
		var frames = this.frames;
		if(time < frames[0]) {
			var data = constraint.data;
			var _continueAfterSwitch46 = false;
			while(true) {
				var _switchCond46 = blend;
				if(_switchCond46 == 0) {
					constraint.mixRotate = data.mixRotate;
					constraint.mixX = data.mixX;
					constraint.mixY = data.mixY;
					return;
				} else if(_switchCond46 == 1) {
					constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;
					constraint.mixX += (data.mixX - constraint.mixX) * alpha;
					constraint.mixY += (data.mixY - constraint.mixY) * alpha;
				}
				break;
			}
			return;
		}
		var rotate = 0;
		var x = 0;
		var y = 0;
		var i = spine_Timeline.searchWithStep(frames,time,4);
		var curveType = this.curves[i >> 2] | 0;
		var _continueAfterSwitch47 = false;
		while(true) {
			var _switchCond47 = curveType;
			if(_switchCond47 == 0) {
				var before = frames[i];
				rotate = frames[i + 1];
				x = frames[i + 2];
				y = frames[i + 3];
				var t = (time - before) / (frames[i + 4] - before);
				rotate += (frames[i + 4 + 1] - rotate) * t;
				x += (frames[i + 4 + 2] - x) * t;
				y += (frames[i + 4 + 3] - y) * t;
				break;
			} else if(_switchCond47 == 1) {
				rotate = frames[i + 1];
				x = frames[i + 2];
				y = frames[i + 3];
				break;
			} else {
				rotate = this.getBezierValue(time,i,1,curveType - 2);
				x = this.getBezierValue(time,i,2,curveType + 18 - 2);
				y = this.getBezierValue(time,i,3,curveType + 36 - 2);
			}
			break;
		}
		if(blend == 0) {
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;
			constraint.mixX = data.mixX + (x - data.mixX) * alpha;
			constraint.mixY = data.mixY + (y - data.mixY) * alpha;
		} else {
			constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;
			constraint.mixX += (x - constraint.mixX) * alpha;
			constraint.mixY += (y - constraint.mixY) * alpha;
		}
	}
	,__class__: spine_PathConstraintMixTimeline
});
var spine_MixBlend_$enum = function() { };
$hxClasses["spine.MixBlend_enum"] = spine_MixBlend_$enum;
spine_MixBlend_$enum.__name__ = "spine.MixBlend_enum";
spine_MixBlend_$enum.valueOf = function(value) {
	switch(value) {
	case "add":
		return 3;
	case "first":
		return 1;
	case "replace":
		return 2;
	case "setup":
		return 0;
	default:
		return 0;
	}
};
var spine_MixDirection_$enum = function() { };
$hxClasses["spine.MixDirection_enum"] = spine_MixDirection_$enum;
spine_MixDirection_$enum.__name__ = "spine.MixDirection_enum";
spine_MixDirection_$enum.valueOf = function(value) {
	switch(value) {
	case "directionIn":
		return 0;
	case "directionOut":
		return 1;
	default:
		return 0;
	}
};
var spine_Property_$enum = function() { };
$hxClasses["spine.Property_enum"] = spine_Property_$enum;
spine_Property_$enum.__name__ = "spine.Property_enum";
spine_Property_$enum.valueOf = function(value) {
	switch(value) {
	case "alpha":
		return 8;
	case "attachment":
		return 10;
	case "deform":
		return 11;
	case "drawOrder":
		return 13;
	case "event":
		return 12;
	case "ikConstraint":
		return 14;
	case "pathConstraintMix":
		return 18;
	case "pathConstraintPosition":
		return 16;
	case "pathConstraintSpacing":
		return 17;
	case "rgb":
		return 7;
	case "rgb2":
		return 9;
	case "rotate":
		return 0;
	case "scaleX":
		return 3;
	case "scaleY":
		return 4;
	case "shearX":
		return 5;
	case "shearY":
		return 6;
	case "transformConstraint":
		return 15;
	case "x":
		return 1;
	case "y":
		return 2;
	default:
		return 0;
	}
};
var spine_support_error_Error = function(message,id) {
	if(id == null) {
		id = 0;
	}
	if(message == null) {
		message = "";
	}
	this.message = message;
	this.errorID = id;
	this.name = "Error";
};
$hxClasses["spine.support.error.Error"] = spine_support_error_Error;
spine_support_error_Error.__name__ = "spine.support.error.Error";
spine_support_error_Error.prototype = {
	getStackTrace: function() {
		return haxe_CallStack.toString(haxe_CallStack.exceptionStack());
	}
	,toString: function() {
		if(this.message != null) {
			return this.message;
		} else {
			return "Error";
		}
	}
	,__class__: spine_support_error_Error
};
var spine_support_error_IllegalArgumentException = function(message) {
	if(message == null) {
		message = "";
	}
	spine_support_error_Error.call(this,message);
	this.name = "IllegalArgumentException";
};
$hxClasses["spine.support.error.IllegalArgumentException"] = spine_support_error_IllegalArgumentException;
spine_support_error_IllegalArgumentException.__name__ = "spine.support.error.IllegalArgumentException";
spine_support_error_IllegalArgumentException.__super__ = spine_support_error_Error;
spine_support_error_IllegalArgumentException.prototype = $extend(spine_support_error_Error.prototype,{
	__class__: spine_support_error_IllegalArgumentException
});
var spine_AnimationState = function(data) {
	this.trackEntryPool = new spine__$AnimationState_TrackEntryPool();
	this.unkeyedState = 0;
	this.timeScale = 1;
	this.animationsChanged = false;
	var this1 = [];
	this.propertyIds = this1;
	this.queue = null;
	this.listeners = new spine_support_utils_SnapshotArray();
	var this1 = [];
	this.events = this1;
	var this1 = [];
	this.tracks = this1;
	this.queue = new spine_EventQueue();
	this.queue.AnimationState_this = this;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	this.data = data;
};
$hxClasses["spine.AnimationState"] = spine_AnimationState;
spine_AnimationState.__name__ = "spine.AnimationState";
spine_AnimationState.prototype = {
	update: function(delta) {
		delta *= this.timeScale;
		var tracks = this.tracks;
		var i = 0;
		var n = this.tracks.length;
		while(i < n) {
			var result = tracks[i];
			var current = result;
			if(current == null) {
				++i;
				continue;
			}
			current.animationLast = current.nextAnimationLast;
			current.trackLast = current.nextTrackLast;
			var currentDelta = delta * current.timeScale;
			if(current.delay > 0) {
				current.delay -= currentDelta;
				if(current.delay > 0) {
					++i;
					continue;
				}
				currentDelta = -current.delay;
				current.delay = 0;
			}
			var next = current.next;
			if(next != null) {
				var nextTime = current.trackLast - next.delay;
				if(nextTime >= 0) {
					next.delay = 0;
					next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;
					current.trackTime += currentDelta;
					var from;
					if(i < this.tracks.length) {
						from = this.tracks[i];
					} else {
						var this1 = this.tracks;
						var size = i + 1;
						var len = this1.length;
						if(len > size) {
							this1.splice(size,size - len);
						} else if(len < size) {
							this1[size - 1] = null;
						}
						from = null;
					}
					this.tracks[i] = next;
					next.previous = null;
					if(from != null) {
						var _this = this.queue;
						_this.objects.push(1);
						_this.objects.push(from);
						next.mixingFrom = from;
						from.mixingTo = next;
						next.mixTime = 0;
						if(from.mixingFrom != null && from.mixDuration > 0) {
							next.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
						}
						var this2 = from.timelinesRotation;
						this2.splice(0,this2.length);
					}
					var _this1 = this.queue;
					_this1.objects.push(0);
					_this1.objects.push(next);
					_this1.AnimationState_this.animationsChanged = true;
					while(next.mixingFrom != null) {
						next.mixTime += delta;
						next = next.mixingFrom;
					}
					++i;
					continue;
				}
			} else if(current.trackLast >= current.trackEnd && current.mixingFrom == null) {
				tracks[i] = null;
				var _this2 = this.queue;
				_this2.objects.push(2);
				_this2.objects.push(current);
				_this2.AnimationState_this.animationsChanged = true;
				var next1 = current.next;
				while(next1 != null) {
					var _this3 = this.queue;
					_this3.objects.push(3);
					_this3.objects.push(next1);
					next1 = next1.next;
				}
				current.next = null;
				++i;
				continue;
			}
			var tmp;
			if(current.mixingFrom != null) {
				var from1 = current.mixingFrom;
				if(from1 == null) {
					tmp = true;
				} else {
					var from2 = from1.mixingFrom;
					var finished;
					if(from2 == null) {
						finished = true;
					} else {
						var finished1 = this.updateMixingFrom(from2,delta);
						from2.animationLast = from2.nextAnimationLast;
						from2.trackLast = from2.nextTrackLast;
						if(from1.mixTime > 0 && from1.mixTime >= from1.mixDuration) {
							if(from2.totalAlpha == 0 || from1.mixDuration == 0) {
								from1.mixingFrom = from2.mixingFrom;
								if(from2.mixingFrom != null) {
									from2.mixingFrom.mixingTo = from1;
								}
								from1.interruptAlpha = from2.interruptAlpha;
								var _this4 = this.queue;
								_this4.objects.push(2);
								_this4.objects.push(from2);
								_this4.AnimationState_this.animationsChanged = true;
							}
							finished = finished1;
						} else {
							from2.trackTime += delta * from2.timeScale;
							from1.mixTime += delta;
							finished = false;
						}
					}
					from1.animationLast = from1.nextAnimationLast;
					from1.trackLast = from1.nextTrackLast;
					if(current.mixTime > 0 && current.mixTime >= current.mixDuration) {
						if(from1.totalAlpha == 0 || current.mixDuration == 0) {
							current.mixingFrom = from1.mixingFrom;
							if(from1.mixingFrom != null) {
								from1.mixingFrom.mixingTo = current;
							}
							current.interruptAlpha = from1.interruptAlpha;
							var _this5 = this.queue;
							_this5.objects.push(2);
							_this5.objects.push(from1);
							_this5.AnimationState_this.animationsChanged = true;
						}
						tmp = finished;
					} else {
						from1.trackTime += delta * from1.timeScale;
						current.mixTime += delta;
						tmp = false;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var from3 = current.mixingFrom;
				current.mixingFrom = null;
				if(from3 != null) {
					from3.mixingTo = null;
				}
				while(from3 != null) {
					var _this6 = this.queue;
					_this6.objects.push(2);
					_this6.objects.push(from3);
					_this6.AnimationState_this.animationsChanged = true;
					from3 = from3.mixingFrom;
				}
			}
			current.trackTime += currentDelta;
			++i;
		}
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
	}
	,updateMixingFrom: function(to,delta) {
		var from = to.mixingFrom;
		if(from == null) {
			return true;
		}
		var finished = this.updateMixingFrom(from,delta);
		from.animationLast = from.nextAnimationLast;
		from.trackLast = from.nextTrackLast;
		if(to.mixTime > 0 && to.mixTime >= to.mixDuration) {
			if(from.totalAlpha == 0 || to.mixDuration == 0) {
				to.mixingFrom = from.mixingFrom;
				if(from.mixingFrom != null) {
					from.mixingFrom.mixingTo = to;
				}
				to.interruptAlpha = from.interruptAlpha;
				var _this = this.queue;
				_this.objects.push(2);
				_this.objects.push(from);
				_this.AnimationState_this.animationsChanged = true;
			}
			return finished;
		}
		from.trackTime += delta * from.timeScale;
		to.mixTime += delta;
		return false;
	}
	,apply: function(skeleton) {
		if(skeleton == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
		}
		if(this.animationsChanged) {
			this.animationsChanged = false;
			var this1 = this.propertyIds;
			this1.splice(0,this1.length);
			var n = this.tracks.length;
			var tracks = this.tracks;
			var i = 0;
			while(i < n) {
				var result = tracks[i];
				var entry = result;
				if(entry == null) {
					++i;
					continue;
				}
				while(entry.mixingFrom != null) entry = entry.mixingFrom;
				while(true) {
					if(entry.mixingTo == null || entry.mixBlend != 3) {
						var to = entry.mixingTo;
						var timelines = entry.animation.timelines;
						var timelinesCount = entry.animation.timelines.length;
						var this1 = entry.timelineMode;
						var len = this1.length;
						if(len > timelinesCount) {
							this1.splice(timelinesCount,timelinesCount - len);
						} else if(len < timelinesCount) {
							while(len < timelinesCount) {
								this1.push(0);
								++len;
							}
						}
						var timelineMode = this1;
						var this2 = entry.timelineHoldMix;
						this2.splice(0,this2.length);
						var this3 = entry.timelineHoldMix;
						var len1 = this3.length;
						if(len1 > timelinesCount) {
							this3.splice(timelinesCount,timelinesCount - len1);
						} else if(len1 < timelinesCount) {
							this3[timelinesCount - 1] = null;
						}
						var timelineHoldMix = this3;
						var propertyIds = this.propertyIds;
						if(to != null && to.holdPrevious) {
							var i1 = 0;
							while(i1 < timelinesCount) {
								var result1 = timelines[i1];
								timelineMode[i1] = spine_support_utils_ObjectSet.addAll(propertyIds,result1.getPropertyIds()) ? 3 : 2;
								++i1;
							}
						} else {
							var _gotoLabel_outer;
							while(true) {
								_gotoLabel_outer = 0;
								var i2 = 0;
								while(i2 < timelinesCount) {
									var result2 = timelines[i2];
									var timeline = result2;
									var ids = timeline.getPropertyIds();
									if(!spine_support_utils_ObjectSet.addAll(propertyIds,ids)) {
										timelineMode[i2] = 0;
									} else if(to == null || ((timeline) instanceof spine_AttachmentTimeline) || ((timeline) instanceof spine_DrawOrderTimeline) || ((timeline) instanceof spine_EventTimeline) || !to.animation.hasTimeline(ids)) {
										timelineMode[i2] = 1;
									} else {
										var next = to.mixingTo;
										while(next != null) {
											if(next.animation.hasTimeline(ids)) {
												next = next.mixingTo;
												continue;
											}
											if(next.mixDuration > 0) {
												timelineMode[i2] = 4;
												timelineHoldMix[i2] = next;
												next = next.mixingTo;
												_gotoLabel_outer = 2;
												break;
											}
											break;
										}
										if(_gotoLabel_outer == 2) {
											_gotoLabel_outer = 0;
											++i2;
											continue;
										}
										if(_gotoLabel_outer >= 1) {
											break;
										}
										timelineMode[i2] = 3;
									}
									++i2;
								}
								if(_gotoLabel_outer == 0) {
									break;
								}
							}
						}
					}
					entry = entry.mixingTo;
					if(!(entry != null)) {
						break;
					}
				}
				++i;
			}
		}
		var events = this.events;
		var applied = false;
		var tracks = this.tracks;
		var i = 0;
		var n = this.tracks.length;
		while(i < n) {
			var result = tracks[i];
			var current = result;
			if(current == null || current.delay > 0) {
				++i;
				continue;
			}
			applied = true;
			var blend = i == 0 ? 1 : current.mixBlend;
			var mix = current.alpha;
			if(current.mixingFrom != null) {
				mix *= this.applyMixingFrom(current,skeleton,blend);
			} else if(current.trackTime >= current.trackEnd && current.next == null) {
				mix = 0;
			}
			var animationLast = current.animationLast;
			var animationTime;
			if(current.loop) {
				var duration = current.animationEnd - current.animationStart;
				animationTime = duration == 0 ? current.animationStart : current.trackTime % duration + current.animationStart;
			} else {
				animationTime = Math.min(current.trackTime + current.animationStart,current.animationEnd);
			}
			var applyTime = animationTime;
			var applyEvents = events;
			if(current.reverse) {
				applyTime = current.animation.duration - applyTime;
				applyEvents = null;
			}
			var timelineCount = current.animation.timelines.length;
			var timelines = current.animation.timelines;
			if(i == 0 && mix == 1 || blend == 3) {
				var ii = 0;
				while(ii < timelineCount) {
					var timeline = timelines[ii];
					if(((timeline) instanceof spine_AttachmentTimeline)) {
						var result1 = timeline;
						var timeline1 = result1;
						var slot = skeleton.slots[timeline1.slotIndex];
						if(slot.bone.active) {
							if(applyTime < timeline1.frames[0]) {
								if(blend == 0 || blend == 1) {
									this.setAttachment(skeleton,slot,slot.data.attachmentName,true);
								}
							} else {
								this.setAttachment(skeleton,slot,timeline1.attachmentNames[spine_Timeline.search(timeline1.frames,applyTime)],true);
							}
							if(slot.attachmentState <= this.unkeyedState) {
								slot.attachmentState = this.unkeyedState + 1;
							}
						}
					} else {
						var result2 = timeline;
						result2.apply(skeleton,animationLast,applyTime,applyEvents,mix,blend,0);
					}
					++ii;
				}
			} else {
				var timelineMode = current.timelineMode;
				var firstFrame = current.timelinesRotation.length != timelineCount << 1;
				if(firstFrame) {
					var this1 = current.timelinesRotation;
					var size = timelineCount << 1;
					var len = this1.length;
					if(len > size) {
						this1.splice(size,size - len);
					} else if(len < size) {
						while(len < size) {
							this1.push(0);
							++len;
						}
					}
				}
				var timelinesRotation = current.timelinesRotation;
				var ii1 = 0;
				while(ii1 < timelineCount) {
					var result3 = timelines[ii1];
					var timeline2 = result3;
					var timelineBlend = timelineMode[ii1] == 0 ? blend : 0;
					if(((timeline2) instanceof spine_RotateTimeline)) {
						var result4 = timeline2;
						this.applyRotateTimeline(result4,skeleton,applyTime,mix,timelineBlend,timelinesRotation,ii1 << 1,firstFrame);
					} else if(((timeline2) instanceof spine_AttachmentTimeline)) {
						var result5 = timeline2;
						var timeline3 = result5;
						var slot1 = skeleton.slots[timeline3.slotIndex];
						if(slot1.bone.active) {
							if(applyTime < timeline3.frames[0]) {
								if(blend == 0 || blend == 1) {
									this.setAttachment(skeleton,slot1,slot1.data.attachmentName,true);
								}
							} else {
								this.setAttachment(skeleton,slot1,timeline3.attachmentNames[spine_Timeline.search(timeline3.frames,applyTime)],true);
							}
							if(slot1.attachmentState <= this.unkeyedState) {
								slot1.attachmentState = this.unkeyedState + 1;
							}
						}
					} else {
						timeline2.apply(skeleton,animationLast,applyTime,applyEvents,mix,timelineBlend,0);
					}
					++ii1;
				}
			}
			var animationStart = current.animationStart;
			var animationEnd = current.animationEnd;
			var duration1 = animationEnd - animationStart;
			var trackLastWrapped = current.trackLast % duration1;
			var events1 = this.events;
			var i1 = 0;
			var n1 = this.events.length;
			while(i1 < n1) {
				var result6 = events1[i1];
				var event = result6;
				if(event.time < trackLastWrapped) {
					break;
				}
				if(event.time > animationEnd) {
					++i1;
					continue;
				}
				var _this = this.queue;
				_this.objects.push(5);
				_this.objects.push(current);
				_this.objects.push(event);
				++i1;
			}
			var complete = false;
			if(current.loop) {
				complete = duration1 == 0 || trackLastWrapped > current.trackTime % duration1;
			} else {
				complete = animationTime >= animationEnd && current.animationLast < animationEnd;
			}
			if(complete) {
				var _this1 = this.queue;
				_this1.objects.push(4);
				_this1.objects.push(current);
			}
			while(i1 < n1) {
				var result7 = events1[i1];
				var event1 = result7;
				if(event1.time < animationStart) {
					++i1;
					continue;
				}
				var _this2 = this.queue;
				_this2.objects.push(5);
				_this2.objects.push(current);
				_this2.objects.push(event1);
				++i1;
			}
			events.splice(0,events.length);
			current.nextAnimationLast = animationTime;
			current.nextTrackLast = current.trackTime;
			++i;
		}
		var setupState = this.unkeyedState + 1;
		var slots = skeleton.slots;
		var i = 0;
		var n = skeleton.slots.length;
		while(i < n) {
			var result = slots[i];
			var slot = result;
			if(slot.attachmentState == setupState) {
				var attachmentName = slot.data.attachmentName;
				var attachment = attachmentName == null ? null : skeleton.getAttachment(slot.data.index,attachmentName);
				if(slot.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this = result1;
						var result2 = slot.attachment;
						var _this1 = result2;
						tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = slot.deform;
						this1.splice(0,this1.length);
					}
					slot.attachment = attachment;
					slot.attachmentTime = slot.bone.skeleton.time;
				}
			}
			++i;
		}
		this.unkeyedState += 2;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
		return applied;
	}
	,applyMixingFrom: function(to,skeleton,blend) {
		var from = to.mixingFrom;
		if(from.mixingFrom != null) {
			this.applyMixingFrom(from,skeleton,blend);
		}
		var mix = 0;
		if(to.mixDuration == 0) {
			mix = 1;
			if(blend == 1) {
				blend = 0;
			}
		} else {
			mix = to.mixTime / to.mixDuration;
			if(mix > 1) {
				mix = 1;
			}
			if(blend != 1) {
				blend = from.mixBlend;
			}
		}
		var attachments = mix < from.attachmentThreshold;
		var drawOrder = mix < from.drawOrderThreshold;
		var timelineCount = from.animation.timelines.length;
		var timelines = from.animation.timelines;
		var alphaHold = from.alpha * to.interruptAlpha;
		var alphaMix = alphaHold * (1 - mix);
		var animationLast = from.animationLast;
		var animationTime;
		if(from.loop) {
			var duration = from.animationEnd - from.animationStart;
			animationTime = duration == 0 ? from.animationStart : from.trackTime % duration + from.animationStart;
		} else {
			animationTime = Math.min(from.trackTime + from.animationStart,from.animationEnd);
		}
		var applyTime = animationTime;
		var events = null;
		if(from.reverse) {
			applyTime = from.animation.duration - applyTime;
		} else if(mix < from.eventThreshold) {
			events = this.events;
		}
		if(blend == 3) {
			var i = 0;
			while(i < timelineCount) {
				var result = timelines[i];
				result.apply(skeleton,animationLast,applyTime,events,alphaMix,blend,1);
				++i;
			}
		} else {
			var timelineMode = from.timelineMode;
			var timelineHoldMix = from.timelineHoldMix;
			var firstFrame = from.timelinesRotation.length != timelineCount << 1;
			if(firstFrame) {
				var this1 = from.timelinesRotation;
				var size = timelineCount << 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					while(len < size) {
						this1.push(0);
						++len;
					}
				}
			}
			var timelinesRotation = from.timelinesRotation;
			from.totalAlpha = 0;
			var i = 0;
			while(i < timelineCount) {
				var result = timelines[i];
				var timeline = result;
				var direction = 1;
				var timelineBlend = 0;
				var alpha = 0;
				var _continueAfterSwitch0 = false;
				while(true) {
					var _switchCond0 = timelineMode[i];
					if(_switchCond0 == 0) {
						if(!drawOrder && ((timeline) instanceof spine_DrawOrderTimeline)) {
							_continueAfterSwitch0 = true;
							break;
						}
						timelineBlend = blend;
						alpha = alphaMix;
						break;
					} else if(_switchCond0 == 1) {
						timelineBlend = 0;
						alpha = alphaMix;
						break;
					} else if(_switchCond0 == 2) {
						timelineBlend = blend;
						alpha = alphaHold;
						break;
					} else if(_switchCond0 == 3) {
						timelineBlend = 0;
						alpha = alphaHold;
						break;
					} else {
						timelineBlend = 0;
						var result1 = timelineHoldMix[i];
						var holdMix = result1;
						alpha = alphaHold * Math.max(0,1 - holdMix.mixTime / holdMix.mixDuration | 0);
						break;
					}
				}
				if(_continueAfterSwitch0) {
					++i;
					continue;
				}
				from.totalAlpha += alpha;
				if(((timeline) instanceof spine_RotateTimeline)) {
					var result2 = timeline;
					this.applyRotateTimeline(result2,skeleton,applyTime,alpha,timelineBlend,timelinesRotation,i << 1,firstFrame);
				} else if(((timeline) instanceof spine_AttachmentTimeline)) {
					var result3 = timeline;
					var timeline1 = result3;
					var slot = skeleton.slots[timeline1.slotIndex];
					if(slot.bone.active) {
						if(applyTime < timeline1.frames[0]) {
							if(timelineBlend == 0 || timelineBlend == 1) {
								this.setAttachment(skeleton,slot,slot.data.attachmentName,attachments);
							}
						} else {
							this.setAttachment(skeleton,slot,timeline1.attachmentNames[spine_Timeline.search(timeline1.frames,applyTime)],attachments);
						}
						if(slot.attachmentState <= this.unkeyedState) {
							slot.attachmentState = this.unkeyedState + 1;
						}
					}
				} else {
					if(drawOrder && ((timeline) instanceof spine_DrawOrderTimeline) && timelineBlend == 0) {
						direction = 0;
					}
					timeline.apply(skeleton,animationLast,applyTime,events,alpha,timelineBlend,direction);
				}
				++i;
			}
		}
		if(to.mixDuration > 0) {
			var animationStart = from.animationStart;
			var animationEnd = from.animationEnd;
			var duration = animationEnd - animationStart;
			var trackLastWrapped = from.trackLast % duration;
			var events = this.events;
			var i = 0;
			var n = this.events.length;
			while(i < n) {
				var result = events[i];
				var event = result;
				if(event.time < trackLastWrapped) {
					break;
				}
				if(event.time > animationEnd) {
					++i;
					continue;
				}
				var _this = this.queue;
				_this.objects.push(5);
				_this.objects.push(from);
				_this.objects.push(event);
				++i;
			}
			var complete = false;
			if(from.loop) {
				complete = duration == 0 || trackLastWrapped > from.trackTime % duration;
			} else {
				complete = animationTime >= animationEnd && from.animationLast < animationEnd;
			}
			if(complete) {
				var _this = this.queue;
				_this.objects.push(4);
				_this.objects.push(from);
			}
			while(i < n) {
				var result = events[i];
				var event = result;
				if(event.time < animationStart) {
					++i;
					continue;
				}
				var _this = this.queue;
				_this.objects.push(5);
				_this.objects.push(from);
				_this.objects.push(event);
				++i;
			}
		}
		var this1 = this.events;
		this1.splice(0,this1.length);
		from.nextAnimationLast = animationTime;
		from.nextTrackLast = from.trackTime;
		return mix;
	}
	,applyAttachmentTimeline: function(timeline,skeleton,time,blend,attachments) {
		var slot = skeleton.slots[timeline.slotIndex];
		if(!slot.bone.active) {
			return;
		}
		if(time < timeline.frames[0]) {
			if(blend == 0 || blend == 1) {
				this.setAttachment(skeleton,slot,slot.data.attachmentName,attachments);
			}
		} else {
			this.setAttachment(skeleton,slot,timeline.attachmentNames[spine_Timeline.search(timeline.frames,time)],attachments);
		}
		if(slot.attachmentState <= this.unkeyedState) {
			slot.attachmentState = this.unkeyedState + 1;
		}
	}
	,setAttachment: function(skeleton,slot,attachmentName,attachments) {
		var attachment = attachmentName == null ? null : skeleton.getAttachment(slot.data.index,attachmentName);
		if(slot.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = slot.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = slot.deform;
				this1.splice(0,this1.length);
			}
			slot.attachment = attachment;
			slot.attachmentTime = slot.bone.skeleton.time;
		}
		if(attachments) {
			slot.attachmentState = this.unkeyedState + 2;
		}
	}
	,applyRotateTimeline: function(timeline,skeleton,time,alpha,blend,timelinesRotation,i,firstFrame) {
		if(firstFrame) {
			timelinesRotation[i] = 0;
		}
		if(alpha == 1) {
			timeline.apply(skeleton,0,time,null,1,blend,0);
			return;
		}
		var bone = skeleton.bones[timeline.boneIndex];
		if(!bone.active) {
			return;
		}
		var frames = timeline.frames;
		var r1 = 0;
		var r2 = 0;
		if(time < frames[0]) {
			var _continueAfterSwitch1 = false;
			while(true) {
				var _switchCond1 = blend;
				if(_switchCond1 == 0) {
					bone.rotation = bone.data.rotation;
					return;
				} else if(_switchCond1 == 1) {
					r1 = bone.rotation;
					r2 = bone.data.rotation;
				} else {
					return;
				}
				break;
			}
		} else {
			r1 = blend == 0 ? bone.data.rotation : bone.rotation;
			r2 = bone.data.rotation + timeline.getCurveValue(time);
		}
		var total = 0;
		var diff = r2 - r1;
		diff -= (16384 - (16384.499999999996 - diff / 360 | 0)) * 360;
		if(diff == 0) {
			total = timelinesRotation[i];
		} else {
			var lastTotal = 0;
			var lastDiff = 0;
			if(firstFrame) {
				lastTotal = 0;
				lastDiff = diff;
			} else {
				lastTotal = timelinesRotation[i];
				lastDiff = timelinesRotation[i + 1];
			}
			var current = diff > 0;
			var dir = lastTotal >= 0;
			if((lastDiff > 0 ? 1 : lastDiff < 0 ? -1 : 0) != (diff > 0 ? 1 : diff < 0 ? -1 : 0) && Math.abs(lastDiff) <= 90) {
				if(Math.abs(lastTotal) > 180) {
					lastTotal += 360 * (lastTotal > 0 ? 1 : lastTotal < 0 ? -1 : 0);
				}
				dir = current;
			}
			total = diff + lastTotal - lastTotal % 360;
			if(dir != current) {
				total += 360 * (lastTotal > 0 ? 1 : lastTotal < 0 ? -1 : 0);
			}
			timelinesRotation[i] = total;
		}
		timelinesRotation[i + 1] = diff;
		bone.rotation = r1 + total * alpha;
	}
	,queueEvents: function(entry,animationTime) {
		var animationStart = entry.animationStart;
		var animationEnd = entry.animationEnd;
		var duration = animationEnd - animationStart;
		var trackLastWrapped = entry.trackLast % duration;
		var events = this.events;
		var i = 0;
		var n = this.events.length;
		while(i < n) {
			var result = events[i];
			var event = result;
			if(event.time < trackLastWrapped) {
				break;
			}
			if(event.time > animationEnd) {
				++i;
				continue;
			}
			var _this = this.queue;
			_this.objects.push(5);
			_this.objects.push(entry);
			_this.objects.push(event);
			++i;
		}
		var complete = false;
		if(entry.loop) {
			complete = duration == 0 || trackLastWrapped > entry.trackTime % duration;
		} else {
			complete = animationTime >= animationEnd && entry.animationLast < animationEnd;
		}
		if(complete) {
			var _this = this.queue;
			_this.objects.push(4);
			_this.objects.push(entry);
		}
		while(i < n) {
			var result = events[i];
			var event = result;
			if(event.time < animationStart) {
				++i;
				continue;
			}
			var _this = this.queue;
			_this.objects.push(5);
			_this.objects.push(entry);
			_this.objects.push(event);
			++i;
		}
	}
	,clearTracks: function() {
		var oldDrainDisabled = this.queue.drainDisabled;
		this.queue.drainDisabled = true;
		var i = 0;
		var n = this.tracks.length;
		while(i < n) {
			if(i < 0) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
			}
			if(i < this.tracks.length) {
				var current = this.tracks[i];
				if(current != null) {
					var _this = this.queue;
					_this.objects.push(2);
					_this.objects.push(current);
					_this.AnimationState_this.animationsChanged = true;
					var next = current.next;
					while(next != null) {
						var _this1 = this.queue;
						_this1.objects.push(3);
						_this1.objects.push(next);
						next = next.next;
					}
					current.next = null;
					var entry = current;
					while(true) {
						var from = entry.mixingFrom;
						if(from == null) {
							break;
						}
						var _this2 = this.queue;
						_this2.objects.push(2);
						_this2.objects.push(from);
						_this2.AnimationState_this.animationsChanged = true;
						entry.mixingFrom = null;
						entry.mixingTo = null;
						entry = from;
					}
					this.tracks[current.trackIndex] = null;
					var _this3 = this.queue;
					if(!_this3.drainDisabled) {
						_this3.drainDisabled = true;
						var listenersArray = _this3.AnimationState_this.listeners;
						var i1 = 0;
						while(i1 < _this3.objects.length) {
							var type = _this3.objects[i1];
							var result = _this3.objects[i1 + 1];
							var entry1 = result;
							var listenersCount = listenersArray.array.length;
							var listeners = listenersArray.begin();
							while(true) {
								var _switchCond2 = type;
								if(_switchCond2 == 0) {
									if(entry1.listener != null) {
										entry1.listener.start(entry1);
									}
									var ii = 0;
									while(ii < listenersCount) {
										var result1 = listeners[ii];
										result1.start(entry1);
										++ii;
									}
									break;
								} else if(_switchCond2 == 1) {
									if(entry1.listener != null) {
										entry1.listener.interrupt(entry1);
									}
									var ii1 = 0;
									while(ii1 < listenersCount) {
										var result2 = listeners[ii1];
										result2.interrupt(entry1);
										++ii1;
									}
									break;
								} else if(_switchCond2 == 2) {
									if(entry1.listener != null) {
										entry1.listener.end(entry1);
									}
									var ii2 = 0;
									while(ii2 < listenersCount) {
										var result3 = listeners[ii2];
										result3.end(entry1);
										++ii2;
									}
									if(entry1.listener != null) {
										entry1.listener.dispose(entry1);
									}
									var ii3 = 0;
									while(ii3 < listenersCount) {
										var result4 = listeners[ii3];
										result4.dispose(entry1);
										++ii3;
									}
									_this3.AnimationState_this.trackEntryPool.free(entry1);
									break;
								} else if(_switchCond2 == 3) {
									if(entry1.listener != null) {
										entry1.listener.dispose(entry1);
									}
									var ii4 = 0;
									while(ii4 < listenersCount) {
										var result5 = listeners[ii4];
										result5.dispose(entry1);
										++ii4;
									}
									_this3.AnimationState_this.trackEntryPool.free(entry1);
									break;
								} else if(_switchCond2 == 4) {
									if(entry1.listener != null) {
										entry1.listener.complete(entry1);
									}
									var ii5 = 0;
									while(ii5 < listenersCount) {
										var result6 = listeners[ii5];
										result6.complete(entry1);
										++ii5;
									}
									break;
								} else if(_switchCond2 == 5) {
									var result7 = _this3.objects[i1++ + 2];
									var event = result7;
									if(entry1.listener != null) {
										entry1.listener.event(entry1,event);
									}
									var ii6 = 0;
									while(ii6 < listenersCount) {
										var result8 = listeners[ii6];
										result8.event(entry1,event);
										++ii6;
									}
									break;
								}
								break;
							}
							listenersArray.end();
							i1 += 2;
						}
						var this1 = _this3.objects;
						this1.splice(0,this1.length);
						_this3.drainDisabled = false;
					}
				}
			}
			++i;
		}
		var this1 = this.tracks;
		this1.splice(0,this1.length);
		this.queue.drainDisabled = oldDrainDisabled;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
	}
	,clearTrack: function(trackIndex) {
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(trackIndex >= this.tracks.length) {
			return;
		}
		var current = this.tracks[trackIndex];
		if(current == null) {
			return;
		}
		var _this = this.queue;
		_this.objects.push(2);
		_this.objects.push(current);
		_this.AnimationState_this.animationsChanged = true;
		var next = current.next;
		while(next != null) {
			var _this = this.queue;
			_this.objects.push(3);
			_this.objects.push(next);
			next = next.next;
		}
		current.next = null;
		var entry = current;
		while(true) {
			var from = entry.mixingFrom;
			if(from == null) {
				break;
			}
			var _this = this.queue;
			_this.objects.push(2);
			_this.objects.push(from);
			_this.AnimationState_this.animationsChanged = true;
			entry.mixingFrom = null;
			entry.mixingTo = null;
			entry = from;
		}
		this.tracks[current.trackIndex] = null;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
	}
	,setCurrent: function(index,current,interrupt) {
		var from;
		if(index < this.tracks.length) {
			from = this.tracks[index];
		} else {
			var this1 = this.tracks;
			var size = index + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			from = null;
		}
		this.tracks[index] = current;
		current.previous = null;
		if(from != null) {
			if(interrupt) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
			}
			current.mixingFrom = from;
			from.mixingTo = current;
			current.mixTime = 0;
			if(from.mixingFrom != null && from.mixDuration > 0) {
				current.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
			}
			var this1 = from.timelinesRotation;
			this1.splice(0,this1.length);
		}
		var _this = this.queue;
		_this.objects.push(0);
		_this.objects.push(current);
		_this.AnimationState_this.animationsChanged = true;
	}
	,setAnimationByName: function(trackIndex,animationName,loop) {
		var animation = this.data.skeletonData.findAnimation(animationName);
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + animationName));
		}
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var interrupt = true;
		var current;
		if(trackIndex < this.tracks.length) {
			current = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			current = null;
		}
		if(current != null) {
			if(current.nextTrackLast == -1) {
				this.tracks[trackIndex] = current.mixingFrom;
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(current);
				var _this = this.queue;
				_this.objects.push(2);
				_this.objects.push(current);
				_this.AnimationState_this.animationsChanged = true;
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
				current = current.mixingFrom;
				interrupt = false;
			} else {
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
			}
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(current == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = current.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		var from;
		if(trackIndex < this.tracks.length) {
			from = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			from = null;
		}
		this.tracks[trackIndex] = entry1;
		entry1.previous = null;
		if(from != null) {
			if(interrupt) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
			}
			entry1.mixingFrom = from;
			from.mixingTo = entry1;
			entry1.mixTime = 0;
			if(from.mixingFrom != null && from.mixDuration > 0) {
				entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
			}
			var this1 = from.timelinesRotation;
			this1.splice(0,this1.length);
		}
		var _this = this.queue;
		_this.objects.push(0);
		_this.objects.push(entry1);
		_this.AnimationState_this.animationsChanged = true;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
		return entry1;
	}
	,setAnimation: function(trackIndex,animation,loop) {
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var interrupt = true;
		var current;
		if(trackIndex < this.tracks.length) {
			current = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			current = null;
		}
		if(current != null) {
			if(current.nextTrackLast == -1) {
				this.tracks[trackIndex] = current.mixingFrom;
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(current);
				var _this = this.queue;
				_this.objects.push(2);
				_this.objects.push(current);
				_this.AnimationState_this.animationsChanged = true;
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
				current = current.mixingFrom;
				interrupt = false;
			} else {
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
			}
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(current == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = current.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		var from;
		if(trackIndex < this.tracks.length) {
			from = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			from = null;
		}
		this.tracks[trackIndex] = entry1;
		entry1.previous = null;
		if(from != null) {
			if(interrupt) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
			}
			entry1.mixingFrom = from;
			from.mixingTo = entry1;
			entry1.mixTime = 0;
			if(from.mixingFrom != null && from.mixDuration > 0) {
				entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
			}
			var this1 = from.timelinesRotation;
			this1.splice(0,this1.length);
		}
		var _this = this.queue;
		_this.objects.push(0);
		_this.objects.push(entry1);
		_this.AnimationState_this.animationsChanged = true;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
		return entry1;
	}
	,addAnimationByName: function(trackIndex,animationName,loop,delay) {
		var animation = this.data.skeletonData.findAnimation(animationName);
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + animationName));
		}
		var delay1 = delay;
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var last;
		if(trackIndex < this.tracks.length) {
			last = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			last = null;
		}
		if(last != null) {
			while(last.next != null) last = last.next;
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		if(last == null) {
			var from;
			if(trackIndex < this.tracks.length) {
				from = this.tracks[trackIndex];
			} else {
				var this1 = this.tracks;
				var size = trackIndex + 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					this1[size - 1] = null;
				}
				from = null;
			}
			this.tracks[trackIndex] = entry1;
			entry1.previous = null;
			if(from != null) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
				entry1.mixingFrom = from;
				from.mixingTo = entry1;
				entry1.mixTime = 0;
				if(from.mixingFrom != null && from.mixDuration > 0) {
					entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
				}
				var this1 = from.timelinesRotation;
				this1.splice(0,this1.length);
			}
			var _this = this.queue;
			_this.objects.push(0);
			_this.objects.push(entry1);
			_this.AnimationState_this.animationsChanged = true;
			var _this = this.queue;
			if(!_this.drainDisabled) {
				_this.drainDisabled = true;
				var listenersArray = _this.AnimationState_this.listeners;
				var i = 0;
				while(i < _this.objects.length) {
					var type = _this.objects[i];
					var result = _this.objects[i + 1];
					var entry = result;
					var listenersCount = listenersArray.array.length;
					var listeners = listenersArray.begin();
					while(true) {
						var _switchCond2 = type;
						if(_switchCond2 == 0) {
							if(entry.listener != null) {
								entry.listener.start(entry);
							}
							var ii = 0;
							while(ii < listenersCount) {
								var result1 = listeners[ii];
								result1.start(entry);
								++ii;
							}
							break;
						} else if(_switchCond2 == 1) {
							if(entry.listener != null) {
								entry.listener.interrupt(entry);
							}
							var ii1 = 0;
							while(ii1 < listenersCount) {
								var result2 = listeners[ii1];
								result2.interrupt(entry);
								++ii1;
							}
							break;
						} else if(_switchCond2 == 2) {
							if(entry.listener != null) {
								entry.listener.end(entry);
							}
							var ii2 = 0;
							while(ii2 < listenersCount) {
								var result3 = listeners[ii2];
								result3.end(entry);
								++ii2;
							}
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii3 = 0;
							while(ii3 < listenersCount) {
								var result4 = listeners[ii3];
								result4.dispose(entry);
								++ii3;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 3) {
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii4 = 0;
							while(ii4 < listenersCount) {
								var result5 = listeners[ii4];
								result5.dispose(entry);
								++ii4;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 4) {
							if(entry.listener != null) {
								entry.listener.complete(entry);
							}
							var ii5 = 0;
							while(ii5 < listenersCount) {
								var result6 = listeners[ii5];
								result6.complete(entry);
								++ii5;
							}
							break;
						} else if(_switchCond2 == 5) {
							var result7 = _this.objects[i++ + 2];
							var event = result7;
							if(entry.listener != null) {
								entry.listener.event(entry,event);
							}
							var ii6 = 0;
							while(ii6 < listenersCount) {
								var result8 = listeners[ii6];
								result8.event(entry,event);
								++ii6;
							}
							break;
						}
						break;
					}
					listenersArray.end();
					i += 2;
				}
				var this1 = _this.objects;
				this1.splice(0,this1.length);
				_this.drainDisabled = false;
			}
		} else {
			last.next = entry1;
			entry1.previous = last;
			if(delay1 <= 0) {
				delay1 += last.getTrackComplete() - entry1.mixDuration;
			}
		}
		entry1.delay = delay1;
		return entry1;
	}
	,addAnimation: function(trackIndex,animation,loop,delay) {
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var last;
		if(trackIndex < this.tracks.length) {
			last = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			last = null;
		}
		if(last != null) {
			while(last.next != null) last = last.next;
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		if(last == null) {
			var from;
			if(trackIndex < this.tracks.length) {
				from = this.tracks[trackIndex];
			} else {
				var this1 = this.tracks;
				var size = trackIndex + 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					this1[size - 1] = null;
				}
				from = null;
			}
			this.tracks[trackIndex] = entry1;
			entry1.previous = null;
			if(from != null) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
				entry1.mixingFrom = from;
				from.mixingTo = entry1;
				entry1.mixTime = 0;
				if(from.mixingFrom != null && from.mixDuration > 0) {
					entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
				}
				var this1 = from.timelinesRotation;
				this1.splice(0,this1.length);
			}
			var _this = this.queue;
			_this.objects.push(0);
			_this.objects.push(entry1);
			_this.AnimationState_this.animationsChanged = true;
			var _this = this.queue;
			if(!_this.drainDisabled) {
				_this.drainDisabled = true;
				var listenersArray = _this.AnimationState_this.listeners;
				var i = 0;
				while(i < _this.objects.length) {
					var type = _this.objects[i];
					var result = _this.objects[i + 1];
					var entry = result;
					var listenersCount = listenersArray.array.length;
					var listeners = listenersArray.begin();
					while(true) {
						var _switchCond2 = type;
						if(_switchCond2 == 0) {
							if(entry.listener != null) {
								entry.listener.start(entry);
							}
							var ii = 0;
							while(ii < listenersCount) {
								var result1 = listeners[ii];
								result1.start(entry);
								++ii;
							}
							break;
						} else if(_switchCond2 == 1) {
							if(entry.listener != null) {
								entry.listener.interrupt(entry);
							}
							var ii1 = 0;
							while(ii1 < listenersCount) {
								var result2 = listeners[ii1];
								result2.interrupt(entry);
								++ii1;
							}
							break;
						} else if(_switchCond2 == 2) {
							if(entry.listener != null) {
								entry.listener.end(entry);
							}
							var ii2 = 0;
							while(ii2 < listenersCount) {
								var result3 = listeners[ii2];
								result3.end(entry);
								++ii2;
							}
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii3 = 0;
							while(ii3 < listenersCount) {
								var result4 = listeners[ii3];
								result4.dispose(entry);
								++ii3;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 3) {
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii4 = 0;
							while(ii4 < listenersCount) {
								var result5 = listeners[ii4];
								result5.dispose(entry);
								++ii4;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 4) {
							if(entry.listener != null) {
								entry.listener.complete(entry);
							}
							var ii5 = 0;
							while(ii5 < listenersCount) {
								var result6 = listeners[ii5];
								result6.complete(entry);
								++ii5;
							}
							break;
						} else if(_switchCond2 == 5) {
							var result7 = _this.objects[i++ + 2];
							var event = result7;
							if(entry.listener != null) {
								entry.listener.event(entry,event);
							}
							var ii6 = 0;
							while(ii6 < listenersCount) {
								var result8 = listeners[ii6];
								result8.event(entry,event);
								++ii6;
							}
							break;
						}
						break;
					}
					listenersArray.end();
					i += 2;
				}
				var this1 = _this.objects;
				this1.splice(0,this1.length);
				_this.drainDisabled = false;
			}
		} else {
			last.next = entry1;
			entry1.previous = last;
			if(delay <= 0) {
				delay += last.getTrackComplete() - entry1.mixDuration;
			}
		}
		entry1.delay = delay;
		return entry1;
	}
	,setEmptyAnimation: function(trackIndex,mixDuration) {
		var animation = spine_AnimationState.emptyAnimation;
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var interrupt = true;
		var current;
		if(trackIndex < this.tracks.length) {
			current = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			current = null;
		}
		if(current != null) {
			if(current.nextTrackLast == -1) {
				this.tracks[trackIndex] = current.mixingFrom;
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(current);
				var _this = this.queue;
				_this.objects.push(2);
				_this.objects.push(current);
				_this.AnimationState_this.animationsChanged = true;
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
				current = current.mixingFrom;
				interrupt = false;
			} else {
				var next = current.next;
				while(next != null) {
					var _this = this.queue;
					_this.objects.push(3);
					_this.objects.push(next);
					next = next.next;
				}
				current.next = null;
			}
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = false;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(current == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = current.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		var from;
		if(trackIndex < this.tracks.length) {
			from = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			from = null;
		}
		this.tracks[trackIndex] = entry1;
		entry1.previous = null;
		if(from != null) {
			if(interrupt) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
			}
			entry1.mixingFrom = from;
			from.mixingTo = entry1;
			entry1.mixTime = 0;
			if(from.mixingFrom != null && from.mixDuration > 0) {
				entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
			}
			var this1 = from.timelinesRotation;
			this1.splice(0,this1.length);
		}
		var _this = this.queue;
		_this.objects.push(0);
		_this.objects.push(entry1);
		_this.AnimationState_this.animationsChanged = true;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
		var entry = entry1;
		entry.mixDuration = mixDuration;
		entry.trackEnd = mixDuration;
		return entry;
	}
	,addEmptyAnimation: function(trackIndex,mixDuration,delay) {
		var animation = spine_AnimationState.emptyAnimation;
		var delay1 = delay <= 0 ? 1 : delay;
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		var last;
		if(trackIndex < this.tracks.length) {
			last = this.tracks[trackIndex];
		} else {
			var this1 = this.tracks;
			var size = trackIndex + 1;
			var len = this1.length;
			if(len > size) {
				this1.splice(size,size - len);
			} else if(len < size) {
				this1[size - 1] = null;
			}
			last = null;
		}
		if(last != null) {
			while(last.next != null) last = last.next;
		}
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = false;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		var entry1 = entry;
		if(last == null) {
			var from;
			if(trackIndex < this.tracks.length) {
				from = this.tracks[trackIndex];
			} else {
				var this1 = this.tracks;
				var size = trackIndex + 1;
				var len = this1.length;
				if(len > size) {
					this1.splice(size,size - len);
				} else if(len < size) {
					this1[size - 1] = null;
				}
				from = null;
			}
			this.tracks[trackIndex] = entry1;
			entry1.previous = null;
			if(from != null) {
				var _this = this.queue;
				_this.objects.push(1);
				_this.objects.push(from);
				entry1.mixingFrom = from;
				from.mixingTo = entry1;
				entry1.mixTime = 0;
				if(from.mixingFrom != null && from.mixDuration > 0) {
					entry1.interruptAlpha *= Math.min(1,from.mixTime / from.mixDuration | 0);
				}
				var this1 = from.timelinesRotation;
				this1.splice(0,this1.length);
			}
			var _this = this.queue;
			_this.objects.push(0);
			_this.objects.push(entry1);
			_this.AnimationState_this.animationsChanged = true;
			var _this = this.queue;
			if(!_this.drainDisabled) {
				_this.drainDisabled = true;
				var listenersArray = _this.AnimationState_this.listeners;
				var i = 0;
				while(i < _this.objects.length) {
					var type = _this.objects[i];
					var result = _this.objects[i + 1];
					var entry = result;
					var listenersCount = listenersArray.array.length;
					var listeners = listenersArray.begin();
					while(true) {
						var _switchCond2 = type;
						if(_switchCond2 == 0) {
							if(entry.listener != null) {
								entry.listener.start(entry);
							}
							var ii = 0;
							while(ii < listenersCount) {
								var result1 = listeners[ii];
								result1.start(entry);
								++ii;
							}
							break;
						} else if(_switchCond2 == 1) {
							if(entry.listener != null) {
								entry.listener.interrupt(entry);
							}
							var ii1 = 0;
							while(ii1 < listenersCount) {
								var result2 = listeners[ii1];
								result2.interrupt(entry);
								++ii1;
							}
							break;
						} else if(_switchCond2 == 2) {
							if(entry.listener != null) {
								entry.listener.end(entry);
							}
							var ii2 = 0;
							while(ii2 < listenersCount) {
								var result3 = listeners[ii2];
								result3.end(entry);
								++ii2;
							}
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii3 = 0;
							while(ii3 < listenersCount) {
								var result4 = listeners[ii3];
								result4.dispose(entry);
								++ii3;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 3) {
							if(entry.listener != null) {
								entry.listener.dispose(entry);
							}
							var ii4 = 0;
							while(ii4 < listenersCount) {
								var result5 = listeners[ii4];
								result5.dispose(entry);
								++ii4;
							}
							_this.AnimationState_this.trackEntryPool.free(entry);
							break;
						} else if(_switchCond2 == 4) {
							if(entry.listener != null) {
								entry.listener.complete(entry);
							}
							var ii5 = 0;
							while(ii5 < listenersCount) {
								var result6 = listeners[ii5];
								result6.complete(entry);
								++ii5;
							}
							break;
						} else if(_switchCond2 == 5) {
							var result7 = _this.objects[i++ + 2];
							var event = result7;
							if(entry.listener != null) {
								entry.listener.event(entry,event);
							}
							var ii6 = 0;
							while(ii6 < listenersCount) {
								var result8 = listeners[ii6];
								result8.event(entry,event);
								++ii6;
							}
							break;
						}
						break;
					}
					listenersArray.end();
					i += 2;
				}
				var this1 = _this.objects;
				this1.splice(0,this1.length);
				_this.drainDisabled = false;
			}
		} else {
			last.next = entry1;
			entry1.previous = last;
			if(delay1 <= 0) {
				delay1 += last.getTrackComplete() - entry1.mixDuration;
			}
		}
		entry1.delay = delay1;
		var entry = entry1;
		entry.mixDuration = mixDuration;
		entry.trackEnd = mixDuration;
		if(delay <= 0 && entry.previous != null) {
			entry.delay = entry.previous.getTrackComplete() - entry.mixDuration + delay;
		}
		return entry;
	}
	,setEmptyAnimations: function(mixDuration) {
		var oldDrainDisabled = this.queue.drainDisabled;
		this.queue.drainDisabled = true;
		var tracks = this.tracks;
		var i = 0;
		var n = this.tracks.length;
		while(i < n) {
			var result = tracks[i];
			var current = result;
			if(current != null) {
				var trackIndex = current.trackIndex;
				var animation = spine_AnimationState.emptyAnimation;
				if(trackIndex < 0) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
				}
				if(animation == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
				}
				var interrupt = true;
				var current1;
				if(trackIndex < this.tracks.length) {
					current1 = this.tracks[trackIndex];
				} else {
					var this1 = this.tracks;
					var size = trackIndex + 1;
					var len = this1.length;
					if(len > size) {
						this1.splice(size,size - len);
					} else if(len < size) {
						this1[size - 1] = null;
					}
					current1 = null;
				}
				if(current1 != null) {
					if(current1.nextTrackLast == -1) {
						this.tracks[trackIndex] = current1.mixingFrom;
						var _this = this.queue;
						_this.objects.push(1);
						_this.objects.push(current1);
						var _this1 = this.queue;
						_this1.objects.push(2);
						_this1.objects.push(current1);
						_this1.AnimationState_this.animationsChanged = true;
						var next = current1.next;
						while(next != null) {
							var _this2 = this.queue;
							_this2.objects.push(3);
							_this2.objects.push(next);
							next = next.next;
						}
						current1.next = null;
						current1 = current1.mixingFrom;
						interrupt = false;
					} else {
						var next1 = current1.next;
						while(next1 != null) {
							var _this3 = this.queue;
							_this3.objects.push(3);
							_this3.objects.push(next1);
							next1 = next1.next;
						}
						current1.next = null;
					}
				}
				var entry = this.trackEntryPool.obtain();
				entry.trackIndex = trackIndex;
				entry.animation = animation;
				entry.loop = false;
				entry.holdPrevious = false;
				entry.eventThreshold = 0;
				entry.attachmentThreshold = 0;
				entry.drawOrderThreshold = 0;
				entry.animationStart = 0;
				entry.animationEnd = animation.getDuration();
				entry.animationLast = -1;
				entry.nextAnimationLast = -1;
				entry.delay = 0;
				entry.trackTime = 0;
				entry.trackLast = -1;
				entry.nextTrackLast = -1;
				entry.trackEnd = 999999999.0;
				entry.timeScale = 1;
				entry.alpha = 1;
				entry.interruptAlpha = 1;
				entry.mixTime = 0;
				var tmp;
				if(current1 == null) {
					tmp = 0;
				} else {
					var _this4 = this.data;
					var from = current1.animation;
					if(from == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
					}
					if(animation == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
					}
					_this4.tempAnimationStateDataKey.a1 = from;
					_this4.tempAnimationStateDataKey.a2 = animation;
					var this2 = _this4.animationToMixTime;
					var key = _this4.tempAnimationStateDataKey;
					var defaultValue = _this4.defaultMix;
					if(defaultValue == null) {
						defaultValue = 0.0;
					}
					var key1 = key.getHashCode();
					var entries = this2.h[key1];
					var result1 = defaultValue;
					if(entries != null) {
						var _g = 0;
						var _g1 = entries.length;
						while(_g < _g1) {
							var i1 = _g++;
							var entry1 = entries[i1];
							if(entry1.key.equals(key)) {
								result1 = entry1.value;
								break;
							}
						}
					}
					tmp = result1;
				}
				entry.mixDuration = tmp;
				entry.mixBlend = 2;
				var entry2 = entry;
				var from1;
				if(trackIndex < this.tracks.length) {
					from1 = this.tracks[trackIndex];
				} else {
					var this3 = this.tracks;
					var size1 = trackIndex + 1;
					var len1 = this3.length;
					if(len1 > size1) {
						this3.splice(size1,size1 - len1);
					} else if(len1 < size1) {
						this3[size1 - 1] = null;
					}
					from1 = null;
				}
				this.tracks[trackIndex] = entry2;
				entry2.previous = null;
				if(from1 != null) {
					if(interrupt) {
						var _this5 = this.queue;
						_this5.objects.push(1);
						_this5.objects.push(from1);
					}
					entry2.mixingFrom = from1;
					from1.mixingTo = entry2;
					entry2.mixTime = 0;
					if(from1.mixingFrom != null && from1.mixDuration > 0) {
						entry2.interruptAlpha *= Math.min(1,from1.mixTime / from1.mixDuration | 0);
					}
					var this4 = from1.timelinesRotation;
					this4.splice(0,this4.length);
				}
				var _this6 = this.queue;
				_this6.objects.push(0);
				_this6.objects.push(entry2);
				_this6.AnimationState_this.animationsChanged = true;
				var _this7 = this.queue;
				if(!_this7.drainDisabled) {
					_this7.drainDisabled = true;
					var listenersArray = _this7.AnimationState_this.listeners;
					var i2 = 0;
					while(i2 < _this7.objects.length) {
						var type = _this7.objects[i2];
						var result2 = _this7.objects[i2 + 1];
						var entry3 = result2;
						var listenersCount = listenersArray.array.length;
						var listeners = listenersArray.begin();
						while(true) {
							var _switchCond2 = type;
							if(_switchCond2 == 0) {
								if(entry3.listener != null) {
									entry3.listener.start(entry3);
								}
								var ii = 0;
								while(ii < listenersCount) {
									var result3 = listeners[ii];
									result3.start(entry3);
									++ii;
								}
								break;
							} else if(_switchCond2 == 1) {
								if(entry3.listener != null) {
									entry3.listener.interrupt(entry3);
								}
								var ii1 = 0;
								while(ii1 < listenersCount) {
									var result4 = listeners[ii1];
									result4.interrupt(entry3);
									++ii1;
								}
								break;
							} else if(_switchCond2 == 2) {
								if(entry3.listener != null) {
									entry3.listener.end(entry3);
								}
								var ii2 = 0;
								while(ii2 < listenersCount) {
									var result5 = listeners[ii2];
									result5.end(entry3);
									++ii2;
								}
								if(entry3.listener != null) {
									entry3.listener.dispose(entry3);
								}
								var ii3 = 0;
								while(ii3 < listenersCount) {
									var result6 = listeners[ii3];
									result6.dispose(entry3);
									++ii3;
								}
								_this7.AnimationState_this.trackEntryPool.free(entry3);
								break;
							} else if(_switchCond2 == 3) {
								if(entry3.listener != null) {
									entry3.listener.dispose(entry3);
								}
								var ii4 = 0;
								while(ii4 < listenersCount) {
									var result7 = listeners[ii4];
									result7.dispose(entry3);
									++ii4;
								}
								_this7.AnimationState_this.trackEntryPool.free(entry3);
								break;
							} else if(_switchCond2 == 4) {
								if(entry3.listener != null) {
									entry3.listener.complete(entry3);
								}
								var ii5 = 0;
								while(ii5 < listenersCount) {
									var result8 = listeners[ii5];
									result8.complete(entry3);
									++ii5;
								}
								break;
							} else if(_switchCond2 == 5) {
								var result9 = _this7.objects[i2++ + 2];
								var event = result9;
								if(entry3.listener != null) {
									entry3.listener.event(entry3,event);
								}
								var ii6 = 0;
								while(ii6 < listenersCount) {
									var result10 = listeners[ii6];
									result10.event(entry3,event);
									++ii6;
								}
								break;
							}
							break;
						}
						listenersArray.end();
						i2 += 2;
					}
					var this5 = _this7.objects;
					this5.splice(0,this5.length);
					_this7.drainDisabled = false;
				}
				var entry4 = entry2;
				entry4.mixDuration = mixDuration;
				entry4.trackEnd = mixDuration;
			}
			++i;
		}
		this.queue.drainDisabled = oldDrainDisabled;
		var _this = this.queue;
		if(!_this.drainDisabled) {
			_this.drainDisabled = true;
			var listenersArray = _this.AnimationState_this.listeners;
			var i = 0;
			while(i < _this.objects.length) {
				var type = _this.objects[i];
				var result = _this.objects[i + 1];
				var entry = result;
				var listenersCount = listenersArray.array.length;
				var listeners = listenersArray.begin();
				while(true) {
					var _switchCond2 = type;
					if(_switchCond2 == 0) {
						if(entry.listener != null) {
							entry.listener.start(entry);
						}
						var ii = 0;
						while(ii < listenersCount) {
							var result1 = listeners[ii];
							result1.start(entry);
							++ii;
						}
						break;
					} else if(_switchCond2 == 1) {
						if(entry.listener != null) {
							entry.listener.interrupt(entry);
						}
						var ii1 = 0;
						while(ii1 < listenersCount) {
							var result2 = listeners[ii1];
							result2.interrupt(entry);
							++ii1;
						}
						break;
					} else if(_switchCond2 == 2) {
						if(entry.listener != null) {
							entry.listener.end(entry);
						}
						var ii2 = 0;
						while(ii2 < listenersCount) {
							var result3 = listeners[ii2];
							result3.end(entry);
							++ii2;
						}
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii3 = 0;
						while(ii3 < listenersCount) {
							var result4 = listeners[ii3];
							result4.dispose(entry);
							++ii3;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 3) {
						if(entry.listener != null) {
							entry.listener.dispose(entry);
						}
						var ii4 = 0;
						while(ii4 < listenersCount) {
							var result5 = listeners[ii4];
							result5.dispose(entry);
							++ii4;
						}
						_this.AnimationState_this.trackEntryPool.free(entry);
						break;
					} else if(_switchCond2 == 4) {
						if(entry.listener != null) {
							entry.listener.complete(entry);
						}
						var ii5 = 0;
						while(ii5 < listenersCount) {
							var result6 = listeners[ii5];
							result6.complete(entry);
							++ii5;
						}
						break;
					} else if(_switchCond2 == 5) {
						var result7 = _this.objects[i++ + 2];
						var event = result7;
						if(entry.listener != null) {
							entry.listener.event(entry,event);
						}
						var ii6 = 0;
						while(ii6 < listenersCount) {
							var result8 = listeners[ii6];
							result8.event(entry,event);
							++ii6;
						}
						break;
					}
					break;
				}
				listenersArray.end();
				i += 2;
			}
			var this1 = _this.objects;
			this1.splice(0,this1.length);
			_this.drainDisabled = false;
		}
	}
	,expandToIndex: function(index) {
		if(index < this.tracks.length) {
			return this.tracks[index];
		}
		var this1 = this.tracks;
		var size = index + 1;
		var len = this1.length;
		if(len > size) {
			this1.splice(size,size - len);
		} else if(len < size) {
			this1[size - 1] = null;
		}
		return null;
	}
	,trackEntry: function(trackIndex,animation,loop,last) {
		var entry = this.trackEntryPool.obtain();
		entry.trackIndex = trackIndex;
		entry.animation = animation;
		entry.loop = loop;
		entry.holdPrevious = false;
		entry.eventThreshold = 0;
		entry.attachmentThreshold = 0;
		entry.drawOrderThreshold = 0;
		entry.animationStart = 0;
		entry.animationEnd = animation.getDuration();
		entry.animationLast = -1;
		entry.nextAnimationLast = -1;
		entry.delay = 0;
		entry.trackTime = 0;
		entry.trackLast = -1;
		entry.nextTrackLast = -1;
		entry.trackEnd = 999999999.0;
		entry.timeScale = 1;
		entry.alpha = 1;
		entry.interruptAlpha = 1;
		entry.mixTime = 0;
		var tmp;
		if(last == null) {
			tmp = 0;
		} else {
			var _this = this.data;
			var from = last.animation;
			if(from == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
			}
			if(animation == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
			}
			_this.tempAnimationStateDataKey.a1 = from;
			_this.tempAnimationStateDataKey.a2 = animation;
			var this1 = _this.animationToMixTime;
			var key = _this.tempAnimationStateDataKey;
			var defaultValue = _this.defaultMix;
			if(defaultValue == null) {
				defaultValue = 0.0;
			}
			var key1 = key.getHashCode();
			var entries = this1.h[key1];
			var result = defaultValue;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					if(entry1.key.equals(key)) {
						result = entry1.value;
						break;
					}
				}
			}
			tmp = result;
		}
		entry.mixDuration = tmp;
		entry.mixBlend = 2;
		return entry;
	}
	,clearNext: function(entry) {
		var next = entry.next;
		while(next != null) {
			var _this = this.queue;
			_this.objects.push(3);
			_this.objects.push(next);
			next = next.next;
		}
		entry.next = null;
	}
	,handleAnimationsChanged: function() {
		this.animationsChanged = false;
		var this1 = this.propertyIds;
		this1.splice(0,this1.length);
		var n = this.tracks.length;
		var tracks = this.tracks;
		var i = 0;
		while(i < n) {
			var result = tracks[i];
			var entry = result;
			if(entry == null) {
				++i;
				continue;
			}
			while(entry.mixingFrom != null) entry = entry.mixingFrom;
			while(true) {
				if(entry.mixingTo == null || entry.mixBlend != 3) {
					var to = entry.mixingTo;
					var timelines = entry.animation.timelines;
					var timelinesCount = entry.animation.timelines.length;
					var this1 = entry.timelineMode;
					var len = this1.length;
					if(len > timelinesCount) {
						this1.splice(timelinesCount,timelinesCount - len);
					} else if(len < timelinesCount) {
						while(len < timelinesCount) {
							this1.push(0);
							++len;
						}
					}
					var timelineMode = this1;
					var this2 = entry.timelineHoldMix;
					this2.splice(0,this2.length);
					var this3 = entry.timelineHoldMix;
					var len1 = this3.length;
					if(len1 > timelinesCount) {
						this3.splice(timelinesCount,timelinesCount - len1);
					} else if(len1 < timelinesCount) {
						this3[timelinesCount - 1] = null;
					}
					var timelineHoldMix = this3;
					var propertyIds = this.propertyIds;
					if(to != null && to.holdPrevious) {
						var i1 = 0;
						while(i1 < timelinesCount) {
							var result1 = timelines[i1];
							timelineMode[i1] = spine_support_utils_ObjectSet.addAll(propertyIds,result1.getPropertyIds()) ? 3 : 2;
							++i1;
						}
					} else {
						var _gotoLabel_outer;
						while(true) {
							_gotoLabel_outer = 0;
							var i2 = 0;
							while(i2 < timelinesCount) {
								var result2 = timelines[i2];
								var timeline = result2;
								var ids = timeline.getPropertyIds();
								if(!spine_support_utils_ObjectSet.addAll(propertyIds,ids)) {
									timelineMode[i2] = 0;
								} else if(to == null || ((timeline) instanceof spine_AttachmentTimeline) || ((timeline) instanceof spine_DrawOrderTimeline) || ((timeline) instanceof spine_EventTimeline) || !to.animation.hasTimeline(ids)) {
									timelineMode[i2] = 1;
								} else {
									var next = to.mixingTo;
									while(next != null) {
										if(next.animation.hasTimeline(ids)) {
											next = next.mixingTo;
											continue;
										}
										if(next.mixDuration > 0) {
											timelineMode[i2] = 4;
											timelineHoldMix[i2] = next;
											next = next.mixingTo;
											_gotoLabel_outer = 2;
											break;
										}
										break;
									}
									if(_gotoLabel_outer == 2) {
										_gotoLabel_outer = 0;
										++i2;
										continue;
									}
									if(_gotoLabel_outer >= 1) {
										break;
									}
									timelineMode[i2] = 3;
								}
								++i2;
							}
							if(_gotoLabel_outer == 0) {
								break;
							}
						}
					}
				}
				entry = entry.mixingTo;
				if(!(entry != null)) {
					break;
				}
			}
			++i;
		}
	}
	,computeHold: function(entry) {
		var to = entry.mixingTo;
		var timelines = entry.animation.timelines;
		var timelinesCount = entry.animation.timelines.length;
		var this1 = entry.timelineMode;
		var len = this1.length;
		if(len > timelinesCount) {
			this1.splice(timelinesCount,timelinesCount - len);
		} else if(len < timelinesCount) {
			while(len < timelinesCount) {
				this1.push(0);
				++len;
			}
		}
		var timelineMode = this1;
		var this1 = entry.timelineHoldMix;
		this1.splice(0,this1.length);
		var this1 = entry.timelineHoldMix;
		var len = this1.length;
		if(len > timelinesCount) {
			this1.splice(timelinesCount,timelinesCount - len);
		} else if(len < timelinesCount) {
			this1[timelinesCount - 1] = null;
		}
		var timelineHoldMix = this1;
		var propertyIds = this.propertyIds;
		if(to != null && to.holdPrevious) {
			var i = 0;
			while(i < timelinesCount) {
				var result = timelines[i];
				timelineMode[i] = spine_support_utils_ObjectSet.addAll(propertyIds,result.getPropertyIds()) ? 3 : 2;
				++i;
			}
			return;
		}
		var _gotoLabel_outer;
		while(true) {
			_gotoLabel_outer = 0;
			var i = 0;
			while(i < timelinesCount) {
				var result = timelines[i];
				var timeline = result;
				var ids = timeline.getPropertyIds();
				if(!spine_support_utils_ObjectSet.addAll(propertyIds,ids)) {
					timelineMode[i] = 0;
				} else if(to == null || ((timeline) instanceof spine_AttachmentTimeline) || ((timeline) instanceof spine_DrawOrderTimeline) || ((timeline) instanceof spine_EventTimeline) || !to.animation.hasTimeline(ids)) {
					timelineMode[i] = 1;
				} else {
					var next = to.mixingTo;
					while(next != null) {
						if(next.animation.hasTimeline(ids)) {
							next = next.mixingTo;
							continue;
						}
						if(next.mixDuration > 0) {
							timelineMode[i] = 4;
							timelineHoldMix[i] = next;
							next = next.mixingTo;
							_gotoLabel_outer = 2;
							break;
						}
						break;
					}
					if(_gotoLabel_outer == 2) {
						_gotoLabel_outer = 0;
						++i;
						continue;
					}
					if(_gotoLabel_outer >= 1) {
						break;
					}
					timelineMode[i] = 3;
				}
				++i;
			}
			if(_gotoLabel_outer == 0) {
				break;
			}
		}
	}
	,getCurrent: function(trackIndex) {
		if(trackIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("trackIndex must be >= 0."));
		}
		if(trackIndex >= this.tracks.length) {
			return null;
		}
		return this.tracks[trackIndex];
	}
	,addListener: function(listener) {
		if(listener == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("listener cannot be null."));
		}
		this.listeners.array.push(listener);
	}
	,removeListener: function(listener) {
		var this1 = this.listeners.array;
		var index = this1.indexOf(listener);
		if(index != -1) {
			this1.splice(index,1);
		}
	}
	,clearListeners: function() {
		var this1 = this.listeners.array;
		this1.splice(0,this1.length);
	}
	,clearListenerNotifications: function() {
		var this1 = this.queue.objects;
		this1.splice(0,this1.length);
	}
	,getTimeScale: function() {
		return this.timeScale;
	}
	,setTimeScale: function(timeScale) {
		this.timeScale = timeScale;
	}
	,getData: function() {
		return this.data;
	}
	,setData: function(data) {
		if(data == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
		}
		this.data = data;
	}
	,getTracks: function() {
		return this.tracks;
	}
	,toString: function() {
		var buffer_b = "";
		var tracks = this.tracks;
		var i = 0;
		var n = this.tracks.length;
		while(i < n) {
			var result = tracks[i];
			var entry = result;
			if(entry == null) {
				++i;
				continue;
			}
			if(buffer_b.length > 0) {
				buffer_b += ", ";
			}
			buffer_b += Std.string(entry.animation == null ? "<none>" : entry.animation.name);
			++i;
		}
		if(buffer_b.length == 0) {
			return "<none>";
		}
		return buffer_b;
	}
	,__class__: spine_AnimationState
};
var spine_support_utils_Poolable = function() { };
$hxClasses["spine.support.utils.Poolable"] = spine_support_utils_Poolable;
spine_support_utils_Poolable.__name__ = "spine.support.utils.Poolable";
spine_support_utils_Poolable.__isInterface__ = true;
spine_support_utils_Poolable.prototype = {
	__class__: spine_support_utils_Poolable
};
var spine_TrackEntry = function() {
	var this1 = [];
	this.timelinesRotation = this1;
	var this1 = [];
	this.timelineHoldMix = this1;
	var this1 = [];
	this.timelineMode = this1;
	this.mixBlend = 2;
	this.totalAlpha = 0;
	this.interruptAlpha = 0;
	this.mixDuration = 0;
	this.mixTime = 0;
	this.alpha = 0;
	this.timeScale = 0;
	this.trackEnd = 0;
	this.nextTrackLast = 0;
	this.trackLast = 0;
	this.trackTime = 0;
	this.delay = 0;
	this.nextAnimationLast = 0;
	this.animationLast = 0;
	this.animationEnd = 0;
	this.animationStart = 0;
	this.drawOrderThreshold = 0;
	this.attachmentThreshold = 0;
	this.eventThreshold = 0;
	this.reverse = false;
	this.holdPrevious = false;
	this.loop = false;
	this.trackIndex = 0;
	this.mixingTo = null;
	this.mixingFrom = null;
	this.next = null;
};
$hxClasses["spine.TrackEntry"] = spine_TrackEntry;
spine_TrackEntry.__name__ = "spine.TrackEntry";
spine_TrackEntry.__interfaces__ = [spine_support_utils_Poolable];
spine_TrackEntry.prototype = {
	reset: function() {
		this.previous = null;
		this.next = null;
		this.mixingFrom = null;
		this.mixingTo = null;
		this.animation = null;
		this.listener = null;
		var this1 = this.timelineMode;
		this1.splice(0,this1.length);
		var this1 = this.timelineHoldMix;
		this1.splice(0,this1.length);
		var this1 = this.timelinesRotation;
		this1.splice(0,this1.length);
	}
	,getTrackIndex: function() {
		return this.trackIndex;
	}
	,getAnimation: function() {
		return this.animation;
	}
	,setAnimation: function(animation) {
		if(animation == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animation cannot be null."));
		}
		this.animation = animation;
	}
	,getLoop: function() {
		return this.loop;
	}
	,setLoop: function(loop) {
		this.loop = loop;
	}
	,getDelay: function() {
		return this.delay;
	}
	,setDelay: function(delay) {
		this.delay = delay;
	}
	,getTrackTime: function() {
		return this.trackTime;
	}
	,setTrackTime: function(trackTime) {
		this.trackTime = trackTime;
	}
	,getTrackEnd: function() {
		return this.trackEnd;
	}
	,setTrackEnd: function(trackEnd) {
		this.trackEnd = trackEnd;
	}
	,getTrackComplete: function() {
		var duration = this.animationEnd - this.animationStart;
		if(duration != 0) {
			if(this.loop) {
				return duration * (1 + (this.trackTime / duration | 0));
			}
			if(this.trackTime < duration) {
				return duration;
			}
		}
		return this.trackTime;
	}
	,getAnimationStart: function() {
		return this.animationStart;
	}
	,setAnimationStart: function(animationStart) {
		this.animationStart = animationStart;
	}
	,getAnimationEnd: function() {
		return this.animationEnd;
	}
	,setAnimationEnd: function(animationEnd) {
		this.animationEnd = animationEnd;
	}
	,getAnimationLast: function() {
		return this.animationLast;
	}
	,setAnimationLast: function(animationLast) {
		this.animationLast = animationLast;
		this.nextAnimationLast = animationLast;
	}
	,getAnimationTime: function() {
		if(this.loop) {
			var duration = this.animationEnd - this.animationStart;
			if(duration == 0) {
				return this.animationStart;
			}
			return this.trackTime % duration + this.animationStart;
		}
		return Math.min(this.trackTime + this.animationStart,this.animationEnd);
	}
	,getTimeScale: function() {
		return this.timeScale;
	}
	,setTimeScale: function(timeScale) {
		this.timeScale = timeScale;
	}
	,getListener: function() {
		return this.listener;
	}
	,setListener: function(listener) {
		this.listener = listener;
	}
	,getAlpha: function() {
		return this.alpha;
	}
	,setAlpha: function(alpha) {
		this.alpha = alpha;
	}
	,getEventThreshold: function() {
		return this.eventThreshold;
	}
	,setEventThreshold: function(eventThreshold) {
		this.eventThreshold = eventThreshold;
	}
	,getAttachmentThreshold: function() {
		return this.attachmentThreshold;
	}
	,setAttachmentThreshold: function(attachmentThreshold) {
		this.attachmentThreshold = attachmentThreshold;
	}
	,getDrawOrderThreshold: function() {
		return this.drawOrderThreshold;
	}
	,setDrawOrderThreshold: function(drawOrderThreshold) {
		this.drawOrderThreshold = drawOrderThreshold;
	}
	,getNext: function() {
		return this.next;
	}
	,getPrevious: function() {
		return this.previous;
	}
	,isComplete: function() {
		return this.trackTime >= this.animationEnd - this.animationStart;
	}
	,getMixTime: function() {
		return this.mixTime;
	}
	,setMixTime: function(mixTime) {
		this.mixTime = mixTime;
	}
	,getMixDuration: function() {
		return this.mixDuration;
	}
	,setMixDuration: function(mixDuration) {
		this.mixDuration = mixDuration;
	}
	,getMixBlend: function() {
		return this.mixBlend;
	}
	,setMixBlend: function(mixBlend) {
		if(mixBlend == 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("mixBlend cannot be null."));
		}
		this.mixBlend = mixBlend;
	}
	,getMixingFrom: function() {
		return this.mixingFrom;
	}
	,getMixingTo: function() {
		return this.mixingTo;
	}
	,setHoldPrevious: function(holdPrevious) {
		this.holdPrevious = holdPrevious;
	}
	,getHoldPrevious: function() {
		return this.holdPrevious;
	}
	,resetRotationDirections: function() {
		var this1 = this.timelinesRotation;
		this1.splice(0,this1.length);
	}
	,setReverse: function(reverse) {
		this.reverse = reverse;
	}
	,getReverse: function() {
		return this.reverse;
	}
	,toString: function() {
		if(this.animation == null) {
			return "<none>";
		} else {
			return this.animation.name;
		}
	}
	,__class__: spine_TrackEntry
};
var spine_EventQueue = function() {
	this.drainDisabled = false;
	var this1 = [];
	this.objects = this1;
};
$hxClasses["spine.EventQueue"] = spine_EventQueue;
spine_EventQueue.__name__ = "spine.EventQueue";
spine_EventQueue.prototype = {
	start: function(entry) {
		this.objects.push(0);
		this.objects.push(entry);
		this.AnimationState_this.animationsChanged = true;
	}
	,interrupt: function(entry) {
		this.objects.push(1);
		this.objects.push(entry);
	}
	,end: function(entry) {
		this.objects.push(2);
		this.objects.push(entry);
		this.AnimationState_this.animationsChanged = true;
	}
	,dispose: function(entry) {
		this.objects.push(3);
		this.objects.push(entry);
	}
	,complete: function(entry) {
		this.objects.push(4);
		this.objects.push(entry);
	}
	,event: function(entry,event) {
		this.objects.push(5);
		this.objects.push(entry);
		this.objects.push(event);
	}
	,drain: function() {
		if(this.drainDisabled) {
			return;
		}
		this.drainDisabled = true;
		var listenersArray = this.AnimationState_this.listeners;
		var i = 0;
		while(i < this.objects.length) {
			var type = this.objects[i];
			var result = this.objects[i + 1];
			var entry = result;
			var listenersCount = listenersArray.array.length;
			var listeners = listenersArray.begin();
			var _continueAfterSwitch2 = false;
			while(true) {
				var _switchCond2 = type;
				if(_switchCond2 == 0) {
					if(entry.listener != null) {
						entry.listener.start(entry);
					}
					var ii = 0;
					while(ii < listenersCount) {
						var result1 = listeners[ii];
						result1.start(entry);
						++ii;
					}
					break;
				} else if(_switchCond2 == 1) {
					if(entry.listener != null) {
						entry.listener.interrupt(entry);
					}
					var ii1 = 0;
					while(ii1 < listenersCount) {
						var result2 = listeners[ii1];
						result2.interrupt(entry);
						++ii1;
					}
					break;
				} else if(_switchCond2 == 2) {
					if(entry.listener != null) {
						entry.listener.end(entry);
					}
					var ii2 = 0;
					while(ii2 < listenersCount) {
						var result3 = listeners[ii2];
						result3.end(entry);
						++ii2;
					}
					if(entry.listener != null) {
						entry.listener.dispose(entry);
					}
					var ii3 = 0;
					while(ii3 < listenersCount) {
						var result4 = listeners[ii3];
						result4.dispose(entry);
						++ii3;
					}
					this.AnimationState_this.trackEntryPool.free(entry);
					break;
				} else if(_switchCond2 == 3) {
					if(entry.listener != null) {
						entry.listener.dispose(entry);
					}
					var ii4 = 0;
					while(ii4 < listenersCount) {
						var result5 = listeners[ii4];
						result5.dispose(entry);
						++ii4;
					}
					this.AnimationState_this.trackEntryPool.free(entry);
					break;
				} else if(_switchCond2 == 4) {
					if(entry.listener != null) {
						entry.listener.complete(entry);
					}
					var ii5 = 0;
					while(ii5 < listenersCount) {
						var result6 = listeners[ii5];
						result6.complete(entry);
						++ii5;
					}
					break;
				} else if(_switchCond2 == 5) {
					var result7 = this.objects[i++ + 2];
					var event = result7;
					if(entry.listener != null) {
						entry.listener.event(entry,event);
					}
					var ii6 = 0;
					while(ii6 < listenersCount) {
						var result8 = listeners[ii6];
						result8.event(entry,event);
						++ii6;
					}
					break;
				}
				break;
			}
			listenersArray.end();
			i += 2;
		}
		var this1 = this.objects;
		this1.splice(0,this1.length);
		this.drainDisabled = false;
	}
	,clear: function() {
		var this1 = this.objects;
		this1.splice(0,this1.length);
	}
	,__class__: spine_EventQueue
};
var spine_AnimationStateListener = function() { };
$hxClasses["spine.AnimationStateListener"] = spine_AnimationStateListener;
spine_AnimationStateListener.__name__ = "spine.AnimationStateListener";
spine_AnimationStateListener.__isInterface__ = true;
spine_AnimationStateListener.prototype = {
	__class__: spine_AnimationStateListener
};
var spine_AnimationStateAdapter = function() {
};
$hxClasses["spine.AnimationStateAdapter"] = spine_AnimationStateAdapter;
spine_AnimationStateAdapter.__name__ = "spine.AnimationStateAdapter";
spine_AnimationStateAdapter.__interfaces__ = [spine_AnimationStateListener];
spine_AnimationStateAdapter.prototype = {
	start: function(entry) {
	}
	,interrupt: function(entry) {
	}
	,end: function(entry) {
	}
	,dispose: function(entry) {
	}
	,complete: function(entry) {
	}
	,event: function(entry,event) {
	}
	,__class__: spine_AnimationStateAdapter
};
var spine_support_utils_Pool = function(initialCapacity,max) {
	if(max == null) {
		max = 999999999;
	}
	if(initialCapacity == null) {
		initialCapacity = 64;
	}
	this.peak = 0;
	this.max = 0;
	this.freeObjects = [];
	this.max = max;
};
$hxClasses["spine.support.utils.Pool"] = spine_support_utils_Pool;
spine_support_utils_Pool.__name__ = "spine.support.utils.Pool";
spine_support_utils_Pool.prototype = {
	free: function(object) {
		if(object == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("object cannot be null."));
		}
		if(this.freeObjects.length < this.max) {
			this.freeObjects.push(object);
			this.peak = Math.max(this.peak,this.freeObjects.length);
		}
		this.reset(object);
	}
	,reset: function(object) {
		if(js_Boot.__implements(object,spine_support_utils_Poolable)) {
			(js_Boot.__cast(object , spine_support_utils_Poolable)).reset();
		}
	}
	,freeAll: function(objects) {
		if(objects == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("objects cannot be null."));
		}
		var freeObjects = this.freeObjects;
		var max = this.max;
		var i = 0;
		while(i < objects.length) {
			var object = objects[i];
			if(object == null) {
				++i;
				continue;
			}
			if(freeObjects.length < max) {
				freeObjects.push(object);
			}
			this.reset(object);
			++i;
		}
		this.peak = Math.max(this.peak,freeObjects.length);
	}
	,clear: function() {
		var this1 = this.freeObjects;
		this1.splice(0,this1.length);
	}
	,getFree: function() {
		return this.freeObjects.length;
	}
	,newObject: function() {
		return null;
	}
	,obtain: function() {
		if(this.freeObjects.length == 0) {
			return this.newObject();
		} else {
			return this.freeObjects.pop();
		}
	}
	,__class__: spine_support_utils_Pool
};
var spine__$AnimationState_TrackEntryPool = function(initialCapacity,max) {
	spine_support_utils_Pool.call(this,initialCapacity,max);
};
$hxClasses["spine._AnimationState.TrackEntryPool"] = spine__$AnimationState_TrackEntryPool;
spine__$AnimationState_TrackEntryPool.__name__ = "spine._AnimationState.TrackEntryPool";
spine__$AnimationState_TrackEntryPool.__super__ = spine_support_utils_Pool;
spine__$AnimationState_TrackEntryPool.prototype = $extend(spine_support_utils_Pool.prototype,{
	newObject: function() {
		return new spine_TrackEntry();
	}
	,__class__: spine__$AnimationState_TrackEntryPool
});
var spine_EventType_$enum = function() { };
$hxClasses["spine.EventType_enum"] = spine_EventType_$enum;
spine_EventType_$enum.__name__ = "spine.EventType_enum";
spine_EventType_$enum.valueOf = function(value) {
	switch(value) {
	case "complete":
		return 4;
	case "dispose":
		return 3;
	case "end":
		return 2;
	case "event":
		return 5;
	case "interrupt":
		return 1;
	case "start":
		return 0;
	default:
		return 0;
	}
};
var spine_AnimationStateData = function(skeletonData) {
	this.defaultMix = 0;
	this.tempAnimationStateDataKey = new spine_AnimationStateDataKey();
	var this1 = new haxe_ds_IntMap();
	this.animationToMixTime = this1;
	if(skeletonData == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeletonData cannot be null."));
	}
	this.skeletonData = skeletonData;
};
$hxClasses["spine.AnimationStateData"] = spine_AnimationStateData;
spine_AnimationStateData.__name__ = "spine.AnimationStateData";
spine_AnimationStateData.prototype = {
	getSkeletonData: function() {
		return this.skeletonData;
	}
	,setMixByName: function(fromName,toName,duration) {
		var from = this.skeletonData.findAnimation(fromName);
		if(from == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + fromName));
		}
		var to = this.skeletonData.findAnimation(toName);
		if(to == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Animation not found: " + toName));
		}
		if(from == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
		}
		if(to == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
		}
		var key = new spine_AnimationStateDataKey();
		key.a1 = from;
		key.a2 = to;
		spine_support_utils_AnimationStateMap.put(this.animationToMixTime,key,duration);
	}
	,setMix: function(from,to,duration) {
		if(from == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
		}
		if(to == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
		}
		var key = new spine_AnimationStateDataKey();
		key.a1 = from;
		key.a2 = to;
		spine_support_utils_AnimationStateMap.put(this.animationToMixTime,key,duration);
	}
	,getMix: function(from,to) {
		if(from == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("from cannot be null."));
		}
		if(to == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("to cannot be null."));
		}
		this.tempAnimationStateDataKey.a1 = from;
		this.tempAnimationStateDataKey.a2 = to;
		var this1 = this.animationToMixTime;
		var key = this.tempAnimationStateDataKey;
		var defaultValue = this.defaultMix;
		if(defaultValue == null) {
			defaultValue = 0.0;
		}
		var key1 = key.getHashCode();
		var entries = this1.h[key1];
		var result = defaultValue;
		if(entries != null) {
			var _g = 0;
			var _g1 = entries.length;
			while(_g < _g1) {
				var i = _g++;
				var entry = entries[i];
				if(entry.key.equals(key)) {
					result = entry.value;
					break;
				}
			}
		}
		return result;
	}
	,getDefaultMix: function() {
		return this.defaultMix;
	}
	,setDefaultMix: function(defaultMix) {
		this.defaultMix = defaultMix;
	}
	,__class__: spine_AnimationStateData
};
var spine_AnimationStateDataKey = function() {
	this.a2 = null;
};
$hxClasses["spine.AnimationStateDataKey"] = spine_AnimationStateDataKey;
spine_AnimationStateDataKey.__name__ = "spine.AnimationStateDataKey";
spine_AnimationStateDataKey.prototype = {
	getHashCode: function() {
		return 31 * (31 + this.a1.hashCode) + this.a2.hashCode;
	}
	,equals: function(obj) {
		if(this == obj) {
			return true;
		}
		if(obj == null) {
			return false;
		}
		var result = obj;
		var other = result;
		if(this.a1 == null) {
			if(other.a1 != null) {
				return false;
			}
		} else if(this.a1 != other.a1) {
			return false;
		}
		if(this.a2 == null) {
			if(other.a2 != null) {
				return false;
			}
		} else if(this.a2 != other.a2) {
			return false;
		}
		return true;
	}
	,toString: function() {
		return this.a1.name + "->" + this.a2.name;
	}
	,__class__: spine_AnimationStateDataKey
};
var spine_BlendMode_$enum = function() { };
$hxClasses["spine.BlendMode_enum"] = spine_BlendMode_$enum;
spine_BlendMode_$enum.__name__ = "spine.BlendMode_enum";
spine_BlendMode_$enum.valueOf = function(value) {
	switch(value) {
	case "additive":
		return 1;
	case "multiply":
		return 2;
	case "normal":
		return 0;
	case "screen":
		return 3;
	default:
		return 0;
	}
};
var spine_Updatable = function() { };
$hxClasses["spine.Updatable"] = spine_Updatable;
spine_Updatable.__name__ = "spine.Updatable";
spine_Updatable.__isInterface__ = true;
spine_Updatable.prototype = {
	__class__: spine_Updatable
};
var spine_Bone = function(data,skeleton,parent) {
	this.active = false;
	this.sorted = false;
	this.worldY = 0;
	this.d = 0;
	this.c = 0;
	this.worldX = 0;
	this.b = 0;
	this.a = 0;
	this.ashearY = 0;
	this.ashearX = 0;
	this.ascaleY = 0;
	this.ascaleX = 0;
	this.arotation = 0;
	this.ay = 0;
	this.ax = 0;
	this.shearY = 0;
	this.shearX = 0;
	this.scaleY = 0;
	this.scaleX = 0;
	this.rotation = 0;
	this.y = 0;
	this.x = 0;
	var this1 = [];
	this.children = this1;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
	}
	this.data = data;
	this.skeleton = skeleton;
	this.parent = parent;
	var data = this.data;
	this.x = data.x;
	this.y = data.y;
	this.rotation = data.rotation;
	this.scaleX = data.scaleX;
	this.scaleY = data.scaleY;
	this.shearX = data.shearX;
	this.shearY = data.shearY;
};
$hxClasses["spine.Bone"] = spine_Bone;
spine_Bone.__name__ = "spine.Bone";
spine_Bone.__interfaces__ = [spine_Updatable];
spine_Bone.prototype = {
	update: function() {
		this.updateWorldTransformWithData(this.ax,this.ay,this.arotation,this.ascaleX,this.ascaleY,this.ashearX,this.ashearY);
	}
	,updateWorldTransform: function() {
		this.updateWorldTransformWithData(this.x,this.y,this.rotation,this.scaleX,this.scaleY,this.shearX,this.shearY);
	}
	,updateWorldTransformWithData: function(x,y,rotation,scaleX,scaleY,shearX,shearY) {
		this.ax = x;
		this.ay = y;
		this.arotation = rotation;
		this.ascaleX = scaleX;
		this.ascaleY = scaleY;
		this.ashearX = shearX;
		this.ashearY = shearY;
		var parent = this.parent;
		if(parent == null) {
			var skeleton = this.skeleton;
			var rotationY = rotation + 90 + shearY;
			var sx = skeleton.scaleX;
			var sy = skeleton.scaleY;
			this.a = Math.cos((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX * sx;
			this.b = Math.cos(rotationY * spine_utils_SpineUtils.degRad) * scaleY * sx;
			this.c = Math.sin((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX * sy;
			this.d = Math.sin(rotationY * spine_utils_SpineUtils.degRad) * scaleY * sy;
			this.worldX = x * sx + skeleton.x;
			this.worldY = y * sy + skeleton.y;
			return;
		}
		var pa = parent.a;
		var pb = parent.b;
		var pc = parent.c;
		var pd = parent.d;
		this.worldX = pa * x + pb * y + parent.worldX;
		this.worldY = pc * x + pd * y + parent.worldY;
		var _continueAfterSwitch0 = false;
		while(true) {
			var _switchCond0 = this.data.transformMode;
			if(_switchCond0 == 0) {
				var rotationY = rotation + 90 + shearY;
				var la = Math.cos((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX;
				var lb = Math.cos(rotationY * spine_utils_SpineUtils.degRad) * scaleY;
				var lc = Math.sin((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX;
				var ld = Math.sin(rotationY * spine_utils_SpineUtils.degRad) * scaleY;
				this.a = pa * la + pb * lc;
				this.b = pa * lb + pb * ld;
				this.c = pc * la + pd * lc;
				this.d = pc * lb + pd * ld;
				return;
			} else if(_switchCond0 == 1) {
				var rotationY1 = rotation + 90 + shearY;
				this.a = Math.cos((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX;
				this.b = Math.cos(rotationY1 * spine_utils_SpineUtils.degRad) * scaleY;
				this.c = Math.sin((rotation + shearX) * spine_utils_SpineUtils.degRad) * scaleX;
				this.d = Math.sin(rotationY1 * spine_utils_SpineUtils.degRad) * scaleY;
				break;
			} else if(_switchCond0 == 2) {
				var s = pa * pa + pc * pc;
				var prx = 0;
				if(s > 0.0001) {
					s = Math.abs(pa * pd - pb * pc) / s;
					pa /= this.skeleton.scaleX;
					pc /= this.skeleton.scaleY;
					pb = pc * s;
					pd = pa * s;
					prx = Math.atan2(pc,pa) * spine_utils_SpineUtils.radDeg;
				} else {
					pa = 0;
					pc = 0;
					prx = 90 - Math.atan2(pd,pb) * spine_utils_SpineUtils.radDeg;
				}
				var rx = rotation + shearX - prx;
				var ry = rotation + shearY - prx + 90;
				var la1 = Math.cos(rx * spine_utils_SpineUtils.degRad) * scaleX;
				var lb1 = Math.cos(ry * spine_utils_SpineUtils.degRad) * scaleY;
				var lc1 = Math.sin(rx * spine_utils_SpineUtils.degRad) * scaleX;
				var ld1 = Math.sin(ry * spine_utils_SpineUtils.degRad) * scaleY;
				this.a = pa * la1 - pb * lc1;
				this.b = pa * lb1 - pb * ld1;
				this.c = pc * la1 + pd * lc1;
				this.d = pc * lb1 + pd * ld1;
				break;
			} else if(_switchCond0 == 3) {
				var cos = Math.cos(rotation * spine_utils_SpineUtils.degRad);
				var sin = Math.sin(rotation * spine_utils_SpineUtils.degRad);
				var za = (pa * cos + pb * sin) / this.skeleton.scaleX;
				var zc = (pc * cos + pd * sin) / this.skeleton.scaleY;
				var s1 = Math.sqrt(za * za + zc * zc);
				if(s1 > 0.00001) {
					s1 = 1 / s1;
				}
				za *= s1;
				zc *= s1;
				s1 = Math.sqrt(za * za + zc * zc);
				if(this.data.transformMode == 3 && pa * pd - pb * pc < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0)) {
					s1 = -s1;
				}
				var r = 1.57079635 + Math.atan2(zc,za);
				var zb = Math.cos(r) * s1;
				var zd = Math.sin(r) * s1;
				var la2 = Math.cos(shearX * spine_utils_SpineUtils.degRad) * scaleX;
				var lb2 = Math.cos((90 + shearY) * spine_utils_SpineUtils.degRad) * scaleY;
				var lc2 = Math.sin(shearX * spine_utils_SpineUtils.degRad) * scaleX;
				var ld2 = Math.sin((90 + shearY) * spine_utils_SpineUtils.degRad) * scaleY;
				this.a = za * la2 + zb * lc2;
				this.b = za * lb2 + zb * ld2;
				this.c = zc * la2 + zd * lc2;
				this.d = zc * lb2 + zd * ld2;
				break;
			} else if(_switchCond0 == 4) {
				var cos1 = Math.cos(rotation * spine_utils_SpineUtils.degRad);
				var sin1 = Math.sin(rotation * spine_utils_SpineUtils.degRad);
				var za1 = (pa * cos1 + pb * sin1) / this.skeleton.scaleX;
				var zc1 = (pc * cos1 + pd * sin1) / this.skeleton.scaleY;
				var s2 = Math.sqrt(za1 * za1 + zc1 * zc1);
				if(s2 > 0.00001) {
					s2 = 1 / s2;
				}
				za1 *= s2;
				zc1 *= s2;
				s2 = Math.sqrt(za1 * za1 + zc1 * zc1);
				if(this.data.transformMode == 3 && pa * pd - pb * pc < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0)) {
					s2 = -s2;
				}
				var r1 = 1.57079635 + Math.atan2(zc1,za1);
				var zb1 = Math.cos(r1) * s2;
				var zd1 = Math.sin(r1) * s2;
				var la3 = Math.cos(shearX * spine_utils_SpineUtils.degRad) * scaleX;
				var lb3 = Math.cos((90 + shearY) * spine_utils_SpineUtils.degRad) * scaleY;
				var lc3 = Math.sin(shearX * spine_utils_SpineUtils.degRad) * scaleX;
				var ld3 = Math.sin((90 + shearY) * spine_utils_SpineUtils.degRad) * scaleY;
				this.a = za1 * la3 + zb1 * lc3;
				this.b = za1 * lb3 + zb1 * ld3;
				this.c = zc1 * la3 + zd1 * lc3;
				this.d = zc1 * lb3 + zd1 * ld3;
				break;
			}
			break;
		}
		this.a *= this.skeleton.scaleX;
		this.b *= this.skeleton.scaleX;
		this.c *= this.skeleton.scaleY;
		this.d *= this.skeleton.scaleY;
	}
	,setToSetupPose: function() {
		var data = this.data;
		this.x = data.x;
		this.y = data.y;
		this.rotation = data.rotation;
		this.scaleX = data.scaleX;
		this.scaleY = data.scaleY;
		this.shearX = data.shearX;
		this.shearY = data.shearY;
	}
	,getData: function() {
		return this.data;
	}
	,getSkeleton: function() {
		return this.skeleton;
	}
	,getParent: function() {
		return this.parent;
	}
	,getChildren: function() {
		return this.children;
	}
	,isActive: function() {
		return this.active;
	}
	,getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,setPosition: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,getRotation: function() {
		return this.rotation;
	}
	,setRotation: function(rotation) {
		this.rotation = rotation;
	}
	,getScaleX: function() {
		return this.scaleX;
	}
	,setScaleX: function(scaleX) {
		this.scaleX = scaleX;
	}
	,getScaleY: function() {
		return this.scaleY;
	}
	,setScaleY: function(scaleY) {
		this.scaleY = scaleY;
	}
	,setScale: function(scaleX,scaleY) {
		this.scaleX = scaleX;
		this.scaleY = scaleY;
	}
	,setScale2: function(scale) {
		this.scaleX = scale;
		this.scaleY = scale;
	}
	,getShearX: function() {
		return this.shearX;
	}
	,setShearX: function(shearX) {
		this.shearX = shearX;
	}
	,getShearY: function() {
		return this.shearY;
	}
	,setShearY: function(shearY) {
		this.shearY = shearY;
	}
	,getAX: function() {
		return this.ax;
	}
	,setAX: function(ax) {
		this.ax = ax;
	}
	,getAY: function() {
		return this.ay;
	}
	,setAY: function(ay) {
		this.ay = ay;
	}
	,getARotation: function() {
		return this.arotation;
	}
	,setARotation: function(arotation) {
		this.arotation = arotation;
	}
	,getAScaleX: function() {
		return this.ascaleX;
	}
	,setAScaleX: function(ascaleX) {
		this.ascaleX = ascaleX;
	}
	,getAScaleY: function() {
		return this.ascaleY;
	}
	,setAScaleY: function(ascaleY) {
		this.ascaleY = ascaleY;
	}
	,getAShearX: function() {
		return this.ashearX;
	}
	,setAShearX: function(ashearX) {
		this.ashearX = ashearX;
	}
	,getAShearY: function() {
		return this.ashearY;
	}
	,setAShearY: function(ashearY) {
		this.ashearY = ashearY;
	}
	,updateAppliedTransform: function() {
		var parent = this.parent;
		if(parent == null) {
			this.ax = this.worldX;
			this.ay = this.worldY;
			var a = this.a;
			var b = this.b;
			var c = this.c;
			var d = this.d;
			this.arotation = Math.atan2(c,a) * spine_utils_SpineUtils.radDeg;
			this.ascaleX = Math.sqrt(a * a + c * c);
			this.ascaleY = Math.sqrt(b * b + d * d);
			this.ashearX = 0;
			this.ashearY = Math.atan2(a * b + c * d,a * d - b * c) * spine_utils_SpineUtils.radDeg;
			return;
		}
		var pa = parent.a;
		var pb = parent.b;
		var pc = parent.c;
		var pd = parent.d;
		var pid = 1 / (pa * pd - pb * pc);
		var dx = this.worldX - parent.worldX;
		var dy = this.worldY - parent.worldY;
		this.ax = dx * pd * pid - dy * pb * pid;
		this.ay = dy * pa * pid - dx * pc * pid;
		var ia = pid * pd;
		var id = pid * pa;
		var ib = pid * pb;
		var ic = pid * pc;
		var ra = ia * this.a - ib * this.c;
		var rb = ia * this.b - ib * this.d;
		var rc = id * this.c - ic * this.a;
		var rd = id * this.d - ic * this.b;
		this.ashearX = 0;
		this.ascaleX = Math.sqrt(ra * ra + rc * rc);
		if(this.ascaleX > 0.0001) {
			var det = ra * rd - rb * rc;
			this.ascaleY = det / this.ascaleX;
			this.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
			this.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
		} else {
			this.ascaleX = 0;
			this.ascaleY = Math.sqrt(rb * rb + rd * rd);
			this.ashearY = 0;
			this.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
		}
	}
	,getA: function() {
		return this.a;
	}
	,setA: function(a) {
		this.a = a;
	}
	,getB: function() {
		return this.b;
	}
	,setB: function(b) {
		this.b = b;
	}
	,getC: function() {
		return this.c;
	}
	,setC: function(c) {
		this.c = c;
	}
	,getD: function() {
		return this.d;
	}
	,setD: function(d) {
		this.d = d;
	}
	,getWorldX: function() {
		return this.worldX;
	}
	,setWorldX: function(worldX) {
		this.worldX = worldX;
	}
	,getWorldY: function() {
		return this.worldY;
	}
	,setWorldY: function(worldY) {
		this.worldY = worldY;
	}
	,getWorldRotationX: function() {
		return Math.atan2(this.c,this.a) * spine_utils_SpineUtils.radDeg;
	}
	,getWorldRotationY: function() {
		return Math.atan2(this.d,this.b) * spine_utils_SpineUtils.radDeg;
	}
	,getWorldScaleX: function() {
		return Math.sqrt(this.a * this.a + this.c * this.c);
	}
	,getWorldScaleY: function() {
		return Math.sqrt(this.b * this.b + this.d * this.d);
	}
	,getWorldTransform: function(worldTransform) {
		if(worldTransform == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("worldTransform cannot be null."));
		}
		var val = worldTransform.val;
		val[0] = this.a;
		val[3] = this.b;
		val[1] = this.c;
		val[4] = this.d;
		val[6] = this.worldX;
		val[7] = this.worldY;
		val[2] = 0;
		val[5] = 0;
		val[8] = 1;
		return worldTransform;
	}
	,worldToLocal: function(world) {
		if(world == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("world cannot be null."));
		}
		var det = this.a * this.d - this.b * this.c;
		var x = world.x - this.worldX;
		var y = world.y - this.worldY;
		world.x = (x * this.d - y * this.b) / det;
		world.y = (y * this.a - x * this.c) / det;
		return world;
	}
	,localToWorld: function(local) {
		if(local == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("local cannot be null."));
		}
		var x = local.x;
		var y = local.y;
		local.x = x * this.a + y * this.b + this.worldX;
		local.y = x * this.c + y * this.d + this.worldY;
		return local;
	}
	,worldToLocalRotation: function(worldRotation) {
		var sin = Math.sin(worldRotation * spine_utils_SpineUtils.degRad);
		var cos = Math.cos(worldRotation * spine_utils_SpineUtils.degRad);
		return Math.atan2(this.a * sin - this.c * cos,this.d * cos - this.b * sin) * spine_utils_SpineUtils.radDeg + this.rotation - this.shearX;
	}
	,localToWorldRotation: function(localRotation) {
		localRotation -= this.rotation - this.shearX;
		var sin = Math.sin(localRotation * spine_utils_SpineUtils.degRad);
		var cos = Math.cos(localRotation * spine_utils_SpineUtils.degRad);
		return Math.atan2(cos * this.c + sin * this.d,cos * this.a + sin * this.b) * spine_utils_SpineUtils.radDeg;
	}
	,rotateWorld: function(degrees) {
		var cos = Math.cos(degrees * spine_utils_SpineUtils.degRad);
		var sin = Math.sin(degrees * spine_utils_SpineUtils.degRad);
		this.a = cos * this.a - sin * this.c;
		this.b = cos * this.b - sin * this.d;
		this.c = sin * this.a + cos * this.c;
		this.d = sin * this.b + cos * this.d;
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_Bone
};
var spine_BoneData = function(index,name,parent) {
	this.color = new spine_support_graphics_Color(0.61,0.61,0.61,1);
	this.skinRequired = false;
	this.transformMode = 0;
	this.shearY = 0;
	this.shearX = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.rotation = 0;
	this.y = 0;
	this.x = 0;
	this.length = 0;
	this.index = 0;
	if(index < 0) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("index must be >= 0."));
	}
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.index = index;
	this.name = name;
	this.parent = parent;
};
$hxClasses["spine.BoneData"] = spine_BoneData;
spine_BoneData.__name__ = "spine.BoneData";
spine_BoneData.prototype = {
	getIndex: function() {
		return this.index;
	}
	,getName: function() {
		return this.name;
	}
	,getParent: function() {
		return this.parent;
	}
	,getLength: function() {
		return this.length;
	}
	,setLength: function(length) {
		this.length = length;
	}
	,getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,setPosition: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,getRotation: function() {
		return this.rotation;
	}
	,setRotation: function(rotation) {
		this.rotation = rotation;
	}
	,getScaleX: function() {
		return this.scaleX;
	}
	,setScaleX: function(scaleX) {
		this.scaleX = scaleX;
	}
	,getScaleY: function() {
		return this.scaleY;
	}
	,setScaleY: function(scaleY) {
		this.scaleY = scaleY;
	}
	,setScale: function(scaleX,scaleY) {
		this.scaleX = scaleX;
		this.scaleY = scaleY;
	}
	,getShearX: function() {
		return this.shearX;
	}
	,setShearX: function(shearX) {
		this.shearX = shearX;
	}
	,getShearY: function() {
		return this.shearY;
	}
	,setShearY: function(shearY) {
		this.shearY = shearY;
	}
	,getTransformMode: function() {
		return this.transformMode;
	}
	,setTransformMode: function(transformMode) {
		this.transformMode = transformMode;
	}
	,getSkinRequired: function() {
		return this.skinRequired;
	}
	,setSkinRequired: function(skinRequired) {
		this.skinRequired = skinRequired;
	}
	,getColor: function() {
		return this.color;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: spine_BoneData
};
var spine_TransformMode_$enum = function() { };
$hxClasses["spine.TransformMode_enum"] = spine_TransformMode_$enum;
spine_TransformMode_$enum.__name__ = "spine.TransformMode_enum";
spine_TransformMode_$enum.valueOf = function(value) {
	switch(value) {
	case "noRotationOrReflection":
		return 2;
	case "noScale":
		return 3;
	case "noScaleOrReflection":
		return 4;
	case "normal":
		return 0;
	case "onlyTranslation":
		return 1;
	default:
		return 0;
	}
};
var spine_ConstraintData = function(name) {
	this.skinRequired = false;
	this.order = 0;
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.name = name;
};
$hxClasses["spine.ConstraintData"] = spine_ConstraintData;
spine_ConstraintData.__name__ = "spine.ConstraintData";
spine_ConstraintData.prototype = {
	getName: function() {
		return this.name;
	}
	,getOrder: function() {
		return this.order;
	}
	,setOrder: function(order) {
		this.order = order;
	}
	,getSkinRequired: function() {
		return this.skinRequired;
	}
	,setSkinRequired: function(skinRequired) {
		this.skinRequired = skinRequired;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: spine_ConstraintData
};
var spine_Event = function(time,data) {
	this.time = 0;
	this.balance = 0;
	this.volume = 0;
	this.floatValue = 0;
	this.intValue = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	this.time = time;
	this.data = data;
};
$hxClasses["spine.Event"] = spine_Event;
spine_Event.__name__ = "spine.Event";
spine_Event.prototype = {
	getInt: function() {
		return this.intValue;
	}
	,setInt: function(intValue) {
		this.intValue = intValue;
	}
	,getFloat: function() {
		return this.floatValue;
	}
	,setFloat: function(floatValue) {
		this.floatValue = floatValue;
	}
	,getString: function() {
		return this.stringValue;
	}
	,setString: function(stringValue) {
		if(stringValue == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("stringValue cannot be null."));
		}
		this.stringValue = stringValue;
	}
	,getVolume: function() {
		return this.volume;
	}
	,setVolume: function(volume) {
		this.volume = volume;
	}
	,getBalance: function() {
		return this.balance;
	}
	,setBalance: function(balance) {
		this.balance = balance;
	}
	,getTime: function() {
		return this.time;
	}
	,getData: function() {
		return this.data;
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_Event
};
var spine_EventData = function(name) {
	this.balance = 0;
	this.volume = 0;
	this.audioPath = null;
	this.floatValue = 0;
	this.intValue = 0;
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.name = name;
};
$hxClasses["spine.EventData"] = spine_EventData;
spine_EventData.__name__ = "spine.EventData";
spine_EventData.prototype = {
	getInt: function() {
		return this.intValue;
	}
	,setInt: function(intValue) {
		this.intValue = intValue;
	}
	,getFloat: function() {
		return this.floatValue;
	}
	,setFloat: function(floatValue) {
		this.floatValue = floatValue;
	}
	,getString: function() {
		return this.stringValue;
	}
	,setString: function(stringValue) {
		if(stringValue == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("stringValue cannot be null."));
		}
		this.stringValue = stringValue;
	}
	,getAudioPath: function() {
		return this.audioPath;
	}
	,setAudioPath: function(audioPath) {
		if(audioPath == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("audioPath cannot be null."));
		}
		this.audioPath = audioPath;
	}
	,getVolume: function() {
		return this.volume;
	}
	,setVolume: function(volume) {
		this.volume = volume;
	}
	,getBalance: function() {
		return this.balance;
	}
	,setBalance: function(balance) {
		this.balance = balance;
	}
	,getName: function() {
		return this.name;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: spine_EventData
};
var spine_IkConstraint = function(data,skeleton) {
	this.active = false;
	this.softness = 0;
	this.mix = 1;
	this.stretch = false;
	this.compress = false;
	this.bendDirection = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
	}
	this.data = data;
	this.mix = data.mix;
	this.softness = data.softness;
	this.bendDirection = data.bendDirection;
	this.compress = data.compress;
	this.stretch = data.stretch;
	var capacity = data.bones.length;
	var this1 = [];
	this.bones = this1;
	var _g = 0;
	var _g1 = data.bones;
	while(_g < _g1.length) {
		var boneData = _g1[_g];
		++_g;
		this.bones.push(skeleton.findBone(boneData.name));
	}
	this.target = skeleton.findBone(data.target.name);
};
$hxClasses["spine.IkConstraint"] = spine_IkConstraint;
spine_IkConstraint.__name__ = "spine.IkConstraint";
spine_IkConstraint.__interfaces__ = [spine_Updatable];
spine_IkConstraint.applyOne = function(bone,targetX,targetY,compress,stretch,uniform,alpha) {
	if(bone == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("bone cannot be null."));
	}
	var p = bone.parent;
	var pa = p.a;
	var pb = p.b;
	var pc = p.c;
	var pd = p.d;
	var rotationIK = -bone.ashearX - bone.arotation;
	var tx = 0;
	var ty = 0;
	var _continueAfterSwitch1 = false;
	while(true) {
		var _switchCond1 = bone.data.transformMode;
		if(_switchCond1 == 1) {
			tx = targetX - bone.worldX;
			ty = targetY - bone.worldY;
			break;
		} else if(_switchCond1 == 2) {
			var s = Math.abs(pa * pd - pb * pc) / (pa * pa + pc * pc);
			var sa = pa / bone.skeleton.scaleX;
			var sc = pc / bone.skeleton.scaleY;
			pb = -sc * s * bone.skeleton.scaleX;
			pd = sa * s * bone.skeleton.scaleY;
			rotationIK += Math.atan2(sc,sa) * spine_utils_SpineUtils.radDeg;
			var x = targetX - p.worldX;
			var y = targetY - p.worldY;
			var d = pa * pd - pb * pc;
			tx = (x * pd - y * pb) / d - bone.ax;
			ty = (y * pa - x * pc) / d - bone.ay;
		} else {
			var x1 = targetX - p.worldX;
			var y1 = targetY - p.worldY;
			var d1 = pa * pd - pb * pc;
			tx = (x1 * pd - y1 * pb) / d1 - bone.ax;
			ty = (y1 * pa - x1 * pc) / d1 - bone.ay;
		}
		break;
	}
	rotationIK += Math.atan2(ty,tx) * spine_utils_SpineUtils.radDeg;
	if(bone.ascaleX < 0) {
		rotationIK += 180;
	}
	if(rotationIK > 180) {
		rotationIK -= 360;
	} else if(rotationIK < -180) {
		rotationIK += 360;
	}
	var sx = bone.ascaleX;
	var sy = bone.ascaleY;
	if(compress || stretch) {
		var _continueAfterSwitch2 = false;
		while(true) {
			var _switchCond2 = bone.data.transformMode;
			if(_switchCond2 == 3) {
				tx = targetX - bone.worldX;
				ty = targetY - bone.worldY;
			} else if(_switchCond2 == 4) {
				tx = targetX - bone.worldX;
				ty = targetY - bone.worldY;
			}
			break;
		}
		var b = bone.data.length * sx;
		var dd = Math.sqrt(tx * tx + ty * ty);
		if(compress && dd < b || stretch && dd > b && b > 0.0001) {
			var s = (dd / b - 1) * alpha + 1;
			sx *= s;
			if(uniform) {
				sy *= s;
			}
		}
	}
	bone.updateWorldTransformWithData(bone.ax,bone.ay,bone.arotation + rotationIK * alpha,sx,sy,bone.ashearX,bone.ashearY);
};
spine_IkConstraint.apply = function(parent,child,targetX,targetY,bendDir,stretch,uniform,softness,alpha) {
	if(parent == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("parent cannot be null."));
	}
	if(child == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("child cannot be null."));
	}
	var px = parent.ax;
	var py = parent.ay;
	var psx = parent.ascaleX;
	var psy = parent.ascaleY;
	var sx = psx;
	var sy = psy;
	var csx = child.ascaleX;
	var os1 = 0;
	var os2 = 0;
	var s2 = 0;
	if(psx < 0) {
		psx = -psx;
		os1 = 180;
		s2 = -1;
	} else {
		os1 = 0;
		s2 = 1;
	}
	if(psy < 0) {
		psy = -psy;
		s2 = -s2;
	}
	if(csx < 0) {
		csx = -csx;
		os2 = 180;
	} else {
		os2 = 0;
	}
	var cx = child.ax;
	var cy = 0;
	var cwx = 0;
	var cwy = 0;
	var a = parent.a;
	var b = parent.b;
	var c = parent.c;
	var d = parent.d;
	var u = Math.abs(psx - psy) <= 0.0001;
	if(!u || stretch) {
		cy = 0;
		cwx = a * cx + parent.worldX;
		cwy = c * cx + parent.worldY;
	} else {
		cy = child.ay;
		cwx = a * cx + b * cy + parent.worldX;
		cwy = c * cx + d * cy + parent.worldY;
	}
	var pp = parent.parent;
	a = pp.a;
	b = pp.b;
	c = pp.c;
	d = pp.d;
	var id = 1 / (a * d - b * c);
	var x = cwx - pp.worldX;
	var y = cwy - pp.worldY;
	var dx = (x * d - y * b) * id - px;
	var dy = (y * a - x * c) * id - py;
	var l1 = Math.sqrt(dx * dx + dy * dy);
	var l2 = child.data.length * csx;
	var a1 = 0;
	var a2 = 0;
	if(l1 < 0.0001) {
		spine_IkConstraint.applyOne(parent,targetX,targetY,false,stretch,false,alpha);
		child.updateWorldTransformWithData(cx,cy,0,child.ascaleX,child.ascaleY,child.ashearX,child.ashearY);
		return;
	}
	x = targetX - pp.worldX;
	y = targetY - pp.worldY;
	var tx = (x * d - y * b) * id - px;
	var ty = (y * a - x * c) * id - py;
	var dd = tx * tx + ty * ty;
	if(softness != 0) {
		softness *= psx * (csx + 1) * 0.5;
		var td = Math.sqrt(dd);
		var sd = td - l1 - l2 * psx + softness;
		if(sd > 0) {
			var p = Math.min(1,sd / (softness * 2) | 0) - 1;
			p = (sd - softness * (1 - p * p)) / td;
			tx -= p * tx;
			ty -= p * ty;
			dd = tx * tx + ty * ty;
		}
	}
	var _gotoLabel_outer;
	while(true) {
		_gotoLabel_outer = 0;
		if(u) {
			l2 *= psx;
			var cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);
			if(cos < -1) {
				cos = -1;
				a2 = 3.1415927 * bendDir;
			} else if(cos > 1) {
				cos = 1;
				a2 = 0;
				if(stretch) {
					a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;
					sx *= a;
					if(uniform) {
						sy *= a;
					}
				}
			} else {
				a2 = Math.acos(cos) * bendDir;
			}
			a = l1 + l2 * cos;
			b = l2 * Math.sin(a2);
			a1 = Math.atan2(ty * a - tx * b,tx * a + ty * b);
		} else {
			a = psx * l2;
			b = psy * l2;
			var aa = a * a;
			var bb = b * b;
			var ta = Math.atan2(ty,tx);
			c = bb * l1 * l1 + aa * dd - aa * bb;
			var c1 = -2 * bb * l1;
			var c2 = bb - aa;
			d = c1 * c1 - 4 * c2 * c;
			if(d >= 0) {
				var q = Math.sqrt(d);
				if(c1 < 0) {
					q = -q;
				}
				q = -(c1 + q) * 0.5;
				var r0 = q / c2;
				var r1 = c / q;
				var r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;
				if(r * r <= dd) {
					y = Math.sqrt(dd - r * r) * bendDir;
					a1 = ta - Math.atan2(y,r);
					a2 = Math.atan2(y / psy,(r - l1) / psx);
					_gotoLabel_outer = 1;
					break;
				}
			}
			var minAngle = 3.1415927;
			var minX = l1 - a;
			var minDist = minX * minX;
			var minY = 0;
			var maxAngle = 0;
			var maxX = l1 + a;
			var maxDist = maxX * maxX;
			var maxY = 0;
			c = -a * l1 / (aa - bb);
			if(c >= -1 && c <= 1) {
				c = Math.acos(c);
				x = a * Math.cos(c) + l1;
				y = b * Math.sin(c);
				d = x * x + y * y;
				if(d < minDist) {
					minAngle = c;
					minDist = d;
					minX = x;
					minY = y;
				}
				if(d > maxDist) {
					maxAngle = c;
					maxDist = d;
					maxX = x;
					maxY = y;
				}
			}
			if(dd <= (minDist + maxDist) * 0.5) {
				a1 = ta - Math.atan2(minY * bendDir,minX);
				a2 = minAngle * bendDir;
			} else {
				a1 = ta - Math.atan2(maxY * bendDir,maxX);
				a2 = maxAngle * bendDir;
			}
		}
		if(_gotoLabel_outer == 0) {
			break;
		}
	}
	var os = Math.atan2(cy,cx) * s2;
	var rotation = parent.arotation;
	a1 = (a1 - os) * spine_utils_SpineUtils.radDeg + os1 - rotation;
	if(a1 > 180) {
		a1 -= 360;
	} else if(a1 < -180) {
		a1 += 360;
	}
	parent.updateWorldTransformWithData(px,py,rotation + a1 * alpha,sx,sy,0,0);
	rotation = child.arotation;
	a2 = ((a2 + os) * spine_utils_SpineUtils.radDeg - child.ashearX) * s2 + os2 - rotation;
	if(a2 > 180) {
		a2 -= 360;
	} else if(a2 < -180) {
		a2 += 360;
	}
	child.updateWorldTransformWithData(cx,cy,rotation + a2 * alpha,child.ascaleX,child.ascaleY,child.ashearX,child.ashearY);
};
spine_IkConstraint.prototype = {
	update: function() {
		if(this.mix == 0) {
			return;
		}
		var target = this.target;
		var bones = this.bones;
		var _continueAfterSwitch0 = false;
		while(true) {
			var _switchCond0 = this.bones.length;
			if(_switchCond0 == 1) {
				var result = bones[0];
				spine_IkConstraint.applyOne(result,target.worldX,target.worldY,this.compress,this.stretch,this.data.uniform,this.mix);
				break;
			} else if(_switchCond0 == 2) {
				var result1 = bones[0];
				var result2 = bones[1];
				spine_IkConstraint.apply(result1,result2,target.worldX,target.worldY,this.bendDirection,this.stretch,this.data.uniform,this.softness,this.mix);
				break;
			}
			break;
		}
	}
	,getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,getMix: function() {
		return this.mix;
	}
	,setMix: function(mix) {
		this.mix = mix;
	}
	,getSoftness: function() {
		return this.softness;
	}
	,setSoftness: function(softness) {
		this.softness = softness;
	}
	,getBendDirection: function() {
		return this.bendDirection;
	}
	,setBendDirection: function(bendDirection) {
		this.bendDirection = bendDirection;
	}
	,getCompress: function() {
		return this.compress;
	}
	,setCompress: function(compress) {
		this.compress = compress;
	}
	,getStretch: function() {
		return this.stretch;
	}
	,setStretch: function(stretch) {
		this.stretch = stretch;
	}
	,isActive: function() {
		return this.active;
	}
	,getData: function() {
		return this.data;
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_IkConstraint
};
var spine_IkConstraintData = function(name) {
	this.softness = 0;
	this.mix = 1;
	this.uniform = false;
	this.stretch = false;
	this.compress = false;
	this.bendDirection = 1;
	var this1 = [];
	this.bones = this1;
	spine_ConstraintData.call(this,name);
};
$hxClasses["spine.IkConstraintData"] = spine_IkConstraintData;
spine_IkConstraintData.__name__ = "spine.IkConstraintData";
spine_IkConstraintData.__super__ = spine_ConstraintData;
spine_IkConstraintData.prototype = $extend(spine_ConstraintData.prototype,{
	getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,getMix: function() {
		return this.mix;
	}
	,setMix: function(mix) {
		this.mix = mix;
	}
	,getSoftness: function() {
		return this.softness;
	}
	,setSoftness: function(softness) {
		this.softness = softness;
	}
	,getBendDirection: function() {
		return this.bendDirection;
	}
	,setBendDirection: function(bendDirection) {
		this.bendDirection = bendDirection;
	}
	,getCompress: function() {
		return this.compress;
	}
	,setCompress: function(compress) {
		this.compress = compress;
	}
	,getStretch: function() {
		return this.stretch;
	}
	,setStretch: function(stretch) {
		this.stretch = stretch;
	}
	,getUniform: function() {
		return this.uniform;
	}
	,setUniform: function(uniform) {
		this.uniform = uniform;
	}
	,__class__: spine_IkConstraintData
});
var spine_PathConstraint = function(data,skeleton) {
	var length = 10;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.segments = array;
	var this1 = [];
	this.lengths = this1;
	var this1 = [];
	this.curves = this1;
	var this1 = [];
	this.world = this1;
	var this1 = [];
	this.positions = this1;
	var this1 = [];
	this.spaces = this1;
	this.active = false;
	this.mixY = 0;
	this.mixX = 0;
	this.mixRotate = 0;
	this.spacing = 0;
	this.position = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
	}
	this.data = data;
	var capacity = data.bones.length;
	var this1 = [];
	this.bones = this1;
	var _g = 0;
	var _g1 = data.bones;
	while(_g < _g1.length) {
		var boneData = _g1[_g];
		++_g;
		this.bones.push(skeleton.findBone(boneData.name));
	}
	this.target = skeleton.findSlot(data.target.name);
	this.position = data.position;
	this.spacing = data.spacing;
	this.mixRotate = data.mixRotate;
	this.mixX = data.mixX;
	this.mixY = data.mixY;
};
$hxClasses["spine.PathConstraint"] = spine_PathConstraint;
spine_PathConstraint.__name__ = "spine.PathConstraint";
spine_PathConstraint.__interfaces__ = [spine_Updatable];
spine_PathConstraint.prototype = {
	update: function() {
		var attachment = this.target.attachment;
		if(!((attachment) instanceof spine_attachments_PathAttachment)) {
			return;
		}
		var mixRotate = this.mixRotate;
		var mixX = this.mixX;
		var mixY = this.mixY;
		if(mixRotate == 0 && mixX == 0 && mixY == 0) {
			return;
		}
		var data = this.data;
		var tangents = data.rotateMode == 0;
		var scale = data.rotateMode == 2;
		var boneCount = this.bones.length;
		var spacesCount = tangents ? boneCount : boneCount + 1;
		var bones = this.bones;
		var this1 = this.spaces;
		var len = this1.length;
		if(len > spacesCount) {
			this1.splice(spacesCount,spacesCount - len);
		} else if(len < spacesCount) {
			while(len < spacesCount) {
				this1.push(0);
				++len;
			}
		}
		var spaces = this1;
		var lengths;
		if(scale) {
			var this1 = this.lengths;
			var len = this1.length;
			if(len > boneCount) {
				this1.splice(boneCount,boneCount - len);
			} else if(len < boneCount) {
				while(len < boneCount) {
					this1.push(0);
					++len;
				}
			}
			lengths = this1;
		} else {
			lengths = null;
		}
		var spacing = this.spacing;
		var _continueAfterSwitch0 = false;
		while(true) {
			var _switchCond0 = data.spacingMode;
			if(_switchCond0 == 2) {
				if(scale) {
					var i = 0;
					var n = spacesCount - 1;
					while(i < n) {
						var result = bones[i];
						var bone = result;
						var setupLength = bone.data.length;
						if(setupLength < spine_PathConstraint.epsilon) {
							lengths[i] = 0;
						} else {
							var x = setupLength * bone.a;
							var y = setupLength * bone.c;
							lengths[i] = Math.sqrt(x * x + y * y);
						}
						++i;
					}
				}
				spine_support_utils_FloatArray.fill(spaces,1,spacesCount,spacing);
				break;
			} else if(_switchCond0 == 3) {
				var sum = 0;
				var i1 = 0;
				var n1 = spacesCount - 1;
				while(i1 < n1) {
					var result1 = bones[i1];
					var bone1 = result1;
					var setupLength1 = bone1.data.length;
					if(setupLength1 < spine_PathConstraint.epsilon) {
						if(scale) {
							lengths[i1] = 0;
						}
						spaces[++i1] = spacing;
					} else {
						var x1 = setupLength1 * bone1.a;
						var y1 = setupLength1 * bone1.c;
						var length = Math.sqrt(x1 * x1 + y1 * y1);
						if(scale) {
							lengths[i1] = length;
						}
						spaces[++i1] = length;
						sum += length;
					}
				}
				if(sum > 0) {
					sum = spacesCount / sum * spacing;
					var i2 = 1;
					while(i2 < spacesCount) {
						spaces[i2] *= sum;
						++i2;
					}
				}
				break;
			} else {
				var lengthSpacing = data.spacingMode == 0;
				var i3 = 0;
				var n2 = spacesCount - 1;
				while(i3 < n2) {
					var result2 = bones[i3];
					var bone2 = result2;
					var setupLength2 = bone2.data.length;
					if(setupLength2 < spine_PathConstraint.epsilon) {
						if(scale) {
							lengths[i3] = 0;
						}
						spaces[++i3] = spacing;
					} else {
						var x2 = setupLength2 * bone2.a;
						var y2 = setupLength2 * bone2.c;
						var length1 = Math.sqrt(x2 * x2 + y2 * y2);
						if(scale) {
							lengths[i3] = length1;
						}
						spaces[++i3] = (lengthSpacing ? setupLength2 + spacing : spacing) * length1 / setupLength2;
					}
				}
			}
			break;
		}
		var result = attachment;
		var path = result;
		var target = this.target;
		var position = this.position;
		var spaces1 = this.spaces;
		var this1 = this.positions;
		var size = spacesCount * 3 + 2;
		var len = this1.length;
		if(len > size) {
			this1.splice(size,size - len);
		} else if(len < size) {
			while(len < size) {
				this1.push(0);
				++len;
			}
		}
		var out = this1;
		var world = null;
		var closed = path.closed;
		var verticesLength = path.worldVerticesLength;
		var curveCount = verticesLength / 6 | 0;
		var prevCurve = -1;
		var positions;
		if(!path.constantSpeed) {
			var lengths1 = path.lengths;
			curveCount -= closed ? 1 : 2;
			var pathLength = lengths1[curveCount];
			if(this.data.positionMode == 1) {
				position *= pathLength;
			}
			var multiplier = 0;
			while(true) {
				var _switchCond1 = this.data.spacingMode;
				if(_switchCond1 == 2) {
					multiplier = pathLength;
					break;
				} else if(_switchCond1 == 3) {
					multiplier = pathLength / spacesCount;
					break;
				} else {
					multiplier = 1;
				}
				break;
			}
			var this1 = this.world;
			var len = this1.length;
			if(len > 8) {
				this1.splice(8,8 - len);
			} else if(len < 8) {
				while(len < 8) {
					this1.push(0);
					++len;
				}
			}
			world = this1;
			var i = 0;
			var o = 0;
			var curve = 0;
			while(i < spacesCount) {
				var space = spaces1[i] * multiplier;
				var p = position += space;
				if(closed) {
					p %= pathLength;
					if(p < 0) {
						p += pathLength;
					}
					curve = 0;
				} else if(p < 0) {
					if(prevCurve != -2) {
						prevCurve = -2;
						var count = 4;
						count = (count >> 1) * 2;
						var deformArray = target.deform;
						var vertices = path.vertices;
						var bones1 = path.bones;
						if(bones1 == null) {
							if(deformArray.length > 0) {
								vertices = deformArray;
							}
							var bone = target.bone;
							var x = bone.worldX;
							var y = bone.worldY;
							var a = bone.a;
							var b = bone.b;
							var c = bone.c;
							var d = bone.d;
							var v = 2;
							var w = 0;
							while(w < count) {
								var vx = vertices[v];
								var vy = vertices[v + 1];
								world[w] = vx * a + vy * b + x;
								world[w + 1] = vx * c + vy * d + y;
								v += 2;
								w += 2;
							}
						} else {
							var v1 = 0;
							var skip = 0;
							var i1 = 0;
							while(i1 < 2) {
								var n = bones1[v1];
								v1 += n + 1;
								skip += n;
								i1 += 2;
							}
							var skeletonBones = target.bone.skeleton.getBones();
							if(deformArray.length == 0) {
								var w1 = 0;
								var b1 = skip * 3;
								while(w1 < count) {
									var wx = 0;
									var wy = 0;
									var n1 = bones1[v1++];
									n1 += v1;
									while(v1 < n1) {
										var result = skeletonBones[bones1[v1]];
										var bone1 = result;
										var vx1 = vertices[b1];
										var vy1 = vertices[b1 + 1];
										var weight = vertices[b1 + 2];
										wx += (vx1 * bone1.a + vy1 * bone1.b + bone1.worldX) * weight;
										wy += (vx1 * bone1.c + vy1 * bone1.d + bone1.worldY) * weight;
										++v1;
										b1 += 3;
									}
									world[w1] = wx;
									world[w1 + 1] = wy;
									w1 += 2;
								}
							} else {
								var deform = deformArray;
								var w2 = 0;
								var b2 = skip * 3;
								var f = skip << 1;
								while(w2 < count) {
									var wx1 = 0;
									var wy1 = 0;
									var n2 = bones1[v1++];
									n2 += v1;
									while(v1 < n2) {
										var result1 = skeletonBones[bones1[v1]];
										var bone2 = result1;
										var vx2 = vertices[b2] + deform[f];
										var vy2 = vertices[b2 + 1] + deform[f + 1];
										var weight1 = vertices[b2 + 2];
										wx1 += (vx2 * bone2.a + vy2 * bone2.b + bone2.worldX) * weight1;
										wy1 += (vx2 * bone2.c + vy2 * bone2.d + bone2.worldY) * weight1;
										++v1;
										b2 += 3;
										f += 2;
									}
									world[w2] = wx1;
									world[w2 + 1] = wy1;
									w2 += 2;
								}
							}
						}
					}
					var x1 = world[0];
					var y1 = world[1];
					var dx = world[2] - x1;
					var dy = world[3] - y1;
					var r = Math.atan2(dy,dx);
					out[o] = x1 + p * Math.cos(r);
					out[o + 1] = y1 + p * Math.sin(r);
					out[o + 2] = r;
					++i;
					o += 3;
					continue;
				} else if(p > pathLength) {
					if(prevCurve != -3) {
						prevCurve = -3;
						var start = verticesLength - 6;
						var count1 = 4;
						count1 = (count1 >> 1) * 2;
						var deformArray1 = target.deform;
						var vertices1 = path.vertices;
						var bones2 = path.bones;
						if(bones2 == null) {
							if(deformArray1.length > 0) {
								vertices1 = deformArray1;
							}
							var bone3 = target.bone;
							var x2 = bone3.worldX;
							var y2 = bone3.worldY;
							var a1 = bone3.a;
							var b3 = bone3.b;
							var c1 = bone3.c;
							var d1 = bone3.d;
							var v2 = start;
							var w3 = 0;
							while(w3 < count1) {
								var vx3 = vertices1[v2];
								var vy3 = vertices1[v2 + 1];
								world[w3] = vx3 * a1 + vy3 * b3 + x2;
								world[w3 + 1] = vx3 * c1 + vy3 * d1 + y2;
								v2 += 2;
								w3 += 2;
							}
						} else {
							var v3 = 0;
							var skip1 = 0;
							var i2 = 0;
							while(i2 < start) {
								var n3 = bones2[v3];
								v3 += n3 + 1;
								skip1 += n3;
								i2 += 2;
							}
							var skeletonBones1 = target.bone.skeleton.getBones();
							if(deformArray1.length == 0) {
								var w4 = 0;
								var b4 = skip1 * 3;
								while(w4 < count1) {
									var wx2 = 0;
									var wy2 = 0;
									var n4 = bones2[v3++];
									n4 += v3;
									while(v3 < n4) {
										var result2 = skeletonBones1[bones2[v3]];
										var bone4 = result2;
										var vx4 = vertices1[b4];
										var vy4 = vertices1[b4 + 1];
										var weight2 = vertices1[b4 + 2];
										wx2 += (vx4 * bone4.a + vy4 * bone4.b + bone4.worldX) * weight2;
										wy2 += (vx4 * bone4.c + vy4 * bone4.d + bone4.worldY) * weight2;
										++v3;
										b4 += 3;
									}
									world[w4] = wx2;
									world[w4 + 1] = wy2;
									w4 += 2;
								}
							} else {
								var deform1 = deformArray1;
								var w5 = 0;
								var b5 = skip1 * 3;
								var f1 = skip1 << 1;
								while(w5 < count1) {
									var wx3 = 0;
									var wy3 = 0;
									var n5 = bones2[v3++];
									n5 += v3;
									while(v3 < n5) {
										var result3 = skeletonBones1[bones2[v3]];
										var bone5 = result3;
										var vx5 = vertices1[b5] + deform1[f1];
										var vy5 = vertices1[b5 + 1] + deform1[f1 + 1];
										var weight3 = vertices1[b5 + 2];
										wx3 += (vx5 * bone5.a + vy5 * bone5.b + bone5.worldX) * weight3;
										wy3 += (vx5 * bone5.c + vy5 * bone5.d + bone5.worldY) * weight3;
										++v3;
										b5 += 3;
										f1 += 2;
									}
									world[w5] = wx3;
									world[w5 + 1] = wy3;
									w5 += 2;
								}
							}
						}
					}
					var p1 = p - pathLength;
					var x11 = world[2];
					var y11 = world[3];
					var dx1 = x11 - world[0];
					var dy1 = y11 - world[1];
					var r1 = Math.atan2(dy1,dx1);
					out[o] = x11 + p1 * Math.cos(r1);
					out[o + 1] = y11 + p1 * Math.sin(r1);
					out[o + 2] = r1;
					++i;
					o += 3;
					continue;
				}
				while(true) {
					var length = lengths1[curve];
					if(p > length) {
						++curve;
						continue;
					}
					if(curve == 0) {
						p /= length;
					} else {
						var prev = lengths1[curve - 1];
						p = (p - prev) / (length - prev);
					}
					break;
				}
				if(curve != prevCurve) {
					prevCurve = curve;
					if(closed && curve == curveCount) {
						var start1 = verticesLength - 4;
						var count2 = 4;
						count2 = (count2 >> 1) * 2;
						var deformArray2 = target.deform;
						var vertices2 = path.vertices;
						var bones3 = path.bones;
						if(bones3 == null) {
							if(deformArray2.length > 0) {
								vertices2 = deformArray2;
							}
							var bone6 = target.bone;
							var x3 = bone6.worldX;
							var y3 = bone6.worldY;
							var a2 = bone6.a;
							var b6 = bone6.b;
							var c2 = bone6.c;
							var d2 = bone6.d;
							var v4 = start1;
							var w6 = 0;
							while(w6 < count2) {
								var vx6 = vertices2[v4];
								var vy6 = vertices2[v4 + 1];
								world[w6] = vx6 * a2 + vy6 * b6 + x3;
								world[w6 + 1] = vx6 * c2 + vy6 * d2 + y3;
								v4 += 2;
								w6 += 2;
							}
						} else {
							var v5 = 0;
							var skip2 = 0;
							var i3 = 0;
							while(i3 < start1) {
								var n6 = bones3[v5];
								v5 += n6 + 1;
								skip2 += n6;
								i3 += 2;
							}
							var skeletonBones2 = target.bone.skeleton.getBones();
							if(deformArray2.length == 0) {
								var w7 = 0;
								var b7 = skip2 * 3;
								while(w7 < count2) {
									var wx4 = 0;
									var wy4 = 0;
									var n7 = bones3[v5++];
									n7 += v5;
									while(v5 < n7) {
										var result4 = skeletonBones2[bones3[v5]];
										var bone7 = result4;
										var vx7 = vertices2[b7];
										var vy7 = vertices2[b7 + 1];
										var weight4 = vertices2[b7 + 2];
										wx4 += (vx7 * bone7.a + vy7 * bone7.b + bone7.worldX) * weight4;
										wy4 += (vx7 * bone7.c + vy7 * bone7.d + bone7.worldY) * weight4;
										++v5;
										b7 += 3;
									}
									world[w7] = wx4;
									world[w7 + 1] = wy4;
									w7 += 2;
								}
							} else {
								var deform2 = deformArray2;
								var w8 = 0;
								var b8 = skip2 * 3;
								var f2 = skip2 << 1;
								while(w8 < count2) {
									var wx5 = 0;
									var wy5 = 0;
									var n8 = bones3[v5++];
									n8 += v5;
									while(v5 < n8) {
										var result5 = skeletonBones2[bones3[v5]];
										var bone8 = result5;
										var vx8 = vertices2[b8] + deform2[f2];
										var vy8 = vertices2[b8 + 1] + deform2[f2 + 1];
										var weight5 = vertices2[b8 + 2];
										wx5 += (vx8 * bone8.a + vy8 * bone8.b + bone8.worldX) * weight5;
										wy5 += (vx8 * bone8.c + vy8 * bone8.d + bone8.worldY) * weight5;
										++v5;
										b8 += 3;
										f2 += 2;
									}
									world[w8] = wx5;
									world[w8 + 1] = wy5;
									w8 += 2;
								}
							}
						}
						var count3 = 4;
						count3 = 4 + (count3 >> 1) * 2;
						var deformArray3 = target.deform;
						var vertices3 = path.vertices;
						var bones4 = path.bones;
						if(bones4 == null) {
							if(deformArray3.length > 0) {
								vertices3 = deformArray3;
							}
							var bone9 = target.bone;
							var x4 = bone9.worldX;
							var y4 = bone9.worldY;
							var a3 = bone9.a;
							var b9 = bone9.b;
							var c3 = bone9.c;
							var d3 = bone9.d;
							var v6 = 0;
							var w9 = 4;
							while(w9 < count3) {
								var vx9 = vertices3[v6];
								var vy9 = vertices3[v6 + 1];
								world[w9] = vx9 * a3 + vy9 * b9 + x4;
								world[w9 + 1] = vx9 * c3 + vy9 * d3 + y4;
								v6 += 2;
								w9 += 2;
							}
						} else {
							var v7 = 0;
							var skip3 = 0;
							var i4 = 0;
							while(i4 < 0) {
								var n9 = bones4[v7];
								v7 += n9 + 1;
								skip3 += n9;
								i4 += 2;
							}
							var skeletonBones3 = target.bone.skeleton.getBones();
							if(deformArray3.length == 0) {
								var w10 = 4;
								var b10 = skip3 * 3;
								while(w10 < count3) {
									var wx6 = 0;
									var wy6 = 0;
									var n10 = bones4[v7++];
									n10 += v7;
									while(v7 < n10) {
										var result6 = skeletonBones3[bones4[v7]];
										var bone10 = result6;
										var vx10 = vertices3[b10];
										var vy10 = vertices3[b10 + 1];
										var weight6 = vertices3[b10 + 2];
										wx6 += (vx10 * bone10.a + vy10 * bone10.b + bone10.worldX) * weight6;
										wy6 += (vx10 * bone10.c + vy10 * bone10.d + bone10.worldY) * weight6;
										++v7;
										b10 += 3;
									}
									world[w10] = wx6;
									world[w10 + 1] = wy6;
									w10 += 2;
								}
							} else {
								var deform3 = deformArray3;
								var w11 = 4;
								var b11 = skip3 * 3;
								var f3 = skip3 << 1;
								while(w11 < count3) {
									var wx7 = 0;
									var wy7 = 0;
									var n11 = bones4[v7++];
									n11 += v7;
									while(v7 < n11) {
										var result7 = skeletonBones3[bones4[v7]];
										var bone11 = result7;
										var vx11 = vertices3[b11] + deform3[f3];
										var vy11 = vertices3[b11 + 1] + deform3[f3 + 1];
										var weight7 = vertices3[b11 + 2];
										wx7 += (vx11 * bone11.a + vy11 * bone11.b + bone11.worldX) * weight7;
										wy7 += (vx11 * bone11.c + vy11 * bone11.d + bone11.worldY) * weight7;
										++v7;
										b11 += 3;
										f3 += 2;
									}
									world[w11] = wx7;
									world[w11 + 1] = wy7;
									w11 += 2;
								}
							}
						}
					} else {
						var start2 = curve * 6 + 2;
						var count4 = 8;
						count4 = (count4 >> 1) * 2;
						var deformArray4 = target.deform;
						var vertices4 = path.vertices;
						var bones5 = path.bones;
						if(bones5 == null) {
							if(deformArray4.length > 0) {
								vertices4 = deformArray4;
							}
							var bone12 = target.bone;
							var x5 = bone12.worldX;
							var y5 = bone12.worldY;
							var a4 = bone12.a;
							var b12 = bone12.b;
							var c4 = bone12.c;
							var d4 = bone12.d;
							var v8 = start2;
							var w12 = 0;
							while(w12 < count4) {
								var vx12 = vertices4[v8];
								var vy12 = vertices4[v8 + 1];
								world[w12] = vx12 * a4 + vy12 * b12 + x5;
								world[w12 + 1] = vx12 * c4 + vy12 * d4 + y5;
								v8 += 2;
								w12 += 2;
							}
						} else {
							var v9 = 0;
							var skip4 = 0;
							var i5 = 0;
							while(i5 < start2) {
								var n12 = bones5[v9];
								v9 += n12 + 1;
								skip4 += n12;
								i5 += 2;
							}
							var skeletonBones4 = target.bone.skeleton.getBones();
							if(deformArray4.length == 0) {
								var w13 = 0;
								var b13 = skip4 * 3;
								while(w13 < count4) {
									var wx8 = 0;
									var wy8 = 0;
									var n13 = bones5[v9++];
									n13 += v9;
									while(v9 < n13) {
										var result8 = skeletonBones4[bones5[v9]];
										var bone13 = result8;
										var vx13 = vertices4[b13];
										var vy13 = vertices4[b13 + 1];
										var weight8 = vertices4[b13 + 2];
										wx8 += (vx13 * bone13.a + vy13 * bone13.b + bone13.worldX) * weight8;
										wy8 += (vx13 * bone13.c + vy13 * bone13.d + bone13.worldY) * weight8;
										++v9;
										b13 += 3;
									}
									world[w13] = wx8;
									world[w13 + 1] = wy8;
									w13 += 2;
								}
							} else {
								var deform4 = deformArray4;
								var w14 = 0;
								var b14 = skip4 * 3;
								var f4 = skip4 << 1;
								while(w14 < count4) {
									var wx9 = 0;
									var wy9 = 0;
									var n14 = bones5[v9++];
									n14 += v9;
									while(v9 < n14) {
										var result9 = skeletonBones4[bones5[v9]];
										var bone14 = result9;
										var vx14 = vertices4[b14] + deform4[f4];
										var vy14 = vertices4[b14 + 1] + deform4[f4 + 1];
										var weight9 = vertices4[b14 + 2];
										wx9 += (vx14 * bone14.a + vy14 * bone14.b + bone14.worldX) * weight9;
										wy9 += (vx14 * bone14.c + vy14 * bone14.d + bone14.worldY) * weight9;
										++v9;
										b14 += 3;
										f4 += 2;
									}
									world[w14] = wx9;
									world[w14 + 1] = wy9;
									w14 += 2;
								}
							}
						}
					}
				}
				var x12 = world[0];
				var y12 = world[1];
				var cx1 = world[2];
				var cy1 = world[3];
				var cx2 = world[4];
				var cy2 = world[5];
				var tangents1 = tangents || i > 0 && space < spine_PathConstraint.epsilon;
				if(p < spine_PathConstraint.epsilon || isNaN(p)) {
					out[o] = x12;
					out[o + 1] = y12;
					out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
				} else {
					var tt = p * p;
					var ttt = tt * p;
					var u = 1 - p;
					var uu = u * u;
					var uuu = uu * u;
					var ut = u * p;
					var ut3 = ut * 3;
					var uut3 = u * ut3;
					var utt3 = ut3 * p;
					var x6 = x12 * uuu + cx1 * uut3 + cx2 * utt3 + world[6] * ttt;
					var y6 = y12 * uuu + cy1 * uut3 + cy2 * utt3 + world[7] * ttt;
					out[o] = x6;
					out[o + 1] = y6;
					if(tangents1) {
						if(p < 0.001) {
							out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
						} else {
							out[o + 2] = Math.atan2(y6 - (y12 * uu + cy1 * ut * 2 + cy2 * tt),x6 - (x12 * uu + cx1 * ut * 2 + cx2 * tt));
						}
					}
				}
				++i;
				o += 3;
			}
			positions = out;
		} else {
			if(closed) {
				verticesLength += 2;
				var this1 = this.world;
				var len = this1.length;
				if(len > verticesLength) {
					this1.splice(verticesLength,verticesLength - len);
				} else if(len < verticesLength) {
					while(len < verticesLength) {
						this1.push(0);
						++len;
					}
				}
				world = this1;
				var count = verticesLength - 4;
				count = (count >> 1) * 2;
				var deformArray = target.deform;
				var vertices = path.vertices;
				var bones1 = path.bones;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.bone;
					var x = bone.worldX;
					var y = bone.worldY;
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var v = 2;
					var w = 0;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					var skip = 0;
					var i = 0;
					while(i < 2) {
						var n = bones1[v];
						v += n + 1;
						skip += n;
						i += 2;
					}
					var skeletonBones = target.bone.skeleton.getBones();
					if(deformArray.length == 0) {
						var w = 0;
						var b = skip * 3;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var deform = deformArray;
						var w = 0;
						var b = skip * 3;
						var f = skip << 1;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b] + deform[f];
								var vy = vertices[b + 1] + deform[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
				var count = 2;
				var offset = verticesLength - 4;
				count = offset + (count >> 1) * 2;
				var deformArray = target.deform;
				var vertices = path.vertices;
				var bones1 = path.bones;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.bone;
					var x = bone.worldX;
					var y = bone.worldY;
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var v = 0;
					var w = offset;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					var skip = 0;
					var i = 0;
					while(i < 0) {
						var n = bones1[v];
						v += n + 1;
						skip += n;
						i += 2;
					}
					var skeletonBones = target.bone.skeleton.getBones();
					if(deformArray.length == 0) {
						var w = offset;
						var b = skip * 3;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var deform = deformArray;
						var w = offset;
						var b = skip * 3;
						var f = skip << 1;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b] + deform[f];
								var vy = vertices[b + 1] + deform[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
				world[verticesLength - 2] = world[0];
				world[verticesLength - 1] = world[1];
			} else {
				--curveCount;
				verticesLength -= 4;
				var this1 = this.world;
				var len = this1.length;
				if(len > verticesLength) {
					this1.splice(verticesLength,verticesLength - len);
				} else if(len < verticesLength) {
					while(len < verticesLength) {
						this1.push(0);
						++len;
					}
				}
				world = this1;
				var count = verticesLength;
				count = (count >> 1) * 2;
				var deformArray = target.deform;
				var vertices = path.vertices;
				var bones1 = path.bones;
				if(bones1 == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = target.bone;
					var x = bone.worldX;
					var y = bone.worldY;
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var v = 2;
					var w = 0;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						world[w] = vx * a + vy * b + x;
						world[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v = 0;
					var skip = 0;
					var i = 0;
					while(i < 2) {
						var n = bones1[v];
						v += n + 1;
						skip += n;
						i += 2;
					}
					var skeletonBones = target.bone.skeleton.getBones();
					if(deformArray.length == 0) {
						var w = 0;
						var b = skip * 3;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b];
								var vy = vertices[b + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					} else {
						var deform = deformArray;
						var w = 0;
						var b = skip * 3;
						var f = skip << 1;
						while(w < count) {
							var wx = 0;
							var wy = 0;
							var n = bones1[v++];
							n += v;
							while(v < n) {
								var result = skeletonBones[bones1[v]];
								var bone = result;
								var vx = vertices[b] + deform[f];
								var vy = vertices[b + 1] + deform[f + 1];
								var weight = vertices[b + 2];
								wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
								wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
								++v;
								b += 3;
								f += 2;
							}
							world[w] = wx;
							world[w + 1] = wy;
							w += 2;
						}
					}
				}
			}
			var this1 = this.curves;
			var len = this1.length;
			if(len > curveCount) {
				this1.splice(curveCount,curveCount - len);
			} else if(len < curveCount) {
				while(len < curveCount) {
					this1.push(0);
					++len;
				}
			}
			var curves = this1;
			var pathLength = 0;
			var x1 = world[0];
			var y1 = world[1];
			var cx1 = 0;
			var cy1 = 0;
			var cx2 = 0;
			var cy2 = 0;
			var x2 = 0;
			var y2 = 0;
			var tmpx = 0;
			var tmpy = 0;
			var dddfx = 0;
			var dddfy = 0;
			var ddfx = 0;
			var ddfy = 0;
			var dfx = 0;
			var dfy = 0;
			var i = 0;
			var w = 2;
			while(i < curveCount) {
				cx1 = world[w];
				cy1 = world[w + 1];
				cx2 = world[w + 2];
				cy2 = world[w + 3];
				x2 = world[w + 4];
				y2 = world[w + 5];
				tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;
				tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;
				dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;
				dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;
				ddfx = tmpx * 2 + dddfx;
				ddfy = tmpy * 2 + dddfy;
				dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;
				dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx;
				dfy += ddfy;
				ddfx += dddfx;
				ddfy += dddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx;
				dfy += ddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				dfx += ddfx + dddfx;
				dfy += ddfy + dddfy;
				pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
				curves[i] = pathLength;
				x1 = x2;
				y1 = y2;
				++i;
				w += 6;
			}
			if(this.data.positionMode == 1) {
				position *= pathLength;
			}
			var multiplier = 0;
			while(true) {
				var _switchCond2 = this.data.spacingMode;
				if(_switchCond2 == 2) {
					multiplier = pathLength;
					break;
				} else if(_switchCond2 == 3) {
					multiplier = pathLength / spacesCount;
					break;
				} else {
					multiplier = 1;
				}
				break;
			}
			var segments = this.segments;
			var curveLength = 0;
			var i = 0;
			var o = 0;
			var curve = 0;
			var segment = 0;
			while(i < spacesCount) {
				var space = spaces1[i] * multiplier;
				var p = position += space;
				if(closed) {
					p %= pathLength;
					if(p < 0) {
						p += pathLength;
					}
					curve = 0;
				} else if(p < 0) {
					var x11 = world[0];
					var y11 = world[1];
					var dx = world[2] - x11;
					var dy = world[3] - y11;
					var r = Math.atan2(dy,dx);
					out[o] = x11 + p * Math.cos(r);
					out[o + 1] = y11 + p * Math.sin(r);
					out[o + 2] = r;
					++i;
					o += 3;
					continue;
				} else if(p > pathLength) {
					var p1 = p - pathLength;
					var i1 = verticesLength - 4;
					var x12 = world[i1 + 2];
					var y12 = world[i1 + 3];
					var dx1 = x12 - world[i1];
					var dy1 = y12 - world[i1 + 1];
					var r1 = Math.atan2(dy1,dx1);
					out[o] = x12 + p1 * Math.cos(r1);
					out[o + 1] = y12 + p1 * Math.sin(r1);
					out[o + 2] = r1;
					++i;
					o += 3;
					continue;
				}
				while(true) {
					var length = curves[curve];
					if(p > length) {
						++curve;
						continue;
					}
					if(curve == 0) {
						p /= length;
					} else {
						var prev = curves[curve - 1];
						p = (p - prev) / (length - prev);
					}
					break;
				}
				if(curve != prevCurve) {
					prevCurve = curve;
					var ii = curve * 6;
					x1 = world[ii];
					y1 = world[ii + 1];
					cx1 = world[ii + 2];
					cy1 = world[ii + 3];
					cx2 = world[ii + 4];
					cy2 = world[ii + 5];
					x2 = world[ii + 6];
					y2 = world[ii + 7];
					tmpx = (x1 - cx1 * 2 + cx2) * 0.03;
					tmpy = (y1 - cy1 * 2 + cy2) * 0.03;
					dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;
					dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;
					ddfx = tmpx * 2 + dddfx;
					ddfy = tmpy * 2 + dddfy;
					dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;
					dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;
					curveLength = Math.sqrt(dfx * dfx + dfy * dfy);
					segments[0] = curveLength;
					ii = 1;
					while(ii < 8) {
						dfx += ddfx;
						dfy += ddfy;
						ddfx += dddfx;
						ddfy += dddfy;
						curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
						segments[ii] = curveLength;
						++ii;
					}
					dfx += ddfx;
					dfy += ddfy;
					curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
					segments[8] = curveLength;
					dfx += ddfx + dddfx;
					dfy += ddfy + dddfy;
					curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
					segments[9] = curveLength;
					segment = 0;
				}
				p *= curveLength;
				while(true) {
					var length1 = segments[segment];
					if(p > length1) {
						++segment;
						continue;
					}
					if(segment == 0) {
						p /= length1;
					} else {
						var prev1 = segments[segment - 1];
						p = segment + (p - prev1) / (length1 - prev1);
					}
					break;
				}
				var p2 = p * 0.1;
				var tangents1 = tangents || i > 0 && space < spine_PathConstraint.epsilon;
				if(p2 < spine_PathConstraint.epsilon || isNaN(p2)) {
					out[o] = x1;
					out[o + 1] = y1;
					out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
				} else {
					var tt = p2 * p2;
					var ttt = tt * p2;
					var u = 1 - p2;
					var uu = u * u;
					var uuu = uu * u;
					var ut = u * p2;
					var ut3 = ut * 3;
					var uut3 = u * ut3;
					var utt3 = ut3 * p2;
					var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt;
					var y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;
					out[o] = x;
					out[o + 1] = y;
					if(tangents1) {
						if(p2 < 0.001) {
							out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
						} else {
							out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt),x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));
						}
					}
				}
				++i;
				o += 3;
			}
			positions = out;
		}
		var boneX = positions[0];
		var boneY = positions[1];
		var offsetRotation = data.offsetRotation;
		var tip = false;
		if(offsetRotation == 0) {
			tip = data.rotateMode == 1;
		} else {
			tip = false;
			var p = this.target.bone;
			offsetRotation *= p.a * p.d - p.b * p.c > 0 ? spine_utils_SpineUtils.degRad : -spine_utils_SpineUtils.degRad;
		}
		var i = 0;
		var p = 3;
		while(i < boneCount) {
			var result = bones[i];
			var bone = result;
			bone.worldX += (boneX - bone.worldX) * mixX;
			bone.worldY += (boneY - bone.worldY) * mixY;
			var x = positions[p];
			var y = positions[p + 1];
			var dx = x - boneX;
			var dy = y - boneY;
			if(scale) {
				var length = lengths[i];
				if(length >= spine_PathConstraint.epsilon) {
					var s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * mixRotate + 1;
					bone.a *= s;
					bone.c *= s;
				}
			}
			boneX = x;
			boneY = y;
			if(mixRotate > 0) {
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var r = 0;
				var cos = 0;
				var sin = 0;
				if(tangents) {
					r = positions[p - 1];
				} else if(spaces[i + 1] < spine_PathConstraint.epsilon) {
					r = positions[p + 2];
				} else {
					r = Math.atan2(dy,dx);
				}
				r -= Math.atan2(c,a);
				if(tip) {
					cos = Math.cos(r);
					sin = Math.sin(r);
					var length1 = bone.data.length;
					boneX += (length1 * (cos * a - sin * c) - dx) * mixRotate;
					boneY += (length1 * (sin * a + cos * c) - dy) * mixRotate;
				} else {
					r += offsetRotation;
				}
				if(r > 3.1415927) {
					r -= 6.2831854;
				} else if(r < -3.1415927) {
					r += 6.2831854;
				}
				r *= mixRotate;
				cos = Math.cos(r);
				sin = Math.sin(r);
				bone.a = cos * a - sin * c;
				bone.b = cos * b - sin * d;
				bone.c = sin * a + cos * c;
				bone.d = sin * b + cos * d;
			}
			var parent = bone.parent;
			if(parent == null) {
				bone.ax = bone.worldX;
				bone.ay = bone.worldY;
				var a1 = bone.a;
				var b1 = bone.b;
				var c1 = bone.c;
				var d1 = bone.d;
				bone.arotation = Math.atan2(c1,a1) * spine_utils_SpineUtils.radDeg;
				bone.ascaleX = Math.sqrt(a1 * a1 + c1 * c1);
				bone.ascaleY = Math.sqrt(b1 * b1 + d1 * d1);
				bone.ashearX = 0;
				bone.ashearY = Math.atan2(a1 * b1 + c1 * d1,a1 * d1 - b1 * c1) * spine_utils_SpineUtils.radDeg;
			} else {
				var pa = parent.a;
				var pb = parent.b;
				var pc = parent.c;
				var pd = parent.d;
				var pid = 1 / (pa * pd - pb * pc);
				var dx1 = bone.worldX - parent.worldX;
				var dy1 = bone.worldY - parent.worldY;
				bone.ax = dx1 * pd * pid - dy1 * pb * pid;
				bone.ay = dy1 * pa * pid - dx1 * pc * pid;
				var ia = pid * pd;
				var id = pid * pa;
				var ib = pid * pb;
				var ic = pid * pc;
				var ra = ia * bone.a - ib * bone.c;
				var rb = ia * bone.b - ib * bone.d;
				var rc = id * bone.c - ic * bone.a;
				var rd = id * bone.d - ic * bone.b;
				bone.ashearX = 0;
				bone.ascaleX = Math.sqrt(ra * ra + rc * rc);
				if(bone.ascaleX > 0.0001) {
					var det = ra * rd - rb * rc;
					bone.ascaleY = det / bone.ascaleX;
					bone.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
					bone.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
				} else {
					bone.ascaleX = 0;
					bone.ascaleY = Math.sqrt(rb * rb + rd * rd);
					bone.ashearY = 0;
					bone.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
				}
			}
			++i;
			p += 3;
		}
	}
	,computeWorldPositions: function(path,spacesCount,tangents) {
		var target = this.target;
		var position = this.position;
		var spaces = this.spaces;
		var this1 = this.positions;
		var size = spacesCount * 3 + 2;
		var len = this1.length;
		if(len > size) {
			this1.splice(size,size - len);
		} else if(len < size) {
			while(len < size) {
				this1.push(0);
				++len;
			}
		}
		var out = this1;
		var world = null;
		var closed = path.closed;
		var verticesLength = path.worldVerticesLength;
		var curveCount = verticesLength / 6 | 0;
		var prevCurve = -1;
		if(!path.constantSpeed) {
			var lengths = path.lengths;
			curveCount -= closed ? 1 : 2;
			var pathLength = lengths[curveCount];
			if(this.data.positionMode == 1) {
				position *= pathLength;
			}
			var multiplier = 0;
			var _continueAfterSwitch1 = false;
			while(true) {
				var _switchCond1 = this.data.spacingMode;
				if(_switchCond1 == 2) {
					multiplier = pathLength;
					break;
				} else if(_switchCond1 == 3) {
					multiplier = pathLength / spacesCount;
					break;
				} else {
					multiplier = 1;
				}
				break;
			}
			var this1 = this.world;
			var len = this1.length;
			if(len > 8) {
				this1.splice(8,8 - len);
			} else if(len < 8) {
				while(len < 8) {
					this1.push(0);
					++len;
				}
			}
			world = this1;
			var i = 0;
			var o = 0;
			var curve = 0;
			while(i < spacesCount) {
				var space = spaces[i] * multiplier;
				var p = position += space;
				if(closed) {
					p %= pathLength;
					if(p < 0) {
						p += pathLength;
					}
					curve = 0;
				} else if(p < 0) {
					if(prevCurve != -2) {
						prevCurve = -2;
						var count = 4;
						count = (count >> 1) * 2;
						var deformArray = target.deform;
						var vertices = path.vertices;
						var bones = path.bones;
						if(bones == null) {
							if(deformArray.length > 0) {
								vertices = deformArray;
							}
							var bone = target.bone;
							var x = bone.worldX;
							var y = bone.worldY;
							var a = bone.a;
							var b = bone.b;
							var c = bone.c;
							var d = bone.d;
							var v = 2;
							var w = 0;
							while(w < count) {
								var vx = vertices[v];
								var vy = vertices[v + 1];
								world[w] = vx * a + vy * b + x;
								world[w + 1] = vx * c + vy * d + y;
								v += 2;
								w += 2;
							}
						} else {
							var v1 = 0;
							var skip = 0;
							var i1 = 0;
							while(i1 < 2) {
								var n = bones[v1];
								v1 += n + 1;
								skip += n;
								i1 += 2;
							}
							var skeletonBones = target.bone.skeleton.getBones();
							if(deformArray.length == 0) {
								var w1 = 0;
								var b1 = skip * 3;
								while(w1 < count) {
									var wx = 0;
									var wy = 0;
									var n1 = bones[v1++];
									n1 += v1;
									while(v1 < n1) {
										var result = skeletonBones[bones[v1]];
										var bone1 = result;
										var vx1 = vertices[b1];
										var vy1 = vertices[b1 + 1];
										var weight = vertices[b1 + 2];
										wx += (vx1 * bone1.a + vy1 * bone1.b + bone1.worldX) * weight;
										wy += (vx1 * bone1.c + vy1 * bone1.d + bone1.worldY) * weight;
										++v1;
										b1 += 3;
									}
									world[w1] = wx;
									world[w1 + 1] = wy;
									w1 += 2;
								}
							} else {
								var deform = deformArray;
								var w2 = 0;
								var b2 = skip * 3;
								var f = skip << 1;
								while(w2 < count) {
									var wx1 = 0;
									var wy1 = 0;
									var n2 = bones[v1++];
									n2 += v1;
									while(v1 < n2) {
										var result1 = skeletonBones[bones[v1]];
										var bone2 = result1;
										var vx2 = vertices[b2] + deform[f];
										var vy2 = vertices[b2 + 1] + deform[f + 1];
										var weight1 = vertices[b2 + 2];
										wx1 += (vx2 * bone2.a + vy2 * bone2.b + bone2.worldX) * weight1;
										wy1 += (vx2 * bone2.c + vy2 * bone2.d + bone2.worldY) * weight1;
										++v1;
										b2 += 3;
										f += 2;
									}
									world[w2] = wx1;
									world[w2 + 1] = wy1;
									w2 += 2;
								}
							}
						}
					}
					var x1 = world[0];
					var y1 = world[1];
					var dx = world[2] - x1;
					var dy = world[3] - y1;
					var r = Math.atan2(dy,dx);
					out[o] = x1 + p * Math.cos(r);
					out[o + 1] = y1 + p * Math.sin(r);
					out[o + 2] = r;
					++i;
					o += 3;
					continue;
				} else if(p > pathLength) {
					if(prevCurve != -3) {
						prevCurve = -3;
						var start = verticesLength - 6;
						var count1 = 4;
						count1 = (count1 >> 1) * 2;
						var deformArray1 = target.deform;
						var vertices1 = path.vertices;
						var bones1 = path.bones;
						if(bones1 == null) {
							if(deformArray1.length > 0) {
								vertices1 = deformArray1;
							}
							var bone3 = target.bone;
							var x2 = bone3.worldX;
							var y2 = bone3.worldY;
							var a1 = bone3.a;
							var b3 = bone3.b;
							var c1 = bone3.c;
							var d1 = bone3.d;
							var v2 = start;
							var w3 = 0;
							while(w3 < count1) {
								var vx3 = vertices1[v2];
								var vy3 = vertices1[v2 + 1];
								world[w3] = vx3 * a1 + vy3 * b3 + x2;
								world[w3 + 1] = vx3 * c1 + vy3 * d1 + y2;
								v2 += 2;
								w3 += 2;
							}
						} else {
							var v3 = 0;
							var skip1 = 0;
							var i2 = 0;
							while(i2 < start) {
								var n3 = bones1[v3];
								v3 += n3 + 1;
								skip1 += n3;
								i2 += 2;
							}
							var skeletonBones1 = target.bone.skeleton.getBones();
							if(deformArray1.length == 0) {
								var w4 = 0;
								var b4 = skip1 * 3;
								while(w4 < count1) {
									var wx2 = 0;
									var wy2 = 0;
									var n4 = bones1[v3++];
									n4 += v3;
									while(v3 < n4) {
										var result2 = skeletonBones1[bones1[v3]];
										var bone4 = result2;
										var vx4 = vertices1[b4];
										var vy4 = vertices1[b4 + 1];
										var weight2 = vertices1[b4 + 2];
										wx2 += (vx4 * bone4.a + vy4 * bone4.b + bone4.worldX) * weight2;
										wy2 += (vx4 * bone4.c + vy4 * bone4.d + bone4.worldY) * weight2;
										++v3;
										b4 += 3;
									}
									world[w4] = wx2;
									world[w4 + 1] = wy2;
									w4 += 2;
								}
							} else {
								var deform1 = deformArray1;
								var w5 = 0;
								var b5 = skip1 * 3;
								var f1 = skip1 << 1;
								while(w5 < count1) {
									var wx3 = 0;
									var wy3 = 0;
									var n5 = bones1[v3++];
									n5 += v3;
									while(v3 < n5) {
										var result3 = skeletonBones1[bones1[v3]];
										var bone5 = result3;
										var vx5 = vertices1[b5] + deform1[f1];
										var vy5 = vertices1[b5 + 1] + deform1[f1 + 1];
										var weight3 = vertices1[b5 + 2];
										wx3 += (vx5 * bone5.a + vy5 * bone5.b + bone5.worldX) * weight3;
										wy3 += (vx5 * bone5.c + vy5 * bone5.d + bone5.worldY) * weight3;
										++v3;
										b5 += 3;
										f1 += 2;
									}
									world[w5] = wx3;
									world[w5 + 1] = wy3;
									w5 += 2;
								}
							}
						}
					}
					var p1 = p - pathLength;
					var x11 = world[2];
					var y11 = world[3];
					var dx1 = x11 - world[0];
					var dy1 = y11 - world[1];
					var r1 = Math.atan2(dy1,dx1);
					out[o] = x11 + p1 * Math.cos(r1);
					out[o + 1] = y11 + p1 * Math.sin(r1);
					out[o + 2] = r1;
					++i;
					o += 3;
					continue;
				}
				while(true) {
					var length = lengths[curve];
					if(p > length) {
						++curve;
						continue;
					}
					if(curve == 0) {
						p /= length;
					} else {
						var prev = lengths[curve - 1];
						p = (p - prev) / (length - prev);
					}
					break;
				}
				if(curve != prevCurve) {
					prevCurve = curve;
					if(closed && curve == curveCount) {
						var start1 = verticesLength - 4;
						var count2 = 4;
						count2 = (count2 >> 1) * 2;
						var deformArray2 = target.deform;
						var vertices2 = path.vertices;
						var bones2 = path.bones;
						if(bones2 == null) {
							if(deformArray2.length > 0) {
								vertices2 = deformArray2;
							}
							var bone6 = target.bone;
							var x3 = bone6.worldX;
							var y3 = bone6.worldY;
							var a2 = bone6.a;
							var b6 = bone6.b;
							var c2 = bone6.c;
							var d2 = bone6.d;
							var v4 = start1;
							var w6 = 0;
							while(w6 < count2) {
								var vx6 = vertices2[v4];
								var vy6 = vertices2[v4 + 1];
								world[w6] = vx6 * a2 + vy6 * b6 + x3;
								world[w6 + 1] = vx6 * c2 + vy6 * d2 + y3;
								v4 += 2;
								w6 += 2;
							}
						} else {
							var v5 = 0;
							var skip2 = 0;
							var i3 = 0;
							while(i3 < start1) {
								var n6 = bones2[v5];
								v5 += n6 + 1;
								skip2 += n6;
								i3 += 2;
							}
							var skeletonBones2 = target.bone.skeleton.getBones();
							if(deformArray2.length == 0) {
								var w7 = 0;
								var b7 = skip2 * 3;
								while(w7 < count2) {
									var wx4 = 0;
									var wy4 = 0;
									var n7 = bones2[v5++];
									n7 += v5;
									while(v5 < n7) {
										var result4 = skeletonBones2[bones2[v5]];
										var bone7 = result4;
										var vx7 = vertices2[b7];
										var vy7 = vertices2[b7 + 1];
										var weight4 = vertices2[b7 + 2];
										wx4 += (vx7 * bone7.a + vy7 * bone7.b + bone7.worldX) * weight4;
										wy4 += (vx7 * bone7.c + vy7 * bone7.d + bone7.worldY) * weight4;
										++v5;
										b7 += 3;
									}
									world[w7] = wx4;
									world[w7 + 1] = wy4;
									w7 += 2;
								}
							} else {
								var deform2 = deformArray2;
								var w8 = 0;
								var b8 = skip2 * 3;
								var f2 = skip2 << 1;
								while(w8 < count2) {
									var wx5 = 0;
									var wy5 = 0;
									var n8 = bones2[v5++];
									n8 += v5;
									while(v5 < n8) {
										var result5 = skeletonBones2[bones2[v5]];
										var bone8 = result5;
										var vx8 = vertices2[b8] + deform2[f2];
										var vy8 = vertices2[b8 + 1] + deform2[f2 + 1];
										var weight5 = vertices2[b8 + 2];
										wx5 += (vx8 * bone8.a + vy8 * bone8.b + bone8.worldX) * weight5;
										wy5 += (vx8 * bone8.c + vy8 * bone8.d + bone8.worldY) * weight5;
										++v5;
										b8 += 3;
										f2 += 2;
									}
									world[w8] = wx5;
									world[w8 + 1] = wy5;
									w8 += 2;
								}
							}
						}
						var count3 = 4;
						count3 = 4 + (count3 >> 1) * 2;
						var deformArray3 = target.deform;
						var vertices3 = path.vertices;
						var bones3 = path.bones;
						if(bones3 == null) {
							if(deformArray3.length > 0) {
								vertices3 = deformArray3;
							}
							var bone9 = target.bone;
							var x4 = bone9.worldX;
							var y4 = bone9.worldY;
							var a3 = bone9.a;
							var b9 = bone9.b;
							var c3 = bone9.c;
							var d3 = bone9.d;
							var v6 = 0;
							var w9 = 4;
							while(w9 < count3) {
								var vx9 = vertices3[v6];
								var vy9 = vertices3[v6 + 1];
								world[w9] = vx9 * a3 + vy9 * b9 + x4;
								world[w9 + 1] = vx9 * c3 + vy9 * d3 + y4;
								v6 += 2;
								w9 += 2;
							}
						} else {
							var v7 = 0;
							var skip3 = 0;
							var i4 = 0;
							while(i4 < 0) {
								var n9 = bones3[v7];
								v7 += n9 + 1;
								skip3 += n9;
								i4 += 2;
							}
							var skeletonBones3 = target.bone.skeleton.getBones();
							if(deformArray3.length == 0) {
								var w10 = 4;
								var b10 = skip3 * 3;
								while(w10 < count3) {
									var wx6 = 0;
									var wy6 = 0;
									var n10 = bones3[v7++];
									n10 += v7;
									while(v7 < n10) {
										var result6 = skeletonBones3[bones3[v7]];
										var bone10 = result6;
										var vx10 = vertices3[b10];
										var vy10 = vertices3[b10 + 1];
										var weight6 = vertices3[b10 + 2];
										wx6 += (vx10 * bone10.a + vy10 * bone10.b + bone10.worldX) * weight6;
										wy6 += (vx10 * bone10.c + vy10 * bone10.d + bone10.worldY) * weight6;
										++v7;
										b10 += 3;
									}
									world[w10] = wx6;
									world[w10 + 1] = wy6;
									w10 += 2;
								}
							} else {
								var deform3 = deformArray3;
								var w11 = 4;
								var b11 = skip3 * 3;
								var f3 = skip3 << 1;
								while(w11 < count3) {
									var wx7 = 0;
									var wy7 = 0;
									var n11 = bones3[v7++];
									n11 += v7;
									while(v7 < n11) {
										var result7 = skeletonBones3[bones3[v7]];
										var bone11 = result7;
										var vx11 = vertices3[b11] + deform3[f3];
										var vy11 = vertices3[b11 + 1] + deform3[f3 + 1];
										var weight7 = vertices3[b11 + 2];
										wx7 += (vx11 * bone11.a + vy11 * bone11.b + bone11.worldX) * weight7;
										wy7 += (vx11 * bone11.c + vy11 * bone11.d + bone11.worldY) * weight7;
										++v7;
										b11 += 3;
										f3 += 2;
									}
									world[w11] = wx7;
									world[w11 + 1] = wy7;
									w11 += 2;
								}
							}
						}
					} else {
						var start2 = curve * 6 + 2;
						var count4 = 8;
						count4 = (count4 >> 1) * 2;
						var deformArray4 = target.deform;
						var vertices4 = path.vertices;
						var bones4 = path.bones;
						if(bones4 == null) {
							if(deformArray4.length > 0) {
								vertices4 = deformArray4;
							}
							var bone12 = target.bone;
							var x5 = bone12.worldX;
							var y5 = bone12.worldY;
							var a4 = bone12.a;
							var b12 = bone12.b;
							var c4 = bone12.c;
							var d4 = bone12.d;
							var v8 = start2;
							var w12 = 0;
							while(w12 < count4) {
								var vx12 = vertices4[v8];
								var vy12 = vertices4[v8 + 1];
								world[w12] = vx12 * a4 + vy12 * b12 + x5;
								world[w12 + 1] = vx12 * c4 + vy12 * d4 + y5;
								v8 += 2;
								w12 += 2;
							}
						} else {
							var v9 = 0;
							var skip4 = 0;
							var i5 = 0;
							while(i5 < start2) {
								var n12 = bones4[v9];
								v9 += n12 + 1;
								skip4 += n12;
								i5 += 2;
							}
							var skeletonBones4 = target.bone.skeleton.getBones();
							if(deformArray4.length == 0) {
								var w13 = 0;
								var b13 = skip4 * 3;
								while(w13 < count4) {
									var wx8 = 0;
									var wy8 = 0;
									var n13 = bones4[v9++];
									n13 += v9;
									while(v9 < n13) {
										var result8 = skeletonBones4[bones4[v9]];
										var bone13 = result8;
										var vx13 = vertices4[b13];
										var vy13 = vertices4[b13 + 1];
										var weight8 = vertices4[b13 + 2];
										wx8 += (vx13 * bone13.a + vy13 * bone13.b + bone13.worldX) * weight8;
										wy8 += (vx13 * bone13.c + vy13 * bone13.d + bone13.worldY) * weight8;
										++v9;
										b13 += 3;
									}
									world[w13] = wx8;
									world[w13 + 1] = wy8;
									w13 += 2;
								}
							} else {
								var deform4 = deformArray4;
								var w14 = 0;
								var b14 = skip4 * 3;
								var f4 = skip4 << 1;
								while(w14 < count4) {
									var wx9 = 0;
									var wy9 = 0;
									var n14 = bones4[v9++];
									n14 += v9;
									while(v9 < n14) {
										var result9 = skeletonBones4[bones4[v9]];
										var bone14 = result9;
										var vx14 = vertices4[b14] + deform4[f4];
										var vy14 = vertices4[b14 + 1] + deform4[f4 + 1];
										var weight9 = vertices4[b14 + 2];
										wx9 += (vx14 * bone14.a + vy14 * bone14.b + bone14.worldX) * weight9;
										wy9 += (vx14 * bone14.c + vy14 * bone14.d + bone14.worldY) * weight9;
										++v9;
										b14 += 3;
										f4 += 2;
									}
									world[w14] = wx9;
									world[w14 + 1] = wy9;
									w14 += 2;
								}
							}
						}
					}
				}
				var x12 = world[0];
				var y12 = world[1];
				var cx1 = world[2];
				var cy1 = world[3];
				var cx2 = world[4];
				var cy2 = world[5];
				var tangents1 = tangents || i > 0 && space < spine_PathConstraint.epsilon;
				if(p < spine_PathConstraint.epsilon || isNaN(p)) {
					out[o] = x12;
					out[o + 1] = y12;
					out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
				} else {
					var tt = p * p;
					var ttt = tt * p;
					var u = 1 - p;
					var uu = u * u;
					var uuu = uu * u;
					var ut = u * p;
					var ut3 = ut * 3;
					var uut3 = u * ut3;
					var utt3 = ut3 * p;
					var x6 = x12 * uuu + cx1 * uut3 + cx2 * utt3 + world[6] * ttt;
					var y6 = y12 * uuu + cy1 * uut3 + cy2 * utt3 + world[7] * ttt;
					out[o] = x6;
					out[o + 1] = y6;
					if(tangents1) {
						if(p < 0.001) {
							out[o + 2] = Math.atan2(cy1 - y12,cx1 - x12);
						} else {
							out[o + 2] = Math.atan2(y6 - (y12 * uu + cy1 * ut * 2 + cy2 * tt),x6 - (x12 * uu + cx1 * ut * 2 + cx2 * tt));
						}
					}
				}
				++i;
				o += 3;
			}
			return out;
		}
		if(closed) {
			verticesLength += 2;
			var this1 = this.world;
			var len = this1.length;
			if(len > verticesLength) {
				this1.splice(verticesLength,verticesLength - len);
			} else if(len < verticesLength) {
				while(len < verticesLength) {
					this1.push(0);
					++len;
				}
			}
			world = this1;
			var count = verticesLength - 4;
			count = (count >> 1) * 2;
			var deformArray = target.deform;
			var vertices = path.vertices;
			var bones = path.bones;
			if(bones == null) {
				if(deformArray.length > 0) {
					vertices = deformArray;
				}
				var bone = target.bone;
				var x = bone.worldX;
				var y = bone.worldY;
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var v = 2;
				var w = 0;
				while(w < count) {
					var vx = vertices[v];
					var vy = vertices[v + 1];
					world[w] = vx * a + vy * b + x;
					world[w + 1] = vx * c + vy * d + y;
					v += 2;
					w += 2;
				}
			} else {
				var v = 0;
				var skip = 0;
				var i = 0;
				while(i < 2) {
					var n = bones[v];
					v += n + 1;
					skip += n;
					i += 2;
				}
				var skeletonBones = target.bone.skeleton.getBones();
				if(deformArray.length == 0) {
					var w = 0;
					var b = skip * 3;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b];
							var vy = vertices[b + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				} else {
					var deform = deformArray;
					var w = 0;
					var b = skip * 3;
					var f = skip << 1;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b] + deform[f];
							var vy = vertices[b + 1] + deform[f + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
							f += 2;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				}
			}
			var count = 2;
			var offset = verticesLength - 4;
			count = offset + (count >> 1) * 2;
			var deformArray = target.deform;
			var vertices = path.vertices;
			var bones = path.bones;
			if(bones == null) {
				if(deformArray.length > 0) {
					vertices = deformArray;
				}
				var bone = target.bone;
				var x = bone.worldX;
				var y = bone.worldY;
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var v = 0;
				var w = offset;
				while(w < count) {
					var vx = vertices[v];
					var vy = vertices[v + 1];
					world[w] = vx * a + vy * b + x;
					world[w + 1] = vx * c + vy * d + y;
					v += 2;
					w += 2;
				}
			} else {
				var v = 0;
				var skip = 0;
				var i = 0;
				while(i < 0) {
					var n = bones[v];
					v += n + 1;
					skip += n;
					i += 2;
				}
				var skeletonBones = target.bone.skeleton.getBones();
				if(deformArray.length == 0) {
					var w = offset;
					var b = skip * 3;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b];
							var vy = vertices[b + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				} else {
					var deform = deformArray;
					var w = offset;
					var b = skip * 3;
					var f = skip << 1;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b] + deform[f];
							var vy = vertices[b + 1] + deform[f + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
							f += 2;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				}
			}
			world[verticesLength - 2] = world[0];
			world[verticesLength - 1] = world[1];
		} else {
			--curveCount;
			verticesLength -= 4;
			var this1 = this.world;
			var len = this1.length;
			if(len > verticesLength) {
				this1.splice(verticesLength,verticesLength - len);
			} else if(len < verticesLength) {
				while(len < verticesLength) {
					this1.push(0);
					++len;
				}
			}
			world = this1;
			var count = verticesLength;
			count = (count >> 1) * 2;
			var deformArray = target.deform;
			var vertices = path.vertices;
			var bones = path.bones;
			if(bones == null) {
				if(deformArray.length > 0) {
					vertices = deformArray;
				}
				var bone = target.bone;
				var x = bone.worldX;
				var y = bone.worldY;
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var v = 2;
				var w = 0;
				while(w < count) {
					var vx = vertices[v];
					var vy = vertices[v + 1];
					world[w] = vx * a + vy * b + x;
					world[w + 1] = vx * c + vy * d + y;
					v += 2;
					w += 2;
				}
			} else {
				var v = 0;
				var skip = 0;
				var i = 0;
				while(i < 2) {
					var n = bones[v];
					v += n + 1;
					skip += n;
					i += 2;
				}
				var skeletonBones = target.bone.skeleton.getBones();
				if(deformArray.length == 0) {
					var w = 0;
					var b = skip * 3;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b];
							var vy = vertices[b + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				} else {
					var deform = deformArray;
					var w = 0;
					var b = skip * 3;
					var f = skip << 1;
					while(w < count) {
						var wx = 0;
						var wy = 0;
						var n = bones[v++];
						n += v;
						while(v < n) {
							var result = skeletonBones[bones[v]];
							var bone = result;
							var vx = vertices[b] + deform[f];
							var vy = vertices[b + 1] + deform[f + 1];
							var weight = vertices[b + 2];
							wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
							wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
							++v;
							b += 3;
							f += 2;
						}
						world[w] = wx;
						world[w + 1] = wy;
						w += 2;
					}
				}
			}
		}
		var this1 = this.curves;
		var len = this1.length;
		if(len > curveCount) {
			this1.splice(curveCount,curveCount - len);
		} else if(len < curveCount) {
			while(len < curveCount) {
				this1.push(0);
				++len;
			}
		}
		var curves = this1;
		var pathLength = 0;
		var x1 = world[0];
		var y1 = world[1];
		var cx1 = 0;
		var cy1 = 0;
		var cx2 = 0;
		var cy2 = 0;
		var x2 = 0;
		var y2 = 0;
		var tmpx = 0;
		var tmpy = 0;
		var dddfx = 0;
		var dddfy = 0;
		var ddfx = 0;
		var ddfy = 0;
		var dfx = 0;
		var dfy = 0;
		var i = 0;
		var w = 2;
		while(i < curveCount) {
			cx1 = world[w];
			cy1 = world[w + 1];
			cx2 = world[w + 2];
			cy2 = world[w + 3];
			x2 = world[w + 4];
			y2 = world[w + 5];
			tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;
			tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;
			dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;
			dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;
			ddfx = tmpx * 2 + dddfx;
			ddfy = tmpy * 2 + dddfy;
			dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;
			dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;
			pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
			dfx += ddfx;
			dfy += ddfy;
			ddfx += dddfx;
			ddfy += dddfy;
			pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
			dfx += ddfx;
			dfy += ddfy;
			pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
			dfx += ddfx + dddfx;
			dfy += ddfy + dddfy;
			pathLength += Math.sqrt(dfx * dfx + dfy * dfy);
			curves[i] = pathLength;
			x1 = x2;
			y1 = y2;
			++i;
			w += 6;
		}
		if(this.data.positionMode == 1) {
			position *= pathLength;
		}
		var multiplier = 0;
		var _continueAfterSwitch2 = false;
		while(true) {
			var _switchCond2 = this.data.spacingMode;
			if(_switchCond2 == 2) {
				multiplier = pathLength;
				break;
			} else if(_switchCond2 == 3) {
				multiplier = pathLength / spacesCount;
				break;
			} else {
				multiplier = 1;
			}
			break;
		}
		var segments = this.segments;
		var curveLength = 0;
		var i = 0;
		var o = 0;
		var curve = 0;
		var segment = 0;
		while(i < spacesCount) {
			var space = spaces[i] * multiplier;
			var p = position += space;
			if(closed) {
				p %= pathLength;
				if(p < 0) {
					p += pathLength;
				}
				curve = 0;
			} else if(p < 0) {
				var x11 = world[0];
				var y11 = world[1];
				var dx = world[2] - x11;
				var dy = world[3] - y11;
				var r = Math.atan2(dy,dx);
				out[o] = x11 + p * Math.cos(r);
				out[o + 1] = y11 + p * Math.sin(r);
				out[o + 2] = r;
				++i;
				o += 3;
				continue;
			} else if(p > pathLength) {
				var p1 = p - pathLength;
				var i1 = verticesLength - 4;
				var x12 = world[i1 + 2];
				var y12 = world[i1 + 3];
				var dx1 = x12 - world[i1];
				var dy1 = y12 - world[i1 + 1];
				var r1 = Math.atan2(dy1,dx1);
				out[o] = x12 + p1 * Math.cos(r1);
				out[o + 1] = y12 + p1 * Math.sin(r1);
				out[o + 2] = r1;
				++i;
				o += 3;
				continue;
			}
			while(true) {
				var length = curves[curve];
				if(p > length) {
					++curve;
					continue;
				}
				if(curve == 0) {
					p /= length;
				} else {
					var prev = curves[curve - 1];
					p = (p - prev) / (length - prev);
				}
				break;
			}
			if(curve != prevCurve) {
				prevCurve = curve;
				var ii = curve * 6;
				x1 = world[ii];
				y1 = world[ii + 1];
				cx1 = world[ii + 2];
				cy1 = world[ii + 3];
				cx2 = world[ii + 4];
				cy2 = world[ii + 5];
				x2 = world[ii + 6];
				y2 = world[ii + 7];
				tmpx = (x1 - cx1 * 2 + cx2) * 0.03;
				tmpy = (y1 - cy1 * 2 + cy2) * 0.03;
				dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;
				dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;
				ddfx = tmpx * 2 + dddfx;
				ddfy = tmpy * 2 + dddfy;
				dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;
				dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;
				curveLength = Math.sqrt(dfx * dfx + dfy * dfy);
				segments[0] = curveLength;
				ii = 1;
				while(ii < 8) {
					dfx += ddfx;
					dfy += ddfy;
					ddfx += dddfx;
					ddfy += dddfy;
					curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
					segments[ii] = curveLength;
					++ii;
				}
				dfx += ddfx;
				dfy += ddfy;
				curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
				segments[8] = curveLength;
				dfx += ddfx + dddfx;
				dfy += ddfy + dddfy;
				curveLength += Math.sqrt(dfx * dfx + dfy * dfy);
				segments[9] = curveLength;
				segment = 0;
			}
			p *= curveLength;
			while(true) {
				var length1 = segments[segment];
				if(p > length1) {
					++segment;
					continue;
				}
				if(segment == 0) {
					p /= length1;
				} else {
					var prev1 = segments[segment - 1];
					p = segment + (p - prev1) / (length1 - prev1);
				}
				break;
			}
			var p2 = p * 0.1;
			var tangents1 = tangents || i > 0 && space < spine_PathConstraint.epsilon;
			if(p2 < spine_PathConstraint.epsilon || isNaN(p2)) {
				out[o] = x1;
				out[o + 1] = y1;
				out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
			} else {
				var tt = p2 * p2;
				var ttt = tt * p2;
				var u = 1 - p2;
				var uu = u * u;
				var uuu = uu * u;
				var ut = u * p2;
				var ut3 = ut * 3;
				var uut3 = u * ut3;
				var utt3 = ut3 * p2;
				var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt;
				var y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;
				out[o] = x;
				out[o + 1] = y;
				if(tangents1) {
					if(p2 < 0.001) {
						out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
					} else {
						out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt),x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));
					}
				}
			}
			++i;
			o += 3;
		}
		return out;
	}
	,addBeforePosition: function(p,temp,i,out,o) {
		var x1 = temp[i];
		var y1 = temp[i + 1];
		var dx = temp[i + 2] - x1;
		var dy = temp[i + 3] - y1;
		var r = Math.atan2(dy,dx);
		out[o] = x1 + p * Math.cos(r);
		out[o + 1] = y1 + p * Math.sin(r);
		out[o + 2] = r;
	}
	,addAfterPosition: function(p,temp,i,out,o) {
		var x1 = temp[i + 2];
		var y1 = temp[i + 3];
		var dx = x1 - temp[i];
		var dy = y1 - temp[i + 1];
		var r = Math.atan2(dy,dx);
		out[o] = x1 + p * Math.cos(r);
		out[o + 1] = y1 + p * Math.sin(r);
		out[o + 2] = r;
	}
	,addCurvePosition: function(p,x1,y1,cx1,cy1,cx2,cy2,x2,y2,out,o,tangents) {
		if(p < spine_PathConstraint.epsilon || isNaN(p)) {
			out[o] = x1;
			out[o + 1] = y1;
			out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
			return;
		}
		var tt = p * p;
		var ttt = tt * p;
		var u = 1 - p;
		var uu = u * u;
		var uuu = uu * u;
		var ut = u * p;
		var ut3 = ut * 3;
		var uut3 = u * ut3;
		var utt3 = ut3 * p;
		var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt;
		var y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;
		out[o] = x;
		out[o + 1] = y;
		if(tangents) {
			if(p < 0.001) {
				out[o + 2] = Math.atan2(cy1 - y1,cx1 - x1);
			} else {
				out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt),x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));
			}
		}
	}
	,getPosition: function() {
		return this.position;
	}
	,setPosition: function(position) {
		this.position = position;
	}
	,getSpacing: function() {
		return this.spacing;
	}
	,setSpacing: function(spacing) {
		this.spacing = spacing;
	}
	,getMixRotate: function() {
		return this.mixRotate;
	}
	,setMixRotate: function(mixRotate) {
		this.mixRotate = mixRotate;
	}
	,getMixX: function() {
		return this.mixX;
	}
	,setMixX: function(mixX) {
		this.mixX = mixX;
	}
	,getMixY: function() {
		return this.mixY;
	}
	,setMixY: function(mixY) {
		this.mixY = mixY;
	}
	,getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,isActive: function() {
		return this.active;
	}
	,getData: function() {
		return this.data;
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_PathConstraint
};
var spine_PathConstraintData = function(name) {
	this.mixY = 0;
	this.mixX = 0;
	this.mixRotate = 0;
	this.spacing = 0;
	this.position = 0;
	this.offsetRotation = 0;
	var this1 = [];
	this.bones = this1;
	spine_ConstraintData.call(this,name);
};
$hxClasses["spine.PathConstraintData"] = spine_PathConstraintData;
spine_PathConstraintData.__name__ = "spine.PathConstraintData";
spine_PathConstraintData.__super__ = spine_ConstraintData;
spine_PathConstraintData.prototype = $extend(spine_ConstraintData.prototype,{
	getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,getPositionMode: function() {
		return this.positionMode;
	}
	,setPositionMode: function(positionMode) {
		this.positionMode = positionMode;
	}
	,getSpacingMode: function() {
		return this.spacingMode;
	}
	,setSpacingMode: function(spacingMode) {
		this.spacingMode = spacingMode;
	}
	,getRotateMode: function() {
		return this.rotateMode;
	}
	,setRotateMode: function(rotateMode) {
		this.rotateMode = rotateMode;
	}
	,getOffsetRotation: function() {
		return this.offsetRotation;
	}
	,setOffsetRotation: function(offsetRotation) {
		this.offsetRotation = offsetRotation;
	}
	,getPosition: function() {
		return this.position;
	}
	,setPosition: function(position) {
		this.position = position;
	}
	,getSpacing: function() {
		return this.spacing;
	}
	,setSpacing: function(spacing) {
		this.spacing = spacing;
	}
	,getMixRotate: function() {
		return this.mixRotate;
	}
	,setMixRotate: function(mixRotate) {
		this.mixRotate = mixRotate;
	}
	,getMixX: function() {
		return this.mixX;
	}
	,setMixX: function(mixX) {
		this.mixX = mixX;
	}
	,getMixY: function() {
		return this.mixY;
	}
	,setMixY: function(mixY) {
		this.mixY = mixY;
	}
	,__class__: spine_PathConstraintData
});
var spine_PositionMode_$enum = function() { };
$hxClasses["spine.PositionMode_enum"] = spine_PositionMode_$enum;
spine_PositionMode_$enum.__name__ = "spine.PositionMode_enum";
spine_PositionMode_$enum.valueOf = function(value) {
	switch(value) {
	case "fixed":
		return 0;
	case "percent":
		return 1;
	default:
		return 0;
	}
};
var spine_SpacingMode_$enum = function() { };
$hxClasses["spine.SpacingMode_enum"] = spine_SpacingMode_$enum;
spine_SpacingMode_$enum.__name__ = "spine.SpacingMode_enum";
spine_SpacingMode_$enum.valueOf = function(value) {
	switch(value) {
	case "fixed":
		return 1;
	case "length":
		return 0;
	case "percent":
		return 2;
	case "proportional":
		return 3;
	default:
		return 0;
	}
};
var spine_RotateMode_$enum = function() { };
$hxClasses["spine.RotateMode_enum"] = spine_RotateMode_$enum;
spine_RotateMode_$enum.__name__ = "spine.RotateMode_enum";
spine_RotateMode_$enum.valueOf = function(value) {
	switch(value) {
	case "chain":
		return 1;
	case "chainScale":
		return 2;
	case "tangent":
		return 0;
	default:
		return 0;
	}
};
var spine_Skeleton = function(data) {
	this.y = 0;
	this.x = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.time = 0;
	var this1 = [];
	this.cache = this1;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	this.data = data;
	var capacity = data.bones.length;
	var this1 = [];
	this.bones = this1;
	var bones = this.bones;
	var _g = 0;
	var _g1 = data.bones;
	while(_g < _g1.length) {
		var boneData = _g1[_g];
		++_g;
		var bone = null;
		if(boneData.parent == null) {
			bone = new spine_Bone(boneData,this,null);
		} else {
			var result = bones[boneData.parent.index];
			var parent = result;
			bone = new spine_Bone(boneData,this,parent);
			parent.children.push(bone);
		}
		this.bones.push(bone);
	}
	var capacity = data.slots.length;
	var this1 = [];
	this.slots = this1;
	var capacity = data.slots.length;
	var this1 = [];
	this.drawOrder = this1;
	var _g = 0;
	var _g1 = data.slots;
	while(_g < _g1.length) {
		var slotData = _g1[_g];
		++_g;
		var result = bones[slotData.boneData.index];
		var bone = result;
		var slot = new spine_Slot(slotData,bone);
		this.slots.push(slot);
		this.drawOrder.push(slot);
	}
	var capacity = data.ikConstraints.length;
	var this1 = [];
	this.ikConstraints = this1;
	var _g = 0;
	var _g1 = data.ikConstraints;
	while(_g < _g1.length) {
		var ikConstraintData = _g1[_g];
		++_g;
		this.ikConstraints.push(new spine_IkConstraint(ikConstraintData,this));
	}
	var capacity = data.transformConstraints.length;
	var this1 = [];
	this.transformConstraints = this1;
	var _g = 0;
	var _g1 = data.transformConstraints;
	while(_g < _g1.length) {
		var transformConstraintData = _g1[_g];
		++_g;
		this.transformConstraints.push(new spine_TransformConstraint(transformConstraintData,this));
	}
	var capacity = data.pathConstraints.length;
	var this1 = [];
	this.pathConstraints = this1;
	var _g = 0;
	var _g1 = data.pathConstraints;
	while(_g < _g1.length) {
		var pathConstraintData = _g1[_g];
		++_g;
		this.pathConstraints.push(new spine_PathConstraint(pathConstraintData,this));
	}
	this.color = new spine_support_graphics_Color(1,1,1,1);
	var cache = this.cache;
	cache.splice(0,cache.length);
	var boneCount = this.bones.length;
	var bones = this.bones;
	var i = 0;
	while(i < boneCount) {
		var result = bones[i];
		var bone = result;
		bone.sorted = bone.data.skinRequired;
		bone.active = !bone.sorted;
		++i;
	}
	if(this.skin != null) {
		var skinBones = this.skin.bones;
		var i = 0;
		var n = this.skin.bones.length;
		while(i < n) {
			var result = skinBones[i];
			var result1 = bones[result.index];
			var bone = result1;
			while(true) {
				bone.sorted = false;
				bone.active = true;
				bone = bone.parent;
				if(bone == null) {
					break;
				}
			}
			++i;
		}
	}
	var ikCount = this.ikConstraints.length;
	var transformCount = this.transformConstraints.length;
	var pathCount = this.pathConstraints.length;
	var ikConstraints = this.ikConstraints;
	var transformConstraints = this.transformConstraints;
	var pathConstraints = this.pathConstraints;
	var constraintCount = ikCount + transformCount + pathCount;
	var _gotoLabel_outer;
	while(true) {
		_gotoLabel_outer = 0;
		var i = 0;
		while(i < constraintCount) {
			var ii = 0;
			while(ii < ikCount) {
				var result = ikConstraints[ii];
				var constraint = result;
				if(constraint.data.order == i) {
					constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
					if(constraint.active) {
						var target = constraint.target;
						if(!target.sorted) {
							var parent = target.parent;
							if(parent != null) {
								if(!parent.sorted) {
									var parent1 = parent.parent;
									if(parent1 != null) {
										this.sortBone(parent1);
									}
									parent.sorted = true;
									this.cache.push(parent);
								}
							}
							target.sorted = true;
							this.cache.push(target);
						}
						var constrained = constraint.bones;
						var parent2 = constrained.length > 0 ? constrained[0] : null;
						if(!parent2.sorted) {
							var parent3 = parent2.parent;
							if(parent3 != null) {
								if(!parent3.sorted) {
									var parent4 = parent3.parent;
									if(parent4 != null) {
										this.sortBone(parent4);
									}
									parent3.sorted = true;
									this.cache.push(parent3);
								}
							}
							parent2.sorted = true;
							this.cache.push(parent2);
						}
						if(constrained.length == 1) {
							this.cache.push(constraint);
							var bones1 = parent2.children;
							var items = bones1;
							var i1 = 0;
							var n = bones1.length;
							while(i1 < n) {
								var result1 = items[i1];
								var bone = result1;
								if(!bone.active) {
									++i1;
									continue;
								}
								if(bone.sorted) {
									var bones2 = bone.children;
									var items1 = bones2;
									var i2 = 0;
									var n1 = bones2.length;
									while(i2 < n1) {
										var result2 = items1[i2];
										var bone1 = result2;
										if(!bone1.active) {
											++i2;
											continue;
										}
										if(bone1.sorted) {
											this.sortReset(bone1.children);
										}
										bone1.sorted = false;
										++i2;
									}
								}
								bone.sorted = false;
								++i1;
							}
						} else {
							var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
							if(!child.sorted) {
								var parent5 = child.parent;
								if(parent5 != null) {
									if(!parent5.sorted) {
										var parent6 = parent5.parent;
										if(parent6 != null) {
											this.sortBone(parent6);
										}
										parent5.sorted = true;
										this.cache.push(parent5);
									}
								}
								child.sorted = true;
								this.cache.push(child);
							}
							this.cache.push(constraint);
							var bones3 = parent2.children;
							var items2 = bones3;
							var i3 = 0;
							var n2 = bones3.length;
							while(i3 < n2) {
								var result3 = items2[i3];
								var bone2 = result3;
								if(!bone2.active) {
									++i3;
									continue;
								}
								if(bone2.sorted) {
									var bones4 = bone2.children;
									var items3 = bones4;
									var i4 = 0;
									var n3 = bones4.length;
									while(i4 < n3) {
										var result4 = items3[i4];
										var bone3 = result4;
										if(!bone3.active) {
											++i4;
											continue;
										}
										if(bone3.sorted) {
											this.sortReset(bone3.children);
										}
										bone3.sorted = false;
										++i4;
									}
								}
								bone2.sorted = false;
								++i3;
							}
							child.sorted = true;
						}
					}
					++ii;
					_gotoLabel_outer = 2;
					break;
				}
				++ii;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			var ii1 = 0;
			while(ii1 < transformCount) {
				var result5 = transformConstraints[ii1];
				var constraint1 = result5;
				if(constraint1.data.order == i) {
					constraint1.active = constraint1.target.active && (!constraint1.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint1.data) != -1);
					if(constraint1.active) {
						var bone4 = constraint1.target;
						if(!bone4.sorted) {
							var parent7 = bone4.parent;
							if(parent7 != null) {
								if(!parent7.sorted) {
									var parent8 = parent7.parent;
									if(parent8 != null) {
										this.sortBone(parent8);
									}
									parent7.sorted = true;
									this.cache.push(parent7);
								}
							}
							bone4.sorted = true;
							this.cache.push(bone4);
						}
						var constrained1 = constraint1.bones;
						var boneCount1 = constraint1.bones.length;
						if(constraint1.data.local) {
							var i5 = 0;
							while(i5 < boneCount1) {
								var result6 = constrained1[i5];
								var child1 = result6;
								var bone5 = child1.parent;
								if(!bone5.sorted) {
									var parent9 = bone5.parent;
									if(parent9 != null) {
										if(!parent9.sorted) {
											var parent10 = parent9.parent;
											if(parent10 != null) {
												this.sortBone(parent10);
											}
											parent9.sorted = true;
											this.cache.push(parent9);
										}
									}
									bone5.sorted = true;
									this.cache.push(bone5);
								}
								if(!child1.sorted) {
									var parent11 = child1.parent;
									if(parent11 != null) {
										if(!parent11.sorted) {
											var parent12 = parent11.parent;
											if(parent12 != null) {
												this.sortBone(parent12);
											}
											parent11.sorted = true;
											this.cache.push(parent11);
										}
									}
									child1.sorted = true;
									this.cache.push(child1);
								}
								++i5;
							}
						} else {
							var i6 = 0;
							while(i6 < boneCount1) {
								var result7 = constrained1[i6];
								var bone6 = result7;
								if(!bone6.sorted) {
									var parent13 = bone6.parent;
									if(parent13 != null) {
										if(!parent13.sorted) {
											var parent14 = parent13.parent;
											if(parent14 != null) {
												this.sortBone(parent14);
											}
											parent13.sorted = true;
											this.cache.push(parent13);
										}
									}
									bone6.sorted = true;
									this.cache.push(bone6);
								}
								++i6;
							}
						}
						this.cache.push(constraint1);
						var i7 = 0;
						while(i7 < boneCount1) {
							var result8 = constrained1[i7];
							var bones5 = result8.children;
							var items4 = bones5;
							var i8 = 0;
							var n4 = bones5.length;
							while(i8 < n4) {
								var result9 = items4[i8];
								var bone7 = result9;
								if(!bone7.active) {
									++i8;
									continue;
								}
								if(bone7.sorted) {
									var bones6 = bone7.children;
									var items5 = bones6;
									var i9 = 0;
									var n5 = bones6.length;
									while(i9 < n5) {
										var result10 = items5[i9];
										var bone8 = result10;
										if(!bone8.active) {
											++i9;
											continue;
										}
										if(bone8.sorted) {
											this.sortReset(bone8.children);
										}
										bone8.sorted = false;
										++i9;
									}
								}
								bone7.sorted = false;
								++i8;
							}
							++i7;
						}
						var i10 = 0;
						while(i10 < boneCount1) {
							var result11 = constrained1[i10];
							result11.sorted = true;
							++i10;
						}
					}
					++ii1;
					_gotoLabel_outer = 2;
					break;
				}
				++ii1;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			var ii2 = 0;
			while(ii2 < pathCount) {
				var result12 = pathConstraints[ii2];
				var constraint2 = result12;
				if(constraint2.data.order == i) {
					constraint2.active = constraint2.target.bone.active && (!constraint2.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint2.data) != -1);
					if(constraint2.active) {
						var slot = constraint2.target;
						var slotIndex = slot.data.index;
						var slotBone = slot.bone;
						if(this.skin != null) {
							var skin = this.skin;
							var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
							var i11 = 0;
							var n6 = spine_support_utils_AttachmentSet.get_size(skin.attachments);
							while(i11 < n6) {
								var result13 = entries[i11];
								var entry = result13;
								if(entry.slotIndex == slotIndex) {
									var attachment = entry.attachment;
									if(((attachment) instanceof spine_attachments_PathAttachment)) {
										var result14 = attachment;
										var pathBones = result14.bones;
										if(pathBones == null) {
											if(!slotBone.sorted) {
												var parent15 = slotBone.parent;
												if(parent15 != null) {
													if(!parent15.sorted) {
														var parent16 = parent15.parent;
														if(parent16 != null) {
															this.sortBone(parent16);
														}
														parent15.sorted = true;
														this.cache.push(parent15);
													}
												}
												slotBone.sorted = true;
												this.cache.push(slotBone);
											}
										} else {
											var bones7 = this.bones;
											var i12 = 0;
											var n7 = pathBones.length;
											while(i12 < n7) {
												var nn = pathBones[i12++];
												nn += i12;
												while(i12 < nn) {
													var result15 = bones7[pathBones[i12++]];
													var bone9 = result15;
													if(!bone9.sorted) {
														var parent17 = bone9.parent;
														if(parent17 != null) {
															if(!parent17.sorted) {
																var parent18 = parent17.parent;
																if(parent18 != null) {
																	this.sortBone(parent18);
																}
																parent17.sorted = true;
																this.cache.push(parent17);
															}
														}
														bone9.sorted = true;
														this.cache.push(bone9);
													}
												}
											}
										}
									}
								}
								++i11;
							}
						}
						if(this.data.defaultSkin != null && this.data.defaultSkin != this.skin) {
							var skin1 = this.data.defaultSkin;
							var entries1 = spine_support_utils_AttachmentSet.orderedItems(skin1.attachments);
							var i13 = 0;
							var n8 = spine_support_utils_AttachmentSet.get_size(skin1.attachments);
							while(i13 < n8) {
								var result16 = entries1[i13];
								var entry1 = result16;
								if(entry1.slotIndex == slotIndex) {
									var attachment1 = entry1.attachment;
									if(((attachment1) instanceof spine_attachments_PathAttachment)) {
										var result17 = attachment1;
										var pathBones1 = result17.bones;
										if(pathBones1 == null) {
											if(!slotBone.sorted) {
												var parent19 = slotBone.parent;
												if(parent19 != null) {
													if(!parent19.sorted) {
														var parent20 = parent19.parent;
														if(parent20 != null) {
															this.sortBone(parent20);
														}
														parent19.sorted = true;
														this.cache.push(parent19);
													}
												}
												slotBone.sorted = true;
												this.cache.push(slotBone);
											}
										} else {
											var bones8 = this.bones;
											var i14 = 0;
											var n9 = pathBones1.length;
											while(i14 < n9) {
												var nn1 = pathBones1[i14++];
												nn1 += i14;
												while(i14 < nn1) {
													var result18 = bones8[pathBones1[i14++]];
													var bone10 = result18;
													if(!bone10.sorted) {
														var parent21 = bone10.parent;
														if(parent21 != null) {
															if(!parent21.sorted) {
																var parent22 = parent21.parent;
																if(parent22 != null) {
																	this.sortBone(parent22);
																}
																parent21.sorted = true;
																this.cache.push(parent21);
															}
														}
														bone10.sorted = true;
														this.cache.push(bone10);
													}
												}
											}
										}
									}
								}
								++i13;
							}
						}
						var attachment2 = slot.attachment;
						if(((attachment2) instanceof spine_attachments_PathAttachment)) {
							if(((attachment2) instanceof spine_attachments_PathAttachment)) {
								var result19 = attachment2;
								var pathBones2 = result19.bones;
								if(pathBones2 == null) {
									if(!slotBone.sorted) {
										var parent23 = slotBone.parent;
										if(parent23 != null) {
											if(!parent23.sorted) {
												var parent24 = parent23.parent;
												if(parent24 != null) {
													this.sortBone(parent24);
												}
												parent23.sorted = true;
												this.cache.push(parent23);
											}
										}
										slotBone.sorted = true;
										this.cache.push(slotBone);
									}
								} else {
									var bones9 = this.bones;
									var i15 = 0;
									var n10 = pathBones2.length;
									while(i15 < n10) {
										var nn2 = pathBones2[i15++];
										nn2 += i15;
										while(i15 < nn2) {
											var result20 = bones9[pathBones2[i15++]];
											var bone11 = result20;
											if(!bone11.sorted) {
												var parent25 = bone11.parent;
												if(parent25 != null) {
													if(!parent25.sorted) {
														var parent26 = parent25.parent;
														if(parent26 != null) {
															this.sortBone(parent26);
														}
														parent25.sorted = true;
														this.cache.push(parent25);
													}
												}
												bone11.sorted = true;
												this.cache.push(bone11);
											}
										}
									}
								}
							}
						}
						var constrained2 = constraint2.bones;
						var boneCount2 = constraint2.bones.length;
						var i16 = 0;
						while(i16 < boneCount2) {
							var result21 = constrained2[i16];
							var bone12 = result21;
							if(!bone12.sorted) {
								var parent27 = bone12.parent;
								if(parent27 != null) {
									if(!parent27.sorted) {
										var parent28 = parent27.parent;
										if(parent28 != null) {
											this.sortBone(parent28);
										}
										parent27.sorted = true;
										this.cache.push(parent27);
									}
								}
								bone12.sorted = true;
								this.cache.push(bone12);
							}
							++i16;
						}
						this.cache.push(constraint2);
						var i17 = 0;
						while(i17 < boneCount2) {
							var result22 = constrained2[i17];
							var bones10 = result22.children;
							var items6 = bones10;
							var i18 = 0;
							var n11 = bones10.length;
							while(i18 < n11) {
								var result23 = items6[i18];
								var bone13 = result23;
								if(!bone13.active) {
									++i18;
									continue;
								}
								if(bone13.sorted) {
									var bones11 = bone13.children;
									var items7 = bones11;
									var i19 = 0;
									var n12 = bones11.length;
									while(i19 < n12) {
										var result24 = items7[i19];
										var bone14 = result24;
										if(!bone14.active) {
											++i19;
											continue;
										}
										if(bone14.sorted) {
											this.sortReset(bone14.children);
										}
										bone14.sorted = false;
										++i19;
									}
								}
								bone13.sorted = false;
								++i18;
							}
							++i17;
						}
						var i20 = 0;
						while(i20 < boneCount2) {
							var result25 = constrained2[i20];
							result25.sorted = true;
							++i20;
						}
					}
					++ii2;
					_gotoLabel_outer = 2;
					break;
				}
				++ii2;
			}
			if(_gotoLabel_outer == 2) {
				_gotoLabel_outer = 0;
				++i;
				continue;
			}
			if(_gotoLabel_outer >= 1) {
				break;
			}
			++i;
		}
		if(_gotoLabel_outer == 0) {
			break;
		}
	}
	var i = 0;
	while(i < boneCount) {
		var result = bones[i];
		var bone = result;
		if(!bone.sorted) {
			var parent = bone.parent;
			if(parent != null) {
				if(!parent.sorted) {
					var parent1 = parent.parent;
					if(parent1 != null) {
						this.sortBone(parent1);
					}
					parent.sorted = true;
					this.cache.push(parent);
				}
			}
			bone.sorted = true;
			this.cache.push(bone);
		}
		++i;
	}
};
$hxClasses["spine.Skeleton"] = spine_Skeleton;
spine_Skeleton.__name__ = "spine.Skeleton";
spine_Skeleton.prototype = {
	updateCache: function() {
		var cache = this.cache;
		cache.splice(0,cache.length);
		var boneCount = this.bones.length;
		var bones = this.bones;
		var i = 0;
		while(i < boneCount) {
			var result = bones[i];
			var bone = result;
			bone.sorted = bone.data.skinRequired;
			bone.active = !bone.sorted;
			++i;
		}
		if(this.skin != null) {
			var skinBones = this.skin.bones;
			var i = 0;
			var n = this.skin.bones.length;
			while(i < n) {
				var result = skinBones[i];
				var result1 = bones[result.index];
				var bone = result1;
				while(true) {
					bone.sorted = false;
					bone.active = true;
					bone = bone.parent;
					if(!(bone != null)) {
						break;
					}
				}
				++i;
			}
		}
		var ikCount = this.ikConstraints.length;
		var transformCount = this.transformConstraints.length;
		var pathCount = this.pathConstraints.length;
		var ikConstraints = this.ikConstraints;
		var transformConstraints = this.transformConstraints;
		var pathConstraints = this.pathConstraints;
		var constraintCount = ikCount + transformCount + pathCount;
		var _gotoLabel_outer;
		while(true) {
			_gotoLabel_outer = 0;
			var i = 0;
			while(i < constraintCount) {
				var ii = 0;
				while(ii < ikCount) {
					var result = ikConstraints[ii];
					var constraint = result;
					if(constraint.data.order == i) {
						constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
						if(constraint.active) {
							var target = constraint.target;
							if(!target.sorted) {
								var parent = target.parent;
								if(parent != null) {
									if(!parent.sorted) {
										var parent1 = parent.parent;
										if(parent1 != null) {
											this.sortBone(parent1);
										}
										parent.sorted = true;
										this.cache.push(parent);
									}
								}
								target.sorted = true;
								this.cache.push(target);
							}
							var constrained = constraint.bones;
							var parent2 = constrained.length > 0 ? constrained[0] : null;
							if(!parent2.sorted) {
								var parent3 = parent2.parent;
								if(parent3 != null) {
									if(!parent3.sorted) {
										var parent4 = parent3.parent;
										if(parent4 != null) {
											this.sortBone(parent4);
										}
										parent3.sorted = true;
										this.cache.push(parent3);
									}
								}
								parent2.sorted = true;
								this.cache.push(parent2);
							}
							if(constrained.length == 1) {
								this.cache.push(constraint);
								var bones1 = parent2.children;
								var items = bones1;
								var i1 = 0;
								var n = bones1.length;
								while(i1 < n) {
									var result1 = items[i1];
									var bone = result1;
									if(!bone.active) {
										++i1;
										continue;
									}
									if(bone.sorted) {
										var bones2 = bone.children;
										var items1 = bones2;
										var i2 = 0;
										var n1 = bones2.length;
										while(i2 < n1) {
											var result2 = items1[i2];
											var bone1 = result2;
											if(!bone1.active) {
												++i2;
												continue;
											}
											if(bone1.sorted) {
												this.sortReset(bone1.children);
											}
											bone1.sorted = false;
											++i2;
										}
									}
									bone.sorted = false;
									++i1;
								}
							} else {
								var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
								if(!child.sorted) {
									var parent5 = child.parent;
									if(parent5 != null) {
										if(!parent5.sorted) {
											var parent6 = parent5.parent;
											if(parent6 != null) {
												this.sortBone(parent6);
											}
											parent5.sorted = true;
											this.cache.push(parent5);
										}
									}
									child.sorted = true;
									this.cache.push(child);
								}
								this.cache.push(constraint);
								var bones3 = parent2.children;
								var items2 = bones3;
								var i3 = 0;
								var n2 = bones3.length;
								while(i3 < n2) {
									var result3 = items2[i3];
									var bone2 = result3;
									if(!bone2.active) {
										++i3;
										continue;
									}
									if(bone2.sorted) {
										var bones4 = bone2.children;
										var items3 = bones4;
										var i4 = 0;
										var n3 = bones4.length;
										while(i4 < n3) {
											var result4 = items3[i4];
											var bone3 = result4;
											if(!bone3.active) {
												++i4;
												continue;
											}
											if(bone3.sorted) {
												this.sortReset(bone3.children);
											}
											bone3.sorted = false;
											++i4;
										}
									}
									bone2.sorted = false;
									++i3;
								}
								child.sorted = true;
							}
						}
						++ii;
						_gotoLabel_outer = 2;
						break;
					}
					++ii;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				var ii1 = 0;
				while(ii1 < transformCount) {
					var result5 = transformConstraints[ii1];
					var constraint1 = result5;
					if(constraint1.data.order == i) {
						constraint1.active = constraint1.target.active && (!constraint1.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint1.data) != -1);
						if(constraint1.active) {
							var bone4 = constraint1.target;
							if(!bone4.sorted) {
								var parent7 = bone4.parent;
								if(parent7 != null) {
									if(!parent7.sorted) {
										var parent8 = parent7.parent;
										if(parent8 != null) {
											this.sortBone(parent8);
										}
										parent7.sorted = true;
										this.cache.push(parent7);
									}
								}
								bone4.sorted = true;
								this.cache.push(bone4);
							}
							var constrained1 = constraint1.bones;
							var boneCount1 = constraint1.bones.length;
							if(constraint1.data.local) {
								var i5 = 0;
								while(i5 < boneCount1) {
									var result6 = constrained1[i5];
									var child1 = result6;
									var bone5 = child1.parent;
									if(!bone5.sorted) {
										var parent9 = bone5.parent;
										if(parent9 != null) {
											if(!parent9.sorted) {
												var parent10 = parent9.parent;
												if(parent10 != null) {
													this.sortBone(parent10);
												}
												parent9.sorted = true;
												this.cache.push(parent9);
											}
										}
										bone5.sorted = true;
										this.cache.push(bone5);
									}
									if(!child1.sorted) {
										var parent11 = child1.parent;
										if(parent11 != null) {
											if(!parent11.sorted) {
												var parent12 = parent11.parent;
												if(parent12 != null) {
													this.sortBone(parent12);
												}
												parent11.sorted = true;
												this.cache.push(parent11);
											}
										}
										child1.sorted = true;
										this.cache.push(child1);
									}
									++i5;
								}
							} else {
								var i6 = 0;
								while(i6 < boneCount1) {
									var result7 = constrained1[i6];
									var bone6 = result7;
									if(!bone6.sorted) {
										var parent13 = bone6.parent;
										if(parent13 != null) {
											if(!parent13.sorted) {
												var parent14 = parent13.parent;
												if(parent14 != null) {
													this.sortBone(parent14);
												}
												parent13.sorted = true;
												this.cache.push(parent13);
											}
										}
										bone6.sorted = true;
										this.cache.push(bone6);
									}
									++i6;
								}
							}
							this.cache.push(constraint1);
							var i7 = 0;
							while(i7 < boneCount1) {
								var result8 = constrained1[i7];
								var bones5 = result8.children;
								var items4 = bones5;
								var i8 = 0;
								var n4 = bones5.length;
								while(i8 < n4) {
									var result9 = items4[i8];
									var bone7 = result9;
									if(!bone7.active) {
										++i8;
										continue;
									}
									if(bone7.sorted) {
										var bones6 = bone7.children;
										var items5 = bones6;
										var i9 = 0;
										var n5 = bones6.length;
										while(i9 < n5) {
											var result10 = items5[i9];
											var bone8 = result10;
											if(!bone8.active) {
												++i9;
												continue;
											}
											if(bone8.sorted) {
												this.sortReset(bone8.children);
											}
											bone8.sorted = false;
											++i9;
										}
									}
									bone7.sorted = false;
									++i8;
								}
								++i7;
							}
							var i10 = 0;
							while(i10 < boneCount1) {
								var result11 = constrained1[i10];
								result11.sorted = true;
								++i10;
							}
						}
						++ii1;
						_gotoLabel_outer = 2;
						break;
					}
					++ii1;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				var ii2 = 0;
				while(ii2 < pathCount) {
					var result12 = pathConstraints[ii2];
					var constraint2 = result12;
					if(constraint2.data.order == i) {
						constraint2.active = constraint2.target.bone.active && (!constraint2.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint2.data) != -1);
						if(constraint2.active) {
							var slot = constraint2.target;
							var slotIndex = slot.data.index;
							var slotBone = slot.bone;
							if(this.skin != null) {
								var skin = this.skin;
								var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
								var i11 = 0;
								var n6 = spine_support_utils_AttachmentSet.get_size(skin.attachments);
								while(i11 < n6) {
									var result13 = entries[i11];
									var entry = result13;
									if(entry.slotIndex == slotIndex) {
										var attachment = entry.attachment;
										if(((attachment) instanceof spine_attachments_PathAttachment)) {
											var result14 = attachment;
											var pathBones = result14.bones;
											if(pathBones == null) {
												if(!slotBone.sorted) {
													var parent15 = slotBone.parent;
													if(parent15 != null) {
														if(!parent15.sorted) {
															var parent16 = parent15.parent;
															if(parent16 != null) {
																this.sortBone(parent16);
															}
															parent15.sorted = true;
															this.cache.push(parent15);
														}
													}
													slotBone.sorted = true;
													this.cache.push(slotBone);
												}
											} else {
												var bones7 = this.bones;
												var i12 = 0;
												var n7 = pathBones.length;
												while(i12 < n7) {
													var nn = pathBones[i12++];
													nn += i12;
													while(i12 < nn) {
														var result15 = bones7[pathBones[i12++]];
														var bone9 = result15;
														if(!bone9.sorted) {
															var parent17 = bone9.parent;
															if(parent17 != null) {
																if(!parent17.sorted) {
																	var parent18 = parent17.parent;
																	if(parent18 != null) {
																		this.sortBone(parent18);
																	}
																	parent17.sorted = true;
																	this.cache.push(parent17);
																}
															}
															bone9.sorted = true;
															this.cache.push(bone9);
														}
													}
												}
											}
										}
									}
									++i11;
								}
							}
							if(this.data.defaultSkin != null && this.data.defaultSkin != this.skin) {
								var skin1 = this.data.defaultSkin;
								var entries1 = spine_support_utils_AttachmentSet.orderedItems(skin1.attachments);
								var i13 = 0;
								var n8 = spine_support_utils_AttachmentSet.get_size(skin1.attachments);
								while(i13 < n8) {
									var result16 = entries1[i13];
									var entry1 = result16;
									if(entry1.slotIndex == slotIndex) {
										var attachment1 = entry1.attachment;
										if(((attachment1) instanceof spine_attachments_PathAttachment)) {
											var result17 = attachment1;
											var pathBones1 = result17.bones;
											if(pathBones1 == null) {
												if(!slotBone.sorted) {
													var parent19 = slotBone.parent;
													if(parent19 != null) {
														if(!parent19.sorted) {
															var parent20 = parent19.parent;
															if(parent20 != null) {
																this.sortBone(parent20);
															}
															parent19.sorted = true;
															this.cache.push(parent19);
														}
													}
													slotBone.sorted = true;
													this.cache.push(slotBone);
												}
											} else {
												var bones8 = this.bones;
												var i14 = 0;
												var n9 = pathBones1.length;
												while(i14 < n9) {
													var nn1 = pathBones1[i14++];
													nn1 += i14;
													while(i14 < nn1) {
														var result18 = bones8[pathBones1[i14++]];
														var bone10 = result18;
														if(!bone10.sorted) {
															var parent21 = bone10.parent;
															if(parent21 != null) {
																if(!parent21.sorted) {
																	var parent22 = parent21.parent;
																	if(parent22 != null) {
																		this.sortBone(parent22);
																	}
																	parent21.sorted = true;
																	this.cache.push(parent21);
																}
															}
															bone10.sorted = true;
															this.cache.push(bone10);
														}
													}
												}
											}
										}
									}
									++i13;
								}
							}
							var attachment2 = slot.attachment;
							if(((attachment2) instanceof spine_attachments_PathAttachment)) {
								if(((attachment2) instanceof spine_attachments_PathAttachment)) {
									var result19 = attachment2;
									var pathBones2 = result19.bones;
									if(pathBones2 == null) {
										if(!slotBone.sorted) {
											var parent23 = slotBone.parent;
											if(parent23 != null) {
												if(!parent23.sorted) {
													var parent24 = parent23.parent;
													if(parent24 != null) {
														this.sortBone(parent24);
													}
													parent23.sorted = true;
													this.cache.push(parent23);
												}
											}
											slotBone.sorted = true;
											this.cache.push(slotBone);
										}
									} else {
										var bones9 = this.bones;
										var i15 = 0;
										var n10 = pathBones2.length;
										while(i15 < n10) {
											var nn2 = pathBones2[i15++];
											nn2 += i15;
											while(i15 < nn2) {
												var result20 = bones9[pathBones2[i15++]];
												var bone11 = result20;
												if(!bone11.sorted) {
													var parent25 = bone11.parent;
													if(parent25 != null) {
														if(!parent25.sorted) {
															var parent26 = parent25.parent;
															if(parent26 != null) {
																this.sortBone(parent26);
															}
															parent25.sorted = true;
															this.cache.push(parent25);
														}
													}
													bone11.sorted = true;
													this.cache.push(bone11);
												}
											}
										}
									}
								}
							}
							var constrained2 = constraint2.bones;
							var boneCount2 = constraint2.bones.length;
							var i16 = 0;
							while(i16 < boneCount2) {
								var result21 = constrained2[i16];
								var bone12 = result21;
								if(!bone12.sorted) {
									var parent27 = bone12.parent;
									if(parent27 != null) {
										if(!parent27.sorted) {
											var parent28 = parent27.parent;
											if(parent28 != null) {
												this.sortBone(parent28);
											}
											parent27.sorted = true;
											this.cache.push(parent27);
										}
									}
									bone12.sorted = true;
									this.cache.push(bone12);
								}
								++i16;
							}
							this.cache.push(constraint2);
							var i17 = 0;
							while(i17 < boneCount2) {
								var result22 = constrained2[i17];
								var bones10 = result22.children;
								var items6 = bones10;
								var i18 = 0;
								var n11 = bones10.length;
								while(i18 < n11) {
									var result23 = items6[i18];
									var bone13 = result23;
									if(!bone13.active) {
										++i18;
										continue;
									}
									if(bone13.sorted) {
										var bones11 = bone13.children;
										var items7 = bones11;
										var i19 = 0;
										var n12 = bones11.length;
										while(i19 < n12) {
											var result24 = items7[i19];
											var bone14 = result24;
											if(!bone14.active) {
												++i19;
												continue;
											}
											if(bone14.sorted) {
												this.sortReset(bone14.children);
											}
											bone14.sorted = false;
											++i19;
										}
									}
									bone13.sorted = false;
									++i18;
								}
								++i17;
							}
							var i20 = 0;
							while(i20 < boneCount2) {
								var result25 = constrained2[i20];
								result25.sorted = true;
								++i20;
							}
						}
						++ii2;
						_gotoLabel_outer = 2;
						break;
					}
					++ii2;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				++i;
			}
			if(_gotoLabel_outer == 0) {
				break;
			}
		}
		var i = 0;
		while(i < boneCount) {
			var result = bones[i];
			var bone = result;
			if(!bone.sorted) {
				var parent = bone.parent;
				if(parent != null) {
					if(!parent.sorted) {
						var parent1 = parent.parent;
						if(parent1 != null) {
							this.sortBone(parent1);
						}
						parent.sorted = true;
						this.cache.push(parent);
					}
				}
				bone.sorted = true;
				this.cache.push(bone);
			}
			++i;
		}
	}
	,sortIkConstraint: function(constraint) {
		constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
		if(!constraint.active) {
			return;
		}
		var target = constraint.target;
		if(!target.sorted) {
			var parent = target.parent;
			if(parent != null) {
				if(!parent.sorted) {
					var parent1 = parent.parent;
					if(parent1 != null) {
						this.sortBone(parent1);
					}
					parent.sorted = true;
					this.cache.push(parent);
				}
			}
			target.sorted = true;
			this.cache.push(target);
		}
		var constrained = constraint.bones;
		var parent = constrained.length > 0 ? constrained[0] : null;
		if(!parent.sorted) {
			var parent1 = parent.parent;
			if(parent1 != null) {
				if(!parent1.sorted) {
					var parent2 = parent1.parent;
					if(parent2 != null) {
						this.sortBone(parent2);
					}
					parent1.sorted = true;
					this.cache.push(parent1);
				}
			}
			parent.sorted = true;
			this.cache.push(parent);
		}
		if(constrained.length == 1) {
			this.cache.push(constraint);
			var bones = parent.children;
			var items = bones;
			var i = 0;
			var n = bones.length;
			while(i < n) {
				var result = items[i];
				var bone = result;
				if(!bone.active) {
					++i;
					continue;
				}
				if(bone.sorted) {
					var bones = bone.children;
					var items1 = bones;
					var i1 = 0;
					var n1 = bones.length;
					while(i1 < n1) {
						var result1 = items1[i1];
						var bone1 = result1;
						if(!bone1.active) {
							++i1;
							continue;
						}
						if(bone1.sorted) {
							this.sortReset(bone1.children);
						}
						bone1.sorted = false;
						++i1;
					}
				}
				bone.sorted = false;
				++i;
			}
		} else {
			var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
			if(!child.sorted) {
				var parent1 = child.parent;
				if(parent1 != null) {
					if(!parent1.sorted) {
						var parent2 = parent1.parent;
						if(parent2 != null) {
							this.sortBone(parent2);
						}
						parent1.sorted = true;
						this.cache.push(parent1);
					}
				}
				child.sorted = true;
				this.cache.push(child);
			}
			this.cache.push(constraint);
			var bones = parent.children;
			var items = bones;
			var i = 0;
			var n = bones.length;
			while(i < n) {
				var result = items[i];
				var bone = result;
				if(!bone.active) {
					++i;
					continue;
				}
				if(bone.sorted) {
					var bones = bone.children;
					var items1 = bones;
					var i1 = 0;
					var n1 = bones.length;
					while(i1 < n1) {
						var result1 = items1[i1];
						var bone1 = result1;
						if(!bone1.active) {
							++i1;
							continue;
						}
						if(bone1.sorted) {
							this.sortReset(bone1.children);
						}
						bone1.sorted = false;
						++i1;
					}
				}
				bone.sorted = false;
				++i;
			}
			child.sorted = true;
		}
	}
	,sortPathConstraint: function(constraint) {
		constraint.active = constraint.target.bone.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
		if(!constraint.active) {
			return;
		}
		var slot = constraint.target;
		var slotIndex = slot.data.index;
		var slotBone = slot.bone;
		if(this.skin != null) {
			var skin = this.skin;
			var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
			var i = 0;
			var n = spine_support_utils_AttachmentSet.get_size(skin.attachments);
			while(i < n) {
				var result = entries[i];
				var entry = result;
				if(entry.slotIndex == slotIndex) {
					var attachment = entry.attachment;
					if(((attachment) instanceof spine_attachments_PathAttachment)) {
						var result1 = attachment;
						var pathBones = result1.bones;
						if(pathBones == null) {
							if(!slotBone.sorted) {
								var parent = slotBone.parent;
								if(parent != null) {
									if(!parent.sorted) {
										var parent1 = parent.parent;
										if(parent1 != null) {
											this.sortBone(parent1);
										}
										parent.sorted = true;
										this.cache.push(parent);
									}
								}
								slotBone.sorted = true;
								this.cache.push(slotBone);
							}
						} else {
							var bones = this.bones;
							var i1 = 0;
							var n1 = pathBones.length;
							while(i1 < n1) {
								var nn = pathBones[i1++];
								nn += i1;
								while(i1 < nn) {
									var result2 = bones[pathBones[i1++]];
									var bone = result2;
									if(!bone.sorted) {
										var parent2 = bone.parent;
										if(parent2 != null) {
											if(!parent2.sorted) {
												var parent3 = parent2.parent;
												if(parent3 != null) {
													this.sortBone(parent3);
												}
												parent2.sorted = true;
												this.cache.push(parent2);
											}
										}
										bone.sorted = true;
										this.cache.push(bone);
									}
								}
							}
						}
					}
				}
				++i;
			}
		}
		if(this.data.defaultSkin != null && this.data.defaultSkin != this.skin) {
			var skin = this.data.defaultSkin;
			var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
			var i = 0;
			var n = spine_support_utils_AttachmentSet.get_size(skin.attachments);
			while(i < n) {
				var result = entries[i];
				var entry = result;
				if(entry.slotIndex == slotIndex) {
					var attachment = entry.attachment;
					if(((attachment) instanceof spine_attachments_PathAttachment)) {
						var result1 = attachment;
						var pathBones = result1.bones;
						if(pathBones == null) {
							if(!slotBone.sorted) {
								var parent = slotBone.parent;
								if(parent != null) {
									if(!parent.sorted) {
										var parent1 = parent.parent;
										if(parent1 != null) {
											this.sortBone(parent1);
										}
										parent.sorted = true;
										this.cache.push(parent);
									}
								}
								slotBone.sorted = true;
								this.cache.push(slotBone);
							}
						} else {
							var bones = this.bones;
							var i1 = 0;
							var n1 = pathBones.length;
							while(i1 < n1) {
								var nn = pathBones[i1++];
								nn += i1;
								while(i1 < nn) {
									var result2 = bones[pathBones[i1++]];
									var bone = result2;
									if(!bone.sorted) {
										var parent2 = bone.parent;
										if(parent2 != null) {
											if(!parent2.sorted) {
												var parent3 = parent2.parent;
												if(parent3 != null) {
													this.sortBone(parent3);
												}
												parent2.sorted = true;
												this.cache.push(parent2);
											}
										}
										bone.sorted = true;
										this.cache.push(bone);
									}
								}
							}
						}
					}
				}
				++i;
			}
		}
		var attachment = slot.attachment;
		if(((attachment) instanceof spine_attachments_PathAttachment)) {
			if(((attachment) instanceof spine_attachments_PathAttachment)) {
				var result = attachment;
				var pathBones = result.bones;
				if(pathBones == null) {
					if(!slotBone.sorted) {
						var parent = slotBone.parent;
						if(parent != null) {
							if(!parent.sorted) {
								var parent1 = parent.parent;
								if(parent1 != null) {
									this.sortBone(parent1);
								}
								parent.sorted = true;
								this.cache.push(parent);
							}
						}
						slotBone.sorted = true;
						this.cache.push(slotBone);
					}
				} else {
					var bones = this.bones;
					var i = 0;
					var n = pathBones.length;
					while(i < n) {
						var nn = pathBones[i++];
						nn += i;
						while(i < nn) {
							var result = bones[pathBones[i++]];
							var bone = result;
							if(!bone.sorted) {
								var parent = bone.parent;
								if(parent != null) {
									if(!parent.sorted) {
										var parent1 = parent.parent;
										if(parent1 != null) {
											this.sortBone(parent1);
										}
										parent.sorted = true;
										this.cache.push(parent);
									}
								}
								bone.sorted = true;
								this.cache.push(bone);
							}
						}
					}
				}
			}
		}
		var constrained = constraint.bones;
		var boneCount = constraint.bones.length;
		var i = 0;
		while(i < boneCount) {
			var result = constrained[i];
			var bone = result;
			if(!bone.sorted) {
				var parent = bone.parent;
				if(parent != null) {
					if(!parent.sorted) {
						var parent1 = parent.parent;
						if(parent1 != null) {
							this.sortBone(parent1);
						}
						parent.sorted = true;
						this.cache.push(parent);
					}
				}
				bone.sorted = true;
				this.cache.push(bone);
			}
			++i;
		}
		this.cache.push(constraint);
		var i = 0;
		while(i < boneCount) {
			var result = constrained[i];
			var bones = result.children;
			var items = bones;
			var i1 = 0;
			var n = bones.length;
			while(i1 < n) {
				var result1 = items[i1];
				var bone = result1;
				if(!bone.active) {
					++i1;
					continue;
				}
				if(bone.sorted) {
					var bones1 = bone.children;
					var items1 = bones1;
					var i2 = 0;
					var n1 = bones1.length;
					while(i2 < n1) {
						var result2 = items1[i2];
						var bone1 = result2;
						if(!bone1.active) {
							++i2;
							continue;
						}
						if(bone1.sorted) {
							this.sortReset(bone1.children);
						}
						bone1.sorted = false;
						++i2;
					}
				}
				bone.sorted = false;
				++i1;
			}
			++i;
		}
		var i = 0;
		while(i < boneCount) {
			var result = constrained[i];
			result.sorted = true;
			++i;
		}
	}
	,sortTransformConstraint: function(constraint) {
		constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
		if(!constraint.active) {
			return;
		}
		var bone = constraint.target;
		if(!bone.sorted) {
			var parent = bone.parent;
			if(parent != null) {
				if(!parent.sorted) {
					var parent1 = parent.parent;
					if(parent1 != null) {
						this.sortBone(parent1);
					}
					parent.sorted = true;
					this.cache.push(parent);
				}
			}
			bone.sorted = true;
			this.cache.push(bone);
		}
		var constrained = constraint.bones;
		var boneCount = constraint.bones.length;
		if(constraint.data.local) {
			var i = 0;
			while(i < boneCount) {
				var result = constrained[i];
				var child = result;
				var bone = child.parent;
				if(!bone.sorted) {
					var parent = bone.parent;
					if(parent != null) {
						if(!parent.sorted) {
							var parent1 = parent.parent;
							if(parent1 != null) {
								this.sortBone(parent1);
							}
							parent.sorted = true;
							this.cache.push(parent);
						}
					}
					bone.sorted = true;
					this.cache.push(bone);
				}
				if(!child.sorted) {
					var parent2 = child.parent;
					if(parent2 != null) {
						if(!parent2.sorted) {
							var parent3 = parent2.parent;
							if(parent3 != null) {
								this.sortBone(parent3);
							}
							parent2.sorted = true;
							this.cache.push(parent2);
						}
					}
					child.sorted = true;
					this.cache.push(child);
				}
				++i;
			}
		} else {
			var i = 0;
			while(i < boneCount) {
				var result = constrained[i];
				var bone = result;
				if(!bone.sorted) {
					var parent = bone.parent;
					if(parent != null) {
						if(!parent.sorted) {
							var parent1 = parent.parent;
							if(parent1 != null) {
								this.sortBone(parent1);
							}
							parent.sorted = true;
							this.cache.push(parent);
						}
					}
					bone.sorted = true;
					this.cache.push(bone);
				}
				++i;
			}
		}
		this.cache.push(constraint);
		var i = 0;
		while(i < boneCount) {
			var result = constrained[i];
			var bones = result.children;
			var items = bones;
			var i1 = 0;
			var n = bones.length;
			while(i1 < n) {
				var result1 = items[i1];
				var bone = result1;
				if(!bone.active) {
					++i1;
					continue;
				}
				if(bone.sorted) {
					var bones1 = bone.children;
					var items1 = bones1;
					var i2 = 0;
					var n1 = bones1.length;
					while(i2 < n1) {
						var result2 = items1[i2];
						var bone1 = result2;
						if(!bone1.active) {
							++i2;
							continue;
						}
						if(bone1.sorted) {
							this.sortReset(bone1.children);
						}
						bone1.sorted = false;
						++i2;
					}
				}
				bone.sorted = false;
				++i1;
			}
			++i;
		}
		var i = 0;
		while(i < boneCount) {
			var result = constrained[i];
			result.sorted = true;
			++i;
		}
	}
	,sortPathConstraintAttachmentWithSkin: function(skin,slotIndex,slotBone) {
		var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
		var i = 0;
		var n = spine_support_utils_AttachmentSet.get_size(skin.attachments);
		while(i < n) {
			var result = entries[i];
			var entry = result;
			if(entry.slotIndex == slotIndex) {
				var attachment = entry.attachment;
				if(((attachment) instanceof spine_attachments_PathAttachment)) {
					var result1 = attachment;
					var pathBones = result1.bones;
					if(pathBones == null) {
						if(!slotBone.sorted) {
							var parent = slotBone.parent;
							if(parent != null) {
								if(!parent.sorted) {
									var parent1 = parent.parent;
									if(parent1 != null) {
										this.sortBone(parent1);
									}
									parent.sorted = true;
									this.cache.push(parent);
								}
							}
							slotBone.sorted = true;
							this.cache.push(slotBone);
						}
					} else {
						var bones = this.bones;
						var i1 = 0;
						var n1 = pathBones.length;
						while(i1 < n1) {
							var nn = pathBones[i1++];
							nn += i1;
							while(i1 < nn) {
								var result2 = bones[pathBones[i1++]];
								var bone = result2;
								if(!bone.sorted) {
									var parent2 = bone.parent;
									if(parent2 != null) {
										if(!parent2.sorted) {
											var parent3 = parent2.parent;
											if(parent3 != null) {
												this.sortBone(parent3);
											}
											parent2.sorted = true;
											this.cache.push(parent2);
										}
									}
									bone.sorted = true;
									this.cache.push(bone);
								}
							}
						}
					}
				}
			}
			++i;
		}
	}
	,sortPathConstraintAttachment: function(attachment,slotBone) {
		if(!((attachment) instanceof spine_attachments_PathAttachment)) {
			return;
		}
		var result = attachment;
		var pathBones = result.bones;
		if(pathBones == null) {
			if(!slotBone.sorted) {
				var parent = slotBone.parent;
				if(parent != null) {
					if(!parent.sorted) {
						var parent1 = parent.parent;
						if(parent1 != null) {
							this.sortBone(parent1);
						}
						parent.sorted = true;
						this.cache.push(parent);
					}
				}
				slotBone.sorted = true;
				this.cache.push(slotBone);
			}
		} else {
			var bones = this.bones;
			var i = 0;
			var n = pathBones.length;
			while(i < n) {
				var nn = pathBones[i++];
				nn += i;
				while(i < nn) {
					var result = bones[pathBones[i++]];
					var bone = result;
					if(!bone.sorted) {
						var parent = bone.parent;
						if(parent != null) {
							if(!parent.sorted) {
								var parent1 = parent.parent;
								if(parent1 != null) {
									this.sortBone(parent1);
								}
								parent.sorted = true;
								this.cache.push(parent);
							}
						}
						bone.sorted = true;
						this.cache.push(bone);
					}
				}
			}
		}
	}
	,sortBone: function(bone) {
		if(bone.sorted) {
			return;
		}
		var parent = bone.parent;
		if(parent != null) {
			this.sortBone(parent);
		}
		bone.sorted = true;
		this.cache.push(bone);
	}
	,sortReset: function(bones) {
		var items = bones;
		var i = 0;
		var n = bones.length;
		while(i < n) {
			var result = items[i];
			var bone = result;
			if(!bone.active) {
				++i;
				continue;
			}
			if(bone.sorted) {
				this.sortReset(bone.children);
			}
			bone.sorted = false;
			++i;
		}
	}
	,updateWorldTransform: function() {
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			bone.ax = bone.x;
			bone.ay = bone.y;
			bone.arotation = bone.rotation;
			bone.ascaleX = bone.scaleX;
			bone.ascaleY = bone.scaleY;
			bone.ashearX = bone.shearX;
			bone.ashearY = bone.shearY;
			++i;
		}
		var cache = this.cache;
		var i = 0;
		var n = this.cache.length;
		while(i < n) {
			var result = cache[i];
			result.update();
			++i;
		}
	}
	,updateWorldTransformWithParent: function(parent) {
		if(parent == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("parent cannot be null."));
		}
		var rootBone = this.getRootBone();
		var pa = parent.a;
		var pb = parent.b;
		var pc = parent.c;
		var pd = parent.d;
		rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;
		rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;
		var rotationY = rootBone.rotation + 90 + rootBone.shearY;
		var la = Math.cos((rootBone.rotation + rootBone.shearX) * spine_utils_SpineUtils.degRad) * rootBone.scaleX;
		var lb = Math.cos(rotationY * spine_utils_SpineUtils.degRad) * rootBone.scaleY;
		var lc = Math.sin((rootBone.rotation + rootBone.shearX) * spine_utils_SpineUtils.degRad) * rootBone.scaleX;
		var ld = Math.sin(rotationY * spine_utils_SpineUtils.degRad) * rootBone.scaleY;
		rootBone.a = (pa * la + pb * lc) * this.scaleX;
		rootBone.b = (pa * lb + pb * ld) * this.scaleX;
		rootBone.c = (pc * la + pd * lc) * this.scaleY;
		rootBone.d = (pc * lb + pd * ld) * this.scaleY;
		var cache = this.cache;
		var i = 0;
		var n = this.cache.length;
		while(i < n) {
			var result = cache[i];
			var updatable = result;
			if(updatable != rootBone) {
				updatable.update();
			}
			++i;
		}
	}
	,setToSetupPose: function() {
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var _this = result;
			var data = _this.data;
			_this.x = data.x;
			_this.y = data.y;
			_this.rotation = data.rotation;
			_this.scaleX = data.scaleX;
			_this.scaleY = data.scaleY;
			_this.shearX = data.shearX;
			_this.shearY = data.shearY;
			++i;
		}
		var ikConstraints = this.ikConstraints;
		var i = 0;
		var n = this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var constraint = result;
			constraint.mix = constraint.data.mix;
			constraint.softness = constraint.data.softness;
			constraint.bendDirection = constraint.data.bendDirection;
			constraint.compress = constraint.data.compress;
			constraint.stretch = constraint.data.stretch;
			++i;
		}
		var transformConstraints = this.transformConstraints;
		var i = 0;
		var n = this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			constraint.mixScaleX = data.mixScaleX;
			constraint.mixScaleY = data.mixScaleY;
			constraint.mixShearY = data.mixShearY;
			++i;
		}
		var pathConstraints = this.pathConstraints;
		var i = 0;
		var n = this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.position = data.position;
			constraint.spacing = data.spacing;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			++i;
		}
		var slots = this.slots;
		var n = this.slots.length;
		var src = slots;
		var dest = this.drawOrder;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,n);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + n));
		}
		var i = 0;
		while(i < n) {
			var result = slots[i];
			var _this = result;
			var _this1 = _this.color;
			var color = _this.data.color;
			_this1.r = color.r;
			_this1.g = color.g;
			_this1.b = color.b;
			_this1.a = color.a;
			if(_this.darkColor != null) {
				var _this2 = _this.darkColor;
				var color1 = _this.data.darkColor;
				_this2.r = color1.r;
				_this2.g = color1.g;
				_this2.b = color1.b;
				_this2.a = color1.a;
			}
			if(_this.data.attachmentName == null) {
				var attachment = null;
				if(_this.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this3 = result1;
						var result2 = _this.attachment;
						var _this4 = result2;
						tmp = (_this3.deformAttachment != null ? _this3.deformAttachment : _this3) != (_this4.deformAttachment != null ? _this4.deformAttachment : _this4);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = _this.deform;
						this1.splice(0,this1.length);
					}
					_this.attachment = attachment;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			} else {
				_this.attachment = null;
				var attachment1 = _this.bone.skeleton.getAttachment(_this.data.index,_this.data.attachmentName);
				if(_this.attachment != attachment1) {
					var tmp1;
					if(!(!((attachment1) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result3 = attachment1;
						var _this5 = result3;
						var result4 = _this.attachment;
						var _this6 = result4;
						tmp1 = (_this5.deformAttachment != null ? _this5.deformAttachment : _this5) != (_this6.deformAttachment != null ? _this6.deformAttachment : _this6);
					} else {
						tmp1 = true;
					}
					if(tmp1) {
						var this2 = _this.deform;
						this2.splice(0,this2.length);
					}
					_this.attachment = attachment1;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			}
			++i;
		}
	}
	,setBonesToSetupPose: function() {
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var _this = result;
			var data = _this.data;
			_this.x = data.x;
			_this.y = data.y;
			_this.rotation = data.rotation;
			_this.scaleX = data.scaleX;
			_this.scaleY = data.scaleY;
			_this.shearX = data.shearX;
			_this.shearY = data.shearY;
			++i;
		}
		var ikConstraints = this.ikConstraints;
		var i = 0;
		var n = this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var constraint = result;
			constraint.mix = constraint.data.mix;
			constraint.softness = constraint.data.softness;
			constraint.bendDirection = constraint.data.bendDirection;
			constraint.compress = constraint.data.compress;
			constraint.stretch = constraint.data.stretch;
			++i;
		}
		var transformConstraints = this.transformConstraints;
		var i = 0;
		var n = this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			constraint.mixScaleX = data.mixScaleX;
			constraint.mixScaleY = data.mixScaleY;
			constraint.mixShearY = data.mixShearY;
			++i;
		}
		var pathConstraints = this.pathConstraints;
		var i = 0;
		var n = this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			var data = constraint.data;
			constraint.position = data.position;
			constraint.spacing = data.spacing;
			constraint.mixRotate = data.mixRotate;
			constraint.mixX = data.mixX;
			constraint.mixY = data.mixY;
			++i;
		}
	}
	,setSlotsToSetupPose: function() {
		var slots = this.slots;
		var n = this.slots.length;
		var src = slots;
		var dest = this.drawOrder;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,n);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + n));
		}
		var i = 0;
		while(i < n) {
			var result = slots[i];
			var _this = result;
			var _this1 = _this.color;
			var color = _this.data.color;
			_this1.r = color.r;
			_this1.g = color.g;
			_this1.b = color.b;
			_this1.a = color.a;
			if(_this.darkColor != null) {
				var _this2 = _this.darkColor;
				var color1 = _this.data.darkColor;
				_this2.r = color1.r;
				_this2.g = color1.g;
				_this2.b = color1.b;
				_this2.a = color1.a;
			}
			if(_this.data.attachmentName == null) {
				var attachment = null;
				if(_this.attachment != attachment) {
					var tmp;
					if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result1 = attachment;
						var _this3 = result1;
						var result2 = _this.attachment;
						var _this4 = result2;
						tmp = (_this3.deformAttachment != null ? _this3.deformAttachment : _this3) != (_this4.deformAttachment != null ? _this4.deformAttachment : _this4);
					} else {
						tmp = true;
					}
					if(tmp) {
						var this1 = _this.deform;
						this1.splice(0,this1.length);
					}
					_this.attachment = attachment;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			} else {
				_this.attachment = null;
				var attachment1 = _this.bone.skeleton.getAttachment(_this.data.index,_this.data.attachmentName);
				if(_this.attachment != attachment1) {
					var tmp1;
					if(!(!((attachment1) instanceof spine_attachments_VertexAttachment) || !((_this.attachment) instanceof spine_attachments_VertexAttachment))) {
						var result3 = attachment1;
						var _this5 = result3;
						var result4 = _this.attachment;
						var _this6 = result4;
						tmp1 = (_this5.deformAttachment != null ? _this5.deformAttachment : _this5) != (_this6.deformAttachment != null ? _this6.deformAttachment : _this6);
					} else {
						tmp1 = true;
					}
					if(tmp1) {
						var this2 = _this.deform;
						this2.splice(0,this2.length);
					}
					_this.attachment = attachment1;
					_this.attachmentTime = _this.bone.skeleton.time;
				}
			}
			++i;
		}
	}
	,getData: function() {
		return this.data;
	}
	,getBones: function() {
		return this.bones;
	}
	,getUpdateCache: function() {
		return this.cache;
	}
	,getRootBone: function() {
		if(this.bones.length == 0) {
			return null;
		} else {
			var this1 = this.bones;
			if(this1.length > 0) {
				return this1[0];
			} else {
				return null;
			}
		}
	}
	,findBone: function(boneName) {
		if(boneName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("boneName cannot be null."));
		}
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			if(bone.data.name == boneName) {
				return bone;
			}
			++i;
		}
		return null;
	}
	,getSlots: function() {
		return this.slots;
	}
	,findSlot: function(slotName) {
		if(slotName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotName cannot be null."));
		}
		var slots = this.slots;
		var i = 0;
		var n = this.slots.length;
		while(i < n) {
			var result = slots[i];
			var slot = result;
			if(slot.data.name == slotName) {
				return slot;
			}
			++i;
		}
		return null;
	}
	,getDrawOrder: function() {
		return this.drawOrder;
	}
	,setDrawOrder: function(drawOrder) {
		if(drawOrder == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("drawOrder cannot be null."));
		}
		this.drawOrder = drawOrder;
	}
	,getSkin: function() {
		return this.skin;
	}
	,setSkinByName: function(skinName) {
		var skin = this.data.findSkin(skinName);
		if(skin == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Skin not found: " + skinName));
		}
		if(skin != this.skin) {
			if(skin != null) {
				if(this.skin != null) {
					var slots = this.slots;
					var _g = 0;
					var _g1 = spine_support_utils_AttachmentSet.orderedItems(this.skin.attachments);
					while(_g < _g1.length) {
						var entry = _g1[_g];
						++_g;
						var slotIndex = entry.slotIndex;
						var result = slots[slotIndex];
						var slot = result;
						if(slot.attachment == entry.attachment) {
							var name = entry.name;
							var _this = skin.lookup;
							if(slotIndex < 0) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
							}
							if(name == null) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
							}
							_this.slotIndex = slotIndex;
							_this.name = name;
							var hash = 0;
							var chr;
							var x;
							if(name.length == 0) {
								x = hash;
							} else {
								var _g2 = 0;
								var _g3 = name.length;
								while(_g2 < _g3) {
									var i = _g2++;
									chr = HxOverrides.cca(name,i);
									hash = (hash << 5) - hash + chr;
								}
								x = hash;
							}
							_this.hashCode = x + slotIndex * 37 | 0;
							var key = skin.lookup;
							var entries = skin.attachments.h[key.hashCode];
							var result1 = null;
							if(entries != null) {
								var _g4 = 0;
								var _g5 = entries.length;
								while(_g4 < _g5) {
									var i1 = _g4++;
									var entry1 = entries[i1];
									var object = key;
									var tmp;
									if(object == null) {
										tmp = false;
									} else {
										var result2 = object;
										var other = result2;
										tmp = entry1.slotIndex != other.slotIndex ? false : entry1.name == other.name;
									}
									if(tmp) {
										result1 = entry1;
										break;
									}
								}
							}
							var entry2 = result1;
							var attachment = entry2 != null ? entry2.attachment : null;
							if(attachment != null) {
								if(slot.attachment != attachment) {
									var tmp1;
									if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
										var result3 = attachment;
										var _this1 = result3;
										var result4 = slot.attachment;
										var _this2 = result4;
										tmp1 = (_this1.deformAttachment != null ? _this1.deformAttachment : _this1) != (_this2.deformAttachment != null ? _this2.deformAttachment : _this2);
									} else {
										tmp1 = true;
									}
									if(tmp1) {
										var this1 = slot.deform;
										this1.splice(0,this1.length);
									}
									slot.attachment = attachment;
									slot.attachmentTime = slot.bone.skeleton.time;
								}
							}
						}
					}
				} else {
					var slots = this.slots;
					var i = 0;
					var n = this.slots.length;
					while(i < n) {
						var result = slots[i];
						var slot = result;
						var name = slot.data.attachmentName;
						if(name != null) {
							var _this = skin.lookup;
							if(i < 0) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
							}
							if(name == null) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
							}
							_this.slotIndex = i;
							_this.name = name;
							var hash = 0;
							var chr;
							var x;
							if(name.length == 0) {
								x = hash;
							} else {
								var _g = 0;
								var _g1 = name.length;
								while(_g < _g1) {
									var i1 = _g++;
									chr = HxOverrides.cca(name,i1);
									hash = (hash << 5) - hash + chr;
								}
								x = hash;
							}
							_this.hashCode = x + i * 37 | 0;
							var key = skin.lookup;
							var entries = skin.attachments.h[key.hashCode];
							var result1 = null;
							if(entries != null) {
								var _g2 = 0;
								var _g3 = entries.length;
								while(_g2 < _g3) {
									var i2 = _g2++;
									var entry = entries[i2];
									var object = key;
									var tmp;
									if(object == null) {
										tmp = false;
									} else {
										var result2 = object;
										var other = result2;
										tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
									}
									if(tmp) {
										result1 = entry;
										break;
									}
								}
							}
							var entry1 = result1;
							var attachment = entry1 != null ? entry1.attachment : null;
							if(attachment != null) {
								if(slot.attachment != attachment) {
									var tmp1;
									if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
										var result3 = attachment;
										var _this1 = result3;
										var result4 = slot.attachment;
										var _this2 = result4;
										tmp1 = (_this1.deformAttachment != null ? _this1.deformAttachment : _this1) != (_this2.deformAttachment != null ? _this2.deformAttachment : _this2);
									} else {
										tmp1 = true;
									}
									if(tmp1) {
										var this1 = slot.deform;
										this1.splice(0,this1.length);
									}
									slot.attachment = attachment;
									slot.attachmentTime = slot.bone.skeleton.time;
								}
							}
						}
						++i;
					}
				}
			}
			this.skin = skin;
			var cache = this.cache;
			cache.splice(0,cache.length);
			var boneCount = this.bones.length;
			var bones = this.bones;
			var i = 0;
			while(i < boneCount) {
				var result = bones[i];
				var bone = result;
				bone.sorted = bone.data.skinRequired;
				bone.active = !bone.sorted;
				++i;
			}
			if(this.skin != null) {
				var skinBones = this.skin.bones;
				var i = 0;
				var n = this.skin.bones.length;
				while(i < n) {
					var result = skinBones[i];
					var result1 = bones[result.index];
					var bone = result1;
					while(true) {
						bone.sorted = false;
						bone.active = true;
						bone = bone.parent;
						if(!(bone != null)) {
							break;
						}
					}
					++i;
				}
			}
			var ikCount = this.ikConstraints.length;
			var transformCount = this.transformConstraints.length;
			var pathCount = this.pathConstraints.length;
			var ikConstraints = this.ikConstraints;
			var transformConstraints = this.transformConstraints;
			var pathConstraints = this.pathConstraints;
			var constraintCount = ikCount + transformCount + pathCount;
			var _gotoLabel_outer;
			while(true) {
				_gotoLabel_outer = 0;
				var i = 0;
				while(i < constraintCount) {
					var ii = 0;
					while(ii < ikCount) {
						var result = ikConstraints[ii];
						var constraint = result;
						if(constraint.data.order == i) {
							constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
							if(constraint.active) {
								var target = constraint.target;
								if(!target.sorted) {
									var parent = target.parent;
									if(parent != null) {
										if(!parent.sorted) {
											var parent1 = parent.parent;
											if(parent1 != null) {
												this.sortBone(parent1);
											}
											parent.sorted = true;
											this.cache.push(parent);
										}
									}
									target.sorted = true;
									this.cache.push(target);
								}
								var constrained = constraint.bones;
								var parent2 = constrained.length > 0 ? constrained[0] : null;
								if(!parent2.sorted) {
									var parent3 = parent2.parent;
									if(parent3 != null) {
										if(!parent3.sorted) {
											var parent4 = parent3.parent;
											if(parent4 != null) {
												this.sortBone(parent4);
											}
											parent3.sorted = true;
											this.cache.push(parent3);
										}
									}
									parent2.sorted = true;
									this.cache.push(parent2);
								}
								if(constrained.length == 1) {
									this.cache.push(constraint);
									var bones1 = parent2.children;
									var items = bones1;
									var i1 = 0;
									var n = bones1.length;
									while(i1 < n) {
										var result1 = items[i1];
										var bone = result1;
										if(!bone.active) {
											++i1;
											continue;
										}
										if(bone.sorted) {
											var bones2 = bone.children;
											var items1 = bones2;
											var i2 = 0;
											var n1 = bones2.length;
											while(i2 < n1) {
												var result2 = items1[i2];
												var bone1 = result2;
												if(!bone1.active) {
													++i2;
													continue;
												}
												if(bone1.sorted) {
													this.sortReset(bone1.children);
												}
												bone1.sorted = false;
												++i2;
											}
										}
										bone.sorted = false;
										++i1;
									}
								} else {
									var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
									if(!child.sorted) {
										var parent5 = child.parent;
										if(parent5 != null) {
											if(!parent5.sorted) {
												var parent6 = parent5.parent;
												if(parent6 != null) {
													this.sortBone(parent6);
												}
												parent5.sorted = true;
												this.cache.push(parent5);
											}
										}
										child.sorted = true;
										this.cache.push(child);
									}
									this.cache.push(constraint);
									var bones3 = parent2.children;
									var items2 = bones3;
									var i3 = 0;
									var n2 = bones3.length;
									while(i3 < n2) {
										var result3 = items2[i3];
										var bone2 = result3;
										if(!bone2.active) {
											++i3;
											continue;
										}
										if(bone2.sorted) {
											var bones4 = bone2.children;
											var items3 = bones4;
											var i4 = 0;
											var n3 = bones4.length;
											while(i4 < n3) {
												var result4 = items3[i4];
												var bone3 = result4;
												if(!bone3.active) {
													++i4;
													continue;
												}
												if(bone3.sorted) {
													this.sortReset(bone3.children);
												}
												bone3.sorted = false;
												++i4;
											}
										}
										bone2.sorted = false;
										++i3;
									}
									child.sorted = true;
								}
							}
							++ii;
							_gotoLabel_outer = 2;
							break;
						}
						++ii;
					}
					if(_gotoLabel_outer == 2) {
						_gotoLabel_outer = 0;
						++i;
						continue;
					}
					if(_gotoLabel_outer >= 1) {
						break;
					}
					var ii1 = 0;
					while(ii1 < transformCount) {
						var result5 = transformConstraints[ii1];
						var constraint1 = result5;
						if(constraint1.data.order == i) {
							constraint1.active = constraint1.target.active && (!constraint1.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint1.data) != -1);
							if(constraint1.active) {
								var bone4 = constraint1.target;
								if(!bone4.sorted) {
									var parent7 = bone4.parent;
									if(parent7 != null) {
										if(!parent7.sorted) {
											var parent8 = parent7.parent;
											if(parent8 != null) {
												this.sortBone(parent8);
											}
											parent7.sorted = true;
											this.cache.push(parent7);
										}
									}
									bone4.sorted = true;
									this.cache.push(bone4);
								}
								var constrained1 = constraint1.bones;
								var boneCount1 = constraint1.bones.length;
								if(constraint1.data.local) {
									var i5 = 0;
									while(i5 < boneCount1) {
										var result6 = constrained1[i5];
										var child1 = result6;
										var bone5 = child1.parent;
										if(!bone5.sorted) {
											var parent9 = bone5.parent;
											if(parent9 != null) {
												if(!parent9.sorted) {
													var parent10 = parent9.parent;
													if(parent10 != null) {
														this.sortBone(parent10);
													}
													parent9.sorted = true;
													this.cache.push(parent9);
												}
											}
											bone5.sorted = true;
											this.cache.push(bone5);
										}
										if(!child1.sorted) {
											var parent11 = child1.parent;
											if(parent11 != null) {
												if(!parent11.sorted) {
													var parent12 = parent11.parent;
													if(parent12 != null) {
														this.sortBone(parent12);
													}
													parent11.sorted = true;
													this.cache.push(parent11);
												}
											}
											child1.sorted = true;
											this.cache.push(child1);
										}
										++i5;
									}
								} else {
									var i6 = 0;
									while(i6 < boneCount1) {
										var result7 = constrained1[i6];
										var bone6 = result7;
										if(!bone6.sorted) {
											var parent13 = bone6.parent;
											if(parent13 != null) {
												if(!parent13.sorted) {
													var parent14 = parent13.parent;
													if(parent14 != null) {
														this.sortBone(parent14);
													}
													parent13.sorted = true;
													this.cache.push(parent13);
												}
											}
											bone6.sorted = true;
											this.cache.push(bone6);
										}
										++i6;
									}
								}
								this.cache.push(constraint1);
								var i7 = 0;
								while(i7 < boneCount1) {
									var result8 = constrained1[i7];
									var bones5 = result8.children;
									var items4 = bones5;
									var i8 = 0;
									var n4 = bones5.length;
									while(i8 < n4) {
										var result9 = items4[i8];
										var bone7 = result9;
										if(!bone7.active) {
											++i8;
											continue;
										}
										if(bone7.sorted) {
											var bones6 = bone7.children;
											var items5 = bones6;
											var i9 = 0;
											var n5 = bones6.length;
											while(i9 < n5) {
												var result10 = items5[i9];
												var bone8 = result10;
												if(!bone8.active) {
													++i9;
													continue;
												}
												if(bone8.sorted) {
													this.sortReset(bone8.children);
												}
												bone8.sorted = false;
												++i9;
											}
										}
										bone7.sorted = false;
										++i8;
									}
									++i7;
								}
								var i10 = 0;
								while(i10 < boneCount1) {
									var result11 = constrained1[i10];
									result11.sorted = true;
									++i10;
								}
							}
							++ii1;
							_gotoLabel_outer = 2;
							break;
						}
						++ii1;
					}
					if(_gotoLabel_outer == 2) {
						_gotoLabel_outer = 0;
						++i;
						continue;
					}
					if(_gotoLabel_outer >= 1) {
						break;
					}
					var ii2 = 0;
					while(ii2 < pathCount) {
						var result12 = pathConstraints[ii2];
						var constraint2 = result12;
						if(constraint2.data.order == i) {
							constraint2.active = constraint2.target.bone.active && (!constraint2.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint2.data) != -1);
							if(constraint2.active) {
								var slot = constraint2.target;
								var slotIndex = slot.data.index;
								var slotBone = slot.bone;
								if(this.skin != null) {
									var skin = this.skin;
									var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
									var i11 = 0;
									var n6 = spine_support_utils_AttachmentSet.get_size(skin.attachments);
									while(i11 < n6) {
										var result13 = entries[i11];
										var entry = result13;
										if(entry.slotIndex == slotIndex) {
											var attachment = entry.attachment;
											if(((attachment) instanceof spine_attachments_PathAttachment)) {
												var result14 = attachment;
												var pathBones = result14.bones;
												if(pathBones == null) {
													if(!slotBone.sorted) {
														var parent15 = slotBone.parent;
														if(parent15 != null) {
															if(!parent15.sorted) {
																var parent16 = parent15.parent;
																if(parent16 != null) {
																	this.sortBone(parent16);
																}
																parent15.sorted = true;
																this.cache.push(parent15);
															}
														}
														slotBone.sorted = true;
														this.cache.push(slotBone);
													}
												} else {
													var bones7 = this.bones;
													var i12 = 0;
													var n7 = pathBones.length;
													while(i12 < n7) {
														var nn = pathBones[i12++];
														nn += i12;
														while(i12 < nn) {
															var result15 = bones7[pathBones[i12++]];
															var bone9 = result15;
															if(!bone9.sorted) {
																var parent17 = bone9.parent;
																if(parent17 != null) {
																	if(!parent17.sorted) {
																		var parent18 = parent17.parent;
																		if(parent18 != null) {
																			this.sortBone(parent18);
																		}
																		parent17.sorted = true;
																		this.cache.push(parent17);
																	}
																}
																bone9.sorted = true;
																this.cache.push(bone9);
															}
														}
													}
												}
											}
										}
										++i11;
									}
								}
								if(this.data.defaultSkin != null && this.data.defaultSkin != this.skin) {
									var skin1 = this.data.defaultSkin;
									var entries1 = spine_support_utils_AttachmentSet.orderedItems(skin1.attachments);
									var i13 = 0;
									var n8 = spine_support_utils_AttachmentSet.get_size(skin1.attachments);
									while(i13 < n8) {
										var result16 = entries1[i13];
										var entry1 = result16;
										if(entry1.slotIndex == slotIndex) {
											var attachment1 = entry1.attachment;
											if(((attachment1) instanceof spine_attachments_PathAttachment)) {
												var result17 = attachment1;
												var pathBones1 = result17.bones;
												if(pathBones1 == null) {
													if(!slotBone.sorted) {
														var parent19 = slotBone.parent;
														if(parent19 != null) {
															if(!parent19.sorted) {
																var parent20 = parent19.parent;
																if(parent20 != null) {
																	this.sortBone(parent20);
																}
																parent19.sorted = true;
																this.cache.push(parent19);
															}
														}
														slotBone.sorted = true;
														this.cache.push(slotBone);
													}
												} else {
													var bones8 = this.bones;
													var i14 = 0;
													var n9 = pathBones1.length;
													while(i14 < n9) {
														var nn1 = pathBones1[i14++];
														nn1 += i14;
														while(i14 < nn1) {
															var result18 = bones8[pathBones1[i14++]];
															var bone10 = result18;
															if(!bone10.sorted) {
																var parent21 = bone10.parent;
																if(parent21 != null) {
																	if(!parent21.sorted) {
																		var parent22 = parent21.parent;
																		if(parent22 != null) {
																			this.sortBone(parent22);
																		}
																		parent21.sorted = true;
																		this.cache.push(parent21);
																	}
																}
																bone10.sorted = true;
																this.cache.push(bone10);
															}
														}
													}
												}
											}
										}
										++i13;
									}
								}
								var attachment2 = slot.attachment;
								if(((attachment2) instanceof spine_attachments_PathAttachment)) {
									if(((attachment2) instanceof spine_attachments_PathAttachment)) {
										var result19 = attachment2;
										var pathBones2 = result19.bones;
										if(pathBones2 == null) {
											if(!slotBone.sorted) {
												var parent23 = slotBone.parent;
												if(parent23 != null) {
													if(!parent23.sorted) {
														var parent24 = parent23.parent;
														if(parent24 != null) {
															this.sortBone(parent24);
														}
														parent23.sorted = true;
														this.cache.push(parent23);
													}
												}
												slotBone.sorted = true;
												this.cache.push(slotBone);
											}
										} else {
											var bones9 = this.bones;
											var i15 = 0;
											var n10 = pathBones2.length;
											while(i15 < n10) {
												var nn2 = pathBones2[i15++];
												nn2 += i15;
												while(i15 < nn2) {
													var result20 = bones9[pathBones2[i15++]];
													var bone11 = result20;
													if(!bone11.sorted) {
														var parent25 = bone11.parent;
														if(parent25 != null) {
															if(!parent25.sorted) {
																var parent26 = parent25.parent;
																if(parent26 != null) {
																	this.sortBone(parent26);
																}
																parent25.sorted = true;
																this.cache.push(parent25);
															}
														}
														bone11.sorted = true;
														this.cache.push(bone11);
													}
												}
											}
										}
									}
								}
								var constrained2 = constraint2.bones;
								var boneCount2 = constraint2.bones.length;
								var i16 = 0;
								while(i16 < boneCount2) {
									var result21 = constrained2[i16];
									var bone12 = result21;
									if(!bone12.sorted) {
										var parent27 = bone12.parent;
										if(parent27 != null) {
											if(!parent27.sorted) {
												var parent28 = parent27.parent;
												if(parent28 != null) {
													this.sortBone(parent28);
												}
												parent27.sorted = true;
												this.cache.push(parent27);
											}
										}
										bone12.sorted = true;
										this.cache.push(bone12);
									}
									++i16;
								}
								this.cache.push(constraint2);
								var i17 = 0;
								while(i17 < boneCount2) {
									var result22 = constrained2[i17];
									var bones10 = result22.children;
									var items6 = bones10;
									var i18 = 0;
									var n11 = bones10.length;
									while(i18 < n11) {
										var result23 = items6[i18];
										var bone13 = result23;
										if(!bone13.active) {
											++i18;
											continue;
										}
										if(bone13.sorted) {
											var bones11 = bone13.children;
											var items7 = bones11;
											var i19 = 0;
											var n12 = bones11.length;
											while(i19 < n12) {
												var result24 = items7[i19];
												var bone14 = result24;
												if(!bone14.active) {
													++i19;
													continue;
												}
												if(bone14.sorted) {
													this.sortReset(bone14.children);
												}
												bone14.sorted = false;
												++i19;
											}
										}
										bone13.sorted = false;
										++i18;
									}
									++i17;
								}
								var i20 = 0;
								while(i20 < boneCount2) {
									var result25 = constrained2[i20];
									result25.sorted = true;
									++i20;
								}
							}
							++ii2;
							_gotoLabel_outer = 2;
							break;
						}
						++ii2;
					}
					if(_gotoLabel_outer == 2) {
						_gotoLabel_outer = 0;
						++i;
						continue;
					}
					if(_gotoLabel_outer >= 1) {
						break;
					}
					++i;
				}
				if(_gotoLabel_outer == 0) {
					break;
				}
			}
			var i = 0;
			while(i < boneCount) {
				var result = bones[i];
				var bone = result;
				if(!bone.sorted) {
					var parent = bone.parent;
					if(parent != null) {
						if(!parent.sorted) {
							var parent1 = parent.parent;
							if(parent1 != null) {
								this.sortBone(parent1);
							}
							parent.sorted = true;
							this.cache.push(parent);
						}
					}
					bone.sorted = true;
					this.cache.push(bone);
				}
				++i;
			}
		}
	}
	,setSkin: function(newSkin) {
		if(newSkin == this.skin) {
			return;
		}
		if(newSkin != null) {
			if(this.skin != null) {
				var slots = this.slots;
				var _g = 0;
				var _g1 = spine_support_utils_AttachmentSet.orderedItems(this.skin.attachments);
				while(_g < _g1.length) {
					var entry = _g1[_g];
					++_g;
					var slotIndex = entry.slotIndex;
					var result = slots[slotIndex];
					var slot = result;
					if(slot.attachment == entry.attachment) {
						var name = entry.name;
						var _this = newSkin.lookup;
						if(slotIndex < 0) {
							throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
						}
						if(name == null) {
							throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
						}
						_this.slotIndex = slotIndex;
						_this.name = name;
						var hash = 0;
						var chr;
						var x;
						if(name.length == 0) {
							x = hash;
						} else {
							var _g2 = 0;
							var _g3 = name.length;
							while(_g2 < _g3) {
								var i = _g2++;
								chr = HxOverrides.cca(name,i);
								hash = (hash << 5) - hash + chr;
							}
							x = hash;
						}
						_this.hashCode = x + slotIndex * 37 | 0;
						var key = newSkin.lookup;
						var entries = newSkin.attachments.h[key.hashCode];
						var result1 = null;
						if(entries != null) {
							var _g4 = 0;
							var _g5 = entries.length;
							while(_g4 < _g5) {
								var i1 = _g4++;
								var entry1 = entries[i1];
								var object = key;
								var tmp;
								if(object == null) {
									tmp = false;
								} else {
									var result2 = object;
									var other = result2;
									tmp = entry1.slotIndex != other.slotIndex ? false : entry1.name == other.name;
								}
								if(tmp) {
									result1 = entry1;
									break;
								}
							}
						}
						var entry2 = result1;
						var attachment = entry2 != null ? entry2.attachment : null;
						if(attachment != null) {
							if(slot.attachment != attachment) {
								var tmp1;
								if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
									var result3 = attachment;
									var _this1 = result3;
									var result4 = slot.attachment;
									var _this2 = result4;
									tmp1 = (_this1.deformAttachment != null ? _this1.deformAttachment : _this1) != (_this2.deformAttachment != null ? _this2.deformAttachment : _this2);
								} else {
									tmp1 = true;
								}
								if(tmp1) {
									var this1 = slot.deform;
									this1.splice(0,this1.length);
								}
								slot.attachment = attachment;
								slot.attachmentTime = slot.bone.skeleton.time;
							}
						}
					}
				}
			} else {
				var slots = this.slots;
				var i = 0;
				var n = this.slots.length;
				while(i < n) {
					var result = slots[i];
					var slot = result;
					var name = slot.data.attachmentName;
					if(name != null) {
						var _this = newSkin.lookup;
						if(i < 0) {
							throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
						}
						if(name == null) {
							throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
						}
						_this.slotIndex = i;
						_this.name = name;
						var hash = 0;
						var chr;
						var x;
						if(name.length == 0) {
							x = hash;
						} else {
							var _g = 0;
							var _g1 = name.length;
							while(_g < _g1) {
								var i1 = _g++;
								chr = HxOverrides.cca(name,i1);
								hash = (hash << 5) - hash + chr;
							}
							x = hash;
						}
						_this.hashCode = x + i * 37 | 0;
						var key = newSkin.lookup;
						var entries = newSkin.attachments.h[key.hashCode];
						var result1 = null;
						if(entries != null) {
							var _g2 = 0;
							var _g3 = entries.length;
							while(_g2 < _g3) {
								var i2 = _g2++;
								var entry = entries[i2];
								var object = key;
								var tmp;
								if(object == null) {
									tmp = false;
								} else {
									var result2 = object;
									var other = result2;
									tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
								}
								if(tmp) {
									result1 = entry;
									break;
								}
							}
						}
						var entry1 = result1;
						var attachment = entry1 != null ? entry1.attachment : null;
						if(attachment != null) {
							if(slot.attachment != attachment) {
								var tmp1;
								if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
									var result3 = attachment;
									var _this1 = result3;
									var result4 = slot.attachment;
									var _this2 = result4;
									tmp1 = (_this1.deformAttachment != null ? _this1.deformAttachment : _this1) != (_this2.deformAttachment != null ? _this2.deformAttachment : _this2);
								} else {
									tmp1 = true;
								}
								if(tmp1) {
									var this1 = slot.deform;
									this1.splice(0,this1.length);
								}
								slot.attachment = attachment;
								slot.attachmentTime = slot.bone.skeleton.time;
							}
						}
					}
					++i;
				}
			}
		}
		this.skin = newSkin;
		var cache = this.cache;
		cache.splice(0,cache.length);
		var boneCount = this.bones.length;
		var bones = this.bones;
		var i = 0;
		while(i < boneCount) {
			var result = bones[i];
			var bone = result;
			bone.sorted = bone.data.skinRequired;
			bone.active = !bone.sorted;
			++i;
		}
		if(this.skin != null) {
			var skinBones = this.skin.bones;
			var i = 0;
			var n = this.skin.bones.length;
			while(i < n) {
				var result = skinBones[i];
				var result1 = bones[result.index];
				var bone = result1;
				while(true) {
					bone.sorted = false;
					bone.active = true;
					bone = bone.parent;
					if(!(bone != null)) {
						break;
					}
				}
				++i;
			}
		}
		var ikCount = this.ikConstraints.length;
		var transformCount = this.transformConstraints.length;
		var pathCount = this.pathConstraints.length;
		var ikConstraints = this.ikConstraints;
		var transformConstraints = this.transformConstraints;
		var pathConstraints = this.pathConstraints;
		var constraintCount = ikCount + transformCount + pathCount;
		var _gotoLabel_outer;
		while(true) {
			_gotoLabel_outer = 0;
			var i = 0;
			while(i < constraintCount) {
				var ii = 0;
				while(ii < ikCount) {
					var result = ikConstraints[ii];
					var constraint = result;
					if(constraint.data.order == i) {
						constraint.active = constraint.target.active && (!constraint.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint.data) != -1);
						if(constraint.active) {
							var target = constraint.target;
							if(!target.sorted) {
								var parent = target.parent;
								if(parent != null) {
									if(!parent.sorted) {
										var parent1 = parent.parent;
										if(parent1 != null) {
											this.sortBone(parent1);
										}
										parent.sorted = true;
										this.cache.push(parent);
									}
								}
								target.sorted = true;
								this.cache.push(target);
							}
							var constrained = constraint.bones;
							var parent2 = constrained.length > 0 ? constrained[0] : null;
							if(!parent2.sorted) {
								var parent3 = parent2.parent;
								if(parent3 != null) {
									if(!parent3.sorted) {
										var parent4 = parent3.parent;
										if(parent4 != null) {
											this.sortBone(parent4);
										}
										parent3.sorted = true;
										this.cache.push(parent3);
									}
								}
								parent2.sorted = true;
								this.cache.push(parent2);
							}
							if(constrained.length == 1) {
								this.cache.push(constraint);
								var bones1 = parent2.children;
								var items = bones1;
								var i1 = 0;
								var n = bones1.length;
								while(i1 < n) {
									var result1 = items[i1];
									var bone = result1;
									if(!bone.active) {
										++i1;
										continue;
									}
									if(bone.sorted) {
										var bones2 = bone.children;
										var items1 = bones2;
										var i2 = 0;
										var n1 = bones2.length;
										while(i2 < n1) {
											var result2 = items1[i2];
											var bone1 = result2;
											if(!bone1.active) {
												++i2;
												continue;
											}
											if(bone1.sorted) {
												this.sortReset(bone1.children);
											}
											bone1.sorted = false;
											++i2;
										}
									}
									bone.sorted = false;
									++i1;
								}
							} else {
								var child = constrained.length == 0 ? null : constrained[constrained.length - 1];
								if(!child.sorted) {
									var parent5 = child.parent;
									if(parent5 != null) {
										if(!parent5.sorted) {
											var parent6 = parent5.parent;
											if(parent6 != null) {
												this.sortBone(parent6);
											}
											parent5.sorted = true;
											this.cache.push(parent5);
										}
									}
									child.sorted = true;
									this.cache.push(child);
								}
								this.cache.push(constraint);
								var bones3 = parent2.children;
								var items2 = bones3;
								var i3 = 0;
								var n2 = bones3.length;
								while(i3 < n2) {
									var result3 = items2[i3];
									var bone2 = result3;
									if(!bone2.active) {
										++i3;
										continue;
									}
									if(bone2.sorted) {
										var bones4 = bone2.children;
										var items3 = bones4;
										var i4 = 0;
										var n3 = bones4.length;
										while(i4 < n3) {
											var result4 = items3[i4];
											var bone3 = result4;
											if(!bone3.active) {
												++i4;
												continue;
											}
											if(bone3.sorted) {
												this.sortReset(bone3.children);
											}
											bone3.sorted = false;
											++i4;
										}
									}
									bone2.sorted = false;
									++i3;
								}
								child.sorted = true;
							}
						}
						++ii;
						_gotoLabel_outer = 2;
						break;
					}
					++ii;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				var ii1 = 0;
				while(ii1 < transformCount) {
					var result5 = transformConstraints[ii1];
					var constraint1 = result5;
					if(constraint1.data.order == i) {
						constraint1.active = constraint1.target.active && (!constraint1.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint1.data) != -1);
						if(constraint1.active) {
							var bone4 = constraint1.target;
							if(!bone4.sorted) {
								var parent7 = bone4.parent;
								if(parent7 != null) {
									if(!parent7.sorted) {
										var parent8 = parent7.parent;
										if(parent8 != null) {
											this.sortBone(parent8);
										}
										parent7.sorted = true;
										this.cache.push(parent7);
									}
								}
								bone4.sorted = true;
								this.cache.push(bone4);
							}
							var constrained1 = constraint1.bones;
							var boneCount1 = constraint1.bones.length;
							if(constraint1.data.local) {
								var i5 = 0;
								while(i5 < boneCount1) {
									var result6 = constrained1[i5];
									var child1 = result6;
									var bone5 = child1.parent;
									if(!bone5.sorted) {
										var parent9 = bone5.parent;
										if(parent9 != null) {
											if(!parent9.sorted) {
												var parent10 = parent9.parent;
												if(parent10 != null) {
													this.sortBone(parent10);
												}
												parent9.sorted = true;
												this.cache.push(parent9);
											}
										}
										bone5.sorted = true;
										this.cache.push(bone5);
									}
									if(!child1.sorted) {
										var parent11 = child1.parent;
										if(parent11 != null) {
											if(!parent11.sorted) {
												var parent12 = parent11.parent;
												if(parent12 != null) {
													this.sortBone(parent12);
												}
												parent11.sorted = true;
												this.cache.push(parent11);
											}
										}
										child1.sorted = true;
										this.cache.push(child1);
									}
									++i5;
								}
							} else {
								var i6 = 0;
								while(i6 < boneCount1) {
									var result7 = constrained1[i6];
									var bone6 = result7;
									if(!bone6.sorted) {
										var parent13 = bone6.parent;
										if(parent13 != null) {
											if(!parent13.sorted) {
												var parent14 = parent13.parent;
												if(parent14 != null) {
													this.sortBone(parent14);
												}
												parent13.sorted = true;
												this.cache.push(parent13);
											}
										}
										bone6.sorted = true;
										this.cache.push(bone6);
									}
									++i6;
								}
							}
							this.cache.push(constraint1);
							var i7 = 0;
							while(i7 < boneCount1) {
								var result8 = constrained1[i7];
								var bones5 = result8.children;
								var items4 = bones5;
								var i8 = 0;
								var n4 = bones5.length;
								while(i8 < n4) {
									var result9 = items4[i8];
									var bone7 = result9;
									if(!bone7.active) {
										++i8;
										continue;
									}
									if(bone7.sorted) {
										var bones6 = bone7.children;
										var items5 = bones6;
										var i9 = 0;
										var n5 = bones6.length;
										while(i9 < n5) {
											var result10 = items5[i9];
											var bone8 = result10;
											if(!bone8.active) {
												++i9;
												continue;
											}
											if(bone8.sorted) {
												this.sortReset(bone8.children);
											}
											bone8.sorted = false;
											++i9;
										}
									}
									bone7.sorted = false;
									++i8;
								}
								++i7;
							}
							var i10 = 0;
							while(i10 < boneCount1) {
								var result11 = constrained1[i10];
								result11.sorted = true;
								++i10;
							}
						}
						++ii1;
						_gotoLabel_outer = 2;
						break;
					}
					++ii1;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				var ii2 = 0;
				while(ii2 < pathCount) {
					var result12 = pathConstraints[ii2];
					var constraint2 = result12;
					if(constraint2.data.order == i) {
						constraint2.active = constraint2.target.bone.active && (!constraint2.data.skinRequired || this.skin != null && this.skin.constraints.indexOf(constraint2.data) != -1);
						if(constraint2.active) {
							var slot = constraint2.target;
							var slotIndex = slot.data.index;
							var slotBone = slot.bone;
							if(this.skin != null) {
								var skin = this.skin;
								var entries = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
								var i11 = 0;
								var n6 = spine_support_utils_AttachmentSet.get_size(skin.attachments);
								while(i11 < n6) {
									var result13 = entries[i11];
									var entry = result13;
									if(entry.slotIndex == slotIndex) {
										var attachment = entry.attachment;
										if(((attachment) instanceof spine_attachments_PathAttachment)) {
											var result14 = attachment;
											var pathBones = result14.bones;
											if(pathBones == null) {
												if(!slotBone.sorted) {
													var parent15 = slotBone.parent;
													if(parent15 != null) {
														if(!parent15.sorted) {
															var parent16 = parent15.parent;
															if(parent16 != null) {
																this.sortBone(parent16);
															}
															parent15.sorted = true;
															this.cache.push(parent15);
														}
													}
													slotBone.sorted = true;
													this.cache.push(slotBone);
												}
											} else {
												var bones7 = this.bones;
												var i12 = 0;
												var n7 = pathBones.length;
												while(i12 < n7) {
													var nn = pathBones[i12++];
													nn += i12;
													while(i12 < nn) {
														var result15 = bones7[pathBones[i12++]];
														var bone9 = result15;
														if(!bone9.sorted) {
															var parent17 = bone9.parent;
															if(parent17 != null) {
																if(!parent17.sorted) {
																	var parent18 = parent17.parent;
																	if(parent18 != null) {
																		this.sortBone(parent18);
																	}
																	parent17.sorted = true;
																	this.cache.push(parent17);
																}
															}
															bone9.sorted = true;
															this.cache.push(bone9);
														}
													}
												}
											}
										}
									}
									++i11;
								}
							}
							if(this.data.defaultSkin != null && this.data.defaultSkin != this.skin) {
								var skin1 = this.data.defaultSkin;
								var entries1 = spine_support_utils_AttachmentSet.orderedItems(skin1.attachments);
								var i13 = 0;
								var n8 = spine_support_utils_AttachmentSet.get_size(skin1.attachments);
								while(i13 < n8) {
									var result16 = entries1[i13];
									var entry1 = result16;
									if(entry1.slotIndex == slotIndex) {
										var attachment1 = entry1.attachment;
										if(((attachment1) instanceof spine_attachments_PathAttachment)) {
											var result17 = attachment1;
											var pathBones1 = result17.bones;
											if(pathBones1 == null) {
												if(!slotBone.sorted) {
													var parent19 = slotBone.parent;
													if(parent19 != null) {
														if(!parent19.sorted) {
															var parent20 = parent19.parent;
															if(parent20 != null) {
																this.sortBone(parent20);
															}
															parent19.sorted = true;
															this.cache.push(parent19);
														}
													}
													slotBone.sorted = true;
													this.cache.push(slotBone);
												}
											} else {
												var bones8 = this.bones;
												var i14 = 0;
												var n9 = pathBones1.length;
												while(i14 < n9) {
													var nn1 = pathBones1[i14++];
													nn1 += i14;
													while(i14 < nn1) {
														var result18 = bones8[pathBones1[i14++]];
														var bone10 = result18;
														if(!bone10.sorted) {
															var parent21 = bone10.parent;
															if(parent21 != null) {
																if(!parent21.sorted) {
																	var parent22 = parent21.parent;
																	if(parent22 != null) {
																		this.sortBone(parent22);
																	}
																	parent21.sorted = true;
																	this.cache.push(parent21);
																}
															}
															bone10.sorted = true;
															this.cache.push(bone10);
														}
													}
												}
											}
										}
									}
									++i13;
								}
							}
							var attachment2 = slot.attachment;
							if(((attachment2) instanceof spine_attachments_PathAttachment)) {
								if(((attachment2) instanceof spine_attachments_PathAttachment)) {
									var result19 = attachment2;
									var pathBones2 = result19.bones;
									if(pathBones2 == null) {
										if(!slotBone.sorted) {
											var parent23 = slotBone.parent;
											if(parent23 != null) {
												if(!parent23.sorted) {
													var parent24 = parent23.parent;
													if(parent24 != null) {
														this.sortBone(parent24);
													}
													parent23.sorted = true;
													this.cache.push(parent23);
												}
											}
											slotBone.sorted = true;
											this.cache.push(slotBone);
										}
									} else {
										var bones9 = this.bones;
										var i15 = 0;
										var n10 = pathBones2.length;
										while(i15 < n10) {
											var nn2 = pathBones2[i15++];
											nn2 += i15;
											while(i15 < nn2) {
												var result20 = bones9[pathBones2[i15++]];
												var bone11 = result20;
												if(!bone11.sorted) {
													var parent25 = bone11.parent;
													if(parent25 != null) {
														if(!parent25.sorted) {
															var parent26 = parent25.parent;
															if(parent26 != null) {
																this.sortBone(parent26);
															}
															parent25.sorted = true;
															this.cache.push(parent25);
														}
													}
													bone11.sorted = true;
													this.cache.push(bone11);
												}
											}
										}
									}
								}
							}
							var constrained2 = constraint2.bones;
							var boneCount2 = constraint2.bones.length;
							var i16 = 0;
							while(i16 < boneCount2) {
								var result21 = constrained2[i16];
								var bone12 = result21;
								if(!bone12.sorted) {
									var parent27 = bone12.parent;
									if(parent27 != null) {
										if(!parent27.sorted) {
											var parent28 = parent27.parent;
											if(parent28 != null) {
												this.sortBone(parent28);
											}
											parent27.sorted = true;
											this.cache.push(parent27);
										}
									}
									bone12.sorted = true;
									this.cache.push(bone12);
								}
								++i16;
							}
							this.cache.push(constraint2);
							var i17 = 0;
							while(i17 < boneCount2) {
								var result22 = constrained2[i17];
								var bones10 = result22.children;
								var items6 = bones10;
								var i18 = 0;
								var n11 = bones10.length;
								while(i18 < n11) {
									var result23 = items6[i18];
									var bone13 = result23;
									if(!bone13.active) {
										++i18;
										continue;
									}
									if(bone13.sorted) {
										var bones11 = bone13.children;
										var items7 = bones11;
										var i19 = 0;
										var n12 = bones11.length;
										while(i19 < n12) {
											var result24 = items7[i19];
											var bone14 = result24;
											if(!bone14.active) {
												++i19;
												continue;
											}
											if(bone14.sorted) {
												this.sortReset(bone14.children);
											}
											bone14.sorted = false;
											++i19;
										}
									}
									bone13.sorted = false;
									++i18;
								}
								++i17;
							}
							var i20 = 0;
							while(i20 < boneCount2) {
								var result25 = constrained2[i20];
								result25.sorted = true;
								++i20;
							}
						}
						++ii2;
						_gotoLabel_outer = 2;
						break;
					}
					++ii2;
				}
				if(_gotoLabel_outer == 2) {
					_gotoLabel_outer = 0;
					++i;
					continue;
				}
				if(_gotoLabel_outer >= 1) {
					break;
				}
				++i;
			}
			if(_gotoLabel_outer == 0) {
				break;
			}
		}
		var i = 0;
		while(i < boneCount) {
			var result = bones[i];
			var bone = result;
			if(!bone.sorted) {
				var parent = bone.parent;
				if(parent != null) {
					if(!parent.sorted) {
						var parent1 = parent.parent;
						if(parent1 != null) {
							this.sortBone(parent1);
						}
						parent.sorted = true;
						this.cache.push(parent);
					}
				}
				bone.sorted = true;
				this.cache.push(bone);
			}
			++i;
		}
	}
	,getAttachmentWithSlotName: function(slotName,attachmentName) {
		var slot = this.data.findSlot(slotName);
		if(slot == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Slot not found: " + slotName));
		}
		return this.getAttachment(slot.index,attachmentName);
	}
	,getAttachment: function(slotIndex,attachmentName) {
		if(attachmentName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachmentName cannot be null."));
		}
		if(this.skin != null) {
			var _this = this.skin;
			var _this1 = _this.lookup;
			if(slotIndex < 0) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
			}
			if(attachmentName == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
			}
			_this1.slotIndex = slotIndex;
			_this1.name = attachmentName;
			var hash = 0;
			var chr;
			var x;
			if(attachmentName.length == 0) {
				x = hash;
			} else {
				var _g = 0;
				var _g1 = attachmentName.length;
				while(_g < _g1) {
					var i = _g++;
					chr = HxOverrides.cca(attachmentName,i);
					hash = (hash << 5) - hash + chr;
				}
				x = hash;
			}
			_this1.hashCode = x + slotIndex * 37 | 0;
			var key = _this.lookup;
			var entries = _this.attachments.h[key.hashCode];
			var result = null;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry = entries[i];
					var object = key;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result1 = object;
						var other = result1;
						tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
					}
					if(tmp) {
						result = entry;
						break;
					}
				}
			}
			var entry = result;
			var attachment = entry != null ? entry.attachment : null;
			if(attachment != null) {
				return attachment;
			}
		}
		if(this.data.defaultSkin != null) {
			var _this = this.data.defaultSkin;
			var _this1 = _this.lookup;
			if(slotIndex < 0) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
			}
			if(attachmentName == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
			}
			_this1.slotIndex = slotIndex;
			_this1.name = attachmentName;
			var hash = 0;
			var chr;
			var x;
			if(attachmentName.length == 0) {
				x = hash;
			} else {
				var _g = 0;
				var _g1 = attachmentName.length;
				while(_g < _g1) {
					var i = _g++;
					chr = HxOverrides.cca(attachmentName,i);
					hash = (hash << 5) - hash + chr;
				}
				x = hash;
			}
			_this1.hashCode = x + slotIndex * 37 | 0;
			var key = _this.lookup;
			var entries = _this.attachments.h[key.hashCode];
			var result = null;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry = entries[i];
					var object = key;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result1 = object;
						var other = result1;
						tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
					}
					if(tmp) {
						result = entry;
						break;
					}
				}
			}
			var entry = result;
			if(entry != null) {
				return entry.attachment;
			} else {
				return null;
			}
		}
		return null;
	}
	,setAttachment: function(slotName,attachmentName) {
		if(slotName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotName cannot be null."));
		}
		var slot = this.findSlot(slotName);
		if(slot == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Slot not found: " + slotName));
		}
		var attachment = null;
		if(attachmentName != null) {
			attachment = this.getAttachment(slot.data.index,attachmentName);
			if(attachment == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("Attachment not found: " + attachmentName + ", for slot: " + slotName));
			}
		}
		if(slot.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = slot.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = slot.deform;
				this1.splice(0,this1.length);
			}
			slot.attachment = attachment;
			slot.attachmentTime = slot.bone.skeleton.time;
		}
	}
	,getIkConstraints: function() {
		return this.ikConstraints;
	}
	,findIkConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var ikConstraints = this.ikConstraints;
		var i = 0;
		var n = this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var ikConstraint = result;
			if(ikConstraint.data.name == constraintName) {
				return ikConstraint;
			}
			++i;
		}
		return null;
	}
	,getTransformConstraints: function() {
		return this.transformConstraints;
	}
	,findTransformConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var transformConstraints = this.transformConstraints;
		var i = 0;
		var n = this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			if(constraint.data.name == constraintName) {
				return constraint;
			}
			++i;
		}
		return null;
	}
	,getPathConstraints: function() {
		return this.pathConstraints;
	}
	,findPathConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var pathConstraints = this.pathConstraints;
		var i = 0;
		var n = this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			if(constraint.data.name == constraintName) {
				return constraint;
			}
			++i;
		}
		return null;
	}
	,getBounds: function(offset,size,temp) {
		if(offset == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("offset cannot be null."));
		}
		if(size == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("size cannot be null."));
		}
		if(temp == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("temp cannot be null."));
		}
		var drawOrder = this.drawOrder;
		var minX = 999999999;
		var minY = 999999999;
		var maxX = -999999999;
		var maxY = -999999999;
		var i = 0;
		var n = this.drawOrder.length;
		while(i < n) {
			var result = drawOrder[i];
			var slot = result;
			if(!slot.bone.active) {
				++i;
				continue;
			}
			var verticesLength = 0;
			var vertices = null;
			var attachment = slot.attachment;
			if(((attachment) instanceof spine_attachments_RegionAttachment)) {
				verticesLength = 8;
				var len = temp.length;
				if(len > 8) {
					temp.splice(8,8 - len);
				} else if(len < 8) {
					while(len < 8) {
						temp.push(0);
						++len;
					}
				}
				vertices = temp;
				var bone = slot.bone;
				var offset1 = 0;
				var result1 = attachment;
				var vertexOffset = result1.offset;
				var x = bone.worldX;
				var y = bone.worldY;
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var offsetX = 0;
				var offsetY = 0;
				offsetX = vertexOffset[6];
				offsetY = vertexOffset[7];
				vertices[offset1] = offsetX * a + offsetY * b + x;
				vertices[offset1 + 1] = offsetX * c + offsetY * d + y;
				offset1 += 2;
				offsetX = vertexOffset[0];
				offsetY = vertexOffset[1];
				vertices[offset1] = offsetX * a + offsetY * b + x;
				vertices[offset1 + 1] = offsetX * c + offsetY * d + y;
				offset1 += 2;
				offsetX = vertexOffset[2];
				offsetY = vertexOffset[3];
				vertices[offset1] = offsetX * a + offsetY * b + x;
				vertices[offset1 + 1] = offsetX * c + offsetY * d + y;
				offset1 += 2;
				offsetX = vertexOffset[4];
				offsetY = vertexOffset[5];
				vertices[offset1] = offsetX * a + offsetY * b + x;
				vertices[offset1 + 1] = offsetX * c + offsetY * d + y;
			} else if(((attachment) instanceof spine_attachments_MeshAttachment)) {
				var result2 = attachment;
				var mesh = result2;
				verticesLength = mesh.worldVerticesLength;
				var len1 = temp.length;
				if(len1 > verticesLength) {
					temp.splice(verticesLength,verticesLength - len1);
				} else if(len1 < verticesLength) {
					while(len1 < verticesLength) {
						temp.push(0);
						++len1;
					}
				}
				vertices = temp;
				var count = verticesLength;
				count = (count >> 1) * 2;
				var deformArray = slot.deform;
				var vertices1 = mesh.vertices;
				var bones = mesh.bones;
				if(bones == null) {
					if(deformArray.length > 0) {
						vertices1 = deformArray;
					}
					var bone1 = slot.bone;
					var x1 = bone1.worldX;
					var y1 = bone1.worldY;
					var a1 = bone1.a;
					var b1 = bone1.b;
					var c1 = bone1.c;
					var d1 = bone1.d;
					var v = 0;
					var w = 0;
					while(w < count) {
						var vx = vertices1[v];
						var vy = vertices1[v + 1];
						vertices[w] = vx * a1 + vy * b1 + x1;
						vertices[w + 1] = vx * c1 + vy * d1 + y1;
						v += 2;
						w += 2;
					}
				} else {
					var v1 = 0;
					var skip = 0;
					var i1 = 0;
					while(i1 < 0) {
						var n1 = bones[v1];
						v1 += n1 + 1;
						skip += n1;
						i1 += 2;
					}
					var skeletonBones = slot.bone.skeleton.getBones();
					if(deformArray.length == 0) {
						var w1 = 0;
						var b2 = skip * 3;
						while(w1 < count) {
							var wx = 0;
							var wy = 0;
							var n2 = bones[v1++];
							n2 += v1;
							while(v1 < n2) {
								var result3 = skeletonBones[bones[v1]];
								var bone2 = result3;
								var vx1 = vertices1[b2];
								var vy1 = vertices1[b2 + 1];
								var weight = vertices1[b2 + 2];
								wx += (vx1 * bone2.a + vy1 * bone2.b + bone2.worldX) * weight;
								wy += (vx1 * bone2.c + vy1 * bone2.d + bone2.worldY) * weight;
								++v1;
								b2 += 3;
							}
							vertices[w1] = wx;
							vertices[w1 + 1] = wy;
							w1 += 2;
						}
					} else {
						var deform = deformArray;
						var w2 = 0;
						var b3 = skip * 3;
						var f = skip << 1;
						while(w2 < count) {
							var wx1 = 0;
							var wy1 = 0;
							var n3 = bones[v1++];
							n3 += v1;
							while(v1 < n3) {
								var result4 = skeletonBones[bones[v1]];
								var bone3 = result4;
								var vx2 = vertices1[b3] + deform[f];
								var vy2 = vertices1[b3 + 1] + deform[f + 1];
								var weight1 = vertices1[b3 + 2];
								wx1 += (vx2 * bone3.a + vy2 * bone3.b + bone3.worldX) * weight1;
								wy1 += (vx2 * bone3.c + vy2 * bone3.d + bone3.worldY) * weight1;
								++v1;
								b3 += 3;
								f += 2;
							}
							vertices[w2] = wx1;
							vertices[w2 + 1] = wy1;
							w2 += 2;
						}
					}
				}
			}
			if(vertices != null) {
				var ii = 0;
				while(ii < verticesLength) {
					var x2 = vertices[ii];
					var y2 = vertices[ii + 1];
					minX = Math.min(minX,x2);
					minY = Math.min(minY,y2);
					maxX = Math.max(maxX,x2);
					maxY = Math.max(maxY,y2);
					ii += 2;
				}
			}
			++i;
		}
		offset.x = minX;
		offset.y = minY;
		size.x = maxX - minX;
		size.y = maxY - minY;
	}
	,getColor: function() {
		return this.color;
	}
	,setColor: function(color) {
		if(color == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("color cannot be null."));
		}
		var _this = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
	}
	,setColorWithRGBA: function(r,g,b,a) {
		var _this = this.color;
		_this.r = r;
		_this.g = g;
		_this.b = b;
		_this.a = a;
	}
	,getScaleX: function() {
		return this.scaleX;
	}
	,setScaleX: function(scaleX) {
		this.scaleX = scaleX;
	}
	,getScaleY: function() {
		return this.scaleY;
	}
	,setScaleY: function(scaleY) {
		this.scaleY = scaleY;
	}
	,setScale: function(scaleX,scaleY) {
		this.scaleX = scaleX;
		this.scaleY = scaleY;
	}
	,getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,setPosition: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,getTime: function() {
		return this.time;
	}
	,setTime: function(time) {
		this.time = time;
	}
	,update: function(delta) {
		this.time += delta;
	}
	,toString: function() {
		if(this.data.name != null) {
			return this.data.name;
		} else {
			var c = js_Boot.getClass(this);
			return c.__name__;
		}
	}
	,__class__: spine_Skeleton
};
var spine_SkeletonBounds = function() {
	this.polygonPool = new spine__$SkeletonBounds_PolygonPool();
	var this1 = [];
	this.polygons = this1;
	var this1 = [];
	this.boundingBoxes = this1;
	this.maxY = 0;
	this.maxX = 0;
	this.minY = 0;
	this.minX = 0;
};
$hxClasses["spine.SkeletonBounds"] = spine_SkeletonBounds;
spine_SkeletonBounds.__name__ = "spine.SkeletonBounds";
spine_SkeletonBounds.prototype = {
	update: function(skeleton,updateAabb) {
		if(skeleton == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
		}
		var boundingBoxes = this.boundingBoxes;
		var polygons = this.polygons;
		var slots = skeleton.slots;
		var slotCount = skeleton.slots.length;
		boundingBoxes.splice(0,boundingBoxes.length);
		this.polygonPool.freeAll(polygons);
		polygons.splice(0,polygons.length);
		var i = 0;
		while(i < slotCount) {
			var result = slots[i];
			var slot = result;
			if(!slot.bone.active) {
				++i;
				continue;
			}
			var attachment = slot.attachment;
			if(((attachment) instanceof spine_attachments_BoundingBoxAttachment)) {
				var result1 = attachment;
				var boundingBox = result1;
				boundingBoxes.push(boundingBox);
				var polygon = this.polygonPool.obtain();
				polygons.push(polygon);
				var count = boundingBox.worldVerticesLength;
				var size = boundingBox.worldVerticesLength;
				var len = polygon.length;
				if(len > size) {
					polygon.splice(size,size - len);
				} else if(len < size) {
					while(len < size) {
						polygon.push(0);
						++len;
					}
				}
				var worldVertices = polygon;
				count = (count >> 1) * 2;
				var deformArray = slot.deform;
				var vertices = boundingBox.vertices;
				var bones = boundingBox.bones;
				if(bones == null) {
					if(deformArray.length > 0) {
						vertices = deformArray;
					}
					var bone = slot.bone;
					var x = bone.worldX;
					var y = bone.worldY;
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var v = 0;
					var w = 0;
					while(w < count) {
						var vx = vertices[v];
						var vy = vertices[v + 1];
						worldVertices[w] = vx * a + vy * b + x;
						worldVertices[w + 1] = vx * c + vy * d + y;
						v += 2;
						w += 2;
					}
				} else {
					var v1 = 0;
					var skip = 0;
					var i1 = 0;
					while(i1 < 0) {
						var n = bones[v1];
						v1 += n + 1;
						skip += n;
						i1 += 2;
					}
					var skeletonBones = slot.bone.skeleton.getBones();
					if(deformArray.length == 0) {
						var w1 = 0;
						var b1 = skip * 3;
						while(w1 < count) {
							var wx = 0;
							var wy = 0;
							var n1 = bones[v1++];
							n1 += v1;
							while(v1 < n1) {
								var result2 = skeletonBones[bones[v1]];
								var bone1 = result2;
								var vx1 = vertices[b1];
								var vy1 = vertices[b1 + 1];
								var weight = vertices[b1 + 2];
								wx += (vx1 * bone1.a + vy1 * bone1.b + bone1.worldX) * weight;
								wy += (vx1 * bone1.c + vy1 * bone1.d + bone1.worldY) * weight;
								++v1;
								b1 += 3;
							}
							worldVertices[w1] = wx;
							worldVertices[w1 + 1] = wy;
							w1 += 2;
						}
					} else {
						var deform = deformArray;
						var w2 = 0;
						var b2 = skip * 3;
						var f = skip << 1;
						while(w2 < count) {
							var wx1 = 0;
							var wy1 = 0;
							var n2 = bones[v1++];
							n2 += v1;
							while(v1 < n2) {
								var result3 = skeletonBones[bones[v1]];
								var bone2 = result3;
								var vx2 = vertices[b2] + deform[f];
								var vy2 = vertices[b2 + 1] + deform[f + 1];
								var weight1 = vertices[b2 + 2];
								wx1 += (vx2 * bone2.a + vy2 * bone2.b + bone2.worldX) * weight1;
								wy1 += (vx2 * bone2.c + vy2 * bone2.d + bone2.worldY) * weight1;
								++v1;
								b2 += 3;
								f += 2;
							}
							worldVertices[w2] = wx1;
							worldVertices[w2 + 1] = wy1;
							w2 += 2;
						}
					}
				}
			}
			++i;
		}
		if(updateAabb) {
			var minX = 999999999;
			var minY = 999999999;
			var maxX = -999999999;
			var maxY = -999999999;
			var polygons = this.polygons;
			var i = 0;
			var n = this.polygons.length;
			while(i < n) {
				var polygon = polygons[i];
				var vertices = polygon;
				var ii = 0;
				var nn = polygon.length;
				while(ii < nn) {
					var x = vertices[ii];
					var y = vertices[ii + 1];
					minX = Math.min(minX,x);
					minY = Math.min(minY,y);
					maxX = Math.max(maxX,x);
					maxY = Math.max(maxY,y);
					ii += 2;
				}
				++i;
			}
			this.minX = minX;
			this.minY = minY;
			this.maxX = maxX;
			this.maxY = maxY;
		} else {
			this.minX = -999999999;
			this.minY = -999999999;
			this.maxX = 999999999;
			this.maxY = 999999999;
		}
	}
	,aabbCompute: function() {
		var minX = 999999999;
		var minY = 999999999;
		var maxX = -999999999;
		var maxY = -999999999;
		var polygons = this.polygons;
		var i = 0;
		var n = this.polygons.length;
		while(i < n) {
			var polygon = polygons[i];
			var vertices = polygon;
			var ii = 0;
			var nn = polygon.length;
			while(ii < nn) {
				var x = vertices[ii];
				var y = vertices[ii + 1];
				minX = Math.min(minX,x);
				minY = Math.min(minY,y);
				maxX = Math.max(maxX,x);
				maxY = Math.max(maxY,y);
				ii += 2;
			}
			++i;
		}
		this.minX = minX;
		this.minY = minY;
		this.maxX = maxX;
		this.maxY = maxY;
	}
	,aabbContainsPoint: function(x,y) {
		if(x >= this.minX && x <= this.maxX && y >= this.minY) {
			return y <= this.maxY;
		} else {
			return false;
		}
	}
	,aabbIntersectsSegment: function(x1,y1,x2,y2) {
		var minX = this.minX;
		var minY = this.minY;
		var maxX = this.maxX;
		var maxY = this.maxY;
		if(x1 <= minX && x2 <= minX || y1 <= minY && y2 <= minY || x1 >= maxX && x2 >= maxX || y1 >= maxY && y2 >= maxY) {
			return false;
		}
		var m = (y2 - y1) / (x2 - x1);
		var y = m * (minX - x1) + y1;
		if(y > minY && y < maxY) {
			return true;
		}
		y = m * (maxX - x1) + y1;
		if(y > minY && y < maxY) {
			return true;
		}
		var x = (minY - y1) / m + x1;
		if(x > minX && x < maxX) {
			return true;
		}
		x = (maxY - y1) / m + x1;
		if(x > minX && x < maxX) {
			return true;
		}
		return false;
	}
	,aabbIntersectsSkeleton: function(bounds) {
		if(bounds == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("bounds cannot be null."));
		}
		if(this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY) {
			return this.maxY > bounds.minY;
		} else {
			return false;
		}
	}
	,containsPoint: function(x,y) {
		var polygons = this.polygons;
		var i = 0;
		var n = this.polygons.length;
		while(i < n) {
			var polygon = polygons[i];
			if(polygon == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("polygon cannot be null."));
			}
			var vertices = polygon;
			var nn = polygon.length;
			var prevIndex = nn - 2;
			var inside = false;
			var ii = 0;
			while(ii < nn) {
				var vertexY = vertices[ii + 1];
				var prevY = vertices[prevIndex + 1];
				if(vertexY < y && prevY >= y || prevY < y && vertexY >= y) {
					var vertexX = vertices[ii];
					if(vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x) {
						inside = !inside;
					}
				}
				prevIndex = ii;
				ii += 2;
			}
			if(inside) {
				return this.boundingBoxes[i];
			}
			++i;
		}
		return null;
	}
	,polygonContainsPoint: function(polygon,x,y) {
		if(polygon == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("polygon cannot be null."));
		}
		var vertices = polygon;
		var nn = polygon.length;
		var prevIndex = nn - 2;
		var inside = false;
		var ii = 0;
		while(ii < nn) {
			var vertexY = vertices[ii + 1];
			var prevY = vertices[prevIndex + 1];
			if(vertexY < y && prevY >= y || prevY < y && vertexY >= y) {
				var vertexX = vertices[ii];
				if(vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x) {
					inside = !inside;
				}
			}
			prevIndex = ii;
			ii += 2;
		}
		return inside;
	}
	,intersectsSegment: function(x1,y1,x2,y2) {
		var polygons = this.polygons;
		var i = 0;
		var n = this.polygons.length;
		while(i < n) {
			if(this.polygonIntersectsSegment(polygons[i],x1,y1,x2,y2)) {
				return this.boundingBoxes[i];
			}
			++i;
		}
		return null;
	}
	,polygonIntersectsSegment: function(polygon,x1,y1,x2,y2) {
		if(polygon == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("polygon cannot be null."));
		}
		var vertices = polygon;
		var nn = polygon.length;
		var width12 = x1 - x2;
		var height12 = y1 - y2;
		var det1 = x1 * y2 - y1 * x2;
		var x3 = vertices[nn - 2];
		var y3 = vertices[nn - 1];
		var ii = 0;
		while(ii < nn) {
			var x4 = vertices[ii];
			var y4 = vertices[ii + 1];
			var det2 = x3 * y4 - y3 * x4;
			var width34 = x3 - x4;
			var height34 = y3 - y4;
			var det3 = width12 * height34 - height12 * width34;
			var x = (det1 * width34 - width12 * det2) / det3;
			if((x >= x3 && x <= x4 || x >= x4 && x <= x3) && (x >= x1 && x <= x2 || x >= x2 && x <= x1)) {
				var y = (det1 * height34 - height12 * det2) / det3;
				if((y >= y3 && y <= y4 || y >= y4 && y <= y3) && (y >= y1 && y <= y2 || y >= y2 && y <= y1)) {
					return true;
				}
			}
			x3 = x4;
			y3 = y4;
			ii += 2;
		}
		return false;
	}
	,getMinX: function() {
		return this.minX;
	}
	,getMinY: function() {
		return this.minY;
	}
	,getMaxX: function() {
		return this.maxX;
	}
	,getMaxY: function() {
		return this.maxY;
	}
	,getWidth: function() {
		return this.maxX - this.minX;
	}
	,getHeight: function() {
		return this.maxY - this.minY;
	}
	,getBoundingBoxes: function() {
		return this.boundingBoxes;
	}
	,getPolygons: function() {
		return this.polygons;
	}
	,getPolygon: function(boundingBox) {
		if(boundingBox == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("boundingBox cannot be null."));
		}
		var index = this.boundingBoxes.indexOf(boundingBox);
		if(index == -1) {
			return null;
		} else {
			return this.polygons[index];
		}
	}
	,__class__: spine_SkeletonBounds
};
var spine__$SkeletonBounds_PolygonPool = function(initialCapacity,max) {
	spine_support_utils_Pool.call(this,initialCapacity,max);
};
$hxClasses["spine._SkeletonBounds.PolygonPool"] = spine__$SkeletonBounds_PolygonPool;
spine__$SkeletonBounds_PolygonPool.__name__ = "spine._SkeletonBounds.PolygonPool";
spine__$SkeletonBounds_PolygonPool.__super__ = spine_support_utils_Pool;
spine__$SkeletonBounds_PolygonPool.prototype = $extend(spine_support_utils_Pool.prototype,{
	newObject: function() {
		var this1 = [];
		return this1;
	}
	,__class__: spine__$SkeletonBounds_PolygonPool
});
var spine_SkeletonData = function() {
	this.audioPath = null;
	this.fps = 30;
	this.hash = null;
	this.height = 0;
	this.width = 0;
	this.y = 0;
	this.x = 0;
	var this1 = [];
	this.pathConstraints = this1;
	var this1 = [];
	this.transformConstraints = this1;
	var this1 = [];
	this.ikConstraints = this1;
	var this1 = [];
	this.animations = this1;
	var this1 = [];
	this.events = this1;
	var this1 = [];
	this.skins = this1;
	var this1 = [];
	this.slots = this1;
	var this1 = [];
	this.bones = this1;
};
$hxClasses["spine.SkeletonData"] = spine_SkeletonData;
spine_SkeletonData.__name__ = "spine.SkeletonData";
spine_SkeletonData.prototype = {
	getBones: function() {
		return this.bones;
	}
	,findBone: function(boneName) {
		if(boneName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("boneName cannot be null."));
		}
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			if(bone.name == boneName) {
				return bone;
			}
			++i;
		}
		return null;
	}
	,getSlots: function() {
		return this.slots;
	}
	,findSlot: function(slotName) {
		if(slotName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotName cannot be null."));
		}
		var slots = this.slots;
		var i = 0;
		var n = this.slots.length;
		while(i < n) {
			var result = slots[i];
			var slot = result;
			if(slot.name == slotName) {
				return slot;
			}
			++i;
		}
		return null;
	}
	,getDefaultSkin: function() {
		return this.defaultSkin;
	}
	,setDefaultSkin: function(defaultSkin) {
		this.defaultSkin = defaultSkin;
	}
	,findSkin: function(skinName) {
		if(skinName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skinName cannot be null."));
		}
		var _g = 0;
		var _g1 = this.skins;
		while(_g < _g1.length) {
			var skin = _g1[_g];
			++_g;
			if(skin.name == skinName) {
				return skin;
			}
		}
		return null;
	}
	,getSkins: function() {
		return this.skins;
	}
	,findEvent: function(eventDataName) {
		if(eventDataName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("eventDataName cannot be null."));
		}
		var _g = 0;
		var _g1 = this.events;
		while(_g < _g1.length) {
			var eventData = _g1[_g];
			++_g;
			if(eventData.name == eventDataName) {
				return eventData;
			}
		}
		return null;
	}
	,getEvents: function() {
		return this.events;
	}
	,getAnimations: function() {
		return this.animations;
	}
	,findAnimation: function(animationName) {
		if(animationName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("animationName cannot be null."));
		}
		var animations = this.animations;
		var i = 0;
		var n = this.animations.length;
		while(i < n) {
			var result = animations[i];
			var animation = result;
			if(animation.name == animationName) {
				return animation;
			}
			++i;
		}
		return null;
	}
	,getIkConstraints: function() {
		return this.ikConstraints;
	}
	,findIkConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var ikConstraints = this.ikConstraints;
		var i = 0;
		var n = this.ikConstraints.length;
		while(i < n) {
			var result = ikConstraints[i];
			var constraint = result;
			if(constraint.name == constraintName) {
				return constraint;
			}
			++i;
		}
		return null;
	}
	,getTransformConstraints: function() {
		return this.transformConstraints;
	}
	,findTransformConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var transformConstraints = this.transformConstraints;
		var i = 0;
		var n = this.transformConstraints.length;
		while(i < n) {
			var result = transformConstraints[i];
			var constraint = result;
			if(constraint.name == constraintName) {
				return constraint;
			}
			++i;
		}
		return null;
	}
	,getPathConstraints: function() {
		return this.pathConstraints;
	}
	,findPathConstraint: function(constraintName) {
		if(constraintName == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("constraintName cannot be null."));
		}
		var pathConstraints = this.pathConstraints;
		var i = 0;
		var n = this.pathConstraints.length;
		while(i < n) {
			var result = pathConstraints[i];
			var constraint = result;
			if(constraint.name == constraintName) {
				return constraint;
			}
			++i;
		}
		return null;
	}
	,getName: function() {
		return this.name;
	}
	,setName: function(name) {
		this.name = name;
	}
	,getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,getWidth: function() {
		return this.width;
	}
	,setWidth: function(width) {
		this.width = width;
	}
	,getHeight: function() {
		return this.height;
	}
	,setHeight: function(height) {
		this.height = height;
	}
	,getVersion: function() {
		return this.version;
	}
	,setVersion: function(version) {
		this.version = version;
	}
	,getHash: function() {
		return this.hash;
	}
	,setHash: function(hash) {
		this.hash = hash;
	}
	,getImagesPath: function() {
		return this.imagesPath;
	}
	,setImagesPath: function(imagesPath) {
		this.imagesPath = imagesPath;
	}
	,getAudioPath: function() {
		return this.audioPath;
	}
	,setAudioPath: function(audioPath) {
		this.audioPath = audioPath;
	}
	,getFps: function() {
		return this.fps;
	}
	,setFps: function(fps) {
		this.fps = fps;
	}
	,toString: function() {
		if(this.name != null) {
			return this.name;
		} else {
			var c = js_Boot.getClass(this);
			return c.__name__;
		}
	}
	,__class__: spine_SkeletonData
};
var spine_SkeletonLoader = function(attachmentLoader) {
	var this1 = [];
	this.linkedMeshes = this1;
	this.scale = 1;
	if(attachmentLoader == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachmentLoader cannot be null."));
	}
	this.attachmentLoader = attachmentLoader;
};
$hxClasses["spine.SkeletonLoader"] = spine_SkeletonLoader;
spine_SkeletonLoader.__name__ = "spine.SkeletonLoader";
spine_SkeletonLoader.prototype = {
	getScale: function() {
		return this.scale;
	}
	,setScale: function(scale) {
		if(scale == 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("scale cannot be 0."));
		}
		this.scale = scale;
	}
	,__class__: spine_SkeletonLoader
};
var spine_SkeletonJson = function(attachmentLoader) {
	spine_SkeletonLoader.call(this,attachmentLoader);
};
$hxClasses["spine.SkeletonJson"] = spine_SkeletonJson;
spine_SkeletonJson.__name__ = "spine.SkeletonJson";
spine_SkeletonJson.setBezier = function(timeline,frame,value,bezier,time1,value1,cx1,cy1,cx2,cy2,time2,value2) {
	timeline.setBezier(bezier,frame,value,time1,value1,cx1,cy1,cx2,cy2,time2,value2);
};
spine_SkeletonJson.__super__ = spine_SkeletonLoader;
spine_SkeletonJson.prototype = $extend(spine_SkeletonLoader.prototype,{
	readSkeletonData: function(root) {
		if(root == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("root cannot be null."));
		}
		var scale = this.scale;
		var skeletonData = new spine_SkeletonData();
		var skeletonMap = root.get("skeleton");
		if(skeletonMap != null) {
			skeletonData.hash = skeletonMap.getString("hash",null);
			skeletonData.version = skeletonMap.getString("spine",null);
			skeletonData.x = skeletonMap.getFloat("x",0);
			skeletonData.y = skeletonMap.getFloat("y",0);
			skeletonData.width = skeletonMap.getFloat("width",0);
			skeletonData.height = skeletonMap.getFloat("height",0);
			skeletonData.fps = skeletonMap.getFloat("fps",30);
			skeletonData.imagesPath = skeletonMap.getString("images",null);
			skeletonData.audioPath = skeletonMap.getString("audio",null);
		}
		var boneMap = root.getChild("bones");
		while(boneMap != null) {
			var parent = null;
			var parentName = boneMap.getString("parent",null);
			if(parentName != null) {
				parent = skeletonData.findBone(parentName);
				if(parent == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Parent bone not found: " + parentName));
				}
			}
			var data = new spine_BoneData(skeletonData.bones.length,boneMap.getString("name"),parent);
			data.length = boneMap.getFloat("length",0) * scale;
			data.x = boneMap.getFloat("x",0) * scale;
			data.y = boneMap.getFloat("y",0) * scale;
			data.rotation = boneMap.getFloat("rotation",0);
			data.scaleX = boneMap.getFloat("scaleX",1);
			data.scaleY = boneMap.getFloat("scaleY",1);
			data.shearX = boneMap.getFloat("shearX",0);
			data.shearY = boneMap.getFloat("shearY",0);
			var tmp;
			switch(boneMap.getString("transform","normal")) {
			case "noRotationOrReflection":
				tmp = 2;
				break;
			case "noScale":
				tmp = 3;
				break;
			case "noScaleOrReflection":
				tmp = 4;
				break;
			case "normal":
				tmp = 0;
				break;
			case "onlyTranslation":
				tmp = 1;
				break;
			default:
				tmp = 0;
			}
			data.transformMode = tmp;
			data.skinRequired = boneMap.getBoolean("skin",false);
			var color = boneMap.getString("color",null);
			if(color != null) {
				spine_support_graphics_Color.valueOfIntoColor(color,data.color);
			}
			skeletonData.bones.push(data);
			boneMap = boneMap.get_next();
		}
		var slotMap = root.getChild("slots");
		while(slotMap != null) {
			var slotName = slotMap.getString("name");
			var boneName = slotMap.getString("bone");
			var boneData = skeletonData.findBone(boneName);
			if(boneData == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Slot bone not found: " + boneName));
			}
			var data = new spine_SlotData(skeletonData.slots.length,slotName,boneData);
			var color = slotMap.getString("color",null);
			if(color != null) {
				spine_support_graphics_Color.valueOfIntoColor(color,data.color);
			}
			var dark = slotMap.getString("dark",null);
			if(dark != null) {
				data.darkColor = spine_support_graphics_Color.valueOf(dark);
			}
			data.attachmentName = slotMap.getString("attachment",null);
			var tmp;
			switch(slotMap.getString("blend","normal")) {
			case "additive":
				tmp = 1;
				break;
			case "multiply":
				tmp = 2;
				break;
			case "normal":
				tmp = 0;
				break;
			case "screen":
				tmp = 3;
				break;
			default:
				tmp = 0;
			}
			data.blendMode = tmp;
			skeletonData.slots.push(data);
			slotMap = slotMap.get_next();
		}
		var constraintMap = root.getChild("ik");
		while(constraintMap != null) {
			var data = new spine_IkConstraintData(constraintMap.getString("name"));
			data.order = constraintMap.getInt("order",0);
			data.skinRequired = constraintMap.getBoolean("skin",false);
			var entry = constraintMap.getChild("bones");
			while(entry != null) {
				var bone = skeletonData.findBone(entry.asString());
				if(bone == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("IK bone not found: " + Std.string(entry)));
				}
				data.bones.push(bone);
				entry = entry.get_next();
			}
			var targetName = constraintMap.getString("target");
			data.target = skeletonData.findBone(targetName);
			if(data.target == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("IK target bone not found: " + targetName));
			}
			data.mix = constraintMap.getFloat("mix",1);
			data.softness = constraintMap.getFloat("softness",0) * scale;
			data.bendDirection = constraintMap.getBoolean("bendPositive",true) ? 1 : -1;
			data.compress = constraintMap.getBoolean("compress",false);
			data.stretch = constraintMap.getBoolean("stretch",false);
			data.uniform = constraintMap.getBoolean("uniform",false);
			skeletonData.ikConstraints.push(data);
			constraintMap = constraintMap.get_next();
		}
		var constraintMap = root.getChild("transform");
		while(constraintMap != null) {
			var data = new spine_TransformConstraintData(constraintMap.getString("name"));
			data.order = constraintMap.getInt("order",0);
			data.skinRequired = constraintMap.getBoolean("skin",false);
			var entry = constraintMap.getChild("bones");
			while(entry != null) {
				var bone = skeletonData.findBone(entry.asString());
				if(bone == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Transform constraint bone not found: " + Std.string(entry)));
				}
				data.bones.push(bone);
				entry = entry.get_next();
			}
			var targetName = constraintMap.getString("target");
			data.target = skeletonData.findBone(targetName);
			if(data.target == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Transform constraint target bone not found: " + targetName));
			}
			data.local = constraintMap.getBoolean("local",false);
			data.relative = constraintMap.getBoolean("relative",false);
			data.offsetRotation = constraintMap.getFloat("rotation",0);
			data.offsetX = constraintMap.getFloat("x",0) * scale;
			data.offsetY = constraintMap.getFloat("y",0) * scale;
			data.offsetScaleX = constraintMap.getFloat("scaleX",0);
			data.offsetScaleY = constraintMap.getFloat("scaleY",0);
			data.offsetShearY = constraintMap.getFloat("shearY",0);
			data.mixRotate = constraintMap.getFloat("mixRotate",1);
			data.mixX = constraintMap.getFloat("mixX",1);
			data.mixY = constraintMap.getFloat("mixY",data.mixX);
			data.mixScaleX = constraintMap.getFloat("mixScaleX",1);
			data.mixScaleY = constraintMap.getFloat("mixScaleY",data.mixScaleX);
			data.mixShearY = constraintMap.getFloat("mixShearY",1);
			skeletonData.transformConstraints.push(data);
			constraintMap = constraintMap.get_next();
		}
		var constraintMap = root.getChild("path");
		while(constraintMap != null) {
			var data = new spine_PathConstraintData(constraintMap.getString("name"));
			data.order = constraintMap.getInt("order",0);
			data.skinRequired = constraintMap.getBoolean("skin",false);
			var entry = constraintMap.getChild("bones");
			while(entry != null) {
				var bone = skeletonData.findBone(entry.asString());
				if(bone == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Path bone not found: " + Std.string(entry)));
				}
				data.bones.push(bone);
				entry = entry.get_next();
			}
			var targetName = constraintMap.getString("target");
			data.target = skeletonData.findSlot(targetName);
			if(data.target == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Path target slot not found: " + targetName));
			}
			var tmp;
			switch(constraintMap.getString("positionMode","percent")) {
			case "fixed":
				tmp = 0;
				break;
			case "percent":
				tmp = 1;
				break;
			default:
				tmp = 0;
			}
			data.positionMode = tmp;
			var tmp1;
			switch(constraintMap.getString("spacingMode","length")) {
			case "fixed":
				tmp1 = 1;
				break;
			case "length":
				tmp1 = 0;
				break;
			case "percent":
				tmp1 = 2;
				break;
			case "proportional":
				tmp1 = 3;
				break;
			default:
				tmp1 = 0;
			}
			data.spacingMode = tmp1;
			var tmp2;
			switch(constraintMap.getString("rotateMode","tangent")) {
			case "chain":
				tmp2 = 1;
				break;
			case "chainScale":
				tmp2 = 2;
				break;
			case "tangent":
				tmp2 = 0;
				break;
			default:
				tmp2 = 0;
			}
			data.rotateMode = tmp2;
			data.offsetRotation = constraintMap.getFloat("rotation",0);
			data.position = constraintMap.getFloat("position",0);
			if(data.positionMode == 0) {
				data.position *= scale;
			}
			data.spacing = constraintMap.getFloat("spacing",0);
			if(data.spacingMode == 0 || data.spacingMode == 1) {
				data.spacing *= scale;
			}
			data.mixRotate = constraintMap.getFloat("mixRotate",1);
			data.mixX = constraintMap.getFloat("mixX",1);
			data.mixY = constraintMap.getFloat("mixY",1);
			skeletonData.pathConstraints.push(data);
			constraintMap = constraintMap.get_next();
		}
		var skinMap = root.getChild("skins");
		while(skinMap != null) {
			var skin = new spine_Skin(skinMap.getString("name"));
			var entry = skinMap.getChild("bones");
			while(entry != null) {
				var bone = skeletonData.findBone(entry.asString());
				if(bone == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin bone not found: " + Std.string(entry)));
				}
				skin.bones.push(bone);
				entry = entry.get_next();
			}
			var entry1 = skinMap.getChild("ik");
			while(entry1 != null) {
				var constraint = skeletonData.findIkConstraint(entry1.asString());
				if(constraint == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin IK constraint not found: " + Std.string(entry1)));
				}
				skin.constraints.push(constraint);
				entry1 = entry1.get_next();
			}
			var entry2 = skinMap.getChild("transform");
			while(entry2 != null) {
				var constraint1 = skeletonData.findTransformConstraint(entry2.asString());
				if(constraint1 == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin transform constraint not found: " + Std.string(entry2)));
				}
				skin.constraints.push(constraint1);
				entry2 = entry2.get_next();
			}
			var entry3 = skinMap.getChild("path");
			while(entry3 != null) {
				var constraint2 = skeletonData.findPathConstraint(entry3.asString());
				if(constraint2 == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin path constraint not found: " + Std.string(entry3)));
				}
				skin.constraints.push(constraint2);
				entry3 = entry3.get_next();
			}
			var slotEntry = skinMap.getChild("attachments");
			while(slotEntry != null) {
				var slot = skeletonData.findSlot(slotEntry.get_name());
				if(slot == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Slot not found: " + slotEntry.get_name()));
				}
				var entry4 = slotEntry.get_child();
				while(entry4 != null) {
					try {
						var attachment = this.readAttachment(entry4,skin,slot.index,entry4.get_name(),skeletonData);
						if(attachment != null) {
							var slotIndex = slot.index;
							var name = entry4.get_name();
							if(attachment == null) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachment cannot be null."));
							}
							var entry5 = new spine_SkinEntry(slotIndex,name,attachment);
							if(!spine_support_utils_AttachmentSet.add(skin.attachments,entry5)) {
								var entries = skin.attachments.h[entry5.hashCode];
								var result = null;
								if(entries != null) {
									var _g = 0;
									var _g1 = entries.length;
									while(_g < _g1) {
										var i = _g++;
										var entry6 = entries[i];
										var object = entry5;
										var tmp;
										if(object == null) {
											tmp = false;
										} else {
											var result1 = object;
											var other = result1;
											tmp = entry6.slotIndex != other.slotIndex ? false : entry6.name == other.name;
										}
										if(tmp) {
											result = entry6;
											break;
										}
									}
								}
								result.attachment = attachment;
							}
						}
					} catch( _g2 ) {
						haxe_NativeStackTrace.lastError = _g2;
						var ex = haxe_Exception.caught(_g2).unwrap();
						throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Error reading attachment: " + entry4.get_name() + ", skin: " + Std.string(skin),ex));
					}
					entry4 = entry4.get_next();
				}
				slotEntry = slotEntry.get_next();
			}
			skeletonData.skins.push(skin);
			if(skin.name == "default") {
				skeletonData.defaultSkin = skin;
			}
			skinMap = skinMap.get_next();
		}
		var items = this.linkedMeshes;
		var i = 0;
		var n = this.linkedMeshes.length;
		while(i < n) {
			var result = items[i];
			var linkedMesh = result;
			var skin = linkedMesh.skin == null ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);
			if(skin == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin not found: " + linkedMesh.skin));
			}
			var slotIndex = linkedMesh.slotIndex;
			var name = linkedMesh.parent;
			var _this = skin.lookup;
			if(slotIndex < 0) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
			}
			if(name == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
			}
			_this.slotIndex = slotIndex;
			_this.name = name;
			var hash = 0;
			var chr;
			var x;
			if(name.length == 0) {
				x = hash;
			} else {
				var _g = 0;
				var _g1 = name.length;
				while(_g < _g1) {
					var i1 = _g++;
					chr = HxOverrides.cca(name,i1);
					hash = (hash << 5) - hash + chr;
				}
				x = hash;
			}
			_this.hashCode = x + slotIndex * 37 | 0;
			var key = skin.lookup;
			var entries = skin.attachments.h[key.hashCode];
			var result1 = null;
			if(entries != null) {
				var _g2 = 0;
				var _g3 = entries.length;
				while(_g2 < _g3) {
					var i2 = _g2++;
					var entry = entries[i2];
					var object = key;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result2 = object;
						var other = result2;
						tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
					}
					if(tmp) {
						result1 = entry;
						break;
					}
				}
			}
			var entry1 = result1;
			var parent = entry1 != null ? entry1.attachment : null;
			if(parent == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Parent mesh not found: " + linkedMesh.parent));
			}
			var deformAttachment;
			if(linkedMesh.inheritDeform) {
				var result3 = parent;
				deformAttachment = result3;
			} else {
				deformAttachment = linkedMesh.mesh;
			}
			linkedMesh.mesh.deformAttachment = deformAttachment;
			var _this1 = linkedMesh.mesh;
			var result4 = parent;
			var parentMesh = result4;
			_this1.parentMesh = parentMesh;
			if(parentMesh != null) {
				_this1.bones = parentMesh.bones;
				_this1.vertices = parentMesh.vertices;
				_this1.regionUVs = parentMesh.regionUVs;
				_this1.triangles = parentMesh.triangles;
				_this1.hullLength = parentMesh.hullLength;
				_this1.worldVerticesLength = parentMesh.worldVerticesLength;
				_this1.edges = parentMesh.edges;
				_this1.width = parentMesh.width;
				_this1.height = parentMesh.height;
			}
			linkedMesh.mesh.updateUVs();
			++i;
		}
		var this1 = this.linkedMeshes;
		this1.splice(0,this1.length);
		var eventMap = root.getChild("events");
		while(eventMap != null) {
			var data = new spine_EventData(eventMap.get_name());
			data.intValue = eventMap.getInt("int",0);
			data.floatValue = eventMap.getFloat("float",0);
			data.stringValue = eventMap.getString("string","");
			data.audioPath = eventMap.getString("audio",null);
			if(data.audioPath != null) {
				data.volume = eventMap.getFloat("volume",1);
				data.balance = eventMap.getFloat("balance",0);
			}
			skeletonData.events.push(data);
			eventMap = eventMap.get_next();
		}
		var animationMap = root.getChild("animations");
		while(animationMap != null) {
			try {
				this.readAnimation(animationMap,animationMap.get_name(),skeletonData);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				var ex = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Error reading animation: " + animationMap.get_name(),ex));
			}
			animationMap = animationMap.get_next();
		}
		return skeletonData;
	}
	,readAttachment: function(map,skin,slotIndex,name,skeletonData) {
		var scale = this.scale;
		name = map.getString("name",name);
		var _continueAfterSwitch0 = false;
		while(true) {
			var _switchCond0;
			switch(map.getString("type","region")) {
			case "boundingbox":
				_switchCond0 = 1;
				break;
			case "clipping":
				_switchCond0 = 6;
				break;
			case "linkedmesh":
				_switchCond0 = 3;
				break;
			case "mesh":
				_switchCond0 = 2;
				break;
			case "path":
				_switchCond0 = 4;
				break;
			case "point":
				_switchCond0 = 5;
				break;
			case "region":
				_switchCond0 = 0;
				break;
			default:
				_switchCond0 = 0;
			}
			if(_switchCond0 == 0) {
				var path = map.getString("path",name);
				var region = this.attachmentLoader.newRegionAttachment(skin,name,path);
				if(region == null) {
					return null;
				}
				region.path = path;
				region.x = map.getFloat("x",0) * scale;
				region.y = map.getFloat("y",0) * scale;
				region.scaleX = map.getFloat("scaleX",1);
				region.scaleY = map.getFloat("scaleY",1);
				region.rotation = map.getFloat("rotation",0);
				region.width = map.getFloat("width") * scale;
				region.height = map.getFloat("height") * scale;
				var color = map.getString("color",null);
				if(color != null) {
					spine_support_graphics_Color.valueOfIntoColor(color,region.color);
				}
				var width = region.width;
				var height = region.height;
				var localX2 = width / 2;
				var localY2 = height / 2;
				var localX = -localX2;
				var localY = -localY2;
				if(((region.region) instanceof spine_support_graphics_AtlasRegion)) {
					var result = region.region;
					var region1 = result;
					localX += region1.offsetX / region1.originalWidth * width;
					localY += region1.offsetY / region1.originalHeight * height;
					if(region1.degrees == 90) {
						localX2 -= (region1.originalWidth - region1.offsetX - region1.packedHeight) / region1.originalWidth * width;
						localY2 -= (region1.originalHeight - region1.offsetY - region1.packedWidth) / region1.originalHeight * height;
					} else {
						localX2 -= (region1.originalWidth - region1.offsetX - region1.packedWidth) / region1.originalWidth * width;
						localY2 -= (region1.originalHeight - region1.offsetY - region1.packedHeight) / region1.originalHeight * height;
					}
				}
				var scaleX = region.scaleX;
				var scaleY = region.scaleY;
				localX *= scaleX;
				localY *= scaleY;
				localX2 *= scaleX;
				localY2 *= scaleY;
				var rotation = region.rotation;
				var cos = Math.cos(spine_utils_SpineUtils.degRad * rotation);
				var sin = Math.sin(spine_utils_SpineUtils.degRad * rotation);
				var x = region.x;
				var y = region.y;
				var localXCos = localX * cos + x;
				var localXSin = localX * sin;
				var localYCos = localY * cos + y;
				var localYSin = localY * sin;
				var localX2Cos = localX2 * cos + x;
				var localX2Sin = localX2 * sin;
				var localY2Cos = localY2 * cos + y;
				var localY2Sin = localY2 * sin;
				var offset = region.offset;
				offset[0] = localXCos - localYSin;
				offset[1] = localYCos + localXSin;
				offset[2] = localXCos - localY2Sin;
				offset[3] = localY2Cos + localXSin;
				offset[4] = localX2Cos - localY2Sin;
				offset[5] = localY2Cos + localX2Sin;
				offset[6] = localX2Cos - localYSin;
				offset[7] = localYCos + localX2Sin;
				return region;
			} else if(_switchCond0 == 1) {
				var box = this.attachmentLoader.newBoundingBoxAttachment(skin,name);
				if(box == null) {
					return null;
				}
				this.readVertices(map,box,map.getInt("vertexCount") << 1);
				var color1 = map.getString("color",null);
				if(color1 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color1,box.color);
				}
				return box;
			} else if(_switchCond0 == 2) {
				var path1 = map.getString("path",name);
				var mesh = this.attachmentLoader.newMeshAttachment(skin,name,path1);
				if(mesh == null) {
					return null;
				}
				mesh.path = path1;
				var color2 = map.getString("color",null);
				if(color2 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color2,mesh.color);
				}
				mesh.width = map.getFloat("width",0) * scale;
				mesh.height = map.getFloat("height",0) * scale;
				var parent = map.getString("parent",null);
				if(parent != null) {
					this.linkedMeshes.push(new spine_LinkedMesh(mesh,map.getString("skin",null),slotIndex,parent,map.getBoolean("deform",true)));
					return mesh;
				}
				var uvs = map.require("uvs").asFloatArray();
				this.readVertices(map,mesh,uvs.length);
				mesh.triangles = map.require("triangles").asShortArray();
				mesh.regionUVs = uvs;
				mesh.updateUVs();
				if(map.has("hull")) {
					mesh.hullLength = map.require("hull").asInt() << 1;
				}
				if(map.has("edges")) {
					mesh.edges = map.require("edges").asShortArray();
				}
				return mesh;
			} else if(_switchCond0 == 3) {
				var path2 = map.getString("path",name);
				var mesh1 = this.attachmentLoader.newMeshAttachment(skin,name,path2);
				if(mesh1 == null) {
					return null;
				}
				mesh1.path = path2;
				var color3 = map.getString("color",null);
				if(color3 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color3,mesh1.color);
				}
				mesh1.width = map.getFloat("width",0) * scale;
				mesh1.height = map.getFloat("height",0) * scale;
				var parent1 = map.getString("parent",null);
				if(parent1 != null) {
					this.linkedMeshes.push(new spine_LinkedMesh(mesh1,map.getString("skin",null),slotIndex,parent1,map.getBoolean("deform",true)));
					return mesh1;
				}
				var uvs1 = map.require("uvs").asFloatArray();
				this.readVertices(map,mesh1,uvs1.length);
				mesh1.triangles = map.require("triangles").asShortArray();
				mesh1.regionUVs = uvs1;
				mesh1.updateUVs();
				if(map.has("hull")) {
					mesh1.hullLength = map.require("hull").asInt() << 1;
				}
				if(map.has("edges")) {
					mesh1.edges = map.require("edges").asShortArray();
				}
				return mesh1;
			} else if(_switchCond0 == 4) {
				var path3 = this.attachmentLoader.newPathAttachment(skin,name);
				if(path3 == null) {
					return null;
				}
				path3.closed = map.getBoolean("closed",false);
				path3.constantSpeed = map.getBoolean("constantSpeed",true);
				var vertexCount = map.getInt("vertexCount");
				this.readVertices(map,path3,vertexCount << 1);
				var length = vertexCount / 3;
				if(length == null) {
					length = 0;
				}
				var len = length | 0;
				var capacity = len != 0 ? len : 16;
				var this1 = [];
				var array = this1;
				if(length > 0) {
					var len1 = array.length;
					if(len1 > len) {
						array.splice(len,len - len1);
					} else if(len1 < len) {
						while(len1 < len) {
							array.push(0);
							++len1;
						}
					}
				}
				var lengths = array;
				var i = 0;
				var curves = map.require("lengths").get_child();
				while(curves != null) {
					lengths[i++] = curves.asFloat() * scale;
					curves = curves.get_next();
				}
				path3.lengths = lengths;
				var color4 = map.getString("color",null);
				if(color4 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color4,path3.color);
				}
				return path3;
			} else if(_switchCond0 == 5) {
				var point = this.attachmentLoader.newPointAttachment(skin,name);
				if(point == null) {
					return null;
				}
				point.x = map.getFloat("x",0) * scale;
				point.y = map.getFloat("y",0) * scale;
				point.rotation = map.getFloat("rotation",0);
				var color5 = map.getString("color",null);
				if(color5 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color5,point.color);
				}
				return point;
			} else if(_switchCond0 == 6) {
				var clip = this.attachmentLoader.newClippingAttachment(skin,name);
				if(clip == null) {
					return null;
				}
				var end = map.getString("end",null);
				if(end != null) {
					var slot = skeletonData.findSlot(end);
					if(slot == null) {
						throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Clipping end slot not found: " + end));
					}
					clip.endSlot = slot;
				}
				this.readVertices(map,clip,map.getInt("vertexCount") << 1);
				var color6 = map.getString("color",null);
				if(color6 != null) {
					spine_support_graphics_Color.valueOfIntoColor(color6,clip.color);
				}
				return clip;
			}
			break;
		}
		return null;
	}
	,readVertices: function(map,attachment,verticesLength) {
		attachment.worldVerticesLength = verticesLength;
		var vertices = map.require("vertices").asFloatArray();
		if(verticesLength == vertices.length) {
			if(this.scale != 1) {
				var i = 0;
				var n = vertices.length;
				while(i < n) {
					vertices[i] *= this.scale;
					++i;
				}
			}
			attachment.vertices = vertices;
			return;
		}
		var capacity = verticesLength * 3 * 3;
		var this1 = [];
		var weights = this1;
		var capacity = verticesLength * 3;
		var this1 = [];
		var bones = this1;
		var i = 0;
		var n = vertices.length;
		while(i < n) {
			var boneCount = vertices[i++] | 0;
			bones.push(boneCount);
			var nn = i + (boneCount << 2);
			while(i < nn) {
				bones.push(vertices[i] | 0);
				weights.push(vertices[i + 1] * this.scale);
				weights.push(vertices[i + 2] * this.scale);
				weights.push(vertices[i + 3]);
				i += 4;
			}
		}
		attachment.bones = bones;
		attachment.vertices = weights;
	}
	,readAnimation: function(map,name,skeletonData) {
		var scale = this.scale;
		var this1 = [];
		var timelines = this1;
		var slotMap = map.getChild("slots");
		while(slotMap != null) {
			var slot = skeletonData.findSlot(slotMap.get_name());
			if(slot == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Slot not found: " + slotMap.get_name()));
			}
			var timelineMap = slotMap.get_child();
			while(timelineMap != null) {
				var keyMap = timelineMap.get_child();
				if(keyMap == null) {
					timelineMap = timelineMap.get_next();
					continue;
				}
				var timelineName = timelineMap.get_name();
				if(timelineName == "attachment") {
					var timeline = new spine_AttachmentTimeline(timelineMap.get_size(),slot.index);
					var frame = 0;
					while(keyMap != null) {
						var time = keyMap.getFloat("time",0);
						var attachmentName = keyMap.getString("name");
						timeline.frames[frame] = time;
						timeline.attachmentNames[frame] = attachmentName;
						keyMap = keyMap.get_next();
						++frame;
					}
					timelines.push(timeline);
				} else if(timelineName == "rgba") {
					var timeline1 = new spine_RGBATimeline(timelineMap.get_size(),timelineMap.get_size() << 2,slot.index);
					var time1 = keyMap.getFloat("time",0);
					var color = keyMap.getString("color");
					var val = color.substring(0,2);
					var r = Std.parseInt("0x" + val) / 255;
					var val1 = color.substring(2,4);
					var g = Std.parseInt("0x" + val1) / 255;
					var val2 = color.substring(4,6);
					var b = Std.parseInt("0x" + val2) / 255;
					var val3 = color.substring(6,8);
					var a = Std.parseInt("0x" + val3) / 255;
					var frame1 = 0;
					var bezier = 0;
					while(true) {
						var frame2 = frame1;
						frame2 *= 5;
						timeline1.frames[frame2] = time1;
						timeline1.frames[frame2 + 1] = r;
						timeline1.frames[frame2 + 2] = g;
						timeline1.frames[frame2 + 3] = b;
						timeline1.frames[frame2 + 4] = a;
						var nextMap = keyMap.get_next();
						if(nextMap == null) {
							timeline1.shrink(bezier);
							break;
						}
						var time2 = nextMap.getFloat("time",0);
						color = nextMap.getString("color");
						var val4 = color.substring(0,2);
						var nr = Std.parseInt("0x" + val4) / 255;
						var val5 = color.substring(2,4);
						var ng = Std.parseInt("0x" + val5) / 255;
						var val6 = color.substring(4,6);
						var nb = Std.parseInt("0x" + val6) / 255;
						var val7 = color.substring(6,8);
						var na = Std.parseInt("0x" + val7) / 255;
						var curve = keyMap.get("curve");
						if(curve != null) {
							var curve1 = curve;
							if(curve1.isString()) {
								if(curve1.asString() == "stepped") {
									timeline1.setStepped(frame1);
								}
							} else {
								curve1 = curve1.getAtIndex(0);
								var cx1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cx2 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy2 = curve1.asFloat();
								timeline1.setBezier(bezier,frame1,0,time1,r,cx1,cy1,cx2,cy2,time2,nr);
								++bezier;
							}
							var curve2 = curve;
							if(curve2.isString()) {
								if(curve2.asString() == "stepped") {
									timeline1.setStepped(frame1);
								}
							} else {
								curve2 = curve2.getAtIndex(4);
								var cx11 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cy11 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cx21 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cy21 = curve2.asFloat();
								timeline1.setBezier(bezier,frame1,1,time1,g,cx11,cy11,cx21,cy21,time2,ng);
								++bezier;
							}
							var curve3 = curve;
							if(curve3.isString()) {
								if(curve3.asString() == "stepped") {
									timeline1.setStepped(frame1);
								}
							} else {
								curve3 = curve3.getAtIndex(8);
								var cx12 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cy12 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cx22 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cy22 = curve3.asFloat();
								timeline1.setBezier(bezier,frame1,2,time1,b,cx12,cy12,cx22,cy22,time2,nb);
								++bezier;
							}
							var curve4 = curve;
							if(curve4.isString()) {
								if(curve4.asString() == "stepped") {
									timeline1.setStepped(frame1);
								}
							} else {
								curve4 = curve4.getAtIndex(12);
								var cx13 = curve4.asFloat();
								curve4 = curve4.get_next();
								var cy13 = curve4.asFloat();
								curve4 = curve4.get_next();
								var cx23 = curve4.asFloat();
								curve4 = curve4.get_next();
								var cy23 = curve4.asFloat();
								timeline1.setBezier(bezier,frame1,3,time1,a,cx13,cy13,cx23,cy23,time2,na);
								++bezier;
							}
						}
						time1 = time2;
						r = nr;
						g = ng;
						b = nb;
						a = na;
						keyMap = nextMap;
						++frame1;
					}
					timelines.push(timeline1);
				} else if(timelineName == "rgb") {
					var timeline2 = new spine_RGBTimeline(timelineMap.get_size(),timelineMap.get_size() * 3,slot.index);
					var time3 = keyMap.getFloat("time",0);
					var color1 = keyMap.getString("color");
					var val8 = color1.substring(0,2);
					var r1 = Std.parseInt("0x" + val8) / 255;
					var val9 = color1.substring(2,4);
					var g1 = Std.parseInt("0x" + val9) / 255;
					var val10 = color1.substring(4,6);
					var b1 = Std.parseInt("0x" + val10) / 255;
					var frame3 = 0;
					var bezier1 = 0;
					while(true) {
						var frame4 = frame3;
						frame4 <<= 2;
						timeline2.frames[frame4] = time3;
						timeline2.frames[frame4 + 1] = r1;
						timeline2.frames[frame4 + 2] = g1;
						timeline2.frames[frame4 + 3] = b1;
						var nextMap1 = keyMap.get_next();
						if(nextMap1 == null) {
							timeline2.shrink(bezier1);
							break;
						}
						var time21 = nextMap1.getFloat("time",0);
						color1 = nextMap1.getString("color");
						var val11 = color1.substring(0,2);
						var nr1 = Std.parseInt("0x" + val11) / 255;
						var val12 = color1.substring(2,4);
						var ng1 = Std.parseInt("0x" + val12) / 255;
						var val13 = color1.substring(4,6);
						var nb1 = Std.parseInt("0x" + val13) / 255;
						var curve5 = keyMap.get("curve");
						if(curve5 != null) {
							var curve6 = curve5;
							if(curve6.isString()) {
								if(curve6.asString() == "stepped") {
									timeline2.setStepped(frame3);
								}
							} else {
								curve6 = curve6.getAtIndex(0);
								var cx14 = curve6.asFloat();
								curve6 = curve6.get_next();
								var cy14 = curve6.asFloat();
								curve6 = curve6.get_next();
								var cx24 = curve6.asFloat();
								curve6 = curve6.get_next();
								var cy24 = curve6.asFloat();
								timeline2.setBezier(bezier1,frame3,0,time3,r1,cx14,cy14,cx24,cy24,time21,nr1);
								++bezier1;
							}
							var curve7 = curve5;
							if(curve7.isString()) {
								if(curve7.asString() == "stepped") {
									timeline2.setStepped(frame3);
								}
							} else {
								curve7 = curve7.getAtIndex(4);
								var cx15 = curve7.asFloat();
								curve7 = curve7.get_next();
								var cy15 = curve7.asFloat();
								curve7 = curve7.get_next();
								var cx25 = curve7.asFloat();
								curve7 = curve7.get_next();
								var cy25 = curve7.asFloat();
								timeline2.setBezier(bezier1,frame3,1,time3,g1,cx15,cy15,cx25,cy25,time21,ng1);
								++bezier1;
							}
							var curve8 = curve5;
							if(curve8.isString()) {
								if(curve8.asString() == "stepped") {
									timeline2.setStepped(frame3);
								}
							} else {
								curve8 = curve8.getAtIndex(8);
								var cx16 = curve8.asFloat();
								curve8 = curve8.get_next();
								var cy16 = curve8.asFloat();
								curve8 = curve8.get_next();
								var cx26 = curve8.asFloat();
								curve8 = curve8.get_next();
								var cy26 = curve8.asFloat();
								timeline2.setBezier(bezier1,frame3,2,time3,b1,cx16,cy16,cx26,cy26,time21,nb1);
								++bezier1;
							}
						}
						time3 = time21;
						r1 = nr1;
						g1 = ng1;
						b1 = nb1;
						keyMap = nextMap1;
						++frame3;
					}
					timelines.push(timeline2);
				} else if(timelineName == "alpha") {
					timelines.push(this.readTimeline(keyMap,new spine_AlphaTimeline(timelineMap.get_size(),timelineMap.get_size(),slot.index),0,1));
				} else if(timelineName == "rgba2") {
					var timeline3 = new spine_RGBA2Timeline(timelineMap.get_size(),timelineMap.get_size() * 7,slot.index);
					var time4 = keyMap.getFloat("time",0);
					var color2 = keyMap.getString("light");
					var val14 = color2.substring(0,2);
					var r2 = Std.parseInt("0x" + val14) / 255;
					var val15 = color2.substring(2,4);
					var g2 = Std.parseInt("0x" + val15) / 255;
					var val16 = color2.substring(4,6);
					var b2 = Std.parseInt("0x" + val16) / 255;
					var val17 = color2.substring(6,8);
					var a1 = Std.parseInt("0x" + val17) / 255;
					color2 = keyMap.getString("dark");
					var val18 = color2.substring(0,2);
					var r21 = Std.parseInt("0x" + val18) / 255;
					var val19 = color2.substring(2,4);
					var g21 = Std.parseInt("0x" + val19) / 255;
					var val20 = color2.substring(4,6);
					var b21 = Std.parseInt("0x" + val20) / 255;
					var frame5 = 0;
					var bezier2 = 0;
					while(true) {
						var frame6 = frame5;
						frame6 <<= 3;
						timeline3.frames[frame6] = time4;
						timeline3.frames[frame6 + 1] = r2;
						timeline3.frames[frame6 + 2] = g2;
						timeline3.frames[frame6 + 3] = b2;
						timeline3.frames[frame6 + 4] = a1;
						timeline3.frames[frame6 + 5] = r21;
						timeline3.frames[frame6 + 6] = g21;
						timeline3.frames[frame6 + 7] = b21;
						var nextMap2 = keyMap.get_next();
						if(nextMap2 == null) {
							timeline3.shrink(bezier2);
							break;
						}
						var time22 = nextMap2.getFloat("time",0);
						color2 = nextMap2.getString("light");
						var val21 = color2.substring(0,2);
						var nr2 = Std.parseInt("0x" + val21) / 255;
						var val22 = color2.substring(2,4);
						var ng2 = Std.parseInt("0x" + val22) / 255;
						var val23 = color2.substring(4,6);
						var nb2 = Std.parseInt("0x" + val23) / 255;
						var val24 = color2.substring(6,8);
						var na1 = Std.parseInt("0x" + val24) / 255;
						color2 = nextMap2.getString("dark");
						var val25 = color2.substring(0,2);
						var nr21 = Std.parseInt("0x" + val25) / 255;
						var val26 = color2.substring(2,4);
						var ng21 = Std.parseInt("0x" + val26) / 255;
						var val27 = color2.substring(4,6);
						var nb21 = Std.parseInt("0x" + val27) / 255;
						var curve9 = keyMap.get("curve");
						if(curve9 != null) {
							var curve10 = curve9;
							if(curve10.isString()) {
								if(curve10.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve10 = curve10.getAtIndex(0);
								var cx17 = curve10.asFloat();
								curve10 = curve10.get_next();
								var cy17 = curve10.asFloat();
								curve10 = curve10.get_next();
								var cx27 = curve10.asFloat();
								curve10 = curve10.get_next();
								var cy27 = curve10.asFloat();
								timeline3.setBezier(bezier2,frame5,0,time4,r2,cx17,cy17,cx27,cy27,time22,nr2);
								++bezier2;
							}
							var curve11 = curve9;
							if(curve11.isString()) {
								if(curve11.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve11 = curve11.getAtIndex(4);
								var cx18 = curve11.asFloat();
								curve11 = curve11.get_next();
								var cy18 = curve11.asFloat();
								curve11 = curve11.get_next();
								var cx28 = curve11.asFloat();
								curve11 = curve11.get_next();
								var cy28 = curve11.asFloat();
								timeline3.setBezier(bezier2,frame5,1,time4,g2,cx18,cy18,cx28,cy28,time22,ng2);
								++bezier2;
							}
							var curve12 = curve9;
							if(curve12.isString()) {
								if(curve12.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve12 = curve12.getAtIndex(8);
								var cx19 = curve12.asFloat();
								curve12 = curve12.get_next();
								var cy19 = curve12.asFloat();
								curve12 = curve12.get_next();
								var cx29 = curve12.asFloat();
								curve12 = curve12.get_next();
								var cy29 = curve12.asFloat();
								timeline3.setBezier(bezier2,frame5,2,time4,b2,cx19,cy19,cx29,cy29,time22,nb2);
								++bezier2;
							}
							var curve13 = curve9;
							if(curve13.isString()) {
								if(curve13.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve13 = curve13.getAtIndex(12);
								var cx110 = curve13.asFloat();
								curve13 = curve13.get_next();
								var cy110 = curve13.asFloat();
								curve13 = curve13.get_next();
								var cx210 = curve13.asFloat();
								curve13 = curve13.get_next();
								var cy210 = curve13.asFloat();
								timeline3.setBezier(bezier2,frame5,3,time4,a1,cx110,cy110,cx210,cy210,time22,na1);
								++bezier2;
							}
							var curve14 = curve9;
							if(curve14.isString()) {
								if(curve14.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve14 = curve14.getAtIndex(16);
								var cx111 = curve14.asFloat();
								curve14 = curve14.get_next();
								var cy111 = curve14.asFloat();
								curve14 = curve14.get_next();
								var cx211 = curve14.asFloat();
								curve14 = curve14.get_next();
								var cy211 = curve14.asFloat();
								timeline3.setBezier(bezier2,frame5,4,time4,r21,cx111,cy111,cx211,cy211,time22,nr21);
								++bezier2;
							}
							var curve15 = curve9;
							if(curve15.isString()) {
								if(curve15.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve15 = curve15.getAtIndex(20);
								var cx112 = curve15.asFloat();
								curve15 = curve15.get_next();
								var cy112 = curve15.asFloat();
								curve15 = curve15.get_next();
								var cx212 = curve15.asFloat();
								curve15 = curve15.get_next();
								var cy212 = curve15.asFloat();
								timeline3.setBezier(bezier2,frame5,5,time4,g21,cx112,cy112,cx212,cy212,time22,ng21);
								++bezier2;
							}
							var curve16 = curve9;
							if(curve16.isString()) {
								if(curve16.asString() == "stepped") {
									timeline3.setStepped(frame5);
								}
							} else {
								curve16 = curve16.getAtIndex(24);
								var cx113 = curve16.asFloat();
								curve16 = curve16.get_next();
								var cy113 = curve16.asFloat();
								curve16 = curve16.get_next();
								var cx213 = curve16.asFloat();
								curve16 = curve16.get_next();
								var cy213 = curve16.asFloat();
								timeline3.setBezier(bezier2,frame5,6,time4,b21,cx113,cy113,cx213,cy213,time22,nb21);
								++bezier2;
							}
						}
						time4 = time22;
						r2 = nr2;
						g2 = ng2;
						b2 = nb2;
						a1 = na1;
						r21 = nr21;
						g21 = ng21;
						b21 = nb21;
						keyMap = nextMap2;
						++frame5;
					}
					timelines.push(timeline3);
				} else if(timelineName == "rgb2") {
					var timeline4 = new spine_RGB2Timeline(timelineMap.get_size(),timelineMap.get_size() * 6,slot.index);
					var time5 = keyMap.getFloat("time",0);
					var color3 = keyMap.getString("light");
					var val28 = color3.substring(0,2);
					var r3 = Std.parseInt("0x" + val28) / 255;
					var val29 = color3.substring(2,4);
					var g3 = Std.parseInt("0x" + val29) / 255;
					var val30 = color3.substring(4,6);
					var b3 = Std.parseInt("0x" + val30) / 255;
					color3 = keyMap.getString("dark");
					var val31 = color3.substring(0,2);
					var r22 = Std.parseInt("0x" + val31) / 255;
					var val32 = color3.substring(2,4);
					var g22 = Std.parseInt("0x" + val32) / 255;
					var val33 = color3.substring(4,6);
					var b22 = Std.parseInt("0x" + val33) / 255;
					var frame7 = 0;
					var bezier3 = 0;
					while(true) {
						var frame8 = frame7;
						frame8 *= 7;
						timeline4.frames[frame8] = time5;
						timeline4.frames[frame8 + 1] = r3;
						timeline4.frames[frame8 + 2] = g3;
						timeline4.frames[frame8 + 3] = b3;
						timeline4.frames[frame8 + 4] = r22;
						timeline4.frames[frame8 + 5] = g22;
						timeline4.frames[frame8 + 6] = b22;
						var nextMap3 = keyMap.get_next();
						if(nextMap3 == null) {
							timeline4.shrink(bezier3);
							break;
						}
						var time23 = nextMap3.getFloat("time",0);
						color3 = nextMap3.getString("light");
						var val34 = color3.substring(0,2);
						var nr3 = Std.parseInt("0x" + val34) / 255;
						var val35 = color3.substring(2,4);
						var ng3 = Std.parseInt("0x" + val35) / 255;
						var val36 = color3.substring(4,6);
						var nb3 = Std.parseInt("0x" + val36) / 255;
						color3 = nextMap3.getString("dark");
						var val37 = color3.substring(0,2);
						var nr22 = Std.parseInt("0x" + val37) / 255;
						var val38 = color3.substring(2,4);
						var ng22 = Std.parseInt("0x" + val38) / 255;
						var val39 = color3.substring(4,6);
						var nb22 = Std.parseInt("0x" + val39) / 255;
						var curve17 = keyMap.get("curve");
						if(curve17 != null) {
							var curve18 = curve17;
							if(curve18.isString()) {
								if(curve18.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve18 = curve18.getAtIndex(0);
								var cx114 = curve18.asFloat();
								curve18 = curve18.get_next();
								var cy114 = curve18.asFloat();
								curve18 = curve18.get_next();
								var cx214 = curve18.asFloat();
								curve18 = curve18.get_next();
								var cy214 = curve18.asFloat();
								timeline4.setBezier(bezier3,frame7,0,time5,r3,cx114,cy114,cx214,cy214,time23,nr3);
								++bezier3;
							}
							var curve19 = curve17;
							if(curve19.isString()) {
								if(curve19.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve19 = curve19.getAtIndex(4);
								var cx115 = curve19.asFloat();
								curve19 = curve19.get_next();
								var cy115 = curve19.asFloat();
								curve19 = curve19.get_next();
								var cx215 = curve19.asFloat();
								curve19 = curve19.get_next();
								var cy215 = curve19.asFloat();
								timeline4.setBezier(bezier3,frame7,1,time5,g3,cx115,cy115,cx215,cy215,time23,ng3);
								++bezier3;
							}
							var curve20 = curve17;
							if(curve20.isString()) {
								if(curve20.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve20 = curve20.getAtIndex(8);
								var cx116 = curve20.asFloat();
								curve20 = curve20.get_next();
								var cy116 = curve20.asFloat();
								curve20 = curve20.get_next();
								var cx216 = curve20.asFloat();
								curve20 = curve20.get_next();
								var cy216 = curve20.asFloat();
								timeline4.setBezier(bezier3,frame7,2,time5,b3,cx116,cy116,cx216,cy216,time23,nb3);
								++bezier3;
							}
							var curve21 = curve17;
							if(curve21.isString()) {
								if(curve21.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve21 = curve21.getAtIndex(12);
								var cx117 = curve21.asFloat();
								curve21 = curve21.get_next();
								var cy117 = curve21.asFloat();
								curve21 = curve21.get_next();
								var cx217 = curve21.asFloat();
								curve21 = curve21.get_next();
								var cy217 = curve21.asFloat();
								timeline4.setBezier(bezier3,frame7,3,time5,r22,cx117,cy117,cx217,cy217,time23,nr22);
								++bezier3;
							}
							var curve22 = curve17;
							if(curve22.isString()) {
								if(curve22.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve22 = curve22.getAtIndex(16);
								var cx118 = curve22.asFloat();
								curve22 = curve22.get_next();
								var cy118 = curve22.asFloat();
								curve22 = curve22.get_next();
								var cx218 = curve22.asFloat();
								curve22 = curve22.get_next();
								var cy218 = curve22.asFloat();
								timeline4.setBezier(bezier3,frame7,4,time5,g22,cx118,cy118,cx218,cy218,time23,ng22);
								++bezier3;
							}
							var curve23 = curve17;
							if(curve23.isString()) {
								if(curve23.asString() == "stepped") {
									timeline4.setStepped(frame7);
								}
							} else {
								curve23 = curve23.getAtIndex(20);
								var cx119 = curve23.asFloat();
								curve23 = curve23.get_next();
								var cy119 = curve23.asFloat();
								curve23 = curve23.get_next();
								var cx219 = curve23.asFloat();
								curve23 = curve23.get_next();
								var cy219 = curve23.asFloat();
								timeline4.setBezier(bezier3,frame7,5,time5,b22,cx119,cy119,cx219,cy219,time23,nb22);
								++bezier3;
							}
						}
						time5 = time23;
						r3 = nr3;
						g3 = ng3;
						b3 = nb3;
						r22 = nr22;
						g22 = ng22;
						b22 = nb22;
						keyMap = nextMap3;
						++frame7;
					}
					timelines.push(timeline4);
				} else {
					throw haxe_Exception.thrown(new spine_support_error_RuntimeException("Invalid timeline type for a slot: " + timelineName + " (" + slotMap.get_name() + ")"));
				}
				timelineMap = timelineMap.get_next();
			}
			slotMap = slotMap.get_next();
		}
		var boneMap = map.getChild("bones");
		while(boneMap != null) {
			var bone = skeletonData.findBone(boneMap.get_name());
			if(bone == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Bone not found: " + boneMap.get_name()));
			}
			var timelineMap = boneMap.get_child();
			while(timelineMap != null) {
				var keyMap = timelineMap.get_child();
				if(keyMap == null) {
					timelineMap = timelineMap.get_next();
					continue;
				}
				var timelineName = timelineMap.get_name();
				if(timelineName == "rotate") {
					timelines.push(this.readTimeline(keyMap,new spine_RotateTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),0,1));
				} else if(timelineName == "translate") {
					var timeline = new spine_TranslateTimeline(timelineMap.get_size(),timelineMap.get_size() << 1,bone.index);
					timelines.push(this.readTimeline2(keyMap,timeline,"x","y",0,scale));
				} else if(timelineName == "translatex") {
					timelines.push(this.readTimeline(keyMap,new spine_TranslateXTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),0,scale));
				} else if(timelineName == "translatey") {
					timelines.push(this.readTimeline(keyMap,new spine_TranslateYTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),0,scale));
				} else if(timelineName == "scale") {
					var timeline1 = new spine_ScaleTimeline(timelineMap.get_size(),timelineMap.get_size() << 1,bone.index);
					timelines.push(this.readTimeline2(keyMap,timeline1,"x","y",1,1));
				} else if(timelineName == "scalex") {
					timelines.push(this.readTimeline(keyMap,new spine_ScaleXTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),1,1));
				} else if(timelineName == "scaley") {
					timelines.push(this.readTimeline(keyMap,new spine_ScaleYTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),1,1));
				} else if(timelineName == "shear") {
					var timeline2 = new spine_ShearTimeline(timelineMap.get_size(),timelineMap.get_size() << 1,bone.index);
					timelines.push(this.readTimeline2(keyMap,timeline2,"x","y",0,1));
				} else if(timelineName == "shearx") {
					timelines.push(this.readTimeline(keyMap,new spine_ShearXTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),0,1));
				} else if(timelineName == "sheary") {
					timelines.push(this.readTimeline(keyMap,new spine_ShearYTimeline(timelineMap.get_size(),timelineMap.get_size(),bone.index),0,1));
				} else {
					throw haxe_Exception.thrown(new spine_support_error_RuntimeException("Invalid timeline type for a bone: " + timelineName + " (" + boneMap.get_name() + ")"));
				}
				timelineMap = timelineMap.get_next();
			}
			boneMap = boneMap.get_next();
		}
		var timelineMap = map.getChild("ik");
		while(timelineMap != null) {
			var keyMap = timelineMap.get_child();
			if(keyMap == null) {
				timelineMap = timelineMap.get_next();
				continue;
			}
			var constraint = skeletonData.findIkConstraint(timelineMap.get_name());
			var timeline = new spine_IkConstraintTimeline(timelineMap.get_size(),timelineMap.get_size() << 1,skeletonData.getIkConstraints().indexOf(constraint));
			var time = keyMap.getFloat("time",0);
			var mix = keyMap.getFloat("mix",1);
			var softness = keyMap.getFloat("softness",0) * scale;
			var frame = 0;
			var bezier = 0;
			while(true) {
				var frame1 = frame;
				var bendDirection = keyMap.getBoolean("bendPositive",true) ? 1 : -1;
				var compress = keyMap.getBoolean("compress",false);
				var stretch = keyMap.getBoolean("stretch",false);
				frame1 *= 6;
				timeline.frames[frame1] = time;
				timeline.frames[frame1 + 1] = mix;
				timeline.frames[frame1 + 2] = softness;
				timeline.frames[frame1 + 3] = bendDirection;
				timeline.frames[frame1 + 4] = compress ? 1 : 0;
				timeline.frames[frame1 + 5] = stretch ? 1 : 0;
				var nextMap = keyMap.get_next();
				if(nextMap == null) {
					timeline.shrink(bezier);
					break;
				}
				var time2 = nextMap.getFloat("time",0);
				var mix2 = nextMap.getFloat("mix",1);
				var softness2 = nextMap.getFloat("softness",0) * scale;
				var curve = keyMap.get("curve");
				if(curve != null) {
					var curve1 = curve;
					if(curve1.isString()) {
						if(curve1.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve1 = curve1.getAtIndex(0);
						var cx1 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cy1 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cx2 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cy2 = curve1.asFloat();
						timeline.setBezier(bezier,frame,0,time,mix,cx1,cy1,cx2,cy2,time2,mix2);
						++bezier;
					}
					var curve2 = curve;
					if(curve2.isString()) {
						if(curve2.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve2 = curve2.getAtIndex(4);
						var cx11 = curve2.asFloat();
						curve2 = curve2.get_next();
						var cy11 = curve2.asFloat() * scale;
						curve2 = curve2.get_next();
						var cx21 = curve2.asFloat();
						curve2 = curve2.get_next();
						var cy21 = curve2.asFloat() * scale;
						timeline.setBezier(bezier,frame,1,time,softness,cx11,cy11,cx21,cy21,time2,softness2);
						++bezier;
					}
				}
				time = time2;
				mix = mix2;
				softness = softness2;
				keyMap = nextMap;
				++frame;
			}
			timelines.push(timeline);
			timelineMap = timelineMap.get_next();
		}
		var timelineMap = map.getChild("transform");
		while(timelineMap != null) {
			var keyMap = timelineMap.get_child();
			if(keyMap == null) {
				timelineMap = timelineMap.get_next();
				continue;
			}
			var constraint = skeletonData.findTransformConstraint(timelineMap.get_name());
			var timeline = new spine_TransformConstraintTimeline(timelineMap.get_size(),timelineMap.get_size() << 2,skeletonData.getTransformConstraints().indexOf(constraint));
			var time = keyMap.getFloat("time",0);
			var mixRotate = keyMap.getFloat("mixRotate",1);
			var mixX = keyMap.getFloat("mixX",1);
			var mixY = keyMap.getFloat("mixY",mixX);
			var mixScaleX = keyMap.getFloat("mixScaleX",1);
			var mixScaleY = keyMap.getFloat("mixScaleY",mixScaleX);
			var mixShearY = keyMap.getFloat("mixShearY",1);
			var frame = 0;
			var bezier = 0;
			while(true) {
				var frame1 = frame;
				frame1 *= 7;
				timeline.frames[frame1] = time;
				timeline.frames[frame1 + 1] = mixRotate;
				timeline.frames[frame1 + 2] = mixX;
				timeline.frames[frame1 + 3] = mixY;
				timeline.frames[frame1 + 4] = mixScaleX;
				timeline.frames[frame1 + 5] = mixScaleY;
				timeline.frames[frame1 + 6] = mixShearY;
				var nextMap = keyMap.get_next();
				if(nextMap == null) {
					timeline.shrink(bezier);
					break;
				}
				var time2 = nextMap.getFloat("time",0);
				var mixRotate2 = nextMap.getFloat("mixRotate",1);
				var mixX2 = nextMap.getFloat("mixX",1);
				var mixY2 = nextMap.getFloat("mixY",mixX2);
				var mixScaleX2 = nextMap.getFloat("mixScaleX",1);
				var mixScaleY2 = nextMap.getFloat("mixScaleY",mixScaleX2);
				var mixShearY2 = nextMap.getFloat("mixShearY",1);
				var curve = keyMap.get("curve");
				if(curve != null) {
					var curve1 = curve;
					if(curve1.isString()) {
						if(curve1.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve1 = curve1.getAtIndex(0);
						var cx1 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cy1 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cx2 = curve1.asFloat();
						curve1 = curve1.get_next();
						var cy2 = curve1.asFloat();
						timeline.setBezier(bezier,frame,0,time,mixRotate,cx1,cy1,cx2,cy2,time2,mixRotate2);
						++bezier;
					}
					var curve2 = curve;
					if(curve2.isString()) {
						if(curve2.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve2 = curve2.getAtIndex(4);
						var cx11 = curve2.asFloat();
						curve2 = curve2.get_next();
						var cy11 = curve2.asFloat();
						curve2 = curve2.get_next();
						var cx21 = curve2.asFloat();
						curve2 = curve2.get_next();
						var cy21 = curve2.asFloat();
						timeline.setBezier(bezier,frame,1,time,mixX,cx11,cy11,cx21,cy21,time2,mixX2);
						++bezier;
					}
					var curve3 = curve;
					if(curve3.isString()) {
						if(curve3.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve3 = curve3.getAtIndex(8);
						var cx12 = curve3.asFloat();
						curve3 = curve3.get_next();
						var cy12 = curve3.asFloat();
						curve3 = curve3.get_next();
						var cx22 = curve3.asFloat();
						curve3 = curve3.get_next();
						var cy22 = curve3.asFloat();
						timeline.setBezier(bezier,frame,2,time,mixY,cx12,cy12,cx22,cy22,time2,mixY2);
						++bezier;
					}
					var curve4 = curve;
					if(curve4.isString()) {
						if(curve4.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve4 = curve4.getAtIndex(12);
						var cx13 = curve4.asFloat();
						curve4 = curve4.get_next();
						var cy13 = curve4.asFloat();
						curve4 = curve4.get_next();
						var cx23 = curve4.asFloat();
						curve4 = curve4.get_next();
						var cy23 = curve4.asFloat();
						timeline.setBezier(bezier,frame,3,time,mixScaleX,cx13,cy13,cx23,cy23,time2,mixScaleX2);
						++bezier;
					}
					var curve5 = curve;
					if(curve5.isString()) {
						if(curve5.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve5 = curve5.getAtIndex(16);
						var cx14 = curve5.asFloat();
						curve5 = curve5.get_next();
						var cy14 = curve5.asFloat();
						curve5 = curve5.get_next();
						var cx24 = curve5.asFloat();
						curve5 = curve5.get_next();
						var cy24 = curve5.asFloat();
						timeline.setBezier(bezier,frame,4,time,mixScaleY,cx14,cy14,cx24,cy24,time2,mixScaleY2);
						++bezier;
					}
					var curve6 = curve;
					if(curve6.isString()) {
						if(curve6.asString() == "stepped") {
							timeline.setStepped(frame);
						}
					} else {
						curve6 = curve6.getAtIndex(20);
						var cx15 = curve6.asFloat();
						curve6 = curve6.get_next();
						var cy15 = curve6.asFloat();
						curve6 = curve6.get_next();
						var cx25 = curve6.asFloat();
						curve6 = curve6.get_next();
						var cy25 = curve6.asFloat();
						timeline.setBezier(bezier,frame,5,time,mixShearY,cx15,cy15,cx25,cy25,time2,mixShearY2);
						++bezier;
					}
				}
				time = time2;
				mixRotate = mixRotate2;
				mixX = mixX2;
				mixY = mixY2;
				mixScaleX = mixScaleX2;
				mixScaleY = mixScaleY2;
				mixScaleX = mixScaleX2;
				keyMap = nextMap;
				++frame;
			}
			timelines.push(timeline);
			timelineMap = timelineMap.get_next();
		}
		var constraintMap = map.getChild("path");
		while(constraintMap != null) {
			var constraint = skeletonData.findPathConstraint(constraintMap.get_name());
			if(constraint == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Path constraint not found: " + constraintMap.get_name()));
			}
			var index = skeletonData.pathConstraints.indexOf(constraint);
			var timelineMap = constraintMap.get_child();
			while(timelineMap != null) {
				var keyMap = timelineMap.get_child();
				if(keyMap == null) {
					timelineMap = timelineMap.get_next();
					continue;
				}
				var timelineName = timelineMap.get_name();
				if(timelineName == "position") {
					var timeline = new spine_PathConstraintPositionTimeline(timelineMap.get_size(),timelineMap.get_size(),index);
					timelines.push(this.readTimeline(keyMap,timeline,0,constraint.positionMode == 0 ? scale : 1));
				} else if(timelineName == "spacing") {
					var timeline1 = new spine_PathConstraintSpacingTimeline(timelineMap.get_size(),timelineMap.get_size(),index);
					timelines.push(this.readTimeline(keyMap,timeline1,0,constraint.spacingMode == 0 || constraint.spacingMode == 1 ? scale : 1));
				} else if(timelineName == "mix") {
					var timeline2 = new spine_PathConstraintMixTimeline(timelineMap.get_size(),timelineMap.get_size() * 3,index);
					var time = keyMap.getFloat("time",0);
					var mixRotate = keyMap.getFloat("mixRotate",1);
					var mixX = keyMap.getFloat("mixX",1);
					var mixY = keyMap.getFloat("mixY",mixX);
					var frame = 0;
					var bezier = 0;
					while(true) {
						var frame1 = frame;
						frame1 <<= 2;
						timeline2.frames[frame1] = time;
						timeline2.frames[frame1 + 1] = mixRotate;
						timeline2.frames[frame1 + 2] = mixX;
						timeline2.frames[frame1 + 3] = mixY;
						var nextMap = keyMap.get_next();
						if(nextMap == null) {
							timeline2.shrink(bezier);
							break;
						}
						var time2 = nextMap.getFloat("time",0);
						var mixRotate2 = nextMap.getFloat("mixRotate",1);
						var mixX2 = nextMap.getFloat("mixX",1);
						var mixY2 = nextMap.getFloat("mixY",mixX2);
						var curve = keyMap.get("curve");
						if(curve != null) {
							var curve1 = curve;
							if(curve1.isString()) {
								if(curve1.asString() == "stepped") {
									timeline2.setStepped(frame);
								}
							} else {
								curve1 = curve1.getAtIndex(0);
								var cx1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cx2 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy2 = curve1.asFloat();
								timeline2.setBezier(bezier,frame,0,time,mixRotate,cx1,cy1,cx2,cy2,time2,mixRotate2);
								++bezier;
							}
							var curve2 = curve;
							if(curve2.isString()) {
								if(curve2.asString() == "stepped") {
									timeline2.setStepped(frame);
								}
							} else {
								curve2 = curve2.getAtIndex(4);
								var cx11 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cy11 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cx21 = curve2.asFloat();
								curve2 = curve2.get_next();
								var cy21 = curve2.asFloat();
								timeline2.setBezier(bezier,frame,1,time,mixX,cx11,cy11,cx21,cy21,time2,mixX2);
								++bezier;
							}
							var curve3 = curve;
							if(curve3.isString()) {
								if(curve3.asString() == "stepped") {
									timeline2.setStepped(frame);
								}
							} else {
								curve3 = curve3.getAtIndex(8);
								var cx12 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cy12 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cx22 = curve3.asFloat();
								curve3 = curve3.get_next();
								var cy22 = curve3.asFloat();
								timeline2.setBezier(bezier,frame,2,time,mixY,cx12,cy12,cx22,cy22,time2,mixY2);
								++bezier;
							}
						}
						time = time2;
						mixRotate = mixRotate2;
						mixX = mixX2;
						mixY = mixY2;
						keyMap = nextMap;
						++frame;
					}
					timelines.push(timeline2);
				}
				timelineMap = timelineMap.get_next();
			}
			constraintMap = constraintMap.get_next();
		}
		var deformMap = map.getChild("deform");
		while(deformMap != null) {
			var skin = skeletonData.findSkin(deformMap.get_name());
			if(skin == null) {
				throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Skin not found: " + deformMap.get_name()));
			}
			var slotMap = deformMap.get_child();
			while(slotMap != null) {
				var slot = skeletonData.findSlot(slotMap.get_name());
				if(slot == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Slot not found: " + slotMap.get_name()));
				}
				var timelineMap = slotMap.get_child();
				while(timelineMap != null) {
					var keyMap = timelineMap.get_child();
					if(keyMap == null) {
						timelineMap = timelineMap.get_next();
						continue;
					}
					var slotIndex = slot.index;
					var name1 = timelineMap.get_name();
					var _this = skin.lookup;
					if(slotIndex < 0) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
					}
					if(name1 == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
					}
					_this.slotIndex = slotIndex;
					_this.name = name1;
					var hash = 0;
					var chr;
					var x;
					if(name1.length == 0) {
						x = hash;
					} else {
						var _g = 0;
						var _g1 = name1.length;
						while(_g < _g1) {
							var i = _g++;
							chr = HxOverrides.cca(name1,i);
							hash = (hash << 5) - hash + chr;
						}
						x = hash;
					}
					_this.hashCode = x + slotIndex * 37 | 0;
					var key = skin.lookup;
					var entries = skin.attachments.h[key.hashCode];
					var result = null;
					if(entries != null) {
						var _g2 = 0;
						var _g3 = entries.length;
						while(_g2 < _g3) {
							var i1 = _g2++;
							var entry = entries[i1];
							var object = key;
							var value;
							if(object == null) {
								value = false;
							} else {
								var result1 = object;
								var other = result1;
								value = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
							}
							if(value) {
								result = entry;
								break;
							}
						}
					}
					var entry1 = result;
					var result2 = entry1 != null ? entry1.attachment : null;
					var attachment = result2;
					if(attachment == null) {
						throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Deform attachment not found: " + timelineMap.get_name()));
					}
					var weighted = attachment.bones != null;
					var vertices = attachment.vertices;
					var deformLength = weighted ? (vertices.length / 3 | 0) << 1 : vertices.length;
					var timeline = new spine_DeformTimeline(timelineMap.get_size(),timelineMap.get_size(),slot.index,attachment);
					var time = keyMap.getFloat("time",0);
					var frame = 0;
					var bezier = 0;
					while(true) {
						var deform = null;
						var verticesValue = keyMap.get("vertices");
						if(verticesValue == null) {
							if(weighted) {
								var length = deformLength;
								if(length == null) {
									length = 0;
								}
								var len = length | 0;
								var capacity = len != 0 ? len : 16;
								var this1 = [];
								var array = this1;
								if(length > 0) {
									var len1 = array.length;
									if(len1 > len) {
										array.splice(len,len - len1);
									} else if(len1 < len) {
										while(len1 < len) {
											array.push(0);
											++len1;
										}
									}
								}
								deform = array;
							} else {
								deform = vertices;
							}
						} else {
							var length1 = deformLength;
							if(length1 == null) {
								length1 = 0;
							}
							var len2 = length1 | 0;
							var capacity1 = len2 != 0 ? len2 : 16;
							var this2 = [];
							var array1 = this2;
							if(length1 > 0) {
								var len3 = array1.length;
								if(len3 > len2) {
									array1.splice(len2,len2 - len3);
								} else if(len3 < len2) {
									while(len3 < len2) {
										array1.push(0);
										++len3;
									}
								}
							}
							deform = array1;
							var start = keyMap.getInt("offset",0);
							var src = verticesValue.asFloatArray();
							var dest = deform;
							var length2 = verticesValue.get_size();
							if(src == null) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
							}
							if(dest == null) {
								throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
							}
							try {
								spine_support_utils_Array.copy(src,0,dest,start,length2);
							} catch( _g4 ) {
								haxe_NativeStackTrace.lastError = _g4;
								throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + start + ", count: " + length2));
							}
							if(scale != 1) {
								var i2 = start;
								var n = i2 + verticesValue.get_size();
								while(i2 < n) {
									deform[i2] *= scale;
									++i2;
								}
							}
							if(!weighted) {
								var i3 = 0;
								while(i3 < deformLength) {
									deform[i3] += vertices[i3];
									++i3;
								}
							}
						}
						timeline.frames[frame] = time;
						timeline.vertices[frame] = deform;
						var nextMap = keyMap.get_next();
						if(nextMap == null) {
							timeline.shrink(bezier);
							break;
						}
						var time2 = nextMap.getFloat("time",0);
						var curve = keyMap.get("curve");
						if(curve != null) {
							var curve1 = curve;
							if(curve1.isString()) {
								if(curve1.asString() == "stepped") {
									timeline.setStepped(frame);
								}
							} else {
								curve1 = curve1.getAtIndex(0);
								var cx1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy1 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cx2 = curve1.asFloat();
								curve1 = curve1.get_next();
								var cy2 = curve1.asFloat();
								var curves = timeline.curves;
								var i4 = timeline.frames.length + bezier * 18;
								curves[frame] = 2 + i4;
								var tmpx = (time - cx1 * 2 + cx2) * 0.03;
								var tmpy = cy2 * 0.03 - cy1 * 0.06;
								var dddx = ((cx1 - cx2) * 3 - time + time2) * 0.006;
								var dddy = (cy1 - cy2 + 0.33333333) * 0.018;
								var ddx = tmpx * 2 + dddx;
								var ddy = tmpy * 2 + dddy;
								var dx = (cx1 - time) * 0.3 + tmpx + dddx * 0.16666667;
								var dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;
								var x1 = time + dx;
								var y = dy;
								var n1 = i4 + 18;
								while(i4 < n1) {
									curves[i4] = x1;
									curves[i4 + 1] = y;
									dx += ddx;
									dy += ddy;
									ddx += dddx;
									ddy += dddy;
									x1 += dx;
									y += dy;
									i4 += 2;
								}
								++bezier;
							}
						}
						time = time2;
						keyMap = nextMap;
						++frame;
					}
					timelines.push(timeline);
					timelineMap = timelineMap.get_next();
				}
				slotMap = slotMap.get_next();
			}
			deformMap = deformMap.get_next();
		}
		var drawOrdersMap = map.get("drawOrder");
		if(drawOrdersMap != null) {
			var timeline = new spine_DrawOrderTimeline(drawOrdersMap.get_size());
			var slotCount = skeletonData.slots.length;
			var frame = 0;
			var drawOrderMap = drawOrdersMap.get_child();
			while(drawOrderMap != null) {
				var drawOrder = null;
				var offsets = drawOrderMap.get("offsets");
				if(offsets != null) {
					var length = slotCount;
					if(length == null) {
						length = 0;
					}
					var len = length | 0;
					var capacity = len != 0 ? len : 16;
					var this1 = [];
					var array = this1;
					if(length != 0) {
						var len1 = array.length;
						if(len1 > len) {
							array.splice(len,len - len1);
						} else if(len1 < len) {
							while(len1 < len) {
								array.push(0);
								++len1;
							}
						}
					}
					drawOrder = array;
					var i = slotCount - 1;
					while(i >= 0) {
						drawOrder[i] = -1;
						--i;
					}
					var length1 = slotCount - offsets.get_size();
					if(length1 == null) {
						length1 = 0;
					}
					var len2 = length1 | 0;
					var capacity1 = len2 != 0 ? len2 : 16;
					var this2 = [];
					var array1 = this2;
					if(length1 != 0) {
						var len3 = array1.length;
						if(len3 > len2) {
							array1.splice(len2,len2 - len3);
						} else if(len3 < len2) {
							while(len3 < len2) {
								array1.push(0);
								++len3;
							}
						}
					}
					var unchanged = array1;
					var originalIndex = 0;
					var unchangedIndex = 0;
					var offsetMap = offsets.get_child();
					while(offsetMap != null) {
						var slot = skeletonData.findSlot(offsetMap.getString("slot"));
						if(slot == null) {
							throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Slot not found: " + offsetMap.getString("slot")));
						}
						while(originalIndex != slot.index) unchanged[unchangedIndex++] = originalIndex++;
						drawOrder[originalIndex++ + offsetMap.getInt("offset")] = originalIndex - 1;
						offsetMap = offsetMap.get_next();
					}
					while(originalIndex < slotCount) unchanged[unchangedIndex++] = originalIndex++;
					var i1 = slotCount - 1;
					while(i1 >= 0) {
						if(drawOrder[i1] == -1) {
							drawOrder[i1] = unchanged[--unchangedIndex];
						}
						--i1;
					}
				}
				var time = drawOrderMap.getFloat("time",0);
				timeline.frames[frame] = time;
				timeline.drawOrders[frame] = drawOrder;
				drawOrderMap = drawOrderMap.get_next();
				++frame;
			}
			timelines.push(timeline);
		}
		var eventsMap = map.get("events");
		if(eventsMap != null) {
			var timeline = new spine_EventTimeline(eventsMap.get_size());
			var frame = 0;
			var eventMap = eventsMap.get_child();
			while(eventMap != null) {
				var eventData = skeletonData.findEvent(eventMap.getString("name"));
				if(eventData == null) {
					throw haxe_Exception.thrown(new spine_support_utils_SerializationException("Event not found: " + eventMap.getString("name")));
				}
				var event = new spine_Event(eventMap.getFloat("time",0),eventData);
				event.intValue = eventMap.getInt("int",eventData.intValue);
				event.floatValue = eventMap.getFloat("float",eventData.floatValue);
				event.stringValue = eventMap.getString("string",eventData.stringValue);
				if(event.data.audioPath != null) {
					event.volume = eventMap.getFloat("volume",eventData.volume);
					event.balance = eventMap.getFloat("balance",eventData.balance);
				}
				timeline.frames[frame] = event.time;
				timeline.events[frame] = event;
				eventMap = eventMap.get_next();
				++frame;
			}
			timelines.push(timeline);
		}
		var duration = 0;
		var items = timelines;
		var i = 0;
		var n = timelines.length;
		while(i < n) {
			var result = items[i];
			duration = Math.max(duration,result.getDuration());
			++i;
		}
		skeletonData.animations.push(new spine_Animation(name,timelines,duration));
	}
	,readTimeline: function(keyMap,timeline,defaultValue,scale) {
		var time = keyMap.getFloat("time",0);
		var value = keyMap.getFloat("value",defaultValue) * scale;
		var frame = 0;
		var bezier = 0;
		while(true) {
			timeline.setFrame(frame,time,value);
			var nextMap = keyMap.get_next();
			if(nextMap == null) {
				timeline.shrink(bezier);
				return timeline;
			}
			var time2 = nextMap.getFloat("time",0);
			var value2 = nextMap.getFloat("value",defaultValue) * scale;
			var curve = keyMap.get("curve");
			if(curve != null) {
				var curve1 = curve;
				if(curve1.isString()) {
					if(curve1.asString() == "stepped") {
						timeline.setStepped(frame);
					}
				} else {
					curve1 = curve1.getAtIndex(0);
					var cx1 = curve1.asFloat();
					curve1 = curve1.get_next();
					var cy1 = curve1.asFloat() * scale;
					curve1 = curve1.get_next();
					var cx2 = curve1.asFloat();
					curve1 = curve1.get_next();
					var cy2 = curve1.asFloat() * scale;
					timeline.setBezier(bezier,frame,0,time,value,cx1,cy1,cx2,cy2,time2,value2);
					++bezier;
				}
			}
			time = time2;
			value = value2;
			keyMap = nextMap;
			++frame;
		}
	}
	,readTimeline2: function(keyMap,timeline,name1,name2,defaultValue,scale) {
		var time = keyMap.getFloat("time",0);
		var value1 = keyMap.getFloat(name1,defaultValue) * scale;
		var value2 = keyMap.getFloat(name2,defaultValue) * scale;
		var frame = 0;
		var bezier = 0;
		while(true) {
			var frame1 = frame;
			frame1 *= 3;
			timeline.frames[frame1] = time;
			timeline.frames[frame1 + 1] = value1;
			timeline.frames[frame1 + 2] = value2;
			var nextMap = keyMap.get_next();
			if(nextMap == null) {
				timeline.shrink(bezier);
				return timeline;
			}
			var time2 = nextMap.getFloat("time",0);
			var nvalue1 = nextMap.getFloat(name1,defaultValue) * scale;
			var nvalue2 = nextMap.getFloat(name2,defaultValue) * scale;
			var curve = keyMap.get("curve");
			if(curve != null) {
				var curve1 = curve;
				if(curve1.isString()) {
					if(curve1.asString() == "stepped") {
						timeline.setStepped(frame);
					}
				} else {
					curve1 = curve1.getAtIndex(0);
					var cx1 = curve1.asFloat();
					curve1 = curve1.get_next();
					var cy1 = curve1.asFloat() * scale;
					curve1 = curve1.get_next();
					var cx2 = curve1.asFloat();
					curve1 = curve1.get_next();
					var cy2 = curve1.asFloat() * scale;
					timeline.setBezier(bezier,frame,0,time,value1,cx1,cy1,cx2,cy2,time2,nvalue1);
					++bezier;
				}
				var curve2 = curve;
				if(curve2.isString()) {
					if(curve2.asString() == "stepped") {
						timeline.setStepped(frame);
					}
				} else {
					curve2 = curve2.getAtIndex(4);
					var cx11 = curve2.asFloat();
					curve2 = curve2.get_next();
					var cy11 = curve2.asFloat() * scale;
					curve2 = curve2.get_next();
					var cx21 = curve2.asFloat();
					curve2 = curve2.get_next();
					var cy21 = curve2.asFloat() * scale;
					timeline.setBezier(bezier,frame,1,time,value2,cx11,cy11,cx21,cy21,time2,nvalue2);
					++bezier;
				}
			}
			time = time2;
			value1 = nvalue1;
			value2 = nvalue2;
			keyMap = nextMap;
			++frame;
		}
	}
	,readCurve: function(curve,timeline,bezier,frame,value,time1,time2,value1,value2,scale) {
		if(curve.isString()) {
			if(curve.asString() == "stepped") {
				timeline.setStepped(frame);
			}
			return bezier;
		}
		curve = curve.getAtIndex(value << 2);
		var cx1 = curve.asFloat();
		curve = curve.get_next();
		var cy1 = curve.asFloat() * scale;
		curve = curve.get_next();
		var cx2 = curve.asFloat();
		curve = curve.get_next();
		var cy2 = curve.asFloat() * scale;
		timeline.setBezier(bezier,frame,value,time1,value1,cx1,cy1,cx2,cy2,time2,value2);
		return bezier + 1;
	}
	,__class__: spine_SkeletonJson
});
var spine_LinkedMesh = function(mesh,skin,slotIndex,parent,inheritDeform) {
	this.inheritDeform = false;
	this.slotIndex = 0;
	this.skin = null;
	this.mesh = mesh;
	this.skin = skin;
	this.slotIndex = slotIndex;
	this.parent = parent;
	this.inheritDeform = inheritDeform;
};
$hxClasses["spine.LinkedMesh"] = spine_LinkedMesh;
spine_LinkedMesh.__name__ = "spine.LinkedMesh";
spine_LinkedMesh.prototype = {
	__class__: spine_LinkedMesh
};
var spine_Skin = function(name) {
	this.lookup = new spine_SkinEntry(0,"",null);
	var this1 = [];
	this.constraints = this1;
	var this1 = [];
	this.bones = this1;
	var this1 = new haxe_ds_IntMap();
	this.attachments = this1;
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.name = name;
	var this1 = spine_support_utils_AttachmentSet.orderedItems(this.attachments);
};
$hxClasses["spine.Skin"] = spine_Skin;
spine_Skin.__name__ = "spine.Skin";
spine_Skin.prototype = {
	setAttachment: function(slotIndex,name,attachment) {
		if(attachment == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachment cannot be null."));
		}
		var entry = new spine_SkinEntry(slotIndex,name,attachment);
		if(!spine_support_utils_AttachmentSet.add(this.attachments,entry)) {
			var entries = this.attachments.h[entry.hashCode];
			var result = null;
			if(entries != null) {
				var _g = 0;
				var _g1 = entries.length;
				while(_g < _g1) {
					var i = _g++;
					var entry1 = entries[i];
					var object = entry;
					var tmp;
					if(object == null) {
						tmp = false;
					} else {
						var result1 = object;
						var other = result1;
						tmp = entry1.slotIndex != other.slotIndex ? false : entry1.name == other.name;
					}
					if(tmp) {
						result = entry1;
						break;
					}
				}
			}
			result.attachment = attachment;
		}
	}
	,addSkin: function(skin) {
		if(skin == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skin cannot be null."));
		}
		var _g = 0;
		var _g1 = skin.bones;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(this.bones.indexOf(data) == -1) {
				this.bones.push(data);
			}
		}
		var _g = 0;
		var _g1 = skin.constraints;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(this.constraints.indexOf(data) == -1) {
				this.constraints.push(data);
			}
		}
		var _g = 0;
		var _g1 = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			var slotIndex = entry.slotIndex;
			var name = entry.name;
			var attachment = entry.attachment;
			if(attachment == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachment cannot be null."));
			}
			var entry1 = new spine_SkinEntry(slotIndex,name,attachment);
			if(!spine_support_utils_AttachmentSet.add(this.attachments,entry1)) {
				var entries = this.attachments.h[entry1.hashCode];
				var result = null;
				if(entries != null) {
					var _g2 = 0;
					var _g3 = entries.length;
					while(_g2 < _g3) {
						var i = _g2++;
						var entry2 = entries[i];
						var object = entry1;
						var tmp;
						if(object == null) {
							tmp = false;
						} else {
							var result1 = object;
							var other = result1;
							tmp = entry2.slotIndex != other.slotIndex ? false : entry2.name == other.name;
						}
						if(tmp) {
							result = entry2;
							break;
						}
					}
				}
				result.attachment = attachment;
			}
		}
	}
	,copySkin: function(skin) {
		if(skin == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skin cannot be null."));
		}
		var _g = 0;
		var _g1 = skin.bones;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(this.bones.indexOf(data) == -1) {
				this.bones.push(data);
			}
		}
		var _g = 0;
		var _g1 = skin.constraints;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			if(this.constraints.indexOf(data) == -1) {
				this.constraints.push(data);
			}
		}
		var _g = 0;
		var _g1 = spine_support_utils_AttachmentSet.orderedItems(skin.attachments);
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			if(((entry.attachment) instanceof spine_attachments_MeshAttachment)) {
				var slotIndex = entry.slotIndex;
				var name = entry.name;
				var result = entry.attachment;
				var _this = result;
				var mesh = new spine_attachments_MeshAttachment(_this.name);
				mesh.region = _this.region;
				mesh.path = _this.path;
				var _this1 = mesh.color;
				var color = _this.color;
				_this1.r = color.r;
				_this1.g = color.g;
				_this1.b = color.b;
				_this1.a = color.a;
				mesh.deformAttachment = _this.deformAttachment != null ? _this.deformAttachment : _this;
				var parentMesh = _this.parentMesh != null ? _this.parentMesh : _this;
				mesh.parentMesh = parentMesh;
				if(parentMesh != null) {
					mesh.bones = parentMesh.bones;
					mesh.vertices = parentMesh.vertices;
					mesh.regionUVs = parentMesh.regionUVs;
					mesh.triangles = parentMesh.triangles;
					mesh.hullLength = parentMesh.hullLength;
					mesh.worldVerticesLength = parentMesh.worldVerticesLength;
					mesh.edges = parentMesh.edges;
					mesh.width = parentMesh.width;
					mesh.height = parentMesh.height;
				}
				mesh.updateUVs();
				var attachment = mesh;
				if(attachment == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachment cannot be null."));
				}
				var entry1 = new spine_SkinEntry(slotIndex,name,attachment);
				if(!spine_support_utils_AttachmentSet.add(this.attachments,entry1)) {
					var entries = this.attachments.h[entry1.hashCode];
					var result1 = null;
					if(entries != null) {
						var _g2 = 0;
						var _g3 = entries.length;
						while(_g2 < _g3) {
							var i = _g2++;
							var entry2 = entries[i];
							var object = entry1;
							var tmp;
							if(object == null) {
								tmp = false;
							} else {
								var result2 = object;
								var other = result2;
								tmp = entry2.slotIndex != other.slotIndex ? false : entry2.name == other.name;
							}
							if(tmp) {
								result1 = entry2;
								break;
							}
						}
					}
					result1.attachment = attachment;
				}
			} else {
				var slotIndex1 = entry.slotIndex;
				var name1 = entry.name;
				var attachment1 = entry.attachment != null ? entry.attachment.copy() : null;
				if(attachment1 == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachment cannot be null."));
				}
				var entry3 = new spine_SkinEntry(slotIndex1,name1,attachment1);
				if(!spine_support_utils_AttachmentSet.add(this.attachments,entry3)) {
					var entries1 = this.attachments.h[entry3.hashCode];
					var result3 = null;
					if(entries1 != null) {
						var _g4 = 0;
						var _g5 = entries1.length;
						while(_g4 < _g5) {
							var i1 = _g4++;
							var entry4 = entries1[i1];
							var object1 = entry3;
							var tmp1;
							if(object1 == null) {
								tmp1 = false;
							} else {
								var result4 = object1;
								var other1 = result4;
								tmp1 = entry4.slotIndex != other1.slotIndex ? false : entry4.name == other1.name;
							}
							if(tmp1) {
								result3 = entry4;
								break;
							}
						}
					}
					result3.attachment = attachment1;
				}
			}
		}
	}
	,getAttachment: function(slotIndex,name) {
		var _this = this.lookup;
		if(slotIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
		}
		if(name == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
		}
		_this.slotIndex = slotIndex;
		_this.name = name;
		var hash = 0;
		var chr;
		var x;
		if(name.length == 0) {
			x = hash;
		} else {
			var _g = 0;
			var _g1 = name.length;
			while(_g < _g1) {
				var i = _g++;
				chr = HxOverrides.cca(name,i);
				hash = (hash << 5) - hash + chr;
			}
			x = hash;
		}
		_this.hashCode = x + slotIndex * 37 | 0;
		var key = this.lookup;
		var entries = this.attachments.h[key.hashCode];
		var result = null;
		if(entries != null) {
			var _g = 0;
			var _g1 = entries.length;
			while(_g < _g1) {
				var i = _g++;
				var entry = entries[i];
				var object = key;
				var tmp;
				if(object == null) {
					tmp = false;
				} else {
					var result1 = object;
					var other = result1;
					tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
				}
				if(tmp) {
					result = entry;
					break;
				}
			}
		}
		var entry = result;
		if(entry != null) {
			return entry.attachment;
		} else {
			return null;
		}
	}
	,removeAttachment: function(slotIndex,name) {
		var _this = this.lookup;
		if(slotIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
		}
		if(name == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
		}
		_this.slotIndex = slotIndex;
		_this.name = name;
		var hash = 0;
		var chr;
		var x;
		if(name.length == 0) {
			x = hash;
		} else {
			var _g = 0;
			var _g1 = name.length;
			while(_g < _g1) {
				var i = _g++;
				chr = HxOverrides.cca(name,i);
				hash = (hash << 5) - hash + chr;
			}
			x = hash;
		}
		_this.hashCode = x + slotIndex * 37 | 0;
		spine_support_utils_AttachmentSet.remove(this.attachments,this.lookup);
	}
	,getAttachments: function() {
		return spine_support_utils_AttachmentSet.orderedItems(this.attachments);
	}
	,getAttachmentsInSkinForSlot: function(slotIndex,attachments) {
		if(slotIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
		}
		if(attachments == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("attachments cannot be null."));
		}
		var _g = 0;
		var _g1 = spine_support_utils_AttachmentSet.orderedItems(this.attachments);
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			if(entry.slotIndex == slotIndex) {
				attachments.push(entry);
			}
		}
	}
	,clear: function() {
		this.attachments.h = { };
		var this1 = this.bones;
		this1.splice(0,this1.length);
		var this1 = this.constraints;
		this1.splice(0,this1.length);
	}
	,getBones: function() {
		return this.bones;
	}
	,getConstraints: function() {
		return this.constraints;
	}
	,getName: function() {
		return this.name;
	}
	,toString: function() {
		return this.name;
	}
	,attachAll: function(skeleton,oldSkin) {
		var slots = skeleton.slots;
		var _g = 0;
		var _g1 = spine_support_utils_AttachmentSet.orderedItems(oldSkin.attachments);
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			var slotIndex = entry.slotIndex;
			var result = slots[slotIndex];
			var slot = result;
			if(slot.attachment == entry.attachment) {
				var name = entry.name;
				var _this = this.lookup;
				if(slotIndex < 0) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
				}
				if(name == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
				}
				_this.slotIndex = slotIndex;
				_this.name = name;
				var hash = 0;
				var chr;
				var x;
				if(name.length == 0) {
					x = hash;
				} else {
					var _g2 = 0;
					var _g3 = name.length;
					while(_g2 < _g3) {
						var i = _g2++;
						chr = HxOverrides.cca(name,i);
						hash = (hash << 5) - hash + chr;
					}
					x = hash;
				}
				_this.hashCode = x + slotIndex * 37 | 0;
				var key = this.lookup;
				var entries = this.attachments.h[key.hashCode];
				var result1 = null;
				if(entries != null) {
					var _g4 = 0;
					var _g5 = entries.length;
					while(_g4 < _g5) {
						var i1 = _g4++;
						var entry1 = entries[i1];
						var object = key;
						var tmp;
						if(object == null) {
							tmp = false;
						} else {
							var result2 = object;
							var other = result2;
							tmp = entry1.slotIndex != other.slotIndex ? false : entry1.name == other.name;
						}
						if(tmp) {
							result1 = entry1;
							break;
						}
					}
				}
				var entry2 = result1;
				var attachment = entry2 != null ? entry2.attachment : null;
				if(attachment != null) {
					if(slot.attachment != attachment) {
						var tmp1;
						if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((slot.attachment) instanceof spine_attachments_VertexAttachment))) {
							var result3 = attachment;
							var _this1 = result3;
							var result4 = slot.attachment;
							var _this2 = result4;
							tmp1 = (_this1.deformAttachment != null ? _this1.deformAttachment : _this1) != (_this2.deformAttachment != null ? _this2.deformAttachment : _this2);
						} else {
							tmp1 = true;
						}
						if(tmp1) {
							var this1 = slot.deform;
							this1.splice(0,this1.length);
						}
						slot.attachment = attachment;
						slot.attachmentTime = slot.bone.skeleton.time;
					}
				}
			}
		}
	}
	,__class__: spine_Skin
};
var spine_SkinEntry = function(slotIndex,name,attachment) {
	this.hashCode = 0;
	this.slotIndex = 0;
	if(slotIndex < 0) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
	}
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.slotIndex = slotIndex;
	this.name = name;
	var hash = 0;
	var chr;
	var x;
	if(name.length == 0) {
		x = hash;
	} else {
		var _g = 0;
		var _g1 = name.length;
		while(_g < _g1) {
			var i = _g++;
			chr = HxOverrides.cca(name,i);
			hash = (hash << 5) - hash + chr;
		}
		x = hash;
	}
	this.hashCode = x + slotIndex * 37 | 0;
	this.attachment = attachment;
};
$hxClasses["spine.SkinEntry"] = spine_SkinEntry;
spine_SkinEntry.__name__ = "spine.SkinEntry";
spine_SkinEntry.prototype = {
	set: function(slotIndex,name) {
		if(slotIndex < 0) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("slotIndex must be >= 0."));
		}
		if(name == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
		}
		this.slotIndex = slotIndex;
		this.name = name;
		var hash = 0;
		var chr;
		var x;
		if(name.length == 0) {
			x = hash;
		} else {
			var _g = 0;
			var _g1 = name.length;
			while(_g < _g1) {
				var i = _g++;
				chr = HxOverrides.cca(name,i);
				hash = (hash << 5) - hash + chr;
			}
			x = hash;
		}
		this.hashCode = x + slotIndex * 37 | 0;
	}
	,getSlotIndex: function() {
		return this.slotIndex;
	}
	,getName: function() {
		return this.name;
	}
	,getAttachment: function() {
		return this.attachment;
	}
	,getHashCode: function() {
		return this.hashCode;
	}
	,equals: function(object) {
		if(object == null) {
			return false;
		}
		var result = object;
		var other = result;
		if(this.slotIndex != other.slotIndex) {
			return false;
		}
		return this.name == other.name;
	}
	,toString: function() {
		return this.slotIndex + ":" + this.name;
	}
	,__class__: spine_SkinEntry
};
var spine_Slot = function(data,bone) {
	this.attachmentState = 0;
	var this1 = [];
	this.deform = this1;
	this.attachmentTime = 0;
	this.color = new spine_support_graphics_Color();
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	if(bone == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("bone cannot be null."));
	}
	this.data = data;
	this.bone = bone;
	this.darkColor = data.darkColor == null ? null : new spine_support_graphics_Color();
	var _this = this.color;
	var color = this.data.color;
	_this.r = color.r;
	_this.g = color.g;
	_this.b = color.b;
	_this.a = color.a;
	if(this.darkColor != null) {
		var _this = this.darkColor;
		var color = this.data.darkColor;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
	}
	if(this.data.attachmentName == null) {
		var attachment = null;
		if(this.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((this.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = this.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = this.deform;
				this1.splice(0,this1.length);
			}
			this.attachment = attachment;
			this.attachmentTime = this.bone.skeleton.time;
		}
	} else {
		this.attachment = null;
		var attachment = this.bone.skeleton.getAttachment(this.data.index,this.data.attachmentName);
		if(this.attachment != attachment) {
			var tmp;
			if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((this.attachment) instanceof spine_attachments_VertexAttachment))) {
				var result = attachment;
				var _this = result;
				var result = this.attachment;
				var _this1 = result;
				tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
			} else {
				tmp = true;
			}
			if(tmp) {
				var this1 = this.deform;
				this1.splice(0,this1.length);
			}
			this.attachment = attachment;
			this.attachmentTime = this.bone.skeleton.time;
		}
	}
};
$hxClasses["spine.Slot"] = spine_Slot;
spine_Slot.__name__ = "spine.Slot";
spine_Slot.prototype = {
	getData: function() {
		return this.data;
	}
	,getBone: function() {
		return this.bone;
	}
	,getSkeleton: function() {
		return this.bone.skeleton;
	}
	,getColor: function() {
		return this.color;
	}
	,getDarkColor: function() {
		return this.darkColor;
	}
	,getAttachment: function() {
		return this.attachment;
	}
	,setAttachment: function(attachment) {
		if(this.attachment == attachment) {
			return;
		}
		var tmp;
		if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((this.attachment) instanceof spine_attachments_VertexAttachment))) {
			var result = attachment;
			var _this = result;
			var result = this.attachment;
			var _this1 = result;
			tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
		} else {
			tmp = true;
		}
		if(tmp) {
			var this1 = this.deform;
			this1.splice(0,this1.length);
		}
		this.attachment = attachment;
		this.attachmentTime = this.bone.skeleton.time;
	}
	,getAttachmentTime: function() {
		return this.bone.skeleton.time - this.attachmentTime;
	}
	,setAttachmentTime: function(time) {
		this.attachmentTime = this.bone.skeleton.time - time;
	}
	,getDeform: function() {
		return this.deform;
	}
	,setDeform: function(deform) {
		if(deform == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("deform cannot be null."));
		}
		this.deform = deform;
	}
	,setToSetupPose: function() {
		var _this = this.color;
		var color = this.data.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		if(this.darkColor != null) {
			var _this = this.darkColor;
			var color = this.data.darkColor;
			_this.r = color.r;
			_this.g = color.g;
			_this.b = color.b;
			_this.a = color.a;
		}
		if(this.data.attachmentName == null) {
			var attachment = null;
			if(this.attachment != attachment) {
				var tmp;
				if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((this.attachment) instanceof spine_attachments_VertexAttachment))) {
					var result = attachment;
					var _this = result;
					var result = this.attachment;
					var _this1 = result;
					tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
				} else {
					tmp = true;
				}
				if(tmp) {
					var this1 = this.deform;
					this1.splice(0,this1.length);
				}
				this.attachment = attachment;
				this.attachmentTime = this.bone.skeleton.time;
			}
		} else {
			this.attachment = null;
			var attachment = this.bone.skeleton.getAttachment(this.data.index,this.data.attachmentName);
			if(this.attachment != attachment) {
				var tmp;
				if(!(!((attachment) instanceof spine_attachments_VertexAttachment) || !((this.attachment) instanceof spine_attachments_VertexAttachment))) {
					var result = attachment;
					var _this = result;
					var result = this.attachment;
					var _this1 = result;
					tmp = (_this.deformAttachment != null ? _this.deformAttachment : _this) != (_this1.deformAttachment != null ? _this1.deformAttachment : _this1);
				} else {
					tmp = true;
				}
				if(tmp) {
					var this1 = this.deform;
					this1.splice(0,this1.length);
				}
				this.attachment = attachment;
				this.attachmentTime = this.bone.skeleton.time;
			}
		}
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_Slot
};
var spine_SlotData = function(index,name,boneData) {
	this.color = new spine_support_graphics_Color(1,1,1,1);
	this.index = 0;
	if(index < 0) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("index must be >= 0."));
	}
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	if(boneData == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("boneData cannot be null."));
	}
	this.index = index;
	this.name = name;
	this.boneData = boneData;
};
$hxClasses["spine.SlotData"] = spine_SlotData;
spine_SlotData.__name__ = "spine.SlotData";
spine_SlotData.prototype = {
	getIndex: function() {
		return this.index;
	}
	,getName: function() {
		return this.name;
	}
	,getBoneData: function() {
		return this.boneData;
	}
	,getColor: function() {
		return this.color;
	}
	,getDarkColor: function() {
		return this.darkColor;
	}
	,setDarkColor: function(darkColor) {
		this.darkColor = darkColor;
	}
	,setAttachmentName: function(attachmentName) {
		this.attachmentName = attachmentName;
	}
	,getAttachmentName: function() {
		return this.attachmentName;
	}
	,getBlendMode: function() {
		return this.blendMode;
	}
	,setBlendMode: function(blendMode) {
		this.blendMode = blendMode;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: spine_SlotData
};
var spine_TransformConstraint = function(data,skeleton) {
	this.temp = new spine_support_math_Vector2();
	this.active = false;
	this.mixShearY = 0;
	this.mixScaleY = 0;
	this.mixScaleX = 0;
	this.mixY = 0;
	this.mixX = 0;
	this.mixRotate = 0;
	if(data == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("data cannot be null."));
	}
	if(skeleton == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("skeleton cannot be null."));
	}
	this.data = data;
	this.mixRotate = data.mixRotate;
	this.mixX = data.mixX;
	this.mixY = data.mixY;
	this.mixScaleX = data.mixScaleX;
	this.mixScaleY = data.mixScaleY;
	this.mixShearY = data.mixShearY;
	var capacity = data.bones.length;
	var this1 = [];
	this.bones = this1;
	var _g = 0;
	var _g1 = data.bones;
	while(_g < _g1.length) {
		var boneData = _g1[_g];
		++_g;
		this.bones.push(skeleton.findBone(boneData.name));
	}
	this.target = skeleton.findBone(data.target.name);
};
$hxClasses["spine.TransformConstraint"] = spine_TransformConstraint;
spine_TransformConstraint.__name__ = "spine.TransformConstraint";
spine_TransformConstraint.__interfaces__ = [spine_Updatable];
spine_TransformConstraint.prototype = {
	update: function() {
		if(this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleX == 0 && this.mixShearY == 0) {
			return;
		}
		if(this.data.local) {
			if(this.data.relative) {
				var mixRotate = this.mixRotate;
				var mixX = this.mixX;
				var mixY = this.mixY;
				var mixScaleX = this.mixScaleX;
				var mixScaleY = this.mixScaleY;
				var mixShearY = this.mixShearY;
				var target = this.target;
				var bones = this.bones;
				var i = 0;
				var n = this.bones.length;
				while(i < n) {
					var result = bones[i];
					var bone = result;
					var rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;
					var x = bone.ax + (target.ax + this.data.offsetX) * mixX;
					var y = bone.ay + (target.ay + this.data.offsetY) * mixY;
					var scaleX = bone.ascaleX * ((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1;
					var scaleY = bone.ascaleY * ((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1;
					var shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;
					bone.updateWorldTransformWithData(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY);
					++i;
				}
			} else {
				var mixRotate = this.mixRotate;
				var mixX = this.mixX;
				var mixY = this.mixY;
				var mixScaleX = this.mixScaleX;
				var mixScaleY = this.mixScaleY;
				var mixShearY = this.mixShearY;
				var target = this.target;
				var bones = this.bones;
				var i = 0;
				var n = this.bones.length;
				while(i < n) {
					var result = bones[i];
					var bone = result;
					var rotation = bone.arotation;
					if(mixRotate != 0) {
						var r = target.arotation - rotation + this.data.offsetRotation;
						r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;
						rotation += r * mixRotate;
					}
					var x = bone.ax;
					var y = bone.ay;
					x += (target.ax - x + this.data.offsetX) * mixX;
					y += (target.ay - y + this.data.offsetY) * mixY;
					var scaleX = bone.ascaleX;
					var scaleY = bone.ascaleY;
					if(mixScaleX != 0 && scaleX != 0) {
						scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;
					}
					if(mixScaleY != 0 && scaleY != 0) {
						scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;
					}
					var shearY = bone.ashearY;
					if(mixShearY != 0) {
						var r1 = target.ashearY - shearY + this.data.offsetShearY;
						r1 -= (16384 - (16384.499999999996 - r1 / 360 | 0)) * 360;
						shearY += r1 * mixShearY;
					}
					bone.updateWorldTransformWithData(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY);
					++i;
				}
			}
		} else if(this.data.relative) {
			var mixRotate = this.mixRotate;
			var mixX = this.mixX;
			var mixY = this.mixY;
			var mixScaleX = this.mixScaleX;
			var mixScaleY = this.mixScaleY;
			var mixShearY = this.mixShearY;
			var translate = mixX != 0 || mixY != 0;
			var target = this.target;
			var ta = target.a;
			var tb = target.b;
			var tc = target.c;
			var td = target.d;
			var degRadReflect = ta * td - tb * tc > 0 ? spine_utils_SpineUtils.degRad : -spine_utils_SpineUtils.degRad;
			var offsetRotation = this.data.offsetRotation * degRadReflect;
			var offsetShearY = this.data.offsetShearY * degRadReflect;
			var bones = this.bones;
			var i = 0;
			var n = this.bones.length;
			while(i < n) {
				var result = bones[i];
				var bone = result;
				if(mixRotate != 0) {
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var r = Math.atan2(tc,ta) + offsetRotation;
					if(r > 3.1415927) {
						r -= 6.2831854;
					} else if(r < -3.1415927) {
						r += 6.2831854;
					}
					r *= mixRotate;
					var cos = Math.cos(r);
					var sin = Math.sin(r);
					bone.a = cos * a - sin * c;
					bone.b = cos * b - sin * d;
					bone.c = sin * a + cos * c;
					bone.d = sin * b + cos * d;
				}
				if(translate) {
					var temp = this.temp;
					temp.x = this.data.offsetX;
					temp.y = this.data.offsetY;
					var local = temp;
					if(local == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("local cannot be null."));
					}
					var x = local.x;
					var y = local.y;
					local.x = x * target.a + y * target.b + target.worldX;
					local.y = x * target.c + y * target.d + target.worldY;
					bone.worldX += temp.x * mixX;
					bone.worldY += temp.y * mixY;
				}
				if(mixScaleX != 0) {
					var s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;
					bone.a *= s;
					bone.c *= s;
				}
				if(mixScaleY != 0) {
					var s1 = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;
					bone.b *= s1;
					bone.d *= s1;
				}
				if(mixShearY > 0) {
					var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta);
					if(r1 > 3.1415927) {
						r1 -= 6.2831854;
					} else if(r1 < -3.1415927) {
						r1 += 6.2831854;
					}
					var b1 = bone.b;
					var d1 = bone.d;
					r1 = Math.atan2(d1,b1) + (r1 - 1.57079635 + offsetShearY) * mixShearY;
					var s2 = Math.sqrt(b1 * b1 + d1 * d1);
					bone.b = Math.cos(r1) * s2;
					bone.d = Math.sin(r1) * s2;
				}
				var parent = bone.parent;
				if(parent == null) {
					bone.ax = bone.worldX;
					bone.ay = bone.worldY;
					var a1 = bone.a;
					var b2 = bone.b;
					var c1 = bone.c;
					var d2 = bone.d;
					bone.arotation = Math.atan2(c1,a1) * spine_utils_SpineUtils.radDeg;
					bone.ascaleX = Math.sqrt(a1 * a1 + c1 * c1);
					bone.ascaleY = Math.sqrt(b2 * b2 + d2 * d2);
					bone.ashearX = 0;
					bone.ashearY = Math.atan2(a1 * b2 + c1 * d2,a1 * d2 - b2 * c1) * spine_utils_SpineUtils.radDeg;
				} else {
					var pa = parent.a;
					var pb = parent.b;
					var pc = parent.c;
					var pd = parent.d;
					var pid = 1 / (pa * pd - pb * pc);
					var dx = bone.worldX - parent.worldX;
					var dy = bone.worldY - parent.worldY;
					bone.ax = dx * pd * pid - dy * pb * pid;
					bone.ay = dy * pa * pid - dx * pc * pid;
					var ia = pid * pd;
					var id = pid * pa;
					var ib = pid * pb;
					var ic = pid * pc;
					var ra = ia * bone.a - ib * bone.c;
					var rb = ia * bone.b - ib * bone.d;
					var rc = id * bone.c - ic * bone.a;
					var rd = id * bone.d - ic * bone.b;
					bone.ashearX = 0;
					bone.ascaleX = Math.sqrt(ra * ra + rc * rc);
					if(bone.ascaleX > 0.0001) {
						var det = ra * rd - rb * rc;
						bone.ascaleY = det / bone.ascaleX;
						bone.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
						bone.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
					} else {
						bone.ascaleX = 0;
						bone.ascaleY = Math.sqrt(rb * rb + rd * rd);
						bone.ashearY = 0;
						bone.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
					}
				}
				++i;
			}
		} else {
			var mixRotate = this.mixRotate;
			var mixX = this.mixX;
			var mixY = this.mixY;
			var mixScaleX = this.mixScaleX;
			var mixScaleY = this.mixScaleY;
			var mixShearY = this.mixShearY;
			var translate = mixX != 0 || mixY != 0;
			var target = this.target;
			var ta = target.a;
			var tb = target.b;
			var tc = target.c;
			var td = target.d;
			var degRadReflect = ta * td - tb * tc > 0 ? spine_utils_SpineUtils.degRad : -spine_utils_SpineUtils.degRad;
			var offsetRotation = this.data.offsetRotation * degRadReflect;
			var offsetShearY = this.data.offsetShearY * degRadReflect;
			var bones = this.bones;
			var i = 0;
			var n = this.bones.length;
			while(i < n) {
				var result = bones[i];
				var bone = result;
				if(mixRotate != 0) {
					var a = bone.a;
					var b = bone.b;
					var c = bone.c;
					var d = bone.d;
					var r = Math.atan2(tc,ta) - Math.atan2(c,a) + offsetRotation;
					if(r > 3.1415927) {
						r -= 6.2831854;
					} else if(r < -3.1415927) {
						r += 6.2831854;
					}
					r *= mixRotate;
					var cos = Math.cos(r);
					var sin = Math.sin(r);
					bone.a = cos * a - sin * c;
					bone.b = cos * b - sin * d;
					bone.c = sin * a + cos * c;
					bone.d = sin * b + cos * d;
				}
				if(translate) {
					var temp = this.temp;
					temp.x = this.data.offsetX;
					temp.y = this.data.offsetY;
					var local = temp;
					if(local == null) {
						throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("local cannot be null."));
					}
					var x = local.x;
					var y = local.y;
					local.x = x * target.a + y * target.b + target.worldX;
					local.y = x * target.c + y * target.d + target.worldY;
					bone.worldX += (temp.x - bone.worldX) * mixX;
					bone.worldY += (temp.y - bone.worldY) * mixY;
				}
				if(mixScaleX != 0) {
					var s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);
					if(s != 0) {
						s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;
					}
					bone.a *= s;
					bone.c *= s;
				}
				if(mixScaleY != 0) {
					var s1 = Math.sqrt(bone.b * bone.b + bone.d * bone.d);
					if(s1 != 0) {
						s1 = (s1 + (Math.sqrt(tb * tb + td * td) - s1 + this.data.offsetScaleY) * mixScaleY) / s1;
					}
					bone.b *= s1;
					bone.d *= s1;
				}
				if(mixShearY > 0) {
					var b1 = bone.b;
					var d1 = bone.d;
					var by = Math.atan2(d1,b1);
					var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta) - (by - Math.atan2(bone.c,bone.a));
					if(r1 > 3.1415927) {
						r1 -= 6.2831854;
					} else if(r1 < -3.1415927) {
						r1 += 6.2831854;
					}
					r1 = by + (r1 + offsetShearY) * mixShearY;
					var s2 = Math.sqrt(b1 * b1 + d1 * d1);
					bone.b = Math.cos(r1) * s2;
					bone.d = Math.sin(r1) * s2;
				}
				var parent = bone.parent;
				if(parent == null) {
					bone.ax = bone.worldX;
					bone.ay = bone.worldY;
					var a1 = bone.a;
					var b2 = bone.b;
					var c1 = bone.c;
					var d2 = bone.d;
					bone.arotation = Math.atan2(c1,a1) * spine_utils_SpineUtils.radDeg;
					bone.ascaleX = Math.sqrt(a1 * a1 + c1 * c1);
					bone.ascaleY = Math.sqrt(b2 * b2 + d2 * d2);
					bone.ashearX = 0;
					bone.ashearY = Math.atan2(a1 * b2 + c1 * d2,a1 * d2 - b2 * c1) * spine_utils_SpineUtils.radDeg;
				} else {
					var pa = parent.a;
					var pb = parent.b;
					var pc = parent.c;
					var pd = parent.d;
					var pid = 1 / (pa * pd - pb * pc);
					var dx = bone.worldX - parent.worldX;
					var dy = bone.worldY - parent.worldY;
					bone.ax = dx * pd * pid - dy * pb * pid;
					bone.ay = dy * pa * pid - dx * pc * pid;
					var ia = pid * pd;
					var id = pid * pa;
					var ib = pid * pb;
					var ic = pid * pc;
					var ra = ia * bone.a - ib * bone.c;
					var rb = ia * bone.b - ib * bone.d;
					var rc = id * bone.c - ic * bone.a;
					var rd = id * bone.d - ic * bone.b;
					bone.ashearX = 0;
					bone.ascaleX = Math.sqrt(ra * ra + rc * rc);
					if(bone.ascaleX > 0.0001) {
						var det = ra * rd - rb * rc;
						bone.ascaleY = det / bone.ascaleX;
						bone.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
						bone.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
					} else {
						bone.ascaleX = 0;
						bone.ascaleY = Math.sqrt(rb * rb + rd * rd);
						bone.ashearY = 0;
						bone.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
					}
				}
				++i;
			}
		}
	}
	,applyAbsoluteWorld: function() {
		var mixRotate = this.mixRotate;
		var mixX = this.mixX;
		var mixY = this.mixY;
		var mixScaleX = this.mixScaleX;
		var mixScaleY = this.mixScaleY;
		var mixShearY = this.mixShearY;
		var translate = mixX != 0 || mixY != 0;
		var target = this.target;
		var ta = target.a;
		var tb = target.b;
		var tc = target.c;
		var td = target.d;
		var degRadReflect = ta * td - tb * tc > 0 ? spine_utils_SpineUtils.degRad : -spine_utils_SpineUtils.degRad;
		var offsetRotation = this.data.offsetRotation * degRadReflect;
		var offsetShearY = this.data.offsetShearY * degRadReflect;
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			if(mixRotate != 0) {
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var r = Math.atan2(tc,ta) - Math.atan2(c,a) + offsetRotation;
				if(r > 3.1415927) {
					r -= 6.2831854;
				} else if(r < -3.1415927) {
					r += 6.2831854;
				}
				r *= mixRotate;
				var cos = Math.cos(r);
				var sin = Math.sin(r);
				bone.a = cos * a - sin * c;
				bone.b = cos * b - sin * d;
				bone.c = sin * a + cos * c;
				bone.d = sin * b + cos * d;
			}
			if(translate) {
				var temp = this.temp;
				temp.x = this.data.offsetX;
				temp.y = this.data.offsetY;
				var local = temp;
				if(local == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("local cannot be null."));
				}
				var x = local.x;
				var y = local.y;
				local.x = x * target.a + y * target.b + target.worldX;
				local.y = x * target.c + y * target.d + target.worldY;
				bone.worldX += (temp.x - bone.worldX) * mixX;
				bone.worldY += (temp.y - bone.worldY) * mixY;
			}
			if(mixScaleX != 0) {
				var s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);
				if(s != 0) {
					s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;
				}
				bone.a *= s;
				bone.c *= s;
			}
			if(mixScaleY != 0) {
				var s1 = Math.sqrt(bone.b * bone.b + bone.d * bone.d);
				if(s1 != 0) {
					s1 = (s1 + (Math.sqrt(tb * tb + td * td) - s1 + this.data.offsetScaleY) * mixScaleY) / s1;
				}
				bone.b *= s1;
				bone.d *= s1;
			}
			if(mixShearY > 0) {
				var b1 = bone.b;
				var d1 = bone.d;
				var by = Math.atan2(d1,b1);
				var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta) - (by - Math.atan2(bone.c,bone.a));
				if(r1 > 3.1415927) {
					r1 -= 6.2831854;
				} else if(r1 < -3.1415927) {
					r1 += 6.2831854;
				}
				r1 = by + (r1 + offsetShearY) * mixShearY;
				var s2 = Math.sqrt(b1 * b1 + d1 * d1);
				bone.b = Math.cos(r1) * s2;
				bone.d = Math.sin(r1) * s2;
			}
			var parent = bone.parent;
			if(parent == null) {
				bone.ax = bone.worldX;
				bone.ay = bone.worldY;
				var a1 = bone.a;
				var b2 = bone.b;
				var c1 = bone.c;
				var d2 = bone.d;
				bone.arotation = Math.atan2(c1,a1) * spine_utils_SpineUtils.radDeg;
				bone.ascaleX = Math.sqrt(a1 * a1 + c1 * c1);
				bone.ascaleY = Math.sqrt(b2 * b2 + d2 * d2);
				bone.ashearX = 0;
				bone.ashearY = Math.atan2(a1 * b2 + c1 * d2,a1 * d2 - b2 * c1) * spine_utils_SpineUtils.radDeg;
			} else {
				var pa = parent.a;
				var pb = parent.b;
				var pc = parent.c;
				var pd = parent.d;
				var pid = 1 / (pa * pd - pb * pc);
				var dx = bone.worldX - parent.worldX;
				var dy = bone.worldY - parent.worldY;
				bone.ax = dx * pd * pid - dy * pb * pid;
				bone.ay = dy * pa * pid - dx * pc * pid;
				var ia = pid * pd;
				var id = pid * pa;
				var ib = pid * pb;
				var ic = pid * pc;
				var ra = ia * bone.a - ib * bone.c;
				var rb = ia * bone.b - ib * bone.d;
				var rc = id * bone.c - ic * bone.a;
				var rd = id * bone.d - ic * bone.b;
				bone.ashearX = 0;
				bone.ascaleX = Math.sqrt(ra * ra + rc * rc);
				if(bone.ascaleX > 0.0001) {
					var det = ra * rd - rb * rc;
					bone.ascaleY = det / bone.ascaleX;
					bone.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
					bone.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
				} else {
					bone.ascaleX = 0;
					bone.ascaleY = Math.sqrt(rb * rb + rd * rd);
					bone.ashearY = 0;
					bone.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
				}
			}
			++i;
		}
	}
	,applyRelativeWorld: function() {
		var mixRotate = this.mixRotate;
		var mixX = this.mixX;
		var mixY = this.mixY;
		var mixScaleX = this.mixScaleX;
		var mixScaleY = this.mixScaleY;
		var mixShearY = this.mixShearY;
		var translate = mixX != 0 || mixY != 0;
		var target = this.target;
		var ta = target.a;
		var tb = target.b;
		var tc = target.c;
		var td = target.d;
		var degRadReflect = ta * td - tb * tc > 0 ? spine_utils_SpineUtils.degRad : -spine_utils_SpineUtils.degRad;
		var offsetRotation = this.data.offsetRotation * degRadReflect;
		var offsetShearY = this.data.offsetShearY * degRadReflect;
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			if(mixRotate != 0) {
				var a = bone.a;
				var b = bone.b;
				var c = bone.c;
				var d = bone.d;
				var r = Math.atan2(tc,ta) + offsetRotation;
				if(r > 3.1415927) {
					r -= 6.2831854;
				} else if(r < -3.1415927) {
					r += 6.2831854;
				}
				r *= mixRotate;
				var cos = Math.cos(r);
				var sin = Math.sin(r);
				bone.a = cos * a - sin * c;
				bone.b = cos * b - sin * d;
				bone.c = sin * a + cos * c;
				bone.d = sin * b + cos * d;
			}
			if(translate) {
				var temp = this.temp;
				temp.x = this.data.offsetX;
				temp.y = this.data.offsetY;
				var local = temp;
				if(local == null) {
					throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("local cannot be null."));
				}
				var x = local.x;
				var y = local.y;
				local.x = x * target.a + y * target.b + target.worldX;
				local.y = x * target.c + y * target.d + target.worldY;
				bone.worldX += temp.x * mixX;
				bone.worldY += temp.y * mixY;
			}
			if(mixScaleX != 0) {
				var s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;
				bone.a *= s;
				bone.c *= s;
			}
			if(mixScaleY != 0) {
				var s1 = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;
				bone.b *= s1;
				bone.d *= s1;
			}
			if(mixShearY > 0) {
				var r1 = Math.atan2(td,tb) - Math.atan2(tc,ta);
				if(r1 > 3.1415927) {
					r1 -= 6.2831854;
				} else if(r1 < -3.1415927) {
					r1 += 6.2831854;
				}
				var b1 = bone.b;
				var d1 = bone.d;
				r1 = Math.atan2(d1,b1) + (r1 - 1.57079635 + offsetShearY) * mixShearY;
				var s2 = Math.sqrt(b1 * b1 + d1 * d1);
				bone.b = Math.cos(r1) * s2;
				bone.d = Math.sin(r1) * s2;
			}
			var parent = bone.parent;
			if(parent == null) {
				bone.ax = bone.worldX;
				bone.ay = bone.worldY;
				var a1 = bone.a;
				var b2 = bone.b;
				var c1 = bone.c;
				var d2 = bone.d;
				bone.arotation = Math.atan2(c1,a1) * spine_utils_SpineUtils.radDeg;
				bone.ascaleX = Math.sqrt(a1 * a1 + c1 * c1);
				bone.ascaleY = Math.sqrt(b2 * b2 + d2 * d2);
				bone.ashearX = 0;
				bone.ashearY = Math.atan2(a1 * b2 + c1 * d2,a1 * d2 - b2 * c1) * spine_utils_SpineUtils.radDeg;
			} else {
				var pa = parent.a;
				var pb = parent.b;
				var pc = parent.c;
				var pd = parent.d;
				var pid = 1 / (pa * pd - pb * pc);
				var dx = bone.worldX - parent.worldX;
				var dy = bone.worldY - parent.worldY;
				bone.ax = dx * pd * pid - dy * pb * pid;
				bone.ay = dy * pa * pid - dx * pc * pid;
				var ia = pid * pd;
				var id = pid * pa;
				var ib = pid * pb;
				var ic = pid * pc;
				var ra = ia * bone.a - ib * bone.c;
				var rb = ia * bone.b - ib * bone.d;
				var rc = id * bone.c - ic * bone.a;
				var rd = id * bone.d - ic * bone.b;
				bone.ashearX = 0;
				bone.ascaleX = Math.sqrt(ra * ra + rc * rc);
				if(bone.ascaleX > 0.0001) {
					var det = ra * rd - rb * rc;
					bone.ascaleY = det / bone.ascaleX;
					bone.ashearY = Math.atan2(ra * rb + rc * rd,det) * spine_utils_SpineUtils.radDeg;
					bone.arotation = Math.atan2(rc,ra) * spine_utils_SpineUtils.radDeg;
				} else {
					bone.ascaleX = 0;
					bone.ascaleY = Math.sqrt(rb * rb + rd * rd);
					bone.ashearY = 0;
					bone.arotation = 90 - Math.atan2(rd,rb) * spine_utils_SpineUtils.radDeg;
				}
			}
			++i;
		}
	}
	,applyAbsoluteLocal: function() {
		var mixRotate = this.mixRotate;
		var mixX = this.mixX;
		var mixY = this.mixY;
		var mixScaleX = this.mixScaleX;
		var mixScaleY = this.mixScaleY;
		var mixShearY = this.mixShearY;
		var target = this.target;
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			var rotation = bone.arotation;
			if(mixRotate != 0) {
				var r = target.arotation - rotation + this.data.offsetRotation;
				r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;
				rotation += r * mixRotate;
			}
			var x = bone.ax;
			var y = bone.ay;
			x += (target.ax - x + this.data.offsetX) * mixX;
			y += (target.ay - y + this.data.offsetY) * mixY;
			var scaleX = bone.ascaleX;
			var scaleY = bone.ascaleY;
			if(mixScaleX != 0 && scaleX != 0) {
				scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;
			}
			if(mixScaleY != 0 && scaleY != 0) {
				scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;
			}
			var shearY = bone.ashearY;
			if(mixShearY != 0) {
				var r1 = target.ashearY - shearY + this.data.offsetShearY;
				r1 -= (16384 - (16384.499999999996 - r1 / 360 | 0)) * 360;
				shearY += r1 * mixShearY;
			}
			bone.updateWorldTransformWithData(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY);
			++i;
		}
	}
	,applyRelativeLocal: function() {
		var mixRotate = this.mixRotate;
		var mixX = this.mixX;
		var mixY = this.mixY;
		var mixScaleX = this.mixScaleX;
		var mixScaleY = this.mixScaleY;
		var mixShearY = this.mixShearY;
		var target = this.target;
		var bones = this.bones;
		var i = 0;
		var n = this.bones.length;
		while(i < n) {
			var result = bones[i];
			var bone = result;
			var rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;
			var x = bone.ax + (target.ax + this.data.offsetX) * mixX;
			var y = bone.ay + (target.ay + this.data.offsetY) * mixY;
			var scaleX = bone.ascaleX * ((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1;
			var scaleY = bone.ascaleY * ((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1;
			var shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;
			bone.updateWorldTransformWithData(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY);
			++i;
		}
	}
	,getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,getMixRotate: function() {
		return this.mixRotate;
	}
	,setMixRotate: function(mixRotate) {
		this.mixRotate = mixRotate;
	}
	,getMixX: function() {
		return this.mixX;
	}
	,setMixX: function(mixX) {
		this.mixX = mixX;
	}
	,getMixY: function() {
		return this.mixY;
	}
	,setMixY: function(mixY) {
		this.mixY = mixY;
	}
	,getMixScaleX: function() {
		return this.mixScaleX;
	}
	,setMixScaleX: function(mixScaleX) {
		this.mixScaleX = mixScaleX;
	}
	,getMixScaleY: function() {
		return this.mixScaleY;
	}
	,setMixScaleY: function(mixScaleY) {
		this.mixScaleY = mixScaleY;
	}
	,getMixShearY: function() {
		return this.mixShearY;
	}
	,setMixShearY: function(mixShearY) {
		this.mixShearY = mixShearY;
	}
	,isActive: function() {
		return this.active;
	}
	,getData: function() {
		return this.data;
	}
	,toString: function() {
		return this.data.name;
	}
	,__class__: spine_TransformConstraint
};
var spine_TransformConstraintData = function(name) {
	this.local = false;
	this.relative = false;
	this.offsetShearY = 0;
	this.offsetScaleY = 0;
	this.offsetScaleX = 0;
	this.offsetY = 0;
	this.offsetX = 0;
	this.offsetRotation = 0;
	this.mixShearY = 0;
	this.mixScaleY = 0;
	this.mixScaleX = 0;
	this.mixY = 0;
	this.mixX = 0;
	this.mixRotate = 0;
	var this1 = [];
	this.bones = this1;
	spine_ConstraintData.call(this,name);
};
$hxClasses["spine.TransformConstraintData"] = spine_TransformConstraintData;
spine_TransformConstraintData.__name__ = "spine.TransformConstraintData";
spine_TransformConstraintData.__super__ = spine_ConstraintData;
spine_TransformConstraintData.prototype = $extend(spine_ConstraintData.prototype,{
	getBones: function() {
		return this.bones;
	}
	,getTarget: function() {
		return this.target;
	}
	,setTarget: function(target) {
		if(target == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("target cannot be null."));
		}
		this.target = target;
	}
	,getMixRotate: function() {
		return this.mixRotate;
	}
	,setMixRotate: function(mixRotate) {
		this.mixRotate = mixRotate;
	}
	,getMixX: function() {
		return this.mixX;
	}
	,setMixX: function(mixX) {
		this.mixX = mixX;
	}
	,getMixY: function() {
		return this.mixY;
	}
	,setMixY: function(mixY) {
		this.mixY = mixY;
	}
	,getMixScaleX: function() {
		return this.mixScaleX;
	}
	,setMixScaleX: function(mixScaleX) {
		this.mixScaleX = mixScaleX;
	}
	,getMixScaleY: function() {
		return this.mixScaleY;
	}
	,setMixScaleY: function(mixScaleY) {
		this.mixScaleY = mixScaleY;
	}
	,getMixShearY: function() {
		return this.mixShearY;
	}
	,setMixShearY: function(mixShearY) {
		this.mixShearY = mixShearY;
	}
	,getOffsetRotation: function() {
		return this.offsetRotation;
	}
	,setOffsetRotation: function(offsetRotation) {
		this.offsetRotation = offsetRotation;
	}
	,getOffsetX: function() {
		return this.offsetX;
	}
	,setOffsetX: function(offsetX) {
		this.offsetX = offsetX;
	}
	,getOffsetY: function() {
		return this.offsetY;
	}
	,setOffsetY: function(offsetY) {
		this.offsetY = offsetY;
	}
	,getOffsetScaleX: function() {
		return this.offsetScaleX;
	}
	,setOffsetScaleX: function(offsetScaleX) {
		this.offsetScaleX = offsetScaleX;
	}
	,getOffsetScaleY: function() {
		return this.offsetScaleY;
	}
	,setOffsetScaleY: function(offsetScaleY) {
		this.offsetScaleY = offsetScaleY;
	}
	,getOffsetShearY: function() {
		return this.offsetShearY;
	}
	,setOffsetShearY: function(offsetShearY) {
		this.offsetShearY = offsetShearY;
	}
	,getRelative: function() {
		return this.relative;
	}
	,setRelative: function(relative) {
		this.relative = relative;
	}
	,getLocal: function() {
		return this.local;
	}
	,setLocal: function(local) {
		this.local = local;
	}
	,__class__: spine_TransformConstraintData
});
var spine_attachments_AtlasAttachmentLoader = function(atlas) {
	if(atlas == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("atlas cannot be null."));
	}
	this.atlas = atlas;
};
$hxClasses["spine.attachments.AtlasAttachmentLoader"] = spine_attachments_AtlasAttachmentLoader;
spine_attachments_AtlasAttachmentLoader.__name__ = "spine.attachments.AtlasAttachmentLoader";
spine_attachments_AtlasAttachmentLoader.__interfaces__ = [spine_attachments_AttachmentLoader];
spine_attachments_AtlasAttachmentLoader.prototype = {
	newRegionAttachment: function(skin,name,path) {
		var region = this.atlas.findRegion(path);
		if(region == null) {
			throw haxe_Exception.thrown(new spine_support_error_RuntimeException("Region not found in atlas: " + path + " (region attachment: " + name + ")"));
		}
		var attachment = new spine_attachments_RegionAttachment(name);
		if(region == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("region cannot be null."));
		}
		attachment.region = region;
		var uvs = attachment.uvs;
		var tmp;
		if(((region) instanceof spine_support_graphics_AtlasRegion)) {
			var result = region;
			tmp = result.degrees == 90;
		} else {
			tmp = false;
		}
		if(tmp) {
			uvs[4] = region.u;
			uvs[5] = region.v2;
			uvs[6] = region.u;
			uvs[7] = region.v;
			uvs[0] = region.u2;
			uvs[1] = region.v;
			uvs[2] = region.u2;
			uvs[3] = region.v2;
		} else {
			uvs[2] = region.u;
			uvs[3] = region.v2;
			uvs[4] = region.u;
			uvs[5] = region.v;
			uvs[6] = region.u2;
			uvs[7] = region.v;
			uvs[0] = region.u2;
			uvs[1] = region.v2;
		}
		return attachment;
	}
	,newMeshAttachment: function(skin,name,path) {
		var region = this.atlas.findRegion(path);
		if(region == null) {
			throw haxe_Exception.thrown(new spine_support_error_RuntimeException("Region not found in atlas: " + path + " (mesh attachment: " + name + ")"));
		}
		var attachment = new spine_attachments_MeshAttachment(name);
		attachment.setRegion(region);
		return attachment;
	}
	,newBoundingBoxAttachment: function(skin,name) {
		return new spine_attachments_BoundingBoxAttachment(name);
	}
	,newClippingAttachment: function(skin,name) {
		return new spine_attachments_ClippingAttachment(name);
	}
	,newPathAttachment: function(skin,name) {
		return new spine_attachments_PathAttachment(name);
	}
	,newPointAttachment: function(skin,name) {
		return new spine_attachments_PointAttachment(name);
	}
	,__class__: spine_attachments_AtlasAttachmentLoader
};
var spine_attachments_Attachment = function(name) {
	if(name == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("name cannot be null."));
	}
	this.name = name;
};
$hxClasses["spine.attachments.Attachment"] = spine_attachments_Attachment;
spine_attachments_Attachment.__name__ = "spine.attachments.Attachment";
spine_attachments_Attachment.prototype = {
	getName: function() {
		return this.name;
	}
	,toString: function() {
		return this.name;
	}
	,copy: function() {
		return null;
	}
	,__class__: spine_attachments_Attachment
};
var spine_attachments_AttachmentType_$enum = function() { };
$hxClasses["spine.attachments.AttachmentType_enum"] = spine_attachments_AttachmentType_$enum;
spine_attachments_AttachmentType_$enum.__name__ = "spine.attachments.AttachmentType_enum";
spine_attachments_AttachmentType_$enum.valueOf = function(value) {
	switch(value) {
	case "boundingbox":
		return 1;
	case "clipping":
		return 6;
	case "linkedmesh":
		return 3;
	case "mesh":
		return 2;
	case "path":
		return 4;
	case "point":
		return 5;
	case "region":
		return 0;
	default:
		return 0;
	}
};
var spine_attachments_VertexAttachment = function(name) {
	this.deformAttachment = null;
	this.worldVerticesLength = 0;
	this.id = spine_attachments_VertexAttachment.nextID++;
	spine_attachments_Attachment.call(this,name);
};
$hxClasses["spine.attachments.VertexAttachment"] = spine_attachments_VertexAttachment;
spine_attachments_VertexAttachment.__name__ = "spine.attachments.VertexAttachment";
spine_attachments_VertexAttachment.getNextID = function() {
	return spine_attachments_VertexAttachment.nextID++;
};
spine_attachments_VertexAttachment.__super__ = spine_attachments_Attachment;
spine_attachments_VertexAttachment.prototype = $extend(spine_attachments_Attachment.prototype,{
	get_deformAttachment: function() {
		if(this.deformAttachment != null) {
			return this.deformAttachment;
		} else {
			return this;
		}
	}
	,set_deformAttachment: function(deformAttachment) {
		return this.deformAttachment = deformAttachment;
	}
	,computeWorldVertices: function(slot,start,count,worldVertices,offset,stride) {
		count = offset + (count >> 1) * stride;
		var deformArray = slot.deform;
		var vertices = this.vertices;
		var bones = this.bones;
		if(bones == null) {
			if(deformArray.length > 0) {
				vertices = deformArray;
			}
			var bone = slot.bone;
			var x = bone.worldX;
			var y = bone.worldY;
			var a = bone.a;
			var b = bone.b;
			var c = bone.c;
			var d = bone.d;
			var v = start;
			var w = offset;
			while(w < count) {
				var vx = vertices[v];
				var vy = vertices[v + 1];
				worldVertices[w] = vx * a + vy * b + x;
				worldVertices[w + 1] = vx * c + vy * d + y;
				v += 2;
				w += stride;
			}
			return;
		}
		var v = 0;
		var skip = 0;
		var i = 0;
		while(i < start) {
			var n = bones[v];
			v += n + 1;
			skip += n;
			i += 2;
		}
		var skeletonBones = slot.bone.skeleton.getBones();
		if(deformArray.length == 0) {
			var w = offset;
			var b = skip * 3;
			while(w < count) {
				var wx = 0;
				var wy = 0;
				var n = bones[v++];
				n += v;
				while(v < n) {
					var result = skeletonBones[bones[v]];
					var bone = result;
					var vx = vertices[b];
					var vy = vertices[b + 1];
					var weight = vertices[b + 2];
					wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
					wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
					++v;
					b += 3;
				}
				worldVertices[w] = wx;
				worldVertices[w + 1] = wy;
				w += stride;
			}
		} else {
			var deform = deformArray;
			var w = offset;
			var b = skip * 3;
			var f = skip << 1;
			while(w < count) {
				var wx = 0;
				var wy = 0;
				var n = bones[v++];
				n += v;
				while(v < n) {
					var result = skeletonBones[bones[v]];
					var bone = result;
					var vx = vertices[b] + deform[f];
					var vy = vertices[b + 1] + deform[f + 1];
					var weight = vertices[b + 2];
					wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;
					wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;
					++v;
					b += 3;
					f += 2;
				}
				worldVertices[w] = wx;
				worldVertices[w + 1] = wy;
				w += stride;
			}
		}
	}
	,getDeformAttachment: function() {
		if(this.deformAttachment != null) {
			return this.deformAttachment;
		} else {
			return this;
		}
	}
	,setDeformAttachment: function(deformAttachment) {
		this.deformAttachment = deformAttachment;
	}
	,getBones: function() {
		return this.bones;
	}
	,setBones: function(bones) {
		this.bones = bones;
	}
	,getVertices: function() {
		return this.vertices;
	}
	,setVertices: function(vertices) {
		this.vertices = vertices;
	}
	,getWorldVerticesLength: function() {
		return this.worldVerticesLength;
	}
	,setWorldVerticesLength: function(worldVerticesLength) {
		this.worldVerticesLength = worldVerticesLength;
	}
	,getId: function() {
		return this.id;
	}
	,copyTo: function(attachment) {
		if(this.bones != null) {
			var length = this.bones.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			attachment.bones = array;
			var src = this.bones;
			var dest = attachment.bones;
			var length = this.bones.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			attachment.bones = null;
		}
		if(this.vertices != null) {
			var length = this.vertices.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			attachment.vertices = array;
			var src = this.vertices;
			var dest = attachment.vertices;
			var length = this.vertices.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			attachment.vertices = null;
		}
		attachment.worldVerticesLength = this.worldVerticesLength;
		attachment.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
	}
	,__class__: spine_attachments_VertexAttachment
	,__properties__: {set_deformAttachment:"set_deformAttachment",get_deformAttachment:"get_deformAttachment"}
});
var spine_attachments_BoundingBoxAttachment = function(name) {
	this.color = new spine_support_graphics_Color(0.38,0.94,0,1);
	spine_attachments_VertexAttachment.call(this,name);
};
$hxClasses["spine.attachments.BoundingBoxAttachment"] = spine_attachments_BoundingBoxAttachment;
spine_attachments_BoundingBoxAttachment.__name__ = "spine.attachments.BoundingBoxAttachment";
spine_attachments_BoundingBoxAttachment.__super__ = spine_attachments_VertexAttachment;
spine_attachments_BoundingBoxAttachment.prototype = $extend(spine_attachments_VertexAttachment.prototype,{
	getColor: function() {
		return this.color;
	}
	,copy: function() {
		var copy = new spine_attachments_BoundingBoxAttachment(this.name);
		if(this.bones != null) {
			var length = this.bones.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.bones = array;
			var src = this.bones;
			var dest = copy.bones;
			var length = this.bones.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.bones = null;
		}
		if(this.vertices != null) {
			var length = this.vertices.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.vertices = array;
			var src = this.vertices;
			var dest = copy.vertices;
			var length = this.vertices.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.vertices = null;
		}
		copy.worldVerticesLength = this.worldVerticesLength;
		copy.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		return copy;
	}
	,__class__: spine_attachments_BoundingBoxAttachment
});
var spine_attachments_ClippingAttachment = function(name) {
	this.color = new spine_support_graphics_Color(0.2275,0.2275,0.8078,1);
	spine_attachments_VertexAttachment.call(this,name);
};
$hxClasses["spine.attachments.ClippingAttachment"] = spine_attachments_ClippingAttachment;
spine_attachments_ClippingAttachment.__name__ = "spine.attachments.ClippingAttachment";
spine_attachments_ClippingAttachment.__super__ = spine_attachments_VertexAttachment;
spine_attachments_ClippingAttachment.prototype = $extend(spine_attachments_VertexAttachment.prototype,{
	getEndSlot: function() {
		return this.endSlot;
	}
	,setEndSlot: function(endSlot) {
		this.endSlot = endSlot;
	}
	,getColor: function() {
		return this.color;
	}
	,copy: function() {
		var copy = new spine_attachments_ClippingAttachment(this.name);
		if(this.bones != null) {
			var length = this.bones.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.bones = array;
			var src = this.bones;
			var dest = copy.bones;
			var length = this.bones.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.bones = null;
		}
		if(this.vertices != null) {
			var length = this.vertices.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.vertices = array;
			var src = this.vertices;
			var dest = copy.vertices;
			var length = this.vertices.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.vertices = null;
		}
		copy.worldVerticesLength = this.worldVerticesLength;
		copy.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
		copy.endSlot = this.endSlot;
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		return copy;
	}
	,__class__: spine_attachments_ClippingAttachment
});
var spine_attachments_MeshAttachment = function(name) {
	this.height = 0;
	this.width = 0;
	this.hullLength = 0;
	this.color = new spine_support_graphics_Color(1,1,1,1);
	this.uvs = null;
	spine_attachments_VertexAttachment.call(this,name);
};
$hxClasses["spine.attachments.MeshAttachment"] = spine_attachments_MeshAttachment;
spine_attachments_MeshAttachment.__name__ = "spine.attachments.MeshAttachment";
spine_attachments_MeshAttachment.__super__ = spine_attachments_VertexAttachment;
spine_attachments_MeshAttachment.prototype = $extend(spine_attachments_VertexAttachment.prototype,{
	setRegion: function(region) {
		if(region == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("region cannot be null."));
		}
		this.region = region;
	}
	,getRegion: function() {
		if(this.region == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalStateException("Region has not been set: " + Std.string(this)));
		}
		return this.region;
	}
	,updateUVs: function() {
		var regionUVs = this.regionUVs;
		if(this.uvs == null || this.uvs.length != regionUVs.length) {
			var length = regionUVs.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			this.uvs = array;
		}
		var uvs = this.uvs;
		var n = uvs.length;
		var u = 0;
		var v = 0;
		var width = 0;
		var height = 0;
		if(((this.region) instanceof spine_support_graphics_AtlasRegion)) {
			u = this.region.u;
			v = this.region.v;
			var result = this.region;
			var region = result;
			var textureWidth = region.page.width;
			var textureHeight = region.page.height;
			var _continueAfterSwitch0 = false;
			while(true) {
				var _switchCond0 = region.degrees;
				if(_switchCond0 == 90) {
					u -= (region.originalHeight - region.offsetY - region.packedWidth) / textureWidth;
					v -= (region.originalWidth - region.offsetX - region.packedHeight) / textureHeight;
					width = region.originalHeight / textureWidth;
					height = region.originalWidth / textureHeight;
					var i = 0;
					while(i < n) {
						uvs[i] = u + regionUVs[i + 1] * width;
						uvs[i + 1] = v + (1 - regionUVs[i]) * height;
						i += 2;
					}
					return;
				} else if(_switchCond0 == 180) {
					u -= (region.originalWidth - region.offsetX - region.packedWidth) / textureWidth;
					v -= region.offsetY / textureHeight;
					width = region.originalWidth / textureWidth;
					height = region.originalHeight / textureHeight;
					var i1 = 0;
					while(i1 < n) {
						uvs[i1] = u + (1 - regionUVs[i1]) * width;
						uvs[i1 + 1] = v + (1 - regionUVs[i1 + 1]) * height;
						i1 += 2;
					}
					return;
				} else if(_switchCond0 == 270) {
					u -= region.offsetY / textureWidth;
					v -= region.offsetX / textureHeight;
					width = region.originalHeight / textureWidth;
					height = region.originalWidth / textureHeight;
					var i2 = 0;
					while(i2 < n) {
						uvs[i2] = u + (1 - regionUVs[i2 + 1]) * width;
						uvs[i2 + 1] = v + regionUVs[i2] * height;
						i2 += 2;
					}
					return;
				}
				break;
			}
			u -= region.offsetX / textureWidth;
			v -= (region.originalHeight - region.offsetY - region.packedHeight) / textureHeight;
			width = region.originalWidth / textureWidth;
			height = region.originalHeight / textureHeight;
		} else if(this.region == null) {
			v = 0;
			u = v;
			height = 1;
			width = height;
		} else {
			u = this.region.u;
			v = this.region.v;
			width = this.region.u2 - u;
			height = this.region.v2 - v;
		}
		var i = 0;
		while(i < n) {
			uvs[i] = u + regionUVs[i] * width;
			uvs[i + 1] = v + regionUVs[i + 1] * height;
			i += 2;
		}
	}
	,getTriangles: function() {
		return this.triangles;
	}
	,setTriangles: function(triangles) {
		this.triangles = triangles;
	}
	,getRegionUVs: function() {
		return this.regionUVs;
	}
	,setRegionUVs: function(regionUVs) {
		this.regionUVs = regionUVs;
	}
	,getUVs: function() {
		return this.uvs;
	}
	,setUVs: function(uvs) {
		this.uvs = uvs;
	}
	,getColor: function() {
		return this.color;
	}
	,getPath: function() {
		return this.path;
	}
	,setPath: function(path) {
		this.path = path;
	}
	,getHullLength: function() {
		return this.hullLength;
	}
	,setHullLength: function(hullLength) {
		this.hullLength = hullLength;
	}
	,setEdges: function(edges) {
		this.edges = edges;
	}
	,getEdges: function() {
		return this.edges;
	}
	,getWidth: function() {
		return this.width;
	}
	,setWidth: function(width) {
		this.width = width;
	}
	,getHeight: function() {
		return this.height;
	}
	,setHeight: function(height) {
		this.height = height;
	}
	,getParentMesh: function() {
		return this.parentMesh;
	}
	,setParentMesh: function(parentMesh) {
		this.parentMesh = parentMesh;
		if(parentMesh != null) {
			this.bones = parentMesh.bones;
			this.vertices = parentMesh.vertices;
			this.regionUVs = parentMesh.regionUVs;
			this.triangles = parentMesh.triangles;
			this.hullLength = parentMesh.hullLength;
			this.worldVerticesLength = parentMesh.worldVerticesLength;
			this.edges = parentMesh.edges;
			this.width = parentMesh.width;
			this.height = parentMesh.height;
		}
	}
	,copy: function() {
		if(this.parentMesh != null) {
			var mesh = new spine_attachments_MeshAttachment(this.name);
			mesh.region = this.region;
			mesh.path = this.path;
			var _this = mesh.color;
			var color = this.color;
			_this.r = color.r;
			_this.g = color.g;
			_this.b = color.b;
			_this.a = color.a;
			mesh.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
			var parentMesh = this.parentMesh != null ? this.parentMesh : this;
			mesh.parentMesh = parentMesh;
			if(parentMesh != null) {
				mesh.bones = parentMesh.bones;
				mesh.vertices = parentMesh.vertices;
				mesh.regionUVs = parentMesh.regionUVs;
				mesh.triangles = parentMesh.triangles;
				mesh.hullLength = parentMesh.hullLength;
				mesh.worldVerticesLength = parentMesh.worldVerticesLength;
				mesh.edges = parentMesh.edges;
				mesh.width = parentMesh.width;
				mesh.height = parentMesh.height;
			}
			mesh.updateUVs();
			return mesh;
		}
		var copy = new spine_attachments_MeshAttachment(this.name);
		copy.region = this.region;
		copy.path = this.path;
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		if(this.bones != null) {
			var length = this.bones.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.bones = array;
			var src = this.bones;
			var dest = copy.bones;
			var length = this.bones.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.bones = null;
		}
		if(this.vertices != null) {
			var length = this.vertices.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.vertices = array;
			var src = this.vertices;
			var dest = copy.vertices;
			var length = this.vertices.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.vertices = null;
		}
		copy.worldVerticesLength = this.worldVerticesLength;
		copy.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
		var length = this.regionUVs.length;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array = this1;
		if(length > 0) {
			var len1 = array.length;
			if(len1 > len) {
				array.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array.push(0);
					++len1;
				}
			}
		}
		copy.regionUVs = array;
		var src = this.regionUVs;
		var dest = copy.regionUVs;
		var length = this.regionUVs.length;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,length);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
		}
		var length = this.uvs.length;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array = this1;
		if(length > 0) {
			var len1 = array.length;
			if(len1 > len) {
				array.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array.push(0);
					++len1;
				}
			}
		}
		copy.uvs = array;
		var src = this.uvs;
		var dest = copy.uvs;
		var length = this.uvs.length;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,length);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
		}
		var length = this.triangles.length;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array = this1;
		if(length != 0) {
			var len1 = array.length;
			if(len1 > len) {
				array.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array.push(0);
					++len1;
				}
			}
		}
		copy.triangles = array;
		var src = this.triangles;
		var dest = copy.triangles;
		var length = this.triangles.length;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,length);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
		}
		copy.hullLength = this.hullLength;
		if(this.edges != null) {
			var length = this.edges.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.edges = array;
			var src = this.edges;
			var dest = copy.edges;
			var length = this.edges.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		}
		copy.width = this.width;
		copy.height = this.height;
		return copy;
	}
	,newLinkedMesh: function() {
		var mesh = new spine_attachments_MeshAttachment(this.name);
		mesh.region = this.region;
		mesh.path = this.path;
		var _this = mesh.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		mesh.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
		var parentMesh = this.parentMesh != null ? this.parentMesh : this;
		mesh.parentMesh = parentMesh;
		if(parentMesh != null) {
			mesh.bones = parentMesh.bones;
			mesh.vertices = parentMesh.vertices;
			mesh.regionUVs = parentMesh.regionUVs;
			mesh.triangles = parentMesh.triangles;
			mesh.hullLength = parentMesh.hullLength;
			mesh.worldVerticesLength = parentMesh.worldVerticesLength;
			mesh.edges = parentMesh.edges;
			mesh.width = parentMesh.width;
			mesh.height = parentMesh.height;
		}
		mesh.updateUVs();
		return mesh;
	}
	,__class__: spine_attachments_MeshAttachment
});
var spine_attachments_PathAttachment = function(name) {
	this.color = new spine_support_graphics_Color(1,0.5,0,1);
	this.constantSpeed = false;
	this.closed = false;
	spine_attachments_VertexAttachment.call(this,name);
};
$hxClasses["spine.attachments.PathAttachment"] = spine_attachments_PathAttachment;
spine_attachments_PathAttachment.__name__ = "spine.attachments.PathAttachment";
spine_attachments_PathAttachment.__super__ = spine_attachments_VertexAttachment;
spine_attachments_PathAttachment.prototype = $extend(spine_attachments_VertexAttachment.prototype,{
	getClosed: function() {
		return this.closed;
	}
	,setClosed: function(closed) {
		this.closed = closed;
	}
	,getConstantSpeed: function() {
		return this.constantSpeed;
	}
	,setConstantSpeed: function(constantSpeed) {
		this.constantSpeed = constantSpeed;
	}
	,getLengths: function() {
		return this.lengths;
	}
	,setLengths: function(lengths) {
		this.lengths = lengths;
	}
	,getColor: function() {
		return this.color;
	}
	,copy: function() {
		var copy = new spine_attachments_PathAttachment(this.name);
		if(this.bones != null) {
			var length = this.bones.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length != 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.bones = array;
			var src = this.bones;
			var dest = copy.bones;
			var length = this.bones.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.bones = null;
		}
		if(this.vertices != null) {
			var length = this.vertices.length;
			if(length == null) {
				length = 0;
			}
			var len = length | 0;
			var capacity = len != 0 ? len : 16;
			var this1 = [];
			var array = this1;
			if(length > 0) {
				var len1 = array.length;
				if(len1 > len) {
					array.splice(len,len - len1);
				} else if(len1 < len) {
					while(len1 < len) {
						array.push(0);
						++len1;
					}
				}
			}
			copy.vertices = array;
			var src = this.vertices;
			var dest = copy.vertices;
			var length = this.vertices.length;
			if(src == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
			}
			if(dest == null) {
				throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
			}
			try {
				spine_support_utils_Array.copy(src,0,dest,0,length);
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
			}
		} else {
			copy.vertices = null;
		}
		copy.worldVerticesLength = this.worldVerticesLength;
		copy.deformAttachment = this.deformAttachment != null ? this.deformAttachment : this;
		var length = this.lengths.length;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array = this1;
		if(length > 0) {
			var len1 = array.length;
			if(len1 > len) {
				array.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array.push(0);
					++len1;
				}
			}
		}
		copy.lengths = array;
		var src = this.lengths;
		var dest = copy.lengths;
		var length = this.lengths.length;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,length);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + length));
		}
		copy.closed = this.closed;
		copy.constantSpeed = this.constantSpeed;
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		return copy;
	}
	,__class__: spine_attachments_PathAttachment
});
var spine_attachments_PointAttachment = function(name) {
	this.color = new spine_support_graphics_Color(0.9451,0.9451,0,1);
	this.rotation = 0;
	this.y = 0;
	this.x = 0;
	spine_attachments_Attachment.call(this,name);
};
$hxClasses["spine.attachments.PointAttachment"] = spine_attachments_PointAttachment;
spine_attachments_PointAttachment.__name__ = "spine.attachments.PointAttachment";
spine_attachments_PointAttachment.__super__ = spine_attachments_Attachment;
spine_attachments_PointAttachment.prototype = $extend(spine_attachments_Attachment.prototype,{
	getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,getRotation: function() {
		return this.rotation;
	}
	,setRotation: function(rotation) {
		this.rotation = rotation;
	}
	,getColor: function() {
		return this.color;
	}
	,computeWorldPosition: function(bone,point) {
		point.x = this.x * bone.a + this.y * bone.b + bone.worldX;
		point.y = this.x * bone.c + this.y * bone.d + bone.worldY;
		return point;
	}
	,computeWorldRotation: function(bone) {
		var cos = Math.cos(this.rotation * spine_support_math_MathUtils.degRad);
		var sin = Math.sin(this.rotation * spine_support_math_MathUtils.degRad);
		var x = cos * bone.a + sin * bone.b;
		var y = cos * bone.c + sin * bone.d;
		return Math.atan2(y,x) * spine_support_math_MathUtils.radDeg;
	}
	,copy: function() {
		var copy = new spine_attachments_PointAttachment(this.name);
		copy.x = this.x;
		copy.y = this.y;
		copy.rotation = this.rotation;
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		return copy;
	}
	,__class__: spine_attachments_PointAttachment
});
var spine_attachments_RegionAttachment = function(name) {
	this.color = new spine_support_graphics_Color(1,1,1,1);
	var length = 8;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.offset = array;
	var length = 8;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.uvs = array;
	this.height = 0;
	this.width = 0;
	this.rotation = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.y = 0;
	this.x = 0;
	spine_attachments_Attachment.call(this,name);
};
$hxClasses["spine.attachments.RegionAttachment"] = spine_attachments_RegionAttachment;
spine_attachments_RegionAttachment.__name__ = "spine.attachments.RegionAttachment";
spine_attachments_RegionAttachment.__super__ = spine_attachments_Attachment;
spine_attachments_RegionAttachment.prototype = $extend(spine_attachments_Attachment.prototype,{
	updateOffset: function() {
		var width = this.width;
		var height = this.height;
		var localX2 = width / 2;
		var localY2 = height / 2;
		var localX = -localX2;
		var localY = -localY2;
		if(((this.region) instanceof spine_support_graphics_AtlasRegion)) {
			var result = this.region;
			var region = result;
			localX += region.offsetX / region.originalWidth * width;
			localY += region.offsetY / region.originalHeight * height;
			if(region.degrees == 90) {
				localX2 -= (region.originalWidth - region.offsetX - region.packedHeight) / region.originalWidth * width;
				localY2 -= (region.originalHeight - region.offsetY - region.packedWidth) / region.originalHeight * height;
			} else {
				localX2 -= (region.originalWidth - region.offsetX - region.packedWidth) / region.originalWidth * width;
				localY2 -= (region.originalHeight - region.offsetY - region.packedHeight) / region.originalHeight * height;
			}
		}
		var scaleX = this.scaleX;
		var scaleY = this.scaleY;
		localX *= scaleX;
		localY *= scaleY;
		localX2 *= scaleX;
		localY2 *= scaleY;
		var rotation = this.rotation;
		var cos = Math.cos(spine_utils_SpineUtils.degRad * rotation);
		var sin = Math.sin(spine_utils_SpineUtils.degRad * rotation);
		var x = this.x;
		var y = this.y;
		var localXCos = localX * cos + x;
		var localXSin = localX * sin;
		var localYCos = localY * cos + y;
		var localYSin = localY * sin;
		var localX2Cos = localX2 * cos + x;
		var localX2Sin = localX2 * sin;
		var localY2Cos = localY2 * cos + y;
		var localY2Sin = localY2 * sin;
		var offset = this.offset;
		offset[0] = localXCos - localYSin;
		offset[1] = localYCos + localXSin;
		offset[2] = localXCos - localY2Sin;
		offset[3] = localY2Cos + localXSin;
		offset[4] = localX2Cos - localY2Sin;
		offset[5] = localY2Cos + localX2Sin;
		offset[6] = localX2Cos - localYSin;
		offset[7] = localYCos + localX2Sin;
	}
	,setRegion: function(region) {
		if(region == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("region cannot be null."));
		}
		this.region = region;
		var uvs = this.uvs;
		var tmp;
		if(((region) instanceof spine_support_graphics_AtlasRegion)) {
			var result = region;
			tmp = result.degrees == 90;
		} else {
			tmp = false;
		}
		if(tmp) {
			uvs[4] = region.u;
			uvs[5] = region.v2;
			uvs[6] = region.u;
			uvs[7] = region.v;
			uvs[0] = region.u2;
			uvs[1] = region.v;
			uvs[2] = region.u2;
			uvs[3] = region.v2;
		} else {
			uvs[2] = region.u;
			uvs[3] = region.v2;
			uvs[4] = region.u;
			uvs[5] = region.v;
			uvs[6] = region.u2;
			uvs[7] = region.v;
			uvs[0] = region.u2;
			uvs[1] = region.v2;
		}
	}
	,getRegion: function() {
		if(this.region == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalStateException("Region has not been set: " + Std.string(this)));
		}
		return this.region;
	}
	,computeWorldVertices: function(bone,worldVertices,offset,stride) {
		var vertexOffset = this.offset;
		var x = bone.worldX;
		var y = bone.worldY;
		var a = bone.a;
		var b = bone.b;
		var c = bone.c;
		var d = bone.d;
		var offsetX = 0;
		var offsetY = 0;
		offsetX = vertexOffset[6];
		offsetY = vertexOffset[7];
		worldVertices[offset] = offsetX * a + offsetY * b + x;
		worldVertices[offset + 1] = offsetX * c + offsetY * d + y;
		offset += stride;
		offsetX = vertexOffset[0];
		offsetY = vertexOffset[1];
		worldVertices[offset] = offsetX * a + offsetY * b + x;
		worldVertices[offset + 1] = offsetX * c + offsetY * d + y;
		offset += stride;
		offsetX = vertexOffset[2];
		offsetY = vertexOffset[3];
		worldVertices[offset] = offsetX * a + offsetY * b + x;
		worldVertices[offset + 1] = offsetX * c + offsetY * d + y;
		offset += stride;
		offsetX = vertexOffset[4];
		offsetY = vertexOffset[5];
		worldVertices[offset] = offsetX * a + offsetY * b + x;
		worldVertices[offset + 1] = offsetX * c + offsetY * d + y;
	}
	,getOffset: function() {
		return this.offset;
	}
	,getUVs: function() {
		return this.uvs;
	}
	,getX: function() {
		return this.x;
	}
	,setX: function(x) {
		this.x = x;
	}
	,getY: function() {
		return this.y;
	}
	,setY: function(y) {
		this.y = y;
	}
	,getScaleX: function() {
		return this.scaleX;
	}
	,setScaleX: function(scaleX) {
		this.scaleX = scaleX;
	}
	,getScaleY: function() {
		return this.scaleY;
	}
	,setScaleY: function(scaleY) {
		this.scaleY = scaleY;
	}
	,getRotation: function() {
		return this.rotation;
	}
	,setRotation: function(rotation) {
		this.rotation = rotation;
	}
	,getWidth: function() {
		return this.width;
	}
	,setWidth: function(width) {
		this.width = width;
	}
	,getHeight: function() {
		return this.height;
	}
	,setHeight: function(height) {
		this.height = height;
	}
	,getColor: function() {
		return this.color;
	}
	,getPath: function() {
		return this.path;
	}
	,setPath: function(path) {
		this.path = path;
	}
	,copy: function() {
		var copy = new spine_attachments_RegionAttachment(this.name);
		copy.region = this.region;
		copy.path = this.path;
		copy.x = this.x;
		copy.y = this.y;
		copy.scaleX = this.scaleX;
		copy.scaleY = this.scaleY;
		copy.rotation = this.rotation;
		copy.width = this.width;
		copy.height = this.height;
		var src = this.uvs;
		var dest = copy.uvs;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,8);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + 8));
		}
		var src = this.offset;
		var dest = copy.offset;
		if(src == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
		}
		if(dest == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
		}
		try {
			spine_support_utils_Array.copy(src,0,dest,0,8);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + 0 + ", dest: " + dest.length + ", " + 0 + ", count: " + 8));
		}
		var _this = copy.color;
		var color = this.color;
		_this.r = color.r;
		_this.g = color.g;
		_this.b = color.b;
		_this.a = color.a;
		return copy;
	}
	,__class__: spine_attachments_RegionAttachment
});
var spine_support_error_ArrayIndexOutOfBoundsException = function(message) {
	if(message == null) {
		message = "";
	}
	spine_support_error_Error.call(this,message);
	this.name = "ArrayIndexOutOfBoundsException";
};
$hxClasses["spine.support.error.ArrayIndexOutOfBoundsException"] = spine_support_error_ArrayIndexOutOfBoundsException;
spine_support_error_ArrayIndexOutOfBoundsException.__name__ = "spine.support.error.ArrayIndexOutOfBoundsException";
spine_support_error_ArrayIndexOutOfBoundsException.__super__ = spine_support_error_Error;
spine_support_error_ArrayIndexOutOfBoundsException.prototype = $extend(spine_support_error_Error.prototype,{
	__class__: spine_support_error_ArrayIndexOutOfBoundsException
});
var spine_support_error_IllegalStateException = function(message) {
	if(message == null) {
		message = "";
	}
	spine_support_error_Error.call(this,message);
	this.name = "IllegalStateException";
};
$hxClasses["spine.support.error.IllegalStateException"] = spine_support_error_IllegalStateException;
spine_support_error_IllegalStateException.__name__ = "spine.support.error.IllegalStateException";
spine_support_error_IllegalStateException.__super__ = spine_support_error_Error;
spine_support_error_IllegalStateException.prototype = $extend(spine_support_error_Error.prototype,{
	__class__: spine_support_error_IllegalStateException
});
var spine_support_error_RuntimeException = function(message) {
	if(message == null) {
		message = "";
	}
	spine_support_error_Error.call(this,message);
	this.name = "RuntimeException";
};
$hxClasses["spine.support.error.RuntimeException"] = spine_support_error_RuntimeException;
spine_support_error_RuntimeException.__name__ = "spine.support.error.RuntimeException";
spine_support_error_RuntimeException.__super__ = spine_support_error_Error;
spine_support_error_RuntimeException.prototype = $extend(spine_support_error_Error.prototype,{
	__class__: spine_support_error_RuntimeException
});
var spine_support_extensions_ArrayExtensions = function() { };
$hxClasses["spine.support.extensions.ArrayExtensions"] = spine_support_extensions_ArrayExtensions;
spine_support_extensions_ArrayExtensions.__name__ = "spine.support.extensions.ArrayExtensions";
spine_support_extensions_ArrayExtensions.setSize = function(array,size) {
	var len = array.length;
	if(len > size) {
		array.splice(size,size - len);
	} else if(len < size) {
		var dArray = array;
		dArray[size - 1] = null;
	}
	return array;
};
spine_support_extensions_ArrayExtensions.add = function(array,item) {
	array.push(item);
};
spine_support_extensions_ArrayExtensions.removeIndex = function(array,index) {
	array.splice(index,1);
};
spine_support_extensions_ArrayExtensions.unsafeGet = function(array,index) {
	return array[index];
};
spine_support_extensions_ArrayExtensions.unsafeSet = function(array,index,value) {
	array[index] = value;
};
var spine_support_extensions_FileExtensions = function() { };
$hxClasses["spine.support.extensions.FileExtensions"] = spine_support_extensions_FileExtensions;
spine_support_extensions_FileExtensions.__name__ = "spine.support.extensions.FileExtensions";
spine_support_extensions_FileExtensions.nameWithoutExtension = function(file) {
	var name = file.path;
	var slashIndex = name.lastIndexOf("/");
	if(slashIndex != -1) {
		name = name.substring(slashIndex);
	}
	var dotIndex = name.lastIndexOf(".");
	if(dotIndex != -1) {
		name = name.substring(0,dotIndex);
	}
	return name;
};
var spine_support_extensions_SpineExtensions = function() { };
$hxClasses["spine.support.extensions.SpineExtensions"] = spine_support_extensions_SpineExtensions;
spine_support_extensions_SpineExtensions.__name__ = "spine.support.extensions.SpineExtensions";
spine_support_extensions_SpineExtensions.equals = function(anim1,anim2) {
	return anim1 == anim2;
};
spine_support_extensions_SpineExtensions.getHashCode = function(anim) {
	return anim.hashCode;
};
var spine_support_extensions_StringExtensions = function() { };
$hxClasses["spine.support.extensions.StringExtensions"] = spine_support_extensions_StringExtensions;
spine_support_extensions_StringExtensions.__name__ = "spine.support.extensions.StringExtensions";
spine_support_extensions_StringExtensions.equals = function(str0,str1) {
	return str0 == str1;
};
spine_support_extensions_StringExtensions.getHashCode = function(str) {
	var hash = 0;
	var chr;
	if(str.length == 0) {
		return hash;
	}
	var _g = 0;
	var _g1 = str.length;
	while(_g < _g1) {
		var i = _g++;
		chr = HxOverrides.cca(str,i);
		hash = (hash << 5) - hash + chr;
	}
	return hash;
};
var spine_support_files_FileHandle = function() { };
$hxClasses["spine.support.files.FileHandle"] = spine_support_files_FileHandle;
spine_support_files_FileHandle.__name__ = "spine.support.files.FileHandle";
spine_support_files_FileHandle.__isInterface__ = true;
spine_support_files_FileHandle.prototype = {
	__class__: spine_support_files_FileHandle
};
var spine_support_graphics_Color = function(r,g,b,a) {
	if(a == null) {
		a = 0;
	}
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	this.r = r;
	this.g = g;
	this.b = b;
	this.a = a;
};
$hxClasses["spine.support.graphics.Color"] = spine_support_graphics_Color;
spine_support_graphics_Color.__name__ = "spine.support.graphics.Color";
spine_support_graphics_Color.valueOf = function(hex) {
	if(hex.charAt(0) == "#") {
		hex = hex.substring(1);
	}
	if(HxOverrides.substr(hex,0,2) == "0x") {
		hex = hex.substring(2);
	}
	var r = Std.parseInt("0x" + hex.substring(0,2));
	var g = Std.parseInt("0x" + hex.substring(2,4));
	var b = Std.parseInt("0x" + hex.substring(4,6));
	var a = hex.length != 8 ? 255 : Std.parseInt("0x" + hex.substring(6,8));
	return new spine_support_graphics_Color(r / 255.0,g / 255.0,b / 255.0,a / 255.0);
};
spine_support_graphics_Color.valueOfIntoColor = function(hex,intoColor) {
	if(hex.charAt(0) == "#") {
		hex = hex.substring(1);
	}
	if(HxOverrides.substr(hex,0,2) == "0x") {
		hex = hex.substring(2);
	}
	var r = Std.parseInt("0x" + hex.substring(0,2));
	var g = Std.parseInt("0x" + hex.substring(2,4));
	var b = Std.parseInt("0x" + hex.substring(4,6));
	var a = hex.length != 8 ? 255 : Std.parseInt("0x" + hex.substring(6,8));
	if(intoColor == null) {
		intoColor = new spine_support_graphics_Color(r / 255.0,g / 255.0,b / 255.0,a / 255.0);
	} else {
		intoColor.r = r / 255.0;
		intoColor.g = g / 255.0;
		intoColor.b = b / 255.0;
		intoColor.a = a / 255.0;
	}
	return intoColor;
};
spine_support_graphics_Color.prototype = {
	setColor: function(color) {
		this.r = color.r;
		this.g = color.g;
		this.b = color.b;
		this.a = color.a;
		return this;
	}
	,set: function(r,g,b,a) {
		this.r = r;
		this.g = g;
		this.b = b;
		this.a = a;
		return this;
	}
	,setRGB: function(r,g,b) {
		this.r = r;
		this.g = g;
		this.b = b;
		return this;
	}
	,add: function(r,g,b,a) {
		this.r += r;
		this.g += g;
		this.b += b;
		this.a += a;
		return this;
	}
	,mul: function(r,g,b,a) {
		this.r *= r;
		this.g *= g;
		this.b *= b;
		this.a *= a;
		return this;
	}
	,setRgba888: function(value) {
		this.r = ((value & -16777216) >>> 24) / 255.0;
		this.g = ((value & 16711680) >>> 16) / 255.0;
		this.b = ((value & 65280) >>> 8) / 255.0;
		this.a = (value & 255) / 255.0;
		return this;
	}
	,__class__: spine_support_graphics_Color
};
var spine_support_graphics_TextureAtlas = function(object,textureLoader) {
	this.regions = [];
	this.pages = [];
	if(object == null) {
		return;
	}
	this.load(object == null ? "null" : "" + object,textureLoader);
};
$hxClasses["spine.support.graphics.TextureAtlas"] = spine_support_graphics_TextureAtlas;
spine_support_graphics_TextureAtlas.__name__ = "spine.support.graphics.TextureAtlas";
spine_support_graphics_TextureAtlas.prototype = {
	load: function(atlasText,textureLoader) {
		if(textureLoader == null) {
			throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("textureLoader cannot be null."));
		}
		this.textureLoader = textureLoader;
		var reader = new spine_support_graphics_Reader(atlasText);
		var tuple = [null,null,null,null];
		var page = null;
		while(true) {
			var line = reader.readLine();
			if(line == null) {
				break;
			}
			line = reader.trim(line);
			if(line.length == 0) {
				page = null;
			} else if(page == null) {
				page = new spine_support_graphics_AtlasPage();
				page.name = line;
				page.uWrap = spine_support_graphics_TextureWrap.clampToEdge;
				page.vWrap = spine_support_graphics_TextureWrap.clampToEdge;
				var key = reader.nextLineKey();
				while(key != null) {
					switch(key) {
					case "filter":
						reader.readTuple(tuple);
						page.minFilter = tuple[0];
						page.magFilter = tuple[1];
						break;
					case "format":
						page.format = reader.readValue();
						break;
					case "repeat":
						var direction = reader.readValue();
						if(direction == "x") {
							page.uWrap = spine_support_graphics_TextureWrap.repeat;
						} else if(direction == "y") {
							page.vWrap = spine_support_graphics_TextureWrap.repeat;
						} else if(direction == "xy") {
							page.uWrap = page.vWrap = spine_support_graphics_TextureWrap.repeat;
						}
						break;
					case "scale":
						reader.readTuple(tuple);
						page.scale = parseFloat(tuple[0]);
						break;
					case "size":
						reader.readTuple(tuple);
						page.width = Std.parseInt(tuple[0]);
						page.height = Std.parseInt(tuple[1]);
						break;
					default:
						reader.readLine();
					}
					key = reader.nextLineKey();
				}
				if(page.format == null) {
					page.format = "rgba8888";
				}
				textureLoader.loadPage(page,line);
				this.pages[this.pages.length] = page;
			} else {
				var region = new spine_support_graphics_AtlasRegion();
				region.name = line;
				region.page = page;
				var x = 0;
				var y = 0;
				var width = 0;
				var height = 0;
				var originalWidth = -1;
				var originalHeight = -1;
				var key1 = reader.nextLineKey();
				while(key1 != null) {
					switch(key1) {
					case "bounds":
						reader.readTuple(tuple);
						x = Std.parseInt(tuple[0]);
						y = Std.parseInt(tuple[1]);
						width = Std.parseInt(tuple[2]);
						height = Std.parseInt(tuple[3]);
						break;
					case "index":
						region.index = Std.parseInt(reader.readValue());
						break;
					case "offset":
						reader.readTuple(tuple);
						region.offsetX = Std.parseInt(tuple[0]);
						region.offsetY = Std.parseInt(tuple[1]);
						break;
					case "orig":
						reader.readTuple(tuple);
						originalWidth = Std.parseInt(tuple[0]);
						originalHeight = Std.parseInt(tuple[1]);
						break;
					case "pad":
						reader.readTuple(tuple);
						region.pads = [Std.parseInt(tuple[0]),Std.parseInt(tuple[1]),Std.parseInt(tuple[2]),Std.parseInt(tuple[3])];
						break;
					case "rotate":
						var value = reader.readValue();
						var rotate = value == "true" || value == "90";
						region.degrees = rotate ? 90 : 0;
						break;
					case "size":
						reader.readTuple(tuple);
						width = Std.parseInt(tuple[0]);
						height = Std.parseInt(tuple[1]);
						break;
					case "split":
						reader.readTuple(tuple);
						region.splits = [Std.parseInt(tuple[0]),Std.parseInt(tuple[1]),Std.parseInt(tuple[2]),Std.parseInt(tuple[3])];
						break;
					case "xy":
						reader.readTuple(tuple);
						x = Std.parseInt(tuple[0]);
						y = Std.parseInt(tuple[1]);
						break;
					default:
						reader.readLine();
					}
					key1 = reader.nextLineKey();
				}
				region.u = x / page.width;
				region.v = y / page.height;
				if(region.degrees == 90) {
					region.u2 = (x + height) / page.width;
					region.v2 = (y + width) / page.height;
				} else {
					region.u2 = (x + width) / page.width;
					region.v2 = (y + height) / page.height;
				}
				region.x = x;
				region.y = y;
				region.width = Math.abs(width);
				region.height = Math.abs(height);
				region.originalWidth = originalWidth != -1 ? originalWidth : region.width;
				region.originalHeight = originalHeight != -1 ? originalHeight : region.height;
				if(region.degrees == 90) {
					region.packedWidth = region.originalHeight;
					region.packedHeight = region.originalWidth;
				} else {
					region.packedWidth = region.originalWidth;
					region.packedHeight = region.originalHeight;
				}
				textureLoader.loadRegion(region);
				this.regions[this.regions.length] = region;
			}
		}
	}
	,findRegion: function(name) {
		var i = 0;
		var n = this.regions.length;
		while(i < n) {
			if(this.regions[i].name == name) {
				return this.regions[i];
			}
			++i;
		}
		return null;
	}
	,dispose: function() {
		var i = 0;
		var n = this.pages.length;
		while(i < n) {
			this.textureLoader.unloadPage(this.pages[i]);
			++i;
		}
	}
	,__class__: spine_support_graphics_TextureAtlas
};
var spine_support_graphics_Reader = function(text) {
	this.lines = StringTools.replace(StringTools.replace(StringTools.trim(text),"\r\n","\n"),"\r","\n").split("\n");
	this.index = 0;
};
$hxClasses["spine.support.graphics.Reader"] = spine_support_graphics_Reader;
spine_support_graphics_Reader.__name__ = "spine.support.graphics.Reader";
spine_support_graphics_Reader.prototype = {
	trim: function(value) {
		return StringTools.trim(value);
	}
	,readLine: function() {
		if(this.index >= this.lines.length) {
			return null;
		}
		return this.lines[this.index++];
	}
	,nextLineKey: function() {
		if(this.index >= this.lines.length) {
			return null;
		} else {
			var line = this.lines[this.index];
			var colon = line.indexOf(":");
			if(colon != -1) {
				return StringTools.trim(line.substring(0,colon));
			} else {
				return null;
			}
		}
	}
	,readValue: function() {
		var line = this.readLine();
		var colon = line.indexOf(":");
		if(colon == -1) {
			throw haxe_Exception.thrown(new spine_support_error_Error("Invalid line: " + line));
		}
		return this.trim(line.substring(colon + 1));
	}
	,readTuple: function(tuple) {
		var line = this.readLine();
		var colon = line.indexOf(":");
		if(colon == -1) {
			throw haxe_Exception.thrown(new spine_support_error_Error("Invalid line: " + line));
		}
		var i = 0;
		var lastMatch = colon + 1;
		while(i < 3) {
			var comma = line.indexOf(",",lastMatch);
			if(comma == -1) {
				break;
			}
			tuple[i] = this.trim(HxOverrides.substr(line,lastMatch,comma - lastMatch));
			lastMatch = comma + 1;
			++i;
		}
		tuple[i] = this.trim(line.substring(lastMatch));
		return i + 1;
	}
	,__class__: spine_support_graphics_Reader
};
var spine_support_graphics_AtlasPage = function() {
	this.scale = 1.0;
	this.height = 0;
	this.width = 0;
};
$hxClasses["spine.support.graphics.AtlasPage"] = spine_support_graphics_AtlasPage;
spine_support_graphics_AtlasPage.__name__ = "spine.support.graphics.AtlasPage";
spine_support_graphics_AtlasPage.prototype = {
	toString: function() {
		return "" + Std.string({ name : this.name, format : this.format, width : this.width, height : this.height, scale : this.scale});
	}
	,__class__: spine_support_graphics_AtlasPage
};
var spine_support_graphics_TextureRegion = function() {
	this.v2 = 0;
	this.u2 = 0;
	this.v = 0;
	this.u = 0;
};
$hxClasses["spine.support.graphics.TextureRegion"] = spine_support_graphics_TextureRegion;
spine_support_graphics_TextureRegion.__name__ = "spine.support.graphics.TextureRegion";
spine_support_graphics_TextureRegion.prototype = {
	getU: function() {
		return this.u;
	}
	,getV: function() {
		return this.v;
	}
	,getU2: function() {
		return this.u2;
	}
	,getV2: function() {
		return this.v2;
	}
	,__class__: spine_support_graphics_TextureRegion
};
var spine_support_graphics_AtlasRegion = function() {
	this.degrees = 0;
	this.index = -1;
	this.originalHeight = 0;
	this.originalWidth = 0;
	this.offsetY = 0;
	this.offsetX = 0;
	this.packedHeight = 0;
	this.packedWidth = 0;
	this.height = 0;
	this.width = 0;
	this.y = 0;
	this.x = 0;
	spine_support_graphics_TextureRegion.call(this);
};
$hxClasses["spine.support.graphics.AtlasRegion"] = spine_support_graphics_AtlasRegion;
spine_support_graphics_AtlasRegion.__name__ = "spine.support.graphics.AtlasRegion";
spine_support_graphics_AtlasRegion.__super__ = spine_support_graphics_TextureRegion;
spine_support_graphics_AtlasRegion.prototype = $extend(spine_support_graphics_TextureRegion.prototype,{
	get_rotate: function() {
		return this.degrees == 90;
	}
	,set_rotate: function(rotate) {
		this.degrees = rotate ? 90 : 0;
		return rotate;
	}
	,getTexture: function() {
		return this;
	}
	,__class__: spine_support_graphics_AtlasRegion
	,__properties__: {set_rotate:"set_rotate",get_rotate:"get_rotate"}
});
var spine_support_graphics_AtlasRegionTexture = {};
spine_support_graphics_AtlasRegionTexture.getWidth = function(this1) {
	return this1.page.width;
};
spine_support_graphics_AtlasRegionTexture.getHeight = function(this1) {
	return this1.page.height;
};
var spine_support_graphics_TextureLoader = function() { };
$hxClasses["spine.support.graphics.TextureLoader"] = spine_support_graphics_TextureLoader;
spine_support_graphics_TextureLoader.__name__ = "spine.support.graphics.TextureLoader";
spine_support_graphics_TextureLoader.__isInterface__ = true;
spine_support_graphics_TextureLoader.prototype = {
	__class__: spine_support_graphics_TextureLoader
};
var spine_support_graphics_TextureWrap = function(ordinal,name) {
	this.ordinal = ordinal;
	this.name = name;
};
$hxClasses["spine.support.graphics.TextureWrap"] = spine_support_graphics_TextureWrap;
spine_support_graphics_TextureWrap.__name__ = "spine.support.graphics.TextureWrap";
spine_support_graphics_TextureWrap.prototype = {
	__class__: spine_support_graphics_TextureWrap
};
var spine_support_math_MathUtils = function() { };
$hxClasses["spine.support.math.MathUtils"] = spine_support_math_MathUtils;
spine_support_math_MathUtils.__name__ = "spine.support.math.MathUtils";
spine_support_math_MathUtils.sinDeg = function(degrees) {
	return Math.sin(degrees * spine_support_math_MathUtils.degRad);
};
spine_support_math_MathUtils.cosDeg = function(degrees) {
	return Math.cos(degrees * spine_support_math_MathUtils.degRad);
};
spine_support_math_MathUtils.sin = function(angle) {
	return Math.sin(angle);
};
spine_support_math_MathUtils.cos = function(angle) {
	return Math.cos(angle);
};
spine_support_math_MathUtils.clamp = function(value,min,max) {
	if(value < min) {
		return min;
	}
	if(value > max) {
		return max;
	}
	return value;
};
spine_support_math_MathUtils.max = function(val1,val2) {
	return Math.max(val1,val2);
};
spine_support_math_MathUtils.min = function(val1,val2) {
	return Math.min(val1,val2);
};
spine_support_math_MathUtils.signum = function(val) {
	if(val > 0) {
		return 1;
	} else if(val < 0) {
		return -1;
	} else {
		return 0;
	}
};
var spine_support_math_Matrix3 = function() {
	var length = 9;
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	this.val = array;
};
$hxClasses["spine.support.math.Matrix3"] = spine_support_math_Matrix3;
spine_support_math_Matrix3.__name__ = "spine.support.math.Matrix3";
spine_support_math_Matrix3.prototype = {
	__class__: spine_support_math_Matrix3
};
var spine_support_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.y = 0;
	this.x = 0;
	this.x = x;
	this.y = y;
};
$hxClasses["spine.support.math.Vector2"] = spine_support_math_Vector2;
spine_support_math_Vector2.__name__ = "spine.support.math.Vector2";
spine_support_math_Vector2.prototype = {
	set: function(x,y) {
		this.x = x;
		this.y = y;
		return this;
	}
	,__class__: spine_support_math_Vector2
};
var spine_support_utils_AnimationStateMap = {};
spine_support_utils_AnimationStateMap._new = function(initialCapacity,loadFactor) {
	if(loadFactor == null) {
		loadFactor = 0.8;
	}
	if(initialCapacity == null) {
		initialCapacity = 51;
	}
	var this1 = new haxe_ds_IntMap();
	return this1;
};
spine_support_utils_AnimationStateMap.get = function(this1,key,defaultValue) {
	if(defaultValue == null) {
		defaultValue = 0.0;
	}
	var key1 = key.getHashCode();
	var entries = this1.h[key1];
	var result = defaultValue;
	if(entries != null) {
		var _g = 0;
		var _g1 = entries.length;
		while(_g < _g1) {
			var i = _g++;
			var entry = entries[i];
			if(entry.key.equals(key)) {
				result = entry.value;
				break;
			}
		}
	}
	return result;
};
spine_support_utils_AnimationStateMap.clear = function(this1) {
	var keys = [];
	var key = this1.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		keys.push(key1);
	}
	var _g = 0;
	while(_g < keys.length) {
		var key = keys[_g];
		++_g;
		this1.remove(key);
	}
};
spine_support_utils_AnimationStateMap.put = function(this1,key,value) {
	var hashCode = key.getHashCode();
	var entries = this1.h[hashCode];
	if(entries == null) {
		entries = [];
		this1.h[hashCode] = entries;
	}
	var i = 0;
	var didSet = false;
	var _g = 0;
	var _g1 = entries;
	while(_g < _g1.length) {
		var entry = _g1[_g];
		++_g;
		if(entry.key.equals(key)) {
			entries[i].key = key;
			entries[i].value = value;
			didSet = true;
			break;
		}
		++i;
	}
	if(!didSet) {
		entries.push(new spine_support_utils__$AnimationStateMap_Entry(key,value));
	}
};
spine_support_utils_AnimationStateMap.entries = function(this1) {
	var entries = [];
	var entryList = this1.iterator();
	while(entryList.hasNext()) {
		var entryList1 = entryList.next();
		if(entryList1 != null) {
			var _g = 0;
			var _g1 = entryList1;
			while(_g < _g1.length) {
				var entry = _g1[_g];
				++_g;
				entries.push(entry);
			}
		}
	}
	return entries;
};
spine_support_utils_AnimationStateMap.keys = function(this1) {
	var keys = [];
	var entryList = this1.iterator();
	while(entryList.hasNext()) {
		var entryList1 = entryList.next();
		var _g = 0;
		var _g1 = entryList1;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			keys.push(entry.key);
		}
	}
	return keys;
};
var spine_support_utils__$AnimationStateMap_Entry = function(key,value) {
	this.key = key;
	this.value = value;
};
$hxClasses["spine.support.utils._AnimationStateMap.Entry"] = spine_support_utils__$AnimationStateMap_Entry;
spine_support_utils__$AnimationStateMap_Entry.__name__ = "spine.support.utils._AnimationStateMap.Entry";
spine_support_utils__$AnimationStateMap_Entry.prototype = {
	__class__: spine_support_utils__$AnimationStateMap_Entry
};
var spine_support_utils_Array = {};
spine_support_utils_Array.__properties__ = {set_size:"set_size",get_size:"get_size",set_ordered:"set_ordered",get_ordered:"get_ordered",get_items:"get_items"};
spine_support_utils_Array.copy = function(src,srcPos,dest,destPos,length) {
	var val;
	var srcIndex = srcPos;
	var destIndex = destPos;
	var end = length + srcPos;
	while(srcIndex < end) {
		val = src[srcIndex];
		dest[destIndex] = val;
		++srcIndex;
		++destIndex;
	}
};
spine_support_utils_Array.copyFloats = function(src,srcPos,dest,destPos,length) {
	var val;
	var srcIndex = srcPos;
	var destIndex = destPos;
	var end = length + srcPos;
	while(srcIndex < end) {
		val = src[srcIndex];
		dest[destIndex] = val;
		++srcIndex;
		++destIndex;
	}
};
spine_support_utils_Array.getLengthOf = function(array) {
	return array.length;
};
spine_support_utils_Array.create = function(length) {
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	return array;
};
spine_support_utils_Array.createFloatArray2D = function(length,length2) {
	if(length2 == null) {
		length2 = 0;
	}
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var len2 = length2 | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	var _g = 0;
	var _g1 = len2;
	while(_g < _g1) {
		var i = _g++;
		var length = length2;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array1 = this1;
		if(length > 0) {
			var len1 = array1.length;
			if(len1 > len) {
				array1.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array1.push(0);
					++len1;
				}
			}
		}
		array[i] = array1;
	}
	return array;
};
spine_support_utils_Array.createIntArray2D = function(length,length2) {
	if(length2 == null) {
		length2 = 0;
	}
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var len2 = length2 | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			array[len - 1] = null;
		}
	}
	var _g = 0;
	var _g1 = len2;
	while(_g < _g1) {
		var i = _g++;
		var length = length2;
		if(length == null) {
			length = 0;
		}
		var len = length | 0;
		var capacity = len != 0 ? len : 16;
		var this1 = [];
		var array1 = this1;
		if(length != 0) {
			var len1 = array1.length;
			if(len1 > len) {
				array1.splice(len,len - len1);
			} else if(len1 < len) {
				while(len1 < len) {
					array1.push(0);
					++len1;
				}
			}
		}
		array[i] = array1;
	}
	return array;
};
spine_support_utils_Array._new = function(capacity) {
	if(capacity == null) {
		capacity = 16;
	}
	var this1 = [];
	return this1;
};
spine_support_utils_Array.get_items = function(this1) {
	return this1;
};
spine_support_utils_Array.get_ordered = function(this1) {
	return false;
};
spine_support_utils_Array.set_ordered = function(this1,ordered) {
	return ordered;
};
spine_support_utils_Array.get_size = function(this1) {
	return this1.length;
};
spine_support_utils_Array.set_size = function(this1,size) {
	var len = this1.length;
	if(len > size) {
		this1.splice(size,size - len);
	} else if(len < size) {
		this1[size - 1] = null;
	}
	return this1.length;
};
spine_support_utils_Array.shrink = function(this1) {
	return this1;
};
spine_support_utils_Array.clear = function(this1) {
	this1.splice(0,this1.length);
};
spine_support_utils_Array.first = function(this1) {
	if(this1.length > 0) {
		return this1[0];
	} else {
		return null;
	}
};
spine_support_utils_Array.peek = function(this1) {
	if(this1.length == 0) {
		return null;
	} else {
		return this1[this1.length - 1];
	}
};
spine_support_utils_Array.contains = function(this1,value,identity) {
	return this1.indexOf(value) != -1;
};
spine_support_utils_Array.removeValue = function(this1,value,identity) {
	var index = this1.indexOf(value);
	if(index == -1) {
		return false;
	}
	this1.splice(index,1);
	return true;
};
spine_support_utils_Array.setSize = function(this1,size) {
	var len = this1.length;
	if(len > size) {
		this1.splice(size,size - len);
	} else if(len < size) {
		this1[size - 1] = null;
	}
	return this1;
};
spine_support_utils_Array.add = function(this1,item) {
	this1.push(item);
};
spine_support_utils_Array.addAll = function(this1,items,start,count) {
	if(count == null) {
		count = -1;
	}
	if(start == null) {
		start = 0;
	}
	if(count == -1) {
		count = items.length;
	}
	var i = this1.length;
	var len = i + items.length;
	var len1 = this1.length;
	if(len1 > len) {
		this1.splice(len,len - len1);
	} else if(len1 < len) {
		this1[len - 1] = null;
	}
	var val;
	var _g = 0;
	var _g1 = items.length;
	while(_g < _g1) {
		var j = _g++;
		val = items[j];
		this1[i++] = val;
		if(--count <= 0) {
			break;
		}
	}
};
spine_support_utils_Array.get = function(this1,index) {
	return this1[index];
};
spine_support_utils_Array.set = function(this1,index,value) {
	this1[index] = value;
};
spine_support_utils_Array.indexOf = function(this1,value,identity) {
	return this1.indexOf(value);
};
spine_support_utils_Array.removeIndex = function(this1,index) {
	var item = this1[index];
	this1.splice(index,1);
	return item;
};
spine_support_utils_Array.ensureCapacity = function(this1,size) {
	return this1;
};
var spine_support_utils_AttachmentSet = {};
spine_support_utils_AttachmentSet.__properties__ = {get_size:"get_size"};
spine_support_utils_AttachmentSet._new = function() {
	var this1 = new haxe_ds_IntMap();
	return this1;
};
spine_support_utils_AttachmentSet.get = function(this1,key,defaultValue) {
	var entries = this1.h[key.hashCode];
	var result = defaultValue;
	if(entries != null) {
		var _g = 0;
		var _g1 = entries.length;
		while(_g < _g1) {
			var i = _g++;
			var entry = entries[i];
			var object = key;
			var tmp;
			if(object == null) {
				tmp = false;
			} else {
				var result1 = object;
				var other = result1;
				tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
			}
			if(tmp) {
				result = entry;
				break;
			}
		}
	}
	return result;
};
spine_support_utils_AttachmentSet.clear = function(this1) {
	this1.h = { };
};
spine_support_utils_AttachmentSet.add = function(this1,key) {
	var prevValue = null;
	var hashCode = key.hashCode;
	var entries = this1.h[hashCode];
	if(entries == null) {
		entries = [];
		this1.h[hashCode] = entries;
	} else {
		var _g = 0;
		var _g1 = entries.length;
		while(_g < _g1) {
			var i = _g++;
			var entry = entries[i];
			var object = key;
			var tmp;
			if(object == null) {
				tmp = false;
			} else {
				var result = object;
				var other = result;
				tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
			}
			if(tmp) {
				prevValue = entry;
				break;
			}
		}
	}
	var i = 0;
	var didSet = false;
	var _g = 0;
	var _g1 = entries;
	while(_g < _g1.length) {
		var entry = _g1[_g];
		++_g;
		var object = key;
		var tmp;
		if(object == null) {
			tmp = false;
		} else {
			var result = object;
			var other = result;
			tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
		}
		if(tmp) {
			entries[i] = key;
			didSet = true;
			break;
		}
		++i;
	}
	if(!didSet) {
		entries.push(key);
	}
	return prevValue == null;
};
spine_support_utils_AttachmentSet.remove = function(this1,key) {
	var hashCode = key.hashCode;
	var entries = this1.h[hashCode];
	if(entries != null) {
		var len = entries.length;
		var toRemove = null;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var entry = entries[i];
			var object = key;
			var tmp;
			if(object == null) {
				tmp = false;
			} else {
				var result = object;
				var other = result;
				tmp = entry.slotIndex != other.slotIndex ? false : entry.name == other.name;
			}
			if(tmp) {
				toRemove = entry;
				break;
			}
		}
		if(toRemove != null) {
			if(len == 1) {
				this1.remove(hashCode);
			} else {
				HxOverrides.remove(entries,toRemove);
			}
		}
	}
};
spine_support_utils_AttachmentSet.orderedItems = function(this1) {
	var entries = [];
	var entryList = this1.iterator();
	while(entryList.hasNext()) {
		var entryList1 = entryList.next();
		var _g = 0;
		var _g1 = entryList1.length;
		while(_g < _g1) {
			var i = _g++;
			entries.push(entryList1[i]);
		}
	}
	return entries;
};
spine_support_utils_AttachmentSet.get_size = function(this1) {
	var numEntries = 0;
	var entryList = this1.iterator();
	while(entryList.hasNext()) {
		var entryList1 = entryList.next();
		var _g = 0;
		var _g1 = entryList1.length;
		while(_g < _g1) {
			var i = _g++;
			++numEntries;
		}
	}
	return numEntries;
};
var spine_support_utils_AttachmentSetEntry = function(key,value) {
	this.key = key;
	this.value = value;
};
$hxClasses["spine.support.utils.AttachmentSetEntry"] = spine_support_utils_AttachmentSetEntry;
spine_support_utils_AttachmentSetEntry.__name__ = "spine.support.utils.AttachmentSetEntry";
spine_support_utils_AttachmentSetEntry.prototype = {
	__class__: spine_support_utils_AttachmentSetEntry
};
var spine_support_utils_BooleanArray = {};
spine_support_utils_BooleanArray.__properties__ = {get_size:"get_size",get_items:"get_items"};
spine_support_utils_BooleanArray.create = function(length) {
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(false);
				++len1;
			}
		}
	}
	return array;
};
spine_support_utils_BooleanArray._new = function(capacity) {
	if(capacity == null) {
		capacity = 16;
	}
	var this1 = [];
	return this1;
};
spine_support_utils_BooleanArray.get_items = function(this1) {
	return this1;
};
spine_support_utils_BooleanArray.get_size = function(this1) {
	return this1.length;
};
spine_support_utils_BooleanArray.shrink = function(this1) {
	return this1;
};
spine_support_utils_BooleanArray.toArray = function(this1) {
	return this1;
};
spine_support_utils_BooleanArray.clear = function(this1) {
	this1.splice(0,this1.length);
};
spine_support_utils_BooleanArray.setSize = function(this1,size) {
	var len = this1.length;
	if(len > size) {
		this1.splice(size,size - len);
	} else if(len < size) {
		while(len < size) {
			this1.push(false);
			++len;
		}
	}
	return this1;
};
spine_support_utils_BooleanArray.add = function(this1,item) {
	this1.push(item);
};
spine_support_utils_BooleanArray.addAll = function(this1,items,start,count) {
	if(count == null) {
		count = -1;
	}
	if(start == null) {
		start = 0;
	}
	if(count == -1) {
		count = items.length;
	}
	var i = this1.length;
	var len = i + items.length;
	var len1 = this1.length;
	if(len1 > len) {
		this1.splice(len,len - len1);
	} else if(len1 < len) {
		while(len1 < len) {
			this1.push(false);
			++len1;
		}
	}
	var _g = 0;
	var _g1 = items;
	while(_g < _g1.length) {
		var item = _g1[_g];
		++_g;
		this1[i++] = item;
		if(--count <= 0) {
			break;
		}
	}
};
spine_support_utils_BooleanArray.get = function(this1,index) {
	return this1[index];
};
spine_support_utils_BooleanArray.set = function(this1,index,value) {
	this1[index] = value;
};
spine_support_utils_BooleanArray.indexOf = function(this1,value,identity) {
	return this1.indexOf(value);
};
spine_support_utils_BooleanArray.removeIndex = function(this1,index) {
	var item = this1[index];
	this1.splice(index,1);
	return item;
};
var spine_support_utils_FastCast = function() { };
$hxClasses["spine.support.utils.FastCast"] = spine_support_utils_FastCast;
spine_support_utils_FastCast.__name__ = "spine.support.utils.FastCast";
spine_support_utils_FastCast.fastCast = function(value,toClass) {
	var result = value;
	return result;
};
var spine_support_utils_FloatArray = {};
spine_support_utils_FloatArray.__properties__ = {get_size:"get_size",get_items:"get_items"};
spine_support_utils_FloatArray.create = function(length) {
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length > 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	return array;
};
spine_support_utils_FloatArray._new = function(capacity) {
	if(capacity == null) {
		capacity = 16;
	}
	var this1 = [];
	return this1;
};
spine_support_utils_FloatArray.get_items = function(this1) {
	return this1;
};
spine_support_utils_FloatArray.get_size = function(this1) {
	return this1.length;
};
spine_support_utils_FloatArray.shrink = function(this1) {
	return this1;
};
spine_support_utils_FloatArray.toArray = function(this1) {
	return this1;
};
spine_support_utils_FloatArray.clear = function(this1) {
	this1.splice(0,this1.length);
};
spine_support_utils_FloatArray.setSize = function(this1,size) {
	var len = this1.length;
	if(len > size) {
		this1.splice(size,size - len);
	} else if(len < size) {
		while(len < size) {
			this1.push(0);
			++len;
		}
	}
	return this1;
};
spine_support_utils_FloatArray.add = function(this1,item) {
	this1.push(item);
};
spine_support_utils_FloatArray.addAll = function(this1,items,start,count) {
	if(count == null) {
		count = -1;
	}
	if(start == null) {
		start = 0;
	}
	if(count == -1) {
		count = items.length;
	}
	var i = this1.length;
	var len = i + items.length;
	var len1 = this1.length;
	if(len1 > len) {
		this1.splice(len,len - len1);
	} else if(len1 < len) {
		while(len1 < len) {
			this1.push(0);
			++len1;
		}
	}
	var _g = 0;
	var _g1 = items;
	while(_g < _g1.length) {
		var item = _g1[_g];
		++_g;
		this1[i++] = item;
		if(--count <= 0) {
			break;
		}
	}
};
spine_support_utils_FloatArray.get = function(this1,index) {
	return this1[index];
};
spine_support_utils_FloatArray.set = function(this1,index,value) {
	this1[index] = value;
};
spine_support_utils_FloatArray.indexOf = function(this1,value,identity) {
	return this1.indexOf(value);
};
spine_support_utils_FloatArray.removeIndex = function(this1,index) {
	var item = this1[index];
	this1.splice(index,1);
	return item;
};
spine_support_utils_FloatArray.fill = function(array,fromIndex,toIndex,val) {
	var _g = fromIndex;
	var _g1 = toIndex;
	while(_g < _g1) {
		var i = _g++;
		array[i] = val;
	}
};
var spine_support_utils_IntArray = {};
spine_support_utils_IntArray.__properties__ = {get_size:"get_size",get_items:"get_items"};
spine_support_utils_IntArray.create = function(length) {
	if(length == null) {
		length = 0;
	}
	var len = length | 0;
	var capacity = len != 0 ? len : 16;
	var this1 = [];
	var array = this1;
	if(length != 0) {
		var len1 = array.length;
		if(len1 > len) {
			array.splice(len,len - len1);
		} else if(len1 < len) {
			while(len1 < len) {
				array.push(0);
				++len1;
			}
		}
	}
	return array;
};
spine_support_utils_IntArray._new = function(capacity) {
	if(capacity == null) {
		capacity = 16;
	}
	var this1 = [];
	return this1;
};
spine_support_utils_IntArray.get_items = function(this1) {
	return this1;
};
spine_support_utils_IntArray.get_size = function(this1) {
	return this1.length;
};
spine_support_utils_IntArray.first = function(this1) {
	return this1[0];
};
spine_support_utils_IntArray.shrink = function(this1) {
	return this1;
};
spine_support_utils_IntArray.toArray = function(this1) {
	return this1;
};
spine_support_utils_IntArray.clear = function(this1) {
	this1.splice(0,this1.length);
};
spine_support_utils_IntArray.setSize = function(this1,size) {
	var len = this1.length;
	if(len > size) {
		this1.splice(size,size - len);
	} else if(len < size) {
		while(len < size) {
			this1.push(0);
			++len;
		}
	}
	return this1;
};
spine_support_utils_IntArray.add = function(this1,item) {
	this1.push(item);
};
spine_support_utils_IntArray.addAll = function(this1,items,start,count) {
	if(count == null) {
		count = -1;
	}
	if(start == null) {
		start = 0;
	}
	if(count == -1) {
		count = items.length;
	}
	var i = this1.length;
	var len = i + items.length;
	var len1 = this1.length;
	if(len1 > len) {
		this1.splice(len,len - len1);
	} else if(len1 < len) {
		while(len1 < len) {
			this1.push(0);
			++len1;
		}
	}
	var _g = 0;
	var _g1 = items;
	while(_g < _g1.length) {
		var item = _g1[_g];
		++_g;
		this1[i++] = item;
		if(--count <= 0) {
			break;
		}
	}
};
spine_support_utils_IntArray.get = function(this1,index) {
	return this1[index];
};
spine_support_utils_IntArray.set = function(this1,index,value) {
	this1[index] = value;
};
spine_support_utils_IntArray.indexOf = function(this1,value,identity) {
	return this1.indexOf(value);
};
spine_support_utils_IntArray.removeIndex = function(this1,index) {
	var item = this1[index];
	this1.splice(index,1);
	return item;
};
spine_support_utils_IntArray.ensureCapacity = function(this1,size) {
	return this1;
};
var spine_support_utils_JsonReader = function() {
};
$hxClasses["spine.support.utils.JsonReader"] = spine_support_utils_JsonReader;
spine_support_utils_JsonReader.__name__ = "spine.support.utils.JsonReader";
spine_support_utils_JsonReader.prototype = {
	parse: function(file) {
		return new spine_support_utils_JsonDynamic(JSON.parse(file.getContent()));
	}
	,__class__: spine_support_utils_JsonReader
};
var spine_support_utils_JsonValue = function() { };
$hxClasses["spine.support.utils.JsonValue"] = spine_support_utils_JsonValue;
spine_support_utils_JsonValue.__name__ = "spine.support.utils.JsonValue";
spine_support_utils_JsonValue.__isInterface__ = true;
spine_support_utils_JsonValue.prototype = {
	__class__: spine_support_utils_JsonValue
	,__properties__: {get_child:"get_child",get_next:"get_next",get_size:"get_size",get_name:"get_name"}
};
var spine_support_utils_JsonDynamic = function(data) {
	this.data = data;
};
$hxClasses["spine.support.utils.JsonDynamic"] = spine_support_utils_JsonDynamic;
spine_support_utils_JsonDynamic.__name__ = "spine.support.utils.JsonDynamic";
spine_support_utils_JsonDynamic.__interfaces__ = [spine_support_utils_JsonValue];
spine_support_utils_JsonDynamic.prototype = {
	toString: function() {
		return "JsonDynamic:" + Std.string(this.data);
	}
	,has: function(key) {
		return this.get(key) != null;
	}
	,require: function(key) {
		return this.get(key);
	}
	,get: function(key) {
		if(((this.data) instanceof Array)) {
			return null;
		} else if(Object.prototype.hasOwnProperty.call(this.data,key)) {
			return new spine_support_utils_JsonDynamic(Reflect.field(this.data,key));
		} else {
			return null;
		}
	}
	,getAtIndex: function(index) {
		if(((this.data) instanceof Array)) {
			return new spine_support_utils_JsonChild(this.data,index);
		} else {
			return null;
		}
	}
	,getChild: function(key) {
		var item = Reflect.field(this.data,key);
		if(item == null) {
			return null;
		} else {
			var value = new spine_support_utils_JsonDynamic(item);
			var child = value.get_child();
			return child;
		}
	}
	,getString: function(key,defaultValue) {
		if(Object.prototype.hasOwnProperty.call(this.data,key)) {
			return Reflect.field(this.data,key);
		} else {
			return defaultValue;
		}
	}
	,getFloat: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		if(typeof(key) == "number" && ((key | 0) === key)) {
			if(((this.data) instanceof Array)) {
				return this.data[key];
			} else {
				return defaultValue;
			}
		} else if(Object.prototype.hasOwnProperty.call(this.data,key)) {
			return Reflect.field(this.data,key);
		} else {
			return defaultValue;
		}
	}
	,getInt: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		if(Object.prototype.hasOwnProperty.call(this.data,key)) {
			return Reflect.field(this.data,key);
		} else {
			return defaultValue;
		}
	}
	,getBoolean: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		if(Object.prototype.hasOwnProperty.call(this.data,key)) {
			return Reflect.field(this.data,key);
		} else {
			return defaultValue;
		}
	}
	,asString: function() {
		return this.data;
	}
	,asFloatArray: function() {
		return this.data;
	}
	,asShortArray: function() {
		return this.data;
	}
	,asFloat: function() {
		return this.data;
	}
	,asInt: function() {
		return this.data;
	}
	,isString: function() {
		return typeof(this.data) == "string";
	}
	,isArray: function() {
		return ((this.data) instanceof Array);
	}
	,get_next: function() {
		return null;
	}
	,get_name: function() {
		return null;
	}
	,get_size: function() {
		if(((this.data) instanceof Array)) {
			return this.data.length;
		}
		return Reflect.fields(this.data).length;
	}
	,get_child: function() {
		var item = this.data;
		if(item == null) {
			return null;
		} else if(((item) instanceof Array)) {
			return new spine_support_utils_JsonChild(item,0);
		} else {
			var keys = [];
			var values = [];
			var _g = 0;
			var _g1 = Reflect.fields(item);
			while(_g < _g1.length) {
				var field = _g1[_g];
				++_g;
				keys.push(field);
				values.push(Reflect.field(item,field));
			}
			if(keys.length == 0) {
				return null;
			}
			return new spine_support_utils_JsonChild(values,0,keys);
		}
	}
	,__class__: spine_support_utils_JsonDynamic
	,__properties__: {get_child:"get_child",get_size:"get_size",get_name:"get_name",get_next:"get_next"}
};
var spine_support_utils_JsonChild = function(data,index,keys) {
	this.data = data;
	this.index = index;
	this.keys = keys;
};
$hxClasses["spine.support.utils.JsonChild"] = spine_support_utils_JsonChild;
spine_support_utils_JsonChild.__name__ = "spine.support.utils.JsonChild";
spine_support_utils_JsonChild.__interfaces__ = [spine_support_utils_JsonValue];
spine_support_utils_JsonChild.prototype = {
	toString: function() {
		return "JsonChild:" + this.data[this.index];
	}
	,has: function(key) {
		return this.get(key) != null;
	}
	,require: function(key) {
		return this.get(key);
	}
	,get: function(key) {
		if(Object.prototype.hasOwnProperty.call(this.data[this.index],key)) {
			return new spine_support_utils_JsonDynamic(Reflect.field(this.data[this.index],key));
		} else {
			return null;
		}
	}
	,getAtIndex: function(idx) {
		if(((this.data[this.index]) instanceof Array)) {
			return new spine_support_utils_JsonChild(this.data[this.index],idx);
		} else {
			return null;
		}
	}
	,getChild: function(key) {
		var item = Reflect.field(this.data[this.index],key);
		if(item == null) {
			return null;
		} else {
			return new spine_support_utils_JsonDynamic(item).get_child();
		}
	}
	,getString: function(key,defaultValue) {
		if(Object.prototype.hasOwnProperty.call(this.data[this.index],key)) {
			return Reflect.field(this.data[this.index],key);
		} else {
			return defaultValue;
		}
	}
	,getFloat: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		if(typeof(key) == "number" && ((key | 0) === key)) {
			if(((this.data[this.index]) instanceof Array)) {
				return this.data[this.index][key];
			} else {
				return 0;
			}
		} else if(Object.prototype.hasOwnProperty.call(this.data[this.index],key)) {
			return Reflect.field(this.data[this.index],key);
		} else {
			return defaultValue;
		}
	}
	,getInt: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		if(Object.prototype.hasOwnProperty.call(this.data[this.index],key)) {
			return Reflect.field(this.data[this.index],key);
		} else {
			return defaultValue;
		}
	}
	,getBoolean: function(key,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		if(Object.prototype.hasOwnProperty.call(this.data[this.index],key)) {
			return Reflect.field(this.data[this.index],key);
		} else {
			return defaultValue;
		}
	}
	,asString: function() {
		return this.data[this.index];
	}
	,asFloat: function() {
		return this.data[this.index];
	}
	,asInt: function() {
		return this.data[this.index];
	}
	,isString: function() {
		return typeof(this.data[this.index]) == "string";
	}
	,isArray: function() {
		return ((this.data[this.index]) instanceof Array);
	}
	,get_next: function() {
		if(this.index < this.data.length - 1) {
			return new spine_support_utils_JsonChild(this.data,this.index + 1,this.keys);
		} else {
			return null;
		}
	}
	,get_name: function() {
		if(this.keys != null) {
			return this.keys[this.index];
		} else {
			return null;
		}
	}
	,get_size: function() {
		return this.data[this.index].length;
	}
	,get_child: function() {
		var item = this.data[this.index];
		if(item == null) {
			return null;
		} else if(((item) instanceof Array)) {
			return new spine_support_utils_JsonChild(item,0);
		} else {
			var keys = [];
			var values = [];
			var _g = 0;
			var _g1 = Reflect.fields(item);
			while(_g < _g1.length) {
				var field = _g1[_g];
				++_g;
				keys.push(field);
				values.push(Reflect.field(item,field));
			}
			if(keys.length == 0) {
				return null;
			}
			return new spine_support_utils_JsonChild(values,0,keys);
		}
	}
	,asFloatArray: function() {
		return this.data[this.index];
	}
	,asShortArray: function() {
		return this.data[this.index];
	}
	,getByIndex: function() {
		return this.data[this.index];
	}
	,__class__: spine_support_utils_JsonChild
	,__properties__: {get_child:"get_child",get_size:"get_size",get_name:"get_name",get_next:"get_next"}
};
var spine_support_utils_ObjectSet = {};
spine_support_utils_ObjectSet._new = function(capacity) {
	if(capacity == null) {
		capacity = 16;
	}
	var this1 = [];
	return this1;
};
spine_support_utils_ObjectSet.clear = function(this1,n) {
	this1.splice(0,this1.length);
};
spine_support_utils_ObjectSet.addAll = function(this1,items) {
	var didAdd = false;
	var _g = 0;
	var _g1 = items.length;
	while(_g < _g1) {
		var i = _g++;
		var item = items[i];
		if(this1.indexOf(item) == -1) {
			didAdd = true;
			this1.push(item);
		}
	}
	return didAdd;
};
spine_support_utils_ObjectSet.contains = function(this1,item) {
	return this1.indexOf(item) != -1;
};
var spine_support_utils_SerializationException = function(message,originalError) {
	if(message == null) {
		message = "";
	}
	if(originalError != null) {
		if(message != "") {
			message += " " + Std.string(originalError);
		} else {
			message = "" + Std.string(originalError);
		}
	}
	spine_support_error_Error.call(this,message);
	this.name = "SerializationException";
};
$hxClasses["spine.support.utils.SerializationException"] = spine_support_utils_SerializationException;
spine_support_utils_SerializationException.__name__ = "spine.support.utils.SerializationException";
spine_support_utils_SerializationException.__super__ = spine_support_error_Error;
spine_support_utils_SerializationException.prototype = $extend(spine_support_error_Error.prototype,{
	__class__: spine_support_utils_SerializationException
});
var spine_support_utils_SnapshotArray = function() {
	this.snapshots = [];
	this.snapshotIndex = -1;
	var this1 = [];
	this.array = this1;
};
$hxClasses["spine.support.utils.SnapshotArray"] = spine_support_utils_SnapshotArray;
spine_support_utils_SnapshotArray.__name__ = "spine.support.utils.SnapshotArray";
spine_support_utils_SnapshotArray.prototype = {
	get_size: function() {
		return this.array.length;
	}
	,begin: function() {
		this.snapshotIndex++;
		var snapshot = this.snapshots[this.snapshotIndex];
		if(snapshot == null) {
			snapshot = [].concat(this.array);
			this.snapshots[this.snapshotIndex] = snapshot;
		} else {
			var size = this.array.length;
			var len = snapshot.length;
			if(len > size) {
				snapshot.splice(size,size - len);
			} else if(len < size) {
				snapshot[size - 1] = null;
			}
			var _g = 0;
			var _g1 = this.array.length;
			while(_g < _g1) {
				var i = _g++;
				snapshot[i] = this.array[i];
			}
		}
		return snapshot;
	}
	,end: function() {
		var snapshot = this.snapshots[this.snapshotIndex];
		this.snapshotIndex--;
		var dynSnapshot = snapshot;
		var _g = 0;
		var _g1 = dynSnapshot.length;
		while(_g < _g1) {
			var i = _g++;
			dynSnapshot[i] = null;
		}
	}
	,removeValue: function(value,identity) {
		var this1 = this.array;
		var index = this1.indexOf(value);
		if(index == -1) {
			return false;
		} else {
			this1.splice(index,1);
			return true;
		}
	}
	,add: function(item) {
		this.array.push(item);
	}
	,clear: function() {
		var this1 = this.array;
		this1.splice(0,this1.length);
	}
	,__class__: spine_support_utils_SnapshotArray
	,__properties__: {get_size:"get_size"}
};
var spine_support_utils_StdEx = function() { };
$hxClasses["spine.support.utils.StdEx"] = spine_support_utils_StdEx;
spine_support_utils_StdEx.__name__ = "spine.support.utils.StdEx";
spine_support_utils_StdEx.parseInt = function(val,base) {
	if(base == 16) {
		return Std.parseInt("0x" + val);
	} else {
		return Std.parseInt(val);
	}
};
var spine_support_utils_StringBuilder = {};
spine_support_utils_StringBuilder._new = function(capacity) {
	var this1 = new StringBuf();
	return this1;
};
spine_support_utils_StringBuilder.$length = function(this1) {
	return this1.b.length;
};
spine_support_utils_StringBuilder.append = function(this1,str) {
	this1.b += str == null ? "null" : "" + str;
};
var spine_utils_SpineUtils = function() {
};
$hxClasses["spine.utils.SpineUtils"] = spine_utils_SpineUtils;
spine_utils_SpineUtils.__name__ = "spine.utils.SpineUtils";
spine_utils_SpineUtils.cosDeg = function(degrees) {
	return Math.cos(degrees * spine_utils_SpineUtils.degRad);
};
spine_utils_SpineUtils.sinDeg = function(degrees) {
	return Math.sin(degrees * spine_utils_SpineUtils.degRad);
};
spine_utils_SpineUtils.cos = function(radians) {
	return Math.cos(radians);
};
spine_utils_SpineUtils.sin = function(radians) {
	return Math.sin(radians);
};
spine_utils_SpineUtils.atan2 = function(y,x) {
	return Math.atan2(y,x);
};
spine_utils_SpineUtils.arraycopy = function(src,srcPos,dest,destPos,length) {
	if(src == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("src cannot be null."));
	}
	if(dest == null) {
		throw haxe_Exception.thrown(new spine_support_error_IllegalArgumentException("dest cannot be null."));
	}
	try {
		spine_support_utils_Array.copy(src,srcPos,dest,destPos,length);
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		throw haxe_Exception.thrown(new spine_support_error_ArrayIndexOutOfBoundsException("Src: " + src.length + ", " + srcPos + ", dest: " + dest.length + ", " + destPos + ", count: " + length));
	}
};
spine_utils_SpineUtils.prototype = {
	__class__: spine_utils_SpineUtils
};
var triple_$choice_$gri_Constants = function() { };
$hxClasses["triple_choice_gri.Constants"] = triple_$choice_$gri_Constants;
triple_$choice_$gri_Constants.__name__ = "triple_choice_gri.Constants";
var triple_$choice_$gri_AreaMode = $hxEnums["triple_choice_gri.AreaMode"] = { __ename__:true,__constructs__:null
	,NOTHING: {_hx_name:"NOTHING",_hx_index:0,__enum__:"triple_choice_gri.AreaMode",toString:$estr}
	,BATTLE: {_hx_name:"BATTLE",_hx_index:1,__enum__:"triple_choice_gri.AreaMode",toString:$estr}
	,EXPLORATION: {_hx_name:"EXPLORATION",_hx_index:2,__enum__:"triple_choice_gri.AreaMode",toString:$estr}
};
triple_$choice_$gri_AreaMode.__constructs__ = [triple_$choice_$gri_AreaMode.NOTHING,triple_$choice_$gri_AreaMode.BATTLE,triple_$choice_$gri_AreaMode.EXPLORATION];
var triple_$choice_$gri_SpecialBattleManager = function() {
	this.aux = new EnemyAreaInformation();
	this.enemiesLeft = 0;
	var _g = new haxe_ds_StringMap();
	_g.h[BattleConstants.PIERCING] = 15;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["Attack"] = 200;
	_g1.h["LifeMax"] = 300;
	_g1.h["Speed"] = 150;
	_g1.h["Defense"] = 200;
	_g1.h[BattleConstants.MAGICATTACK] = 200;
	var _g2 = new haxe_ds_StringMap();
	_g2.h[BattleConstants.PIERCING] = 25;
	_g2.h["Speed"] = 10;
	_g2.h["Defense"] = 3;
	_g2.h["Attack"] = 10;
	_g2.h["MagicAttack"] = 10;
	var _g3 = new haxe_ds_StringMap();
	_g3.h["Attack"] = 400;
	_g3.h["LifeMax"] = 500;
	_g3.h["Speed"] = 300;
	_g3.h["Defense"] = 300;
	_g3.h[BattleConstants.MAGICATTACK] = 400;
	var _g4 = new haxe_ds_StringMap();
	_g4.h[BattleConstants.PIERCING] = 35;
	_g4.h["Speed"] = 10;
	_g4.h["Defense"] = 3;
	_g4.h["Attack"] = 20;
	_g4.h["MagicAttack"] = 20;
	var _g5 = new haxe_ds_StringMap();
	_g5.h["Attack"] = 700;
	_g5.h["LifeMax"] = 1000;
	_g5.h["Speed"] = 450;
	_g5.h["Defense"] = 450;
	_g5.h[BattleConstants.MAGICATTACK] = 700;
	var _g6 = new haxe_ds_StringMap();
	_g6.h[BattleConstants.PIERCING] = 50;
	_g6.h["Speed"] = 10;
	_g6.h["Defense"] = 3;
	_g6.h["Attack"] = 30;
	_g6.h["MagicAttack"] = 30;
	var _g7 = new haxe_ds_StringMap();
	_g7.h["Attack"] = 1000;
	_g7.h["LifeMax"] = 1500;
	_g7.h["Speed"] = 550;
	_g7.h["Defense"] = 550;
	_g7.h[BattleConstants.MAGICATTACK] = 1000;
	this.equipment = [null,{ type : 0, requiredAttributes : null, attributes : _g, attributeMultiplier : _g1, seen : 0},{ type : 0, requiredAttributes : null, attributes : _g2, attributeMultiplier : _g3, seen : 0},{ type : 0, requiredAttributes : null, attributes : _g4, attributeMultiplier : _g5, seen : 0},{ type : 0, requiredAttributes : null, attributes : _g6, attributeMultiplier : _g7, seen : 0}];
};
$hxClasses["triple_choice_gri.SpecialBattleManager"] = triple_$choice_$gri_SpecialBattleManager;
triple_$choice_$gri_SpecialBattleManager.__name__ = "triple_choice_gri.SpecialBattleManager";
triple_$choice_$gri_SpecialBattleManager.prototype = {
	startSpecialBattle: function(enemyAmount,levelBonus,modifier,xpBonusAdd,xpBonusPercent,moneyBonusPercent,itemDropBonusAdd) {
		if(itemDropBonusAdd == null) {
			itemDropBonusAdd = 0;
		}
		if(moneyBonusPercent == null) {
			moneyBonusPercent = 0;
		}
		if(xpBonusPercent == null) {
			xpBonusPercent = 0;
		}
		if(xpBonusAdd == null) {
			xpBonusAdd = 0;
		}
		if(modifier == null) {
			modifier = 0;
		}
		if(levelBonus == null) {
			levelBonus = 0;
		}
		if(enemyAmount == null) {
			enemyAmount = 1;
		}
		var defaultEnemyArea = this.battleManager.getDefaultEnemyAreaInformationInCurrentArea();
		this.battleManager.volatileEnemyXPBonus = xpBonusPercent;
		this.arcaniaBattle.volatileMoneyBonus = moneyBonusPercent;
		this.battleManager.volatileEnemyItemDropChanceBonus = itemDropBonusAdd;
		this.battleManager.volatileEnemyXPBonusAdd = xpBonusAdd;
		if(defaultEnemyArea != null) {
			this.enemiesLeft = enemyAmount;
			this.aux.sheet = defaultEnemyArea.sheet;
			if(this.aux.sheet.viewAux > 0 == false) {
				this.aux.sheet.viewAux = 1;
			}
			this.aux.sheetId = defaultEnemyArea.sheetId;
			this.aux.level = levelBonus;
			this.aux.viewOverride = -1;
			haxe_Log.trace(this.aux.sheet.viewAux,{ fileName : "Sources\\GRI/triple_choice_gri/GRIAreaControl.hx", lineNumber : 46, className : "triple_choice_gri.SpecialBattleManager", methodName : "startSpecialBattle"});
			this.aux.equipment.length = 0;
			if(this.equipment[modifier] != null) {
				this.aux.equipment.push(this.equipment[modifier]);
			}
			this.battleManager.enemyAreaInformationOverwrite = this.aux;
		}
	}
	,isActive: function() {
		return this.enemiesLeft > 0;
	}
	,update: function() {
		if(this.isActive()) {
			if(this.battleManager.enemyDiedThisFrame()) {
				this.enemiesLeft--;
				if(this.isActive() == false) {
					this.end();
				}
			}
			if(this.battleManager.enemyAreaInformationOverwrite != null && this.battleManager.PlayerFightMode() == false) {
				this.end();
			}
		}
	}
	,end: function() {
		this.enemiesLeft = 0;
		this.battleManager.enemyAreaInformationOverwrite = null;
		this.battleManager.volatileEnemyXPBonus = 0;
		this.battleManager.volatileEnemyXPBonusAdd = 0;
		this.arcaniaBattle.volatileMoneyBonus = 0;
		this.battleManager.volatileEnemyItemDropChanceBonus = 0;
		this.battleManager.volatileEnemyItemLevelBonus = 0;
	}
	,__class__: triple_$choice_$gri_SpecialBattleManager
};
var triple_$choice_$gri_GRIOptionModel = function(option,maxAreaLevel) {
	this.optionModel = option;
	this.maxAreaLevel = maxAreaLevel;
};
$hxClasses["triple_choice_gri.GRIOptionModel"] = triple_$choice_$gri_GRIOptionModel;
triple_$choice_$gri_GRIOptionModel.__name__ = "triple_choice_gri.GRIOptionModel";
triple_$choice_$gri_GRIOptionModel.prototype = {
	__class__: triple_$choice_$gri_GRIOptionModel
};
var triple_$choice_$gri_GRIAreaControl = function(griControl,arcaniaActions) {
	this.specialBattle = new triple_$choice_$gri_SpecialBattleManager();
	this.areaInPreviousFrame = -1;
	this.griOptions = [];
	this.control = griControl;
	this.bm = this.control.battleManager;
	this.specialBattle.battleManager = this.bm;
	this.bm.automaticEnemyCreation = false;
	this.arcaniaControl = this.control.villageControl.arcaniaControl;
	this.arcaniaActionsTC = arcaniaActions;
	this.arcaniaActionsTC.loadJson();
	var optionModel = new triplechoice_OptionModel();
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,0),50,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE),45,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,1),30,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE),30,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,1),30,2);
	this.griOptions.push(new triple_$choice_$gri_GRIOptionModel(optionModel,15));
	var optionModel = new triplechoice_OptionModel();
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,0),50,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE),45,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,1),30,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,2),10,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,2),10,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE),30,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,1),25,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,2),10,1);
	this.griOptions.push(new triple_$choice_$gri_GRIOptionModel(optionModel,40));
	var optionModel = new triplechoice_OptionModel();
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,0),50,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,0);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE),45,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,1),30,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,2),15,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,2),15,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,3),10,1);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN),4,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE),30,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,3,1),30,2);
	optionModel.feed(new triplechoice_Option(triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT,0,2,4),10,1);
	this.griOptions.push(new triple_$choice_$gri_GRIOptionModel(optionModel,9999999));
	this.optionModel = this.griOptions[0].optionModel;
};
$hxClasses["triple_choice_gri.GRIAreaControl"] = triple_$choice_$gri_GRIAreaControl;
triple_$choice_$gri_GRIAreaControl.__name__ = "triple_choice_gri.GRIAreaControl";
triple_$choice_$gri_GRIAreaControl.prototype = {
	update: function() {
		this.specialBattle.arcaniaBattle = this.arcaniaControl.battleintegration;
		var areaChanged = false;
		if(this.areaInPreviousFrame != this.bm.wdata.battleArea) {
			if(this.areaInPreviousFrame >= 0) {
				areaChanged = true;
			}
			this.areaInPreviousFrame = this.bm.wdata.battleArea;
		}
		if(areaChanged && this.bm.isBattleArea()) {
			this.bm.wdata.enemy = null;
			this.specialBattle.end();
			if(this.bm.PlayerFightMode() == true) {
				this.bm.CreateAreaEnemy();
			}
			this.changeMode(triple_$choice_$gri_AreaMode.BATTLE);
		}
		var _g_current = 0;
		var _g_array = this.control.view.ui.dataEvents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.stringData == triple_$choice_$gri_GRIAreaView.DATA_AUTO_EXPLORE) {
				this.view.autoExploreButton.selected = !this.view.autoExploreButton.selected;
				this.autoExploreMode = this.view.autoExploreButton.selected;
				if(this.autoExploreMode) {
					this.specialBattle.end();
				}
			}
		}
		this.view.autoExploreButton.visible = this.bm.getCurrentRegion().type == RegionType.PROCEDURAL;
		this.specialBattle.update();
		var notSupposedToExplore = this.bm.getCurrentRegion().type != RegionType.PROCEDURAL || this.autoExploreMode || this.bm.wdata.necessaryToKillInArea <= 3;
		if(notSupposedToExplore || this.specialBattle.isActive()) {
			this.bm.automaticEnemyCreation = true;
			if(this.mode != triple_$choice_$gri_AreaMode.BATTLE) {
				this.changeMode(triple_$choice_$gri_AreaMode.BATTLE);
			}
			if(notSupposedToExplore) {
				this.specialBattle.end();
			}
			return;
		} else {
			this.bm.automaticEnemyCreation = false;
		}
		var slot = 0;
		var _g_current = 0;
		var _g_array = this.control.view.ui.dataEvents;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var index = _g1_key;
			var value = _g1_value;
			if(value.stringData == triple_$choice_$gri_GRIAreaView.DATA_EXPLORE) {
				var option = value.intData;
				var optionData = this.optionModel.getOptionData(option);
				if(this.arcaniaActionsTC.executeOption(optionData)) {
					this.bm.forceAreaProgress();
					this.changeMode(triple_$choice_$gri_AreaMode.EXPLORATION);
				} else {
					switch(optionData.type) {
					case triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE:
						slot = this.getSlotForOption(option);
						var cost = this.bm.getUpgradeLevelCost(this.bm.getEquipmentInSlot(slot));
						this.bm.upgradeLevelOfEquipmentInSlot(slot);
						this.arcaniaControl.spend(this.arcaniaControl.battleintegration.money,cost);
						this.bm.RecalculateAttributes(this.bm.wdata.hero);
						this.control.griSounds.soundPlayer.playSfx(autogen_AllSfx.battle_sfx_upgrade_weapom);
						break;
					case triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT:
						var sheetModifier = optionData.intData1;
						var quantityModifier = optionData.intData2;
						var powerupModifier = optionData.intData3;
						this.specialBattle.enemiesLeft = 3;
						var type = this.getBattleBonusModifierForOption(option);
						var xpMod = 0;
						var xpAdd = 0;
						var goldMod = 0;
						var itemDropChanceAdd = 0;
						if(powerupModifier >= 1) {
							itemDropChanceAdd = 70 + powerupModifier * 2;
						}
						if(powerupModifier == 1) {
							xpMod = 500;
							goldMod = 500;
						}
						if(powerupModifier == 2) {
							xpMod = 1500;
							goldMod = 1500;
						}
						if(powerupModifier == 3) {
							xpMod = 3000;
							goldMod = 3000;
						}
						if(powerupModifier >= 4) {
							xpMod = 6000;
							goldMod = 6000;
						}
						if(type == triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_MONEY) {
							goldMod = goldMod * 3 + 200;
						}
						if(type == triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_XP) {
							xpMod = xpMod * 3 + 200;
							xpAdd = this.bm.wdata.battleArea * xpMod / 100 | 0;
						}
						this.specialBattle.startSpecialBattle(quantityModifier,0,powerupModifier,xpAdd,xpMod,goldMod,itemDropChanceAdd);
						this.bm.CreateAreaEnemy();
						this.changeMode(triple_$choice_$gri_AreaMode.BATTLE);
						break;
					}
				}
			}
		}
		var progressing = this.bm.isProgressingOnBattleArea();
		if(this.bm.hasEnemyAlive() == false && this.mode == triple_$choice_$gri_AreaMode.BATTLE && progressing && this.bm.PlayerFightMode()) {
			this.changeMode(triple_$choice_$gri_AreaMode.EXPLORATION);
			this.bm.requestPrizeCollection();
		}
		if((progressing == false || this.bm.PlayerFightMode() == false) && this.mode == triple_$choice_$gri_AreaMode.EXPLORATION) {
			this.changeMode(triple_$choice_$gri_AreaMode.BATTLE);
		}
		if(this.mode == triple_$choice_$gri_AreaMode.EXPLORATION) {
			var _g = 0;
			while(_g < 3) {
				var i = _g++;
				var od = this.optionModel.getOptionData(i);
				var randomProp = this.optionModel.optionRandom0to999[i];
				if(od == null) {
					continue;
				}
				if(this.arcaniaActionsTC.updateButtonWithOption(od,this.view.buttons[i])) {
					continue;
				}
				var fightAction = false;
				var hoverOverwrite = null;
				var enable = true;
				var name = null;
				switch(od.type) {
				case triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE:
					slot = this.getSlotForOption(i);
					name = "Upgrade " + GRIControlEquip.equipTypeNames[slot];
					var canUpgrade = false;
					var cost = 0;
					var equipHover = "";
					if(this.arcaniaControl.battleintegration != null) {
						var money = this.arcaniaControl.battleintegration.money;
						var money1 = money.retentionData.amount;
						var equipment = this.bm.getEquipmentInSlot(slot);
						if(equipment != null) {
							var equipmentName = GRIControlEquip.GetEquipName(equipment,this.bm);
							var level = this.bm.getEquipmentGenLevelWithBonus(equipment);
							var maxlevel = this.bm.getUpgradeLevelMaxBonusLevel(equipment) + equipment.generationLevel;
							if(level == maxlevel) {
								equipHover = "Cannot upgrade " + equipmentName + " further \n\nEquipment at max level";
							} else {
								equipHover = "Upgrading " + equipmentName + "\nnext level: " + (level + 1);
								cost = this.bm.getUpgradeLevelCost(equipment);
								if(money1 < cost) {
									equipHover += "\nNOT ENOUGH COINS";
								}
								equipHover += "\nCost: " + cost + " / " + money1;
								equipHover += "\nMax Level: " + maxlevel;
							}
							if(this.bm.canUpgradeLevelOfEquipmentInSlot(money1,slot) == true) {
								canUpgrade = true;
							}
						} else {
							equipHover = "None equipped";
							canUpgrade = false;
						}
					}
					hoverOverwrite = equipHover;
					enable = canUpgrade;
					break;
				case triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT:
					fightAction = true;
					break;
				}
				if(fightAction) {
					name = "Battle foes";
					if(od.intData3 == 1) {
						name = "Elite Foe";
					}
					if(od.intData3 == 2) {
						name = "Elite II Foe";
					}
					if(od.intData3 == 3) {
						name = "Elite III Foe";
					}
					if(od.intData3 >= 4) {
						name = "Elite IV Foe";
					}
					var modBonus = this.getBattleBonusModifierForOption(i);
					var text = triple_$choice_$gri_GRIAreaControl.buffBonusTexts[modBonus];
					if(text != null) {
						name += "\n" + text;
					}
					hoverOverwrite = "Defeat nearby enemies";
				}
				if(name != null) {
					this.view.buttons[i].text = name;
				}
				this.view.buttons[i].enabled = enable;
				if(hoverOverwrite != null) {
					this.control.view.ui.hover.setHoverGeneric(this.view.buttons[i],this.view.buttons[i].text,hoverOverwrite);
				}
			}
		}
	}
	,getBattleBonusModifierForOption: function(i) {
		var randomProp = this.optionModel.optionRandom0to999[i];
		if(randomProp < 600) {
			return triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_NONE;
		} else if(randomProp < 800) {
			return triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_XP;
		} else {
			return triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_MONEY;
		}
	}
	,getSlotForOption: function(i) {
		var randomProp = this.optionModel.optionRandom0to999[i];
		if(randomProp < 500) {
			return 0;
		} else {
			return 1;
		}
	}
	,changeMode: function(mode) {
		this.mode = mode;
		this.view.explorationMode(mode == triple_$choice_$gri_AreaMode.EXPLORATION);
		if(mode == triple_$choice_$gri_AreaMode.BATTLE) {
			this.control.view.ui.enterCursorGroup(this.control.view.mainCursorGroup);
		}
		this.control.battleManager.battleSkillsAccessible = mode == triple_$choice_$gri_AreaMode.BATTLE;
		this.control.view.ui.tagVisibility(triple_$choice_$gri_GRIAreaView.TAG_EXPLORATION_BUTTON,mode == triple_$choice_$gri_AreaMode.EXPLORATION);
		if(this.arcaniaResourcesInBattle != null) {
			this.arcaniaResourcesInBattle.visible = mode == triple_$choice_$gri_AreaMode.EXPLORATION;
		}
		if(mode == triple_$choice_$gri_AreaMode.EXPLORATION) {
			var ba = this.bm.wdata.battleArea;
			var _g_current = 0;
			var _g_array = this.griOptions;
			while(_g_current < _g_array.length) {
				var _g1_value = _g_array[_g_current];
				var _g1_key = _g_current++;
				var index = _g1_key;
				var value = _g1_value;
				if(ba < value.maxAreaLevel) {
					this.optionModel = value.optionModel;
					break;
				}
			}
			this.bm.wdata.enemy = null;
			this.optionModel.generateOption(0,0);
			this.optionModel.generateOption(1,1);
			if(seedyrng_Seedy.randomInt(1,10) <= 8) {
				this.optionModel.generateOption(2,2);
			} else {
				this.optionModel.noOption(2);
			}
			var _g = 0;
			var _g1 = this.optionModel.options.length;
			while(_g < _g1) {
				var i = _g++;
				var v = this.optionModel.options[i];
				var optionLabel = null;
				if(v >= 0) {
					var optionD = this.optionModel.optionDatas[v];
					this.arcaniaActionsTC.refreshActionRelatedToOption(optionD);
					optionLabel = optionD.type + optionD.intData1;
				}
				this.view.buttons[i].visible = optionLabel != null;
				this.view.buttons[i].text = optionLabel;
			}
			this.control.view.ui.keyboardManager.cursorThisElement(this.view.buttons[0]);
		}
	}
	,setupView: function() {
		this.view = new triple_$choice_$gri_GRIAreaView(this.control.view);
		this.changeMode(triple_$choice_$gri_AreaMode.EXPLORATION);
		this.arcaniaResourcesInBattle = this.arcaniaControl.subsetManager.createSubset(GRILayoutManual.LAYOUT_EXPLORATION_RESOURCES);
		var money = this.arcaniaControl.battleintegration.money;
		this.arcaniaControl.subsetManager.bind(this.arcaniaResourcesInBattle,money);
	}
	,__class__: triple_$choice_$gri_GRIAreaControl
};
var triple_$choice_$gri_GRIAreaView = function(view) {
	this.choiceCursorGroup = new CursorGroup();
	this.buttons = [];
	this.view = view;
	var labels = ["Fight","Upgrade","A Chest"];
	var _g_current = 0;
	var _g_array = labels;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var index = _g1_key;
		var value = _g1_value;
		var b = view.addButton(triple_$choice_$gri_GRIAreaView.DATA_EXPLORE,value,null,GRIView.LAYOUT_MAIN_BATTLE_BUTTON,triple_$choice_$gri_GRIAreaView.TAG_EXPLORATION_BUTTON,this.choiceCursorGroup);
		b.data.intData = index;
		this.buttons.push(b);
	}
	this.autoExploreButton = view.addButtonImage(triple_$choice_$gri_GRIAreaView.DATA_AUTO_EXPLORE,autogen_GriPngs.gearrepeat,GRIView.ARCHETYPE_BUTTON_SMALL,GRIView.LAYOUT_SUB_BATTLE_BUTTON,null,null,view.upperCursorGroup);
	view.ui.hover.setHoverGeneric(this.autoExploreButton,"Focus on battles","Stop manually exploring and just focus on killing enemies");
	var v = view.upperCursorGroup;
	this.choiceCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
	var v = view.mainCursorGroup;
	this.choiceCursorGroup.noElementActivateGroup.set(Direction.WEST,v);
	var v = view.mainCursorGroup;
	this.choiceCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
	this.choiceCursorGroup.cancelGroup = view.tabCursorGroup;
};
$hxClasses["triple_choice_gri.GRIAreaView"] = triple_$choice_$gri_GRIAreaView;
triple_$choice_$gri_GRIAreaView.__name__ = "triple_choice_gri.GRIAreaView";
triple_$choice_$gri_GRIAreaView.prototype = {
	explorationMode: function(state) {
		if(state) {
			this.view.ui.keyboardManager.enterCursorGroup(this.choiceCursorGroup,this.view.ui);
			var v = this.choiceCursorGroup;
			this.view.mainCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
			var v = this.choiceCursorGroup;
			this.view.setCursorGroup.noElementActivateGroup.set(Direction.NORTH,v);
			var v = this.choiceCursorGroup;
			this.view.setCursorGroup.noElementActivateGroup.set(Direction.EAST,v);
			var v = this.choiceCursorGroup;
			this.view.upperCursorGroup.noElementActivateGroup.set(Direction.SOUTH,v);
		} else {
			this.view.cursorGroupConnections();
		}
	}
	,__class__: triple_$choice_$gri_GRIAreaView
};
var triplechoice_Option = function(type,int1,int2,int3,int4) {
	if(int4 == null) {
		int4 = -99999;
	}
	if(int3 == null) {
		int3 = -99999;
	}
	if(int2 == null) {
		int2 = -99999;
	}
	if(int1 == null) {
		int1 = -99999;
	}
	this.duration = 1;
	this.type = type;
	this.intData1 = int1;
	this.intData2 = int2;
	this.intData3 = int3;
	this.intData4 = int4;
};
$hxClasses["triplechoice.Option"] = triplechoice_Option;
triplechoice_Option.__name__ = "triplechoice.Option";
triplechoice_Option.prototype = {
	__class__: triplechoice_Option
};
var triplechoice_OptionModel = function() {
	this.optionDatas = [];
	var this1 = new Array(3);
	this.optionRandom0to999 = this1;
	var this1 = new Array(3);
	this.options = this1;
	this.optionGen = new triplechoice_generation_OptionGen();
};
$hxClasses["triplechoice.OptionModel"] = triplechoice_OptionModel;
triplechoice_OptionModel.__name__ = "triplechoice.OptionModel";
triplechoice_OptionModel.prototype = {
	feed: function(option,weight,distributionPos,distributionType) {
		if(distributionType == null) {
			distributionType = 0;
		}
		this.optionDatas.push(option);
		var optionId = this.optionDatas.length - 1;
		this.optionGen.addToDistributionType(optionId,weight,distributionPos,distributionType);
	}
	,generateOption: function(optionPos,distributionPos) {
		var optionId = this.optionGen.generateFromMainDistribution(distributionPos);
		this.options[optionPos] = optionId;
		this.optionRandom0to999[optionPos] = seedyrng_Seedy.randomInt(0,999);
	}
	,noOption: function(optionPos) {
		this.options[optionPos] = -99999;
	}
	,getOptionData: function(optionPos) {
		return this.optionDatas[this.options[optionPos]];
	}
	,__class__: triplechoice_OptionModel
};
var triplechoice_generation_OptionGen = function() {
	this.random = new seedyrng_Random();
	this.distributions = new ArrayOfArray();
};
$hxClasses["triplechoice.generation.OptionGen"] = triplechoice_generation_OptionGen;
triplechoice_generation_OptionGen.__name__ = "triplechoice.generation.OptionGen";
triplechoice_generation_OptionGen.prototype = {
	generateFromMainDistribution: function(distributionPos) {
		return this.generateFromDistribution(0,distributionPos);
	}
	,generateFromDistribution: function(type,pos) {
		var distribution = this.distributions.getElement(type,pos);
		var prize = WeightedDistributionLogic.getAPrize(distribution,this.random);
		return prize;
	}
	,addToDistributionType: function(optionId,weight,distributionPos,distributionType) {
		this.distributions.adjustLength(distributionType + 1);
		this.distributions.adjustLengthOfList(distributionType,distributionPos + 1);
		if(this.distributions.getElement(distributionType,distributionPos) == null) {
			this.distributions.setElement(distributionType,distributionPos,new WeightedDistribution());
		}
		var distribution = this.distributions.getElement(distributionType,distributionPos);
		var prize = new WeightedPrize(optionId,weight);
		distribution.prizes.push(prize);
	}
	,__class__: triplechoice_generation_OptionGen
};
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
$hxClasses["Math"] = Math;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
haxe_Resource.content = [{ name : "font12_fnt", data : ""},{ name : "spine/text_effect_json", data : "eyJza2VsZXRvbiI6eyJoYXNoIjoiUHpjQVl4NjJBcU0iLCJzcGluZSI6IjQuMC42NCIsIngiOi0yMiwieSI6LTE5LjUsIndpZHRoIjo0NCwiaGVpZ2h0IjozOX0sImJvbmVzIjpbeyJuYW1lIjoicm9vdCJ9LHsibmFtZSI6InRleHQiLCJwYXJlbnQiOiJyb290In1dLCJzbG90cyI6W3sibmFtZSI6ImJhY2tncm91bmQiLCJib25lIjoicm9vdCIsImF0dGFjaG1lbnQiOiJwdXJwbGViYWNrIn0seyJuYW1lIjoibnVtYmVyX3Rlc3QiLCJib25lIjoidGV4dCIsImF0dGFjaG1lbnQiOiJudW1iZXJfdGVzdCJ9XSwic2tpbnMiOlt7Im5hbWUiOiJkZWZhdWx0IiwiYXR0YWNobWVudHMiOnsiYmFja2dyb3VuZCI6eyJwdXJwbGViYWNrIjp7IndpZHRoIjo0NCwiaGVpZ2h0IjozOX19LCJudW1iZXJfdGVzdCI6eyJudW1iZXJfdGVzdCI6eyJ3aWR0aCI6MjEsImhlaWdodCI6MTR9fX19XSwiYW5pbWF0aW9ucyI6eyJkb3duX3NsaWRlbGVmdCI6eyJzbG90cyI6eyJiYWNrZ3JvdW5kIjp7ImF0dGFjaG1lbnQiOlt7Im5hbWUiOm51bGx9XX19LCJib25lcyI6eyJ0ZXh0Ijp7InRyYW5zbGF0ZSI6W3sieSI6LTUzLjQ1fSx7InRpbWUiOjEuNSwieCI6LTguNzEsInkiOi01M30seyJ0aW1lIjoxLjY2NjcsIngiOi0zMS4zNywieSI6LTUzfV19fX0sImRvd25fc2xpZGVsZWZ0MiI6eyJzbG90cyI6eyJiYWNrZ3JvdW5kIjp7ImF0dGFjaG1lbnQiOlt7Im5hbWUiOm51bGx9XX19LCJib25lcyI6eyJ0ZXh0Ijp7InRyYW5zbGF0ZSI6W3sieSI6LTUzLjQ1LCJjdXJ2ZSI6InN0ZXBwZWQifSx7InRpbWUiOjEuNzY2NywieSI6LTUzLjQ1fSx7InRpbWUiOjIuMTY2NywieCI6LTEuNzQsInkiOi01M30seyJ0aW1lIjoyLjMzMzMsIngiOi0zMS4zNywieSI6LTUzfV19fX0sInBvcGluIjp7ImJvbmVzIjp7InRleHQiOnsidHJhbnNsYXRlIjpbe30seyJ0aW1lIjowLjAzMzMsInkiOjE5LjAzfSx7InRpbWUiOjAuMTMzMywieSI6LTE0LjY2LCJjdXJ2ZSI6InN0ZXBwZWQifSx7InRpbWUiOjAuMiwieSI6LTE0LjY2fSx7InRpbWUiOjAuMjY2NywieSI6Ni41NX0seyJ0aW1lIjowLjMzMzMsImN1cnZlIjoic3RlcHBlZCJ9LHsidGltZSI6MC42NjY3fV19fX0sInBvcGluZmFzdCI6eyJib25lcyI6eyJ0ZXh0Ijp7InRyYW5zbGF0ZSI6W3sieSI6LTI2LjUyfSx7InRpbWUiOjAuMTMzMywiY3VydmUiOiJzdGVwcGVkIn0seyJ0aW1lIjowLjY2Njd9XX19fX19"},{ name : "lato15_fnt", data : "aW5mbyBmYWNlPSJMYXRvIEJvbGQiIHNpemU9MTUgYm9sZD0wIGl0YWxpYz0wIGNoYXJzZXQ9IiIgdW5pY29kZT0wIHN0cmV0Y2hIPTEwMCBzbW9vdGg9MSBhYT0xIHBhZGRpbmc9MiwyLDIsMiBzcGFjaW5nPS0yLC0yDQpjb21tb24gbGluZUhlaWdodD0yMSBiYXNlPTE1IHNjYWxlVz01MTIgc2NhbGVIPTUxMiBwYWdlcz0xIHBhY2tlZD0wDQpwYWdlIGlkPTAgZmlsZT0ibGF0bzE1LnBuZyINCmNoYXJzIGNvdW50PTE5NA0KY2hhciBpZD0wICAgICAgIHg9MCAgICB5PTAgICAgd2lkdGg9MCAgICBoZWlnaHQ9MCAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTIgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAgICAgICB4PTAgICAgeT0wICAgIHdpZHRoPTAgICAgaGVpZ2h0PTAgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0yICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTMyICAgICAgeD0wICAgIHk9MCAgICB3aWR0aD0wICAgIGhlaWdodD0wICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zMyAgICAgIHg9NTAxICB5PTIwICAgd2lkdGg9NyAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MzQgICAgICB4PTExMSAgeT03MCAgIHdpZHRoPTEwICAgaGVpZ2h0PTkgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT04ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTM1ICAgICAgeD0xMDQgIHk9MzggICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zNiAgICAgIHg9NTUgICB5PTAgICAgd2lkdGg9MTMgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MzcgICAgICB4PTg4ICAgeT0zOCAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTM4ICAgICAgeD0xMTcgIHk9MzggICB3aWR0aD0xNSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zOSAgICAgIHg9MTIxICB5PTcwICAgd2lkdGg9NyAgICBoZWlnaHQ9OSAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDAgICAgICB4PTAgICAgeT0wICAgIHdpZHRoPTggICAgaGVpZ2h0PTIwICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQxICAgICAgeD04ICAgIHk9MCAgICB3aWR0aD04ICAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00MiAgICAgIHg9OTEgICB5PTcwICAgd2lkdGg9MTAgICBoZWlnaHQ9MTAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDMgICAgICB4PTM5NyAgeT01NCAgIHdpZHRoPTEzICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQ0ICAgICAgeD01MDMgIHk9NTQgICB3aWR0aD03ICAgIGhlaWdodD0xMCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEwICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00NSAgICAgIHg9MTkxICB5PTcwICAgd2lkdGg9OSAgICBoZWlnaHQ9NyAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD03ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDYgICAgICB4PTE4NCAgeT03MCAgIHdpZHRoPTcgICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MTAgICB4YWR2YW5jZT01ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQ3ICAgICAgeD00OTkgIHk9MCAgICB3aWR0aD0xMSAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTMgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00OCAgICAgIHg9MTYwICB5PTU0ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0yICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDkgICAgICB4PTQ4OSAgeT0yMCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTUwICAgICAgeD0wICAgIHk9MzggICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01MSAgICAgIHg9MTMgICB5PTM4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTIgICAgICB4PTI2ICAgeT0zOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTUzICAgICAgeD0zOSAgIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01NCAgICAgIHg9NTEgICB5PTM4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTUgICAgICB4PTY0ICAgeT0zOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTU2ICAgICAgeD0xMzQgIHk9NTQgICB3aWR0aD0xMyAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTIgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01NyAgICAgIHg9MTQ3ICB5PTU0ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0yICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTggICAgICB4PTQzOSAgeT01NCAgIHdpZHRoPTggICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NSAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTU5ICAgICAgeD0xNzMgIHk9NTQgICB3aWR0aD04ICAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTUgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02MCAgICAgIHg9NDQ3ICB5PTU0ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0xICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjEgICAgICB4PTgwICAgeT03MCAgIHdpZHRoPTExICAgaGVpZ2h0PTEwICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9NSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTYyICAgICAgeD00NTcgIHk9NTQgICB3aWR0aD0xMSAgIGhlaWdodD0xMiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02MyAgICAgIHg9NzcgICB5PTM4ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjQgICAgICB4PTI5MyAgeT0wICAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTY1ICAgICAgeD01NyAgIHk9MjAgICB3aWR0aD0xNSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02NiAgICAgIHg9NzIgICB5PTIwICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjcgICAgICB4PTg1ICAgeT0yMCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTY4ICAgICAgeD05OSAgIHk9MjAgICB3aWR0aD0xNCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02OSAgICAgIHg9MTEzICB5PTIwICAgd2lkdGg9MTEgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzAgICAgICB4PTEyNCAgeT0yMCAgIHdpZHRoPTExICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTcxICAgICAgeD0xMzUgIHk9MjAgICB3aWR0aD0xNSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03MiAgICAgIHg9MTUwICB5PTIwICAgd2lkdGg9MTQgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzMgICAgICB4PTE2NCAgeT0yMCAgIHdpZHRoPTcgICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTc0ICAgICAgeD0xNzEgIHk9MjAgICB3aWR0aD0xMCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03NSAgICAgIHg9MTgxICB5PTIwICAgd2lkdGg9MTQgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzYgICAgICB4PTE5NSAgeT0yMCAgIHdpZHRoPTExICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTc3ICAgICAgeD0yMDYgIHk9MjAgICB3aWR0aD0xNiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTYgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03OCAgICAgIHg9MjIyICB5PTIwICAgd2lkdGg9MTQgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzkgICAgICB4PTEwMCAgeT01NCAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTgwICAgICAgeD0yMzYgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04MSAgICAgIHg9MTQgICB5PTIwICAgd2lkdGg9MTYgICBoZWlnaHQ9MTcgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0yICAgIHhhZHZhbmNlPTE0ICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODIgICAgICB4PTI0OCAgeT0yMCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTgzICAgICAgeD0yNjEgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04NCAgICAgIHg9MjczICB5PTIwICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODUgICAgICB4PTI4NiAgeT0yMCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTg2ICAgICAgeD0zMDAgIHk9MjAgICB3aWR0aD0xNSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04NyAgICAgIHg9MzE1ICB5PTIwICAgd2lkdGg9MjAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTE4ICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODggICAgICB4PTMzNSAgeT0yMCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTg5ICAgICAgeD0zNDkgIHk9MjAgICB3aWR0aD0xNCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05MCAgICAgIHg9MzYzICB5PTIwICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTEgICAgICB4PTE2ICAgeT0wICAgIHdpZHRoPTggICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTkyICAgICAgeD0zMCAgIHk9MjAgICB3aWR0aD0xMSAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTMgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05MyAgICAgIHg9MjQgICB5PTAgICAgd2lkdGg9OCAgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTQgICAgICB4PTY5ICAgeT03MCAgIHdpZHRoPTExICAgaGVpZ2h0PTEwICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTk1ICAgICAgeD0yMjYgIHk9NzAgICB3aWR0aD0xMCAgIGhlaWdodD02ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTE0ICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05NiAgICAgIHg9MTM5ICB5PTcwICAgd2lkdGg9OCAgICBoZWlnaHQ9OCAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTcgICAgICB4PTI1MCAgeT01NCAgIHdpZHRoPTEyICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTk4ICAgICAgeD0zNzYgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05OSAgICAgIHg9MjYyICB5PTU0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAwICAgICB4PTM4OCAgeT0yMCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwMSAgICAgeD0yNzMgIHk9NTQgICB3aWR0aD0xMiAgIGhlaWdodD0xMyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDIgICAgIHg9NDAwICB5PTIwICAgd2lkdGg9MTAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAzICAgICB4PTQxMCAgeT0yMCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwNCAgICAgeD00MjIgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDUgICAgIHg9MTE2ICB5PTU0ICAgd2lkdGg9OCAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0yICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTA2ICAgICB4PTI4NCAgeT0wICAgIHdpZHRoPTkgICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwNyAgICAgeD00MzQgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDggICAgIHg9NDQ2ICB5PTIwICAgd2lkdGg9NiAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTA5ICAgICB4PTI4NSAgeT01NCAgIHdpZHRoPTE2ICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xNSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExMCAgICAgeD0zMDEgIHk9NTQgICB3aWR0aD0xMiAgIGhlaWdodD0xMyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTEgICAgIHg9NDI2ICB5PTU0ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTEyICAgICB4PTQ1MiAgeT0yMCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExMyAgICAgeD00NjUgIHk9MjAgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTQgICAgIHg9MzEzICB5PTU0ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTE1ICAgICB4PTMyMyAgeT01NCAgIHdpZHRoPTExICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExNiAgICAgeD0xMjQgIHk9NTQgICB3aWR0aD0xMCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTIgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTcgICAgIHg9MzM0ICB5PTU0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTE4ICAgICB4PTM0NiAgeT01NCAgIHdpZHRoPTEyICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExOSAgICAgeD0zNTggIHk9NTQgICB3aWR0aD0xNiAgIGhlaWdodD0xMyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjAgICAgIHg9Mzc0ICB5PTU0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTIxICAgICB4PTQ3NyAgeT0yMCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEyMiAgICAgeD0zODYgIHk9NTQgICB3aWR0aD0xMSAgIGhlaWdodD0xMyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjMgICAgIHg9MzIgICB5PTAgICAgd2lkdGg9OCAgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTI0ICAgICB4PTQ5ICAgeT0wICAgIHdpZHRoPTYgICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEyNSAgICAgeD00MCAgIHk9MCAgICB3aWR0aD05ICAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjYgICAgIHg9MTQ3ICB5PTcwICAgd2lkdGg9MTIgICBoZWlnaHQ9OCAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD02ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTI3ICAgICB4PTEzMiAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2MCAgICAgeD0wICAgIHk9MCAgICB3aWR0aD0wICAgIGhlaWdodD0wICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjEgICAgIHg9MTgxICB5PTU0ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0xICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTYyICAgICB4PTE0NCAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2MyAgICAgeD0xNTYgIHk9MzggICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjQgICAgIHg9NDY4ICB5PTU0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTY1ICAgICB4PTE2OSAgeT0zOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2NiAgICAgeD02OCAgIHk9MCAgICB3aWR0aD02ICAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjcgICAgIHg9MzA5ICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTY4ICAgICB4PTE1OSAgeT03MCAgIHdpZHRoPTEwICAgaGVpZ2h0PTggICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2OSAgICAgeD0xODIgIHk9MzggICB3aWR0aD0xNiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzAgICAgIHg9MTMgICB5PTcwICAgd2lkdGg9OSAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTcxICAgICB4PTQ4MCAgeT01NCAgIHdpZHRoPTExICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NSAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3MiAgICAgeD0xMjggIHk9NzAgICB3aWR0aD0xMSAgIGhlaWdodD05ICAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTYgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzMgICAgIHg9MjAwICB5PTcwICAgd2lkdGg9OSAgICBoZWlnaHQ9NyAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD03ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTc0ICAgICB4PTE5OCAgeT0zOCAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3NSAgICAgeD0yMDkgIHk9NzAgICB3aWR0aD05ICAgIGhlaWdodD03ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzYgICAgIHg9MTAxICB5PTcwICAgd2lkdGg9MTAgICBoZWlnaHQ9MTAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0yICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTc3ICAgICB4PTE4OCAgeT01NCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3OCAgICAgeD0yMiAgIHk9NzAgICB3aWR0aD05ICAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzkgICAgIHg9MzEgICB5PTcwICAgd2lkdGg9OSAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTgwICAgICB4PTE2OSAgeT03MCAgIHdpZHRoPTggICAgaGVpZ2h0PTggICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4MSAgICAgeD0yMTQgIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODIgICAgIHg9MzIwICB5PTAgICAgd2lkdGg9MTUgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTgzICAgICB4PTIxOCAgeT03MCAgIHdpZHRoPTggICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NyAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4NCAgICAgeD0xNzcgIHk9NzAgICB3aWR0aD03ICAgIGhlaWdodD04ICAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEyICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODUgICAgIHg9NDAgICB5PTcwICAgd2lkdGg9OSAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTg2ICAgICB4PTQ5ICAgeT03MCAgIHdpZHRoPTEwICAgaGVpZ2h0PTExICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT04ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4NyAgICAgeD01OSAgIHk9NzAgICB3aWR0aD0xMCAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTUgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODggICAgIHg9MjI2ICB5PTM4ICAgd2lkdGg9MTUgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTg5ICAgICB4PTI0MSAgeT0zOCAgIHdpZHRoPTE1ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5MCAgICAgeD0yNTYgIHk9MzggICB3aWR0aD0xNSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTEgICAgIHg9MjAxICB5PTU0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTkyICAgICB4PTc0ICAgeT0wICAgIHdpZHRoPTE1ICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTIgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5MyAgICAgeD04OSAgIHk9MCAgICB3aWR0aD0xNSAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTQgICAgIHg9MzM1ICB5PTAgICAgd2lkdGg9MTUgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTk1ICAgICB4PTM1MCAgeT0wICAgIHdpZHRoPTE1ICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5NiAgICAgeD0zNjUgIHk9MCAgICB3aWR0aD0xNSAgIGhlaWdodD0xOCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTcgICAgIHg9MTA0ICB5PTAgICAgd2lkdGg9MTUgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMiAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTk4ICAgICB4PTI3MSAgeT0zOCAgIHdpZHRoPTE5ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xNiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5OSAgICAgeD0xMTkgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDAgICAgIHg9MTMzICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0tMiAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjAxICAgICB4PTE0NCAgeT0wICAgIHdpZHRoPTExICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9LTIgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwMiAgICAgeD0zODAgIHk9MCAgICB3aWR0aD0xMSAgIGhlaWdodD0xOCAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDMgICAgIHg9MzkxICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0xICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjA0ICAgICB4PTE1NSAgeT0wICAgIHdpZHRoPTkgICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9LTIgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwNSAgICAgeD0xNjQgIHk9MCAgICB3aWR0aD05ICAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDYgICAgIHg9NDAyICB5PTAgICAgd2lkdGg9MTAgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0zICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjA3ICAgICB4PTQxMiAgeT0wICAgIHdpZHRoPTExICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwOCAgICAgeD0yOTAgIHk9MzggICB3aWR0aD0xNiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDkgICAgIHg9NDIzICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0xICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjEwICAgICB4PTE3MyAgeT0wICAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTIgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxMSAgICAgeD0xODkgIHk9MCAgICB3aWR0aD0xNiAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTIgICAgIHg9NDM3ICB5PTAgICAgd2lkdGg9MTYgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTE0ICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjEzICAgICB4PTQ1MyAgeT0wICAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxNCAgICAgeD00NjkgIHk9MCAgICB3aWR0aD0xNiAgIGhlaWdodD0xOCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTUgICAgIHg9NDkxICB5PTU0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjE2ICAgICB4PTQxICAgeT0yMCAgIHdpZHRoPTE2ICAgaGVpZ2h0PTE3ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxNyAgICAgeD0yMDUgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTggICAgIHg9MjE5ICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMiAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjE5ICAgICB4PTQ4NSAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyMCAgICAgeD0wICAgIHk9MjAgICB3aWR0aD0xNCAgIGhlaWdodD0xOCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTMgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjEgICAgIHg9MjMzICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMiAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjIyICAgICB4PTMwNiAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyMyAgICAgeD0zMTggIHk9MzggICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjQgICAgIHg9MzMxICB5PTM4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjI1ICAgICB4PTM0MyAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyNiAgICAgeD0zNTUgIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjcgICAgIHg9MzY3ICB5PTM4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjI4ICAgICB4PTM3OSAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyOSAgICAgeD0yMTIgIHk9NTQgICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTIgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzAgICAgIHg9NDEwICB5PTU0ICAgd2lkdGg9MTYgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTE0ICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjMxICAgICB4PTM5MSAgeT0zOCAgIHdpZHRoPTExICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzMiAgICAgeD00MDIgIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzMgICAgIHg9NDE0ICB5PTM4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjM0ICAgICB4PTQyNiAgeT0zOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzNSAgICAgeD00MzggIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzYgICAgIHg9NDUwICB5PTM4ICAgd2lkdGg9OCAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjM3ICAgICB4PTQ1OCAgeT0zOCAgIHdpZHRoPTggICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzOCAgICAgeD00NjYgIHk9MzggICB3aWR0aD0xMCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTMgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzkgICAgIHg9NDc2ICB5PTM4ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0zICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQwICAgICB4PTIyNCAgeT01NCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0MSAgICAgeD00ODYgIHk9MzggICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDIgICAgIHg9NDk4ICB5PTM4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQzICAgICB4PTAgICAgeT01NCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0NCAgICAgeD0xMyAgIHk9NTQgICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDUgICAgIHg9MjYgICB5PTU0ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQ2ICAgICB4PTM5ICAgeT01NCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0NyAgICAgeD0wICAgIHk9NzAgICB3aWR0aD0xMyAgIGhlaWdodD0xMiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDggICAgIHg9MjM3ICB5PTU0ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTQgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQ5ICAgICB4PTUyICAgeT01NCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI1MCAgICAgeD02NCAgIHk9NTQgICB3aWR0aD0xMiAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNTEgICAgIHg9NzYgICB5PTU0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjUyICAgICB4PTg4ICAgeT01NCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI1MyAgICAgeD0yNDcgIHk9MCAgICB3aWR0aD0xMiAgIGhlaWdodD0xOSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNTQgICAgIHg9MjU5ICB5PTAgICAgd2lkdGg9MTMgICBoZWlnaHQ9MTkgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjU1ICAgICB4PTI3MiAgeT0wICAgIHdpZHRoPTEyICAgaGVpZ2h0PTE5ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQprZXJuaW5ncyBjb3VudD0xMzczDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI2IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTY3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQzIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE5OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAyIHNlY29uZD0xNzkgYW1vdW50PTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjggc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD00NCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xNzkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD01OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI1MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk5IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTAwIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMjIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yMzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTc4IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjkgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTA5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0zOCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjI0IHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIxMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMyBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwOSBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTk0IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTEzIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5NyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjEzIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD01OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIyIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yNDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIxMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzNSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNiBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwOSBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTc5IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE4MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9ODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1MyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yNDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xNzAgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MyBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyOSBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTIzNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEyIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNDggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD03MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjggc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjExIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9NDIgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTkzIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yMjQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjI4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0xNzkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NiBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjI3IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9OTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwOSBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQ5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDEgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE4NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTU5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNjkgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQxIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI3IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE4MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEwIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTExOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIyOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI5IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIyIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTY0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjYgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQwIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9NDIgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0yMjggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MzQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjQ5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTk3IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDggc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTM4IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yNDUgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MSBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNyBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMCBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTE5OCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xODUgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNCBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OSBzZWNvbmQ9MTk0IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjQwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAyIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjE2IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzMiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA5IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0zNCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTE5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD02NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIxMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NiBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI4IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yNDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MyBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMyBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNDUgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjUgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE4NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTQ2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xMTAgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MzkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE3OSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjE0IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjI0IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTQ3IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTY5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MjE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9ODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNiBzZWNvbmQ9MTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDMgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDEgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjUwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTAzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTIzNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIyNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD03NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTg1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yMTYgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIxMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MzkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMiBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjI1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTAzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjUxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI0IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIyNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIyIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA5IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNSBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTk1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTQgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjMwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyOSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEwIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTg1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI1MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTQyIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI4IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD03NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5OSBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQyIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9MTc4IGFtb3VudD0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEyIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD02NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xNzggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjUxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMDggc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9OTkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNCBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MSBzZWNvbmQ9MTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyOSBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTc5IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTExMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIxMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI2IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0zNCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI5IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yMzIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTkzIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTEyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIzNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD01OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMzQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTIxMCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTc4IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xMDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjI2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD00NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI3IHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0OCBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xNjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD01OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD03MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMyBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNyBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxNiBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA5IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjkgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3OSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD0xOTIgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjA4IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD03OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIyNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0xNzggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk5IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMjYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMwIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MyBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDIgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTU4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTM5IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjUyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDggc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEwIHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD0xNzYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTQgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNyBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTAgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE3OSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjI3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9OTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMiBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjggc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQxIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjI3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjUyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTIyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyOSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xNzYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMiBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTE5NyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEwOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc5IHNlY29uZD0xOTMgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMzIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI1IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTc5IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjMxIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD05NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEwIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODUgc2Vjb25kPTQ3IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIyMSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIxMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI2IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIxMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI4IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9OTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMjIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMCBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NCBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI3IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTY3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTExMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEwIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTE3OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEyIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NDQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xNzggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDEgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjI0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTc5IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xNjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9ODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjQgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTgxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIxMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI2IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQ5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDkgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI4IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTExNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIyNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODUgc2Vjb25kPTE5NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTExNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc5IHNlY29uZD0xOTggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9NDYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTIwOCBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIxMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTU5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTAgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIyOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE4MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0yMjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTExOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIxNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9NDYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyOSBzZWNvbmQ9MTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MSBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTM4IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTg2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjUwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI0IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY0IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI0OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNiBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTE4NSBhbW91bnQ9MQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDkgc2Vjb25kPTE3OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTY5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE4NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD02NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD0xOTQgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTgxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjI5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTkgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyOCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjQxIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xNzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xMTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD00NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTc5IHNlY29uZD00NyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzMgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI3IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDIgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MTg2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIyOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTExOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MTg1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDkgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIyOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjUwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTIwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9ODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xNzYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MSBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MSBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTc4IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDMgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIyOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI1IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0yMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9OTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE3NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTExNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEwIHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTEyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTkyIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTExIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5NSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTE3MCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0xODUgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjMzIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMSBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIyNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NyBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIxMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIxMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD00NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTExMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQxIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyOSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNjkgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQ2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTE3MCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMyBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTY1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3OCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyNSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0OCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY0IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNyBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjI2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODUgc2Vjb25kPTE5NyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTEyIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk5IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIxMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTEgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0xNzggYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjI2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTE3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjggc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ1IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTY5IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyNSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM0IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjI4IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTEwOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMwIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTk2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MTg1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5MiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD04NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTY0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE3OCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTAyIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzMCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTg2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjUyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODEgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjEwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjYgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD05MiBhbW91bnQ9LTENCg"},{ name : "lato13_fnt", data : "aW5mbyBmYWNlPSJMYXRvIEJvbGQiIHNpemU9MTMgYm9sZD0wIGl0YWxpYz0wIGNoYXJzZXQ9IiIgdW5pY29kZT0wIHN0cmV0Y2hIPTEwMCBzbW9vdGg9MSBhYT0xIHBhZGRpbmc9MiwyLDIsMiBzcGFjaW5nPS0yLC0yDQpjb21tb24gbGluZUhlaWdodD0xOCBiYXNlPTEzIHNjYWxlVz01MTIgc2NhbGVIPTUxMiBwYWdlcz0xIHBhY2tlZD0wDQpwYWdlIGlkPTAgZmlsZT0ibGF0bzEzLnBuZyINCmNoYXJzIGNvdW50PTE5NA0KY2hhciBpZD0wICAgICAgIHg9MCAgICB5PTAgICAgd2lkdGg9MCAgICBoZWlnaHQ9MCAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTIgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAgICAgICB4PTAgICAgeT0wICAgIHdpZHRoPTAgICAgaGVpZ2h0PTAgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0yICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTMyICAgICAgeD0wICAgIHk9MCAgICB3aWR0aD0wICAgIGhlaWdodD0wICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zMyAgICAgIHg9NDg2ICB5PTE4ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MzQgICAgICB4PTQ0MiAgeT00OSAgIHdpZHRoPTkgICAgaGVpZ2h0PTkgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTM1ICAgICAgeD0xNSAgIHk9MzQgICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zNiAgICAgIHg9OTggICB5PTAgICAgd2lkdGg9MTIgICBoZWlnaHQ9MTcgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MzcgICAgICB4PTAgICAgeT0zNCAgIHdpZHRoPTE1ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTM4ICAgICAgeD0yNyAgIHk9MzQgICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0zOSAgICAgIHg9NDUxICB5PTQ5ICAgd2lkdGg9NyAgICBoZWlnaHQ9OSAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTUgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDAgICAgICB4PTAgICAgeT0wICAgIHdpZHRoPTggICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQxICAgICAgeD03NSAgIHk9MCAgICB3aWR0aD04ICAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00MiAgICAgIHg9NDE2ICB5PTQ5ICAgd2lkdGg9OSAgICBoZWlnaHQ9MTAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDMgICAgICB4PTIxOSAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MiAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQ0ICAgICAgeD00ODAgIHk9NDkgICB3aWR0aD03ICAgIGhlaWdodD04ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTkgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00NSAgICAgIHg9NyAgICB5PTYzICAgd2lkdGg9OSAgICBoZWlnaHQ9NyAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDYgICAgICB4PTAgICAgeT02MyAgIHdpZHRoPTcgICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9OCAgICB4YWR2YW5jZT01ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTQ3ICAgICAgeD0yMzMgIHk9MCAgICB3aWR0aD0xMCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD00OCAgICAgIHg9NDc0ICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NDkgICAgICB4PTM4MSAgeT0xOCAgIHdpZHRoPTEwICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTUwICAgICAgeD0zOTEgIHk9MTggICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01MSAgICAgIHg9NDAzICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTIgICAgICB4PTQxNSAgeT0xOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTUzICAgICAgeD00MjcgIHk9MTggICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01NCAgICAgIHg9NDM4ICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTUgICAgICB4PTQ1MCAgeT0xOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTU2ICAgICAgeD00NjIgIHk9MTggICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD01NyAgICAgIHg9MjAgICB5PTQ5ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTQgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NTggICAgICB4PTI5MCAgeT00OSAgIHdpZHRoPTcgICAgaGVpZ2h0PTExICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT01ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTU5ICAgICAgeD01MDQgIHk9MzQgICB3aWR0aD03ICAgIGhlaWdodD0xMyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02MCAgICAgIHg9Mjk3ICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjEgICAgICB4PTQ1OCAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTkgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTYyICAgICAgeD0zMDggIHk9NDkgICB3aWR0aD0xMCAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02MyAgICAgIHg9NDkzICB5PTE4ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjQgICAgICB4PTgzICAgeT0wICAgIHdpZHRoPTE1ICAgaGVpZ2h0PTE3ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTY1ICAgICAgeD0yNiAgIHk9MTggICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02NiAgICAgIHg9NDAgICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NjcgICAgICB4PTUyICAgeT0xOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTY4ICAgICAgeD02NSAgIHk9MTggICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD02OSAgICAgIHg9NzkgICB5PTE4ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzAgICAgICB4PTkwICAgeT0xOCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTcxICAgICAgeD0xMDEgIHk9MTggICB3aWR0aD0xMyAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03MiAgICAgIHg9MTE0ICB5PTE4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzMgICAgICB4PTUwMiAgeT0wICAgIHdpZHRoPTYgICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTc0ICAgICAgeD0xMjcgIHk9MTggICB3aWR0aD05ICAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03NSAgICAgIHg9MTM2ICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0xICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzYgICAgICB4PTE0OCAgeT0xOCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTc3ICAgICAgeD0xNTkgIHk9MTggICB3aWR0aD0xNiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTQgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD03OCAgICAgIHg9MTc1ICB5PTE4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9NzkgICAgICB4PTE4OCAgeT0xOCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTgwICAgICAgeD0yMDIgIHk9MTggICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04MSAgICAgIHg9NjAgICB5PTAgICAgd2lkdGg9MTUgICBoZWlnaHQ9MTcgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODIgICAgICB4PTIxMyAgeT0xOCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTgzICAgICAgeD00NTIgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04NCAgICAgIHg9MjI1ICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODUgICAgICB4PTIzNyAgeT0xOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTg2ICAgICAgeD0yNTAgIHk9MTggICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD04NyAgICAgIHg9MjY0ICB5PTE4ICAgd2lkdGg9MTggICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTE2ICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9ODggICAgICB4PTI4MiAgeT0xOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTg5ICAgICAgeD0yOTUgIHk9MTggICB3aWR0aD0xMyAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05MCAgICAgIHg9MzA4ICB5PTE4ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTEgICAgICB4PTggICAgeT0wICAgIHdpZHRoPTggICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTkyICAgICAgeD0yNDMgIHk9MCAgICB3aWR0aD0xMCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTMgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05MyAgICAgIHg9MTYgICB5PTAgICAgd2lkdGg9OCAgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTQgICAgICB4PTQwNSAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTEwICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTk1ICAgICAgeD02NyAgIHk9NjMgICB3aWR0aD0xMCAgIGhlaWdodD02ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTExICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05NiAgICAgIHg9NDk4ICB5PTQ5ICAgd2lkdGg9NyAgICBoZWlnaHQ9NyAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9OTcgICAgICB4PTI0NSAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTExICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTk4ICAgICAgeD0zMjAgIHk9MTggICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD05OSAgICAgIHg9MjU2ICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTggICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAwICAgICB4PTMzMiAgeT0xOCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwMSAgICAgeD0yNjcgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDIgICAgIHg9MzQzICB5PTE4ICAgd2lkdGg9OSAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTAzICAgICB4PTQ2MyAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE0ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwNCAgICAgeD0zNTIgIHk9MTggICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDUgICAgIHg9NDc0ICB5PTM0ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTQgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0xICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTA2ICAgICB4PTIyNSAgeT0wICAgIHdpZHRoPTggICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEwNyAgICAgeD0zNjMgIHk9MTggICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMDggICAgIHg9Mzc0ICB5PTE4ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTA5ICAgICB4PTExNSAgeT00OSAgIHdpZHRoPTE1ICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT0xMyAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExMCAgICAgeD0xMzAgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD0xMiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTEgICAgIHg9Mjc4ICB5PTQ5ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTEyICAgICB4PTQ4MSAgeT0zNCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE0ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExMyAgICAgeD00OTMgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTQgICAgIHg9MTQxICB5PTQ5ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTE1ICAgICB4PTE1MSAgeT00OSAgIHdpZHRoPTEwICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT04ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExNiAgICAgeD0wICAgIHk9NDkgICB3aWR0aD05ICAgIGhlaWdodD0xNCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NyAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMTcgICAgIHg9MTYxICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTE4ICAgICB4PTE3MiAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTEyICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTExOSAgICAgeD0xODMgIHk9NDkgICB3aWR0aD0xNSAgIGhlaWdodD0xMiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjAgICAgIHg9MTk4ICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTIxICAgICB4PTkgICAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTE0ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MyAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEyMiAgICAgeD0yMDkgIHk9NDkgICB3aWR0aD0xMCAgIGhlaWdodD0xMiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjMgICAgIHg9MjQgICB5PTAgICAgd2lkdGg9OCAgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTI0ICAgICB4PTQwICAgeT0wICAgIHdpZHRoPTYgICAgaGVpZ2h0PTE4ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTEyNSAgICAgeD0zMiAgIHk9MCAgICB3aWR0aD04ICAgIGhlaWdodD0xOCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xMjYgICAgIHg9NDg3ICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9OCAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTI3ICAgICB4PTQxICAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2MCAgICAgeD0wICAgIHk9MCAgICB3aWR0aD0wICAgIGhlaWdodD0wICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjEgICAgIHg9NzYgICB5PTQ5ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0xICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTYyICAgICB4PTUyICAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2MyAgICAgeD02MyAgIHk9MzQgICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjQgICAgIHg9MzE4ICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTY1ICAgICB4PTc1ICAgeT0zNCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2NiAgICAgeD0xMTAgIHk9MCAgICB3aWR0aD02ICAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNjcgICAgIHg9MjUzICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTY4ICAgICB4PTE2ICAgeT02MyAgIHdpZHRoPTkgICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE2OSAgICAgeD04NyAgIHk9MzQgICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzAgICAgIHg9MzI5ICB5PTQ5ICAgd2lkdGg9OSAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTcxICAgICB4PTMzOCAgeT00OSAgIHdpZHRoPTEwICAgaGVpZ2h0PTExICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT04ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3MiAgICAgeD00NjkgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD05ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTUgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzMgICAgIHg9MjUgICB5PTYzICAgd2lkdGg9OSAgICBoZWlnaHQ9NyAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD01ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTc0ICAgICB4PTEwMSAgeT0zNCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3NSAgICAgeD0zNCAgIHk9NjMgICB3aWR0aD05ICAgIGhlaWdodD03ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzYgICAgIHg9MzQ4ICB5PTQ5ICAgd2lkdGg9OSAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTc3ICAgICB4PTMyICAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTE0ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE3OCAgICAgeD0zNTcgIHk9NDkgICB3aWR0aD04ICAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xNzkgICAgIHg9MzY1ICB5PTQ5ICAgd2lkdGg9OCAgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTgwICAgICB4PTQzICAgeT02MyAgIHdpZHRoPTggICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4MSAgICAgeD00MyAgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD0xNCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODIgICAgIHg9MjY0ICB5PTAgICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTgzICAgICB4PTUxICAgeT02MyAgIHdpZHRoPTggICAgaGVpZ2h0PTcgICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NSAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4NCAgICAgeD01OSAgIHk9NjMgICB3aWR0aD04ICAgIGhlaWdodD03ICAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEwICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODUgICAgIHg9NDI1ICB5PTQ5ICAgd2lkdGg9OCAgICBoZWlnaHQ9MTAgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTg2ICAgICB4PTQzMyAgeT00OSAgIHdpZHRoPTkgICAgaGVpZ2h0PTEwICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT03ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE4NyAgICAgeD0zNzMgIHk9NDkgICB3aWR0aD0xMCAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTQgICAgeGFkdmFuY2U9OCAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xODggICAgIHg9MTE1ICB5PTM0ICAgd2lkdGg9MTQgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTg5ICAgICB4PTEyOSAgeT0zNCAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5MCAgICAgeD0xNDMgIHk9MzQgICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTEgICAgIHg9ODMgICB5PTQ5ICAgd2lkdGg9MTAgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD00ICAgIHhhZHZhbmNlPTcgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTkyICAgICB4PTI3NyAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5MyAgICAgeD0yOTEgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTQgICAgIHg9MzA1ICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTk1ICAgICB4PTMxOSAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5NiAgICAgeD0xMTYgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0xOTcgICAgIHg9NDYgICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTggICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMyAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MTk4ICAgICB4PTE1NyAgeT0zNCAgIHdpZHRoPTE3ICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xNCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTE5OSAgICAgeD0xMzAgIHk9MCAgICB3aWR0aD0xMyAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDAgICAgIHg9MzMzICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjAxICAgICB4PTM0NCAgeT0wICAgIHdpZHRoPTExICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwMiAgICAgeD0zNTUgIHk9MCAgICB3aWR0aD0xMSAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDMgICAgIHg9MTQzICB5PTAgICAgd2lkdGg9MTEgICBoZWlnaHQ9MTcgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMiAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjA0ICAgICB4PTM2NiAgeT0wICAgIHdpZHRoPTkgICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwNSAgICAgeD0zNzUgIHk9MCAgICB3aWR0aD04ICAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDYgICAgIHg9MzgzICB5PTAgICAgd2lkdGg9MTAgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0zICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjA3ICAgICB4PTE1NCAgeT0wICAgIHdpZHRoPTEwICAgaGVpZ2h0PTE3ICAgeG9mZnNldD0tMyAgIHlvZmZzZXQ9LTIgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIwOCAgICAgeD0xNzQgIHk9MzQgICB3aWR0aD0xNCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMDkgICAgIHg9MzkzICB5PTAgICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjEwICAgICB4PTQwNiAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxMSAgICAgeD00MjAgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTIgICAgIHg9NDM0ICB5PTAgICAgd2lkdGg9MTQgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTEyICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjEzICAgICB4PTQ0OCAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxNCAgICAgeD0xNjQgIHk9MCAgICB3aWR0aD0xNCAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTIgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTUgICAgIHg9MzgzICB5PTQ5ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTEgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTEwICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjE2ICAgICB4PTQ2MiAgeT0wICAgIHdpZHRoPTE0ICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMiAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIxNyAgICAgeD00NzYgIHk9MCAgICB3aWR0aD0xMyAgIGhlaWdodD0xNiAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0xICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMTggICAgIHg9NDg5ICB5PTAgICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjE5ICAgICB4PTAgICAgeT0xOCAgIHdpZHRoPTEzICAgaGVpZ2h0PTE2ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9LTEgICB4YWR2YW5jZT0xMSAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyMCAgICAgeD0xNzggIHk9MCAgICB3aWR0aD0xMyAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PS0yICAgeGFkdmFuY2U9MTEgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjEgICAgIHg9MTMgICB5PTE4ICAgd2lkdGg9MTMgICBoZWlnaHQ9MTYgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0tMSAgIHhhZHZhbmNlPTExICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjIyICAgICB4PTE4OCAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMSAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT0xMCAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyMyAgICAgeD0xOTkgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTEgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjQgICAgIHg9MjEwICB5PTM0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjI1ICAgICB4PTIyMSAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyNiAgICAgeD0yMzIgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMjcgICAgIHg9MjQzICB5PTM0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjI4ICAgICB4PTI1NCAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIyOSAgICAgeD01NCAgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD0xNCAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTEgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzAgICAgIHg9MjMwICB5PTQ5ICAgd2lkdGg9MTUgICBoZWlnaHQ9MTIgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTEzICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjMxICAgICB4PTkzICAgeT00OSAgIHdpZHRoPTEwICAgaGVpZ2h0PTEzICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9NCAgICB4YWR2YW5jZT04ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzMiAgICAgeD0yNjUgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzMgICAgIHg9Mjc2ICB5PTM0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjM0ICAgICB4PTI4NyAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzNSAgICAgeD0yOTggIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzYgICAgIHg9NTAzICB5PTE4ICAgd2lkdGg9NyAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjM3ICAgICB4PTMwOSAgeT0zNCAgIHdpZHRoPTkgICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT02ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTIzOCAgICAgeD0zMTggIHk9MzQgICB3aWR0aD0xMCAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTMgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9NiAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yMzkgICAgIHg9MzI4ICB5PTM0ICAgd2lkdGg9OSAgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTYgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQwICAgICB4PTY1ICAgeT00OSAgIHdpZHRoPTExICAgaGVpZ2h0PTE0ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MSAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0MSAgICAgeD0zMzcgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDIgICAgIHg9MzQ4ICB5PTM0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQzICAgICB4PTM2MCAgeT0zNCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0NCAgICAgeD0zNzIgIHk9MzQgICB3aWR0aD0xMiAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDUgICAgIHg9Mzg0ICB5PTM0ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQ2ICAgICB4PTM5NiAgeT0zNCAgIHdpZHRoPTEyICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI0NyAgICAgeD0zOTQgIHk9NDkgICB3aWR0aD0xMSAgIGhlaWdodD0xMSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTMgICAgeGFkdmFuY2U9MTAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNDggICAgIHg9MTAzICB5PTQ5ICAgd2lkdGg9MTIgICBoZWlnaHQ9MTMgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0zICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjQ5ICAgICB4PTQwOCAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI1MCAgICAgeD00MTkgIHk9MzQgICB3aWR0aD0xMSAgIGhlaWdodD0xNSAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNTEgICAgIHg9NDMwICB5PTM0ICAgd2lkdGg9MTEgICBoZWlnaHQ9MTUgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjUyICAgICB4PTQ0MSAgeT0zNCAgIHdpZHRoPTExICAgaGVpZ2h0PTE1ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQpjaGFyIGlkPTI1MyAgICAgeD0xOTEgIHk9MCAgICB3aWR0aD0xMSAgIGhlaWdodD0xNyAgIHhvZmZzZXQ9LTIgICB5b2Zmc2V0PTAgICAgeGFkdmFuY2U9OSAgICBwYWdlPTAgICAgY2hubD0wIA0KY2hhciBpZD0yNTQgICAgIHg9MjAyICB5PTAgICAgd2lkdGg9MTIgICBoZWlnaHQ9MTcgICB4b2Zmc2V0PS0yICAgeW9mZnNldD0wICAgIHhhZHZhbmNlPTkgICAgcGFnZT0wICAgIGNobmw9MCANCmNoYXIgaWQ9MjU1ICAgICB4PTIxNCAgeT0wICAgIHdpZHRoPTExICAgaGVpZ2h0PTE3ICAgeG9mZnNldD0tMiAgIHlvZmZzZXQ9MCAgICB4YWR2YW5jZT05ICAgIHBhZ2U9MCAgICBjaG5sPTAgDQprZXJuaW5ncyBjb3VudD0xMTcwDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM0IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMiBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD02NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE5OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTE3OSBhbW91bnQ9MQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9MTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI1MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk5IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMjIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yMzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDIgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTA5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODUgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDUgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0yMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzMgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEzIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1MyBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTU5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTE3OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTU4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0OCBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjI3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9ODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1MyBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3MCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD01OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMiBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTgxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMwIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjExIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyNyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQ5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9ODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD01OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTY5IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE4MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjI4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDMgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD02NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIyOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD05NyBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDggc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDUgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OSBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTYgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDIgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIyNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU0IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTY0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjEyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNCBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDUgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDMgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzMgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc0IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTc5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjE0IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjI0IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTY5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MjE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9ODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MyBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNSBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTE1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjE2IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTAzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjI5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTIgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjI1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTAzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjUxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjI1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjUwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzMgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxNCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMjkgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMCBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI1MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE3NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0OCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1MyBzZWNvbmQ9MzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD00MiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MjU0IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD03NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5OSBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzMgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEyIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAyIHNlY29uZD0xNzggYW1vdW50PTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTIgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE3OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIzMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjUxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMDggc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9OTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM0IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE3OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD03OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0yMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0zNCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yMzIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OSBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTU4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTI0NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEwIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xNzggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMjYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkzIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ1IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4MyBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTQgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDggc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTY5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTAwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjQ4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD03MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM1IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjE2IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD02NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTEyIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIwOCBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yMzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5OSBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjI2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD00NCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NCBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NCBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIxNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD01OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0zOSBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI1MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMjcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMzIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTQgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTEwOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk1IHNlY29uZD0xNzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIyNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0NCBzZWNvbmQ9NDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9MTIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIyNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTEyMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD05NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU1IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMiBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzggc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEwOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc5IHNlY29uZD0xOTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMzIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE3OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9OTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODUgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTI0MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIxMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjEwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDggc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDIgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MjU1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTIyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzAgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjQgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTY3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTExMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjEwIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTIgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE3OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE4MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTEwMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ1IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTY5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTgxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzMiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTExMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ2IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTIxMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yMzUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MiBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjI0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTE0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjA4IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjI4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTgxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDMgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIyNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTIgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xMDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODEgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE3MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc4IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI1MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjM0IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY0IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI0OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9MTg1IGFtb3VudD0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yNDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NSBzZWNvbmQ9MTkzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE2OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NSBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTk0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTE3MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD04MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIyOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTkgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyOCBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE3NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI1MCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU0IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTQ2IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ1IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMyBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjQwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ0IHNlY29uZD04NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQyIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yMjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMjAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MjE2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTExMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD0xODUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD02NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MzkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0yMjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIxMyBzZWNvbmQ9ODQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD05OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9ODkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3MCBzZWNvbmQ9MjMxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD04NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3NiBhbW91bnQ9LTINCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTI0MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODEgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTI1MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTE3OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI1NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQzIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE4NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0yMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMCBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MTE4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjMyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9OTkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI1NSBzZWNvbmQ9MTk4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTE3NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTExNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD0yNDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yMzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OSBzZWNvbmQ9MTk1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTE4NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTY3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTI0NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIzMyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTAzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTEgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTEwMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIyNSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTEyMCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk0IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTkyIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNDIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg2IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xMDEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NjUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NCBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM5IHNlY29uZD0yNDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xODcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MiBzZWNvbmQ9MjUzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MjQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MTExIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzEgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTk5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzIgc2Vjb25kPTQyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNjkgc2Vjb25kPTg0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzMgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTMgc2Vjb25kPTE5OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9NDQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzNCBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0yMjEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MTEzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTAxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTUgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9NDcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjM1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMTMgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTM4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTcgc2Vjb25kPTE3OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0xMTEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xODMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3NiBzZWNvbmQ9MjMzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjI1IGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTQ3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTg5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzUgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ4IHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0xOTQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIyMSBzZWNvbmQ9MTEyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTM0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTIzNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjQgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI1MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTc0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTI0OCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTExNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIyNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMwIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg1IHNlY29uZD0xOTcgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMiBzZWNvbmQ9MTc2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTkyIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTQ2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xODYgc2Vjb25kPTE5MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjMyIHNlY29uZD0zNCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTc2IHNlY29uZD0yNDYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5OSBzZWNvbmQ9MTgzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTcxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTMgc2Vjb25kPTE4NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMTMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9OTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTE5NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjExIHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjU0IHNlY29uZD0xODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjMwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzAgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIyNiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk3IHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0zOCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD00NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjUzIHNlY29uZD00NyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xOTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NiBzZWNvbmQ9ODYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMyBzZWNvbmQ9MTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDYgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xOTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD04NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTE3MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjQ1IHNlY29uZD05MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9Mzkgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTcwIHNlY29uZD0xNzMgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yNTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD00NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTE5NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTY5IHNlY29uZD04OSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTczIHNlY29uZD0zOSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1MSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0yMjYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD0xMTggYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD03NCBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMzQgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjQzIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNTUgc2Vjb25kPTE5NSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MjIxIHNlY29uZD0xNzEgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE4NiBzZWNvbmQ9MjQwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTE5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9NDUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xMDkgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTIzMCBzZWNvbmQ9MzQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE3OCBzZWNvbmQ9MTk2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD05MiBzZWNvbmQ9MTg1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzkgc2Vjb25kPTE5MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIzMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTg3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTczIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NjQgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5MyBzZWNvbmQ9MTc4IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ0IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjMwIGFtb3VudD0tMg0Ka2VybmluZyBmaXJzdD0xOTYgc2Vjb25kPTIyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD0xNzAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMDAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD0xODYgYW1vdW50PS0yDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNTIgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTE5NSBzZWNvbmQ9MTcwIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTE4MyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yMjEgc2Vjb25kPTExNyBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTgzIHNlY29uZD0xNzYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTkyIHNlY29uZD00MiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTEyMSBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTQgc2Vjb25kPTg2IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD04MSBzZWNvbmQ9MjIxIGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MTk3IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xOTIgc2Vjb25kPTM5IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTY1IGFtb3VudD0tMQ0Ka2VybmluZyBmaXJzdD0yNDQgc2Vjb25kPTE3NiBhbW91bnQ9LTENCmtlcm5pbmcgZmlyc3Q9MTk2IHNlY29uZD0yNTUgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0xOTYgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMTAgYW1vdW50PS0xDQprZXJuaW5nIGZpcnN0PTI0MyBzZWNvbmQ9OTIgYW1vdW50PS0xDQo"},{ name : "lato17_fnt", data : ""},{ name : "uigen_txt", data : ""},{ name : "Unnamed_fnt", data : "PD94bWwgdmVyc2lvbj0iMS4wIj8+Cjxmb250PgogIDxpbmZvIGZhY2U9IlBpeGVsTXBsdXMxMCIgc2l6ZT0iMTEiIGJvbGQ9IjAiIGl0YWxpYz0iMCIgY2hhcnNldD0iIiB1bmljb2RlPSIxIiBzdHJldGNoSD0iMTAwIiBzbW9vdGg9IjAiIGFhPSIxIiBwYWRkaW5nPSIwLDAsMCwwIiBzcGFjaW5nPSIxLDEiIG91dGxpbmU9IjAiLz4KICA8Y29tbW9uIGxpbmVIZWlnaHQ9IjExIiBiYXNlPSI5IiBzY2FsZVc9IjI1NiIgc2NhbGVIPSIyNTYiIHBhZ2VzPSIxIiBwYWNrZWQ9IjAiIGFscGhhQ2hubD0iMCIgcmVkQ2hubD0iNCIgZ3JlZW5DaG5sPSI0IiBibHVlQ2hubD0iNCIvPgogIDxwYWdlcz4KICAgIDxwYWdlIGlkPSIwIiBmaWxlPSJVbm5hbWVkXzAucG5nIiAvPgogIDwvcGFnZXM+CiAgPGNoYXJzIGNvdW50PSIxMjciPgogICAgPGNoYXIgaWQ9IjEiIHg9IjI1IiB5PSIxOSIgd2lkdGg9IjQiIGhlaWdodD0iMyIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjIiIHg9IjE2IiB5PSIwIiB3aWR0aD0iNSIgaGVpZ2h0PSIxMCIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjMiIHg9IjI2IiB5PSIwIiB3aWR0aD0iNSIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNCIgeD0iMzgiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjkiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjEiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1IiB4PSI0MyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iOSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYiIHg9IjQ4IiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNyIgeD0iMyIgeT0iMjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjQiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjEiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4IiB4PSIxMjAiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5IiB4PSI1MyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iOSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwIiB4PSIzMiIgeT0iMCIgd2lkdGg9IjUiIGhlaWdodD0iOSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjExIiB4PSIxNTciIHk9IjgiIHdpZHRoPSIzIiBoZWlnaHQ9IjYiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMiIgeD0iMTYxIiB5PSI4IiB3aWR0aD0iMyIgaGVpZ2h0PSI2IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI1IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTMiIHg9IjE2OSIgeT0iOCIgd2lkdGg9IjMiIGhlaWdodD0iNiIgeG9mZnNldD0iMiIgeW9mZnNldD0iNSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjE0IiB4PSIxNjUiIHk9IjgiIHdpZHRoPSIzIiBoZWlnaHQ9IjYiIHhvZmZzZXQ9IjIiIHlvZmZzZXQ9IjAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxNSIgeD0iMCIgeT0iMCIgd2lkdGg9IjUiIGhlaWdodD0iMTEiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxNiIgeD0iNTUiIHk9IjE4IiB3aWR0aD0iNSIgaGVpZ2h0PSIxIiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTciIHg9IjY3IiB5PSIxOCIgd2lkdGg9IjUiIGhlaWdodD0iMSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjE4IiB4PSI2MSIgeT0iMTgiIHdpZHRoPSI1IiBoZWlnaHQ9IjEiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjUiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxOSIgeD0iNDkiIHk9IjE4IiB3aWR0aD0iNSIgaGVpZ2h0PSIxIiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMjAiIHg9IjQzIiB5PSIxOCIgd2lkdGg9IjUiIGhlaWdodD0iMSIgeG9mZnNldD0iMCIgeW9mZnNldD0iOSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjIxIiB4PSI2IiB5PSIwIiB3aWR0aD0iMyIgaGVpZ2h0PSIxMSIgeG9mZnNldD0iMiIgeW9mZnNldD0iMCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjIyIiB4PSIxMCIgeT0iMCIgd2lkdGg9IjMiIGhlaWdodD0iMTEiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIyMyIgeD0iMTQ1IiB5PSI4IiB3aWR0aD0iNSIgaGVpZ2h0PSI2IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIwIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMjQiIHg9IjE1MSIgeT0iOCIgd2lkdGg9IjUiIGhlaWdodD0iNiIgeG9mZnNldD0iMCIgeW9mZnNldD0iNSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjI1IiB4PSIxNCIgeT0iMCIgd2lkdGg9IjEiIGhlaWdodD0iMTEiIHhvZmZzZXQ9IjIiIHlvZmZzZXQ9IjAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIyNiIgeD0iMTQyIiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMjciIHg9IjE0NyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjI4IiB4PSIyNDAiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjUiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIyOSIgeD0iMTU3IiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzAiIHg9IjE2MiIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjMxIiB4PSI5MSIgeT0iMTgiIHdpZHRoPSIxIiBoZWlnaHQ9IjEiIHhvZmZzZXQ9IjIiIHlvZmZzZXQ9IjUiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIzMiIgeD0iODMiIHk9IjE4IiB3aWR0aD0iMyIgaGVpZ2h0PSIxIiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMTAiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIzMyIgeD0iMTQzIiB5PSI4IiB3aWR0aD0iMSIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIyIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzQiIHg9IjgiIHk9IjIwIiB3aWR0aD0iMyIgaGVpZ2h0PSI0IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzUiIHg9IjE3NyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjM2IiB4PSI5NiIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iOCIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjM3IiB4PSIxODIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIzOCIgeD0iMTg3IiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzkiIHg9IjE1IiB5PSIyMCIgd2lkdGg9IjEiIGhlaWdodD0iNCIgeG9mZnNldD0iMiIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQwIiB4PSI4NSIgeT0iMCIgd2lkdGg9IjMiIGhlaWdodD0iOSIgeG9mZnNldD0iMSIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQxIiB4PSI4MSIgeT0iMCIgd2lkdGg9IjMiIGhlaWdodD0iOSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQyIiB4PSIyNDUiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjUiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0MyIgeD0iMTkwIiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIzIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNDQiIHg9IjQwIiB5PSIxOCIgd2lkdGg9IjIiIGhlaWdodD0iMiIgeG9mZnNldD0iMSIgeW9mZnNldD0iOCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQ1IiB4PSI3OCIgeT0iMTgiIHdpZHRoPSI0IiBoZWlnaHQ9IjEiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjUiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0NiIgeD0iOTMiIHk9IjE4IiB3aWR0aD0iMSIgaGVpZ2h0PSIxIiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSI4IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNDciIHg9IjEwMSIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iOCIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQ4IiB4PSIyMjIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0OSIgeD0iMjUyIiB5PSIwIiB3aWR0aD0iMyIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNTAiIHg9IjIzMiIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjUxIiB4PSIyMzciIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1MiIgeD0iMjQyIiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNTMiIHg9IjI0NyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU0IiB4PSIwIiB5PSIxMiIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU1IiB4PSI1IiB5PSIxMiIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU2IiB4PSIxMCIgeT0iMTIiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1NyIgeD0iMTUiIHk9IjEyIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNTgiIHg9IjE3IiB5PSIyMCIgd2lkdGg9IjEiIGhlaWdodD0iNCIgeG9mZnNldD0iMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU5IiB4PSIwIiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iNSIgeG9mZnNldD0iMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYwIiB4PSIzMCIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI2MSIgeD0iMzAiIHk9IjE4IiB3aWR0aD0iNCIgaGVpZ2h0PSIzIiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjIiIHg9IjE5NyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYzIiB4PSIyMDIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI2NCIgeD0iMjI3IiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjUiIHg9IjE1MiIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjY2IiB4PSIyNSIgeT0iMTEiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI2NyIgeD0iMjAiIHk9IjExIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjgiIHg9IjIxNyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjY5IiB4PSIyMTIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3MCIgeD0iMjA3IiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNzEiIHg9IjE5MiIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjcyIiB4PSIxNzIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3MyIgeD0iMTM5IiB5PSI4IiB3aWR0aD0iMyIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNzQiIHg9IjE2NyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijc1IiB4PSIxMzciIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3NiIgeD0iMTMyIiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNzciIHg9IjEyNyIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijc4IiB4PSIxMjIiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3OSIgeD0iMTI1IiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODAiIHg9Ijk1IiB5PSI5IiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODEiIHg9IjYzIiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODIiIHg9IjM1IiB5PSIxMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjgzIiB4PSI0MCIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4NCIgeD0iMTEwIiB5PSIwIiB3aWR0aD0iNSIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODUiIHg9IjQ1IiB5PSIxMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijg2IiB4PSI1MCIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4NyIgeD0iMTE2IiB5PSIwIiB3aWR0aD0iNSIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODgiIHg9IjU1IiB5PSIxMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijg5IiB4PSIxMzAiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5MCIgeD0iNjAiIHk9IjEwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTEiIHg9Ijc3IiB5PSIwIiB3aWR0aD0iMyIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTIiIHg9IjkxIiB5PSIwIiB3aWR0aD0iNCIgaGVpZ2h0PSI4IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTMiIHg9IjczIiB5PSIwIiB3aWR0aD0iMyIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTQiIHg9IjE5IiB5PSIyMCIgd2lkdGg9IjUiIGhlaWdodD0iMyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk1IiB4PSI3MyIgeT0iMTgiIHdpZHRoPSI0IiBoZWlnaHQ9IjEiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjkiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5NiIgeD0iMTIiIHk9IjIwIiB3aWR0aD0iMiIgaGVpZ2h0PSI0IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTciIHg9IjIyMCIgeT0iOCIgd2lkdGg9IjQiIGhlaWdodD0iNSIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk4IiB4PSI3MCIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5OSIgeD0iMjA1IiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTAwIiB4PSI3NSIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDEiIHg9IjIzMCIgeT0iOCIgd2lkdGg9IjQiIGhlaWdodD0iNSIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwMiIgeD0iODAiIHk9IjEwIiB3aWR0aD0iNCIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTAzIiB4PSI4NSIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDQiIHg9IjkwIiB5PSIxMCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwNSIgeD0iMTA2IiB5PSIwIiB3aWR0aD0iMyIgaGVpZ2h0PSI4IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTA2IiB4PSIyMiIgeT0iMCIgd2lkdGg9IjMiIGhlaWdodD0iMTAiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjEiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDciIHg9IjEwMCIgeT0iOSIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwOCIgeD0iMTM1IiB5PSI4IiB3aWR0aD0iMyIgaGVpZ2h0PSI3IiB4b2Zmc2V0PSIxIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTA5IiB4PSIxNzMiIHk9IjgiIHdpZHRoPSI1IiBoZWlnaHQ9IjUiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTAiIHg9IjI1MCIgeT0iOCIgd2lkdGg9IjQiIGhlaWdodD0iNSIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjExMSIgeD0iMTg1IiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTEyIiB4PSI2NSIgeT0iMTAiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTMiIHg9IjEwNSIgeT0iOSIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjExNCIgeD0iMTk1IiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE1IiB4PSIyMDAiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjUiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTYiIHg9IjExMCIgeT0iOCIgd2lkdGg9IjQiIGhlaWdodD0iNyIgeG9mZnNldD0iMCIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjExNyIgeD0iMjEwIiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE4IiB4PSIyMTUiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjUiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTkiIHg9IjE3OSIgeT0iOCIgd2lkdGg9IjUiIGhlaWdodD0iNSIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyMCIgeD0iMjI1IiB5PSI4IiB3aWR0aD0iNCIgaGVpZ2h0PSI1IiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTIxIiB4PSIxMTUiIHk9IjgiIHdpZHRoPSI0IiBoZWlnaHQ9IjciIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMjIiIHg9IjIzNSIgeT0iOCIgd2lkdGg9IjQiIGhlaWdodD0iNSIgeG9mZnNldD0iMCIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyMyIgeD0iNjgiIHk9IjAiIHdpZHRoPSI0IiBoZWlnaHQ9IjkiIHhvZmZzZXQ9IjAiIHlvZmZzZXQ9IjEiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMjQiIHg9Ijg5IiB5PSIwIiB3aWR0aD0iMSIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSIyIiB5b2Zmc2V0PSIxIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTI1IiB4PSI1OCIgeT0iMCIgd2lkdGg9IjQiIGhlaWdodD0iOSIgeG9mZnNldD0iMCIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyNiIgeD0iMzUiIHk9IjE4IiB3aWR0aD0iNCIgaGVpZ2h0PSIyIiB4b2Zmc2V0PSIwIiB5b2Zmc2V0PSIyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTI3IiB4PSI4NyIgeT0iMTgiIHdpZHRoPSIzIiBoZWlnaHQ9IjEiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSIxMCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogIDwvY2hhcnM+CjwvZm9udD4K"},{ name : "font14_fnt", data : ""},{ name : "font16_fnt", data : "PD94bWwgdmVyc2lvbj0iMS4wIj8+Cjxmb250PgogIDxpbmZvIGZhY2U9Ik5vdG8gU2FucyBKUCIgc2l6ZT0iMjIiIGJvbGQ9IjEiIGl0YWxpYz0iMCIgY2hhcnNldD0iIiB1bmljb2RlPSIxIiBzdHJldGNoSD0iMTAwIiBzbW9vdGg9IjEiIGFhPSI0IiBwYWRkaW5nPSIwLDAsMCwwIiBzcGFjaW5nPSIxLDEiIG91dGxpbmU9IjIiLz4KICA8Y29tbW9uIGxpbmVIZWlnaHQ9IjIyIiBiYXNlPSIxOCIgc2NhbGVXPSIyNTYiIHNjYWxlSD0iMjU2IiBwYWdlcz0iMSIgcGFja2VkPSIwIiBhbHBoYUNobmw9IjAiIHJlZENobmw9IjQiIGdyZWVuQ2hubD0iNCIgYmx1ZUNobmw9IjQiLz4KICA8cGFnZXM+CiAgICA8cGFnZSBpZD0iMCIgZmlsZT0iZm9udDE2XzAucG5nIiAvPgogIDwvcGFnZXM+CiAgPGNoYXJzIGNvdW50PSI5NSI+CiAgICA8Y2hhciBpZD0iMzIiIHg9IjI0OSIgeT0iMCIgd2lkdGg9IjUiIGhlaWdodD0iNSIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjE5IiB4YWR2YW5jZT0iMyIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzMiIHg9IjI0MSIgeT0iMCIgd2lkdGg9IjciIGhlaWdodD0iMTciIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSIzIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMzQiIHg9IjEwMyIgeT0iNjkiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxMCIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI4IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIzNSIgeD0iMTc2IiB5PSIzNSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjM2IiB4PSIyNSIgeT0iMCIgd2lkdGg9IjEyIiBoZWlnaHQ9IjIwIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjM3IiB4PSI4IiB5PSIyMiIgd2lkdGg9IjE4IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjE0IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIzOCIgeD0iNDYiIHk9IjIxIiB3aWR0aD0iMTUiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjM5IiB4PSIxMTUiIHk9IjY5IiB3aWR0aD0iNyIgaGVpZ2h0PSIxMCIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0MCIgeD0iMTYiIHk9IjAiIHdpZHRoPSI4IiBoZWlnaHQ9IjIxIiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQxIiB4PSI3IiB5PSIwIiB3aWR0aD0iOCIgaGVpZ2h0PSIyMSIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0MiIgeD0iNjkiIHk9IjcyIiB3aWR0aD0iMTEiIGhlaWdodD0iMTEiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSIzIiB4YWR2YW5jZT0iNyIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNDMiIHg9IjE3OSIgeT0iNTIiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjUiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0NCIgeD0iODEiIHk9IjcyIiB3aWR0aD0iOCIgaGVpZ2h0PSIxMSIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjEyIiB4YWR2YW5jZT0iNSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNDUiIHg9IjE1NCIgeT0iNjgiIHdpZHRoPSI5IiBoZWlnaHQ9IjciIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSIxMCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQ2IiB4PSIxNDYiIHk9IjY4IiB3aWR0aD0iNyIgaGVpZ2h0PSI4IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMTIiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0NyIgeD0iMzgiIHk9IjAiIHdpZHRoPSIxMCIgaGVpZ2h0PSIyMCIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI2IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI0OCIgeD0iMTYzIiB5PSIzNSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjQ5IiB4PSIyNSIgeT0iNTYiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1MCIgeD0iMTUwIiB5PSIzNyIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjUxIiB4PSIxMzciIHk9IjM3IiB3aWR0aD0iMTIiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNTIiIHg9IjcwIiB5PSIzOCIgd2lkdGg9IjEzIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjUzIiB4PSIxMjQiIHk9IjM3IiB3aWR0aD0iMTIiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNTQiIHg9IjIyOCIgeT0iMzUiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1NSIgeD0iMTExIiB5PSIzOCIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU2IiB4PSI5OCIgeT0iMzgiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI1NyIgeD0iMjQxIiB5PSIzNSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU4IiB4PSI0OCIgeT0iNzIiIHdpZHRoPSI3IiBoZWlnaHQ9IjEzIiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjU5IiB4PSI3MiIgeT0iNTUiIHdpZHRoPSI4IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYwIiB4PSIyMTgiIHk9IjUyIiB3aWR0aD0iMTIiIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI1IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjEiIHg9IjkwIiB5PSI2OSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEwIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYyIiB4PSIwIiB5PSI3NSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEzIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNSIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjYzIiB4PSIyMDkiIHk9IjAiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxNyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI3IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI2NCIgeD0iMTA4IiB5PSIwIiB3aWR0aD0iMTgiIGhlaWdodD0iMTkiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjY1IiB4PSIxMzciIHk9IjIwIiB3aWR0aD0iMTQiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjYiIHg9IjE4MSIgeT0iMTgiIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSIxMCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjciIHg9IjE5NSIgeT0iMTgiIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSIxMCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNjgiIHg9IjAiIHk9IjQxIiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjY5IiB4PSIyMDIiIHk9IjM1IiB3aWR0aD0iMTIiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iNzAiIHg9IjEzIiB5PSI1OCIgd2lkdGg9IjExIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjcxIiB4PSIyMDkiIHk9IjE4IiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjcyIiB4PSIyMjMiIHk9IjE4IiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjczIiB4PSI4MSIgeT0iNTUiIHdpZHRoPSI3IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijc0IiB4PSIzNyIgeT0iNTUiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI4IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3NSIgeD0iOTIiIHk9IjIxIiB3aWR0aD0iMTQiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTAiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijc2IiB4PSI0OSIgeT0iNTUiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI4IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3NyIgeD0iMTA3IiB5PSIyMSIgd2lkdGg9IjE0IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjEzIiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3OCIgeD0iMTY3IiB5PSIxOCIgd2lkdGg9IjEzIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjExIiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI3OSIgeD0iMTIyIiB5PSIyMCIgd2lkdGg9IjE0IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjExIiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4MCIgeD0iMTg5IiB5PSIzNSIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjEwIiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4MSIgeD0iMTI3IiB5PSIwIiB3aWR0aD0iMTUiIGhlaWdodD0iMTkiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjgyIiB4PSI4NCIgeT0iMzgiIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSIxMCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iODMiIHg9IjQyIiB5PSIzOCIgd2lkdGg9IjEzIiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijg0IiB4PSIyOCIgeT0iMzgiIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4NSIgeD0iMTQiIHk9IjM5IiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTEiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijg2IiB4PSI3NyIgeT0iMjEiIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4NyIgeD0iMjciIHk9IjIxIiB3aWR0aD0iMTgiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iMTQiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijg4IiB4PSI2MiIgeT0iMjEiIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI4OSIgeD0iMTUyIiB5PSIxOCIgd2lkdGg9IjE0IiBoZWlnaHQ9IjE2IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNCIgeGFkdmFuY2U9IjgiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjkwIiB4PSIyMzciIHk9IjE4IiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTEiIHg9Ijk5IiB5PSIwIiB3aWR0aD0iOCIgaGVpZ2h0PSIyMCIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5MiIgeD0iNDkiIHk9IjAiIHdpZHRoPSIxMCIgaGVpZ2h0PSIyMCIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI2IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5MyIgeD0iOTAiIHk9IjAiIHdpZHRoPSI4IiBoZWlnaHQ9IjIwIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk0IiB4PSI1NiIgeT0iNzIiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMSIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjQiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSI5NSIgeD0iMTY0IiB5PSI2OCIgd2lkdGg9IjEzIiBoZWlnaHQ9IjYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSIxNiIgeGFkdmFuY2U9IjgiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk2IiB4PSIxMjMiIHk9IjY5IiB3aWR0aD0iOSIgaGVpZ2h0PSI5IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMSIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk3IiB4PSIxNjYiIHk9IjUyIiB3aWR0aD0iMTIiIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iOTgiIHg9IjE4MyIgeT0iMCIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE3IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9Ijk5IiB4PSIyNDQiIHk9IjUyIiB3aWR0aD0iMTEiIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTAwIiB4PSIxNzAiIHk9IjAiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxNyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDEiIHg9IjIzMSIgeT0iNTIiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI4IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDIiIHg9IjIyMSIgeT0iMCIgd2lkdGg9IjEwIiBoZWlnaHQ9IjE3IiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwMyIgeD0iMTQzIiB5PSIwIiB3aWR0aD0iMTMiIGhlaWdodD0iMTciIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTA0IiB4PSIxNTciIHk9IjAiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxNyIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDUiIHg9IjAiIHk9IjIzIiB3aWR0aD0iNyIgaGVpZ2h0PSIxNyIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI0IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDYiIHg9IjYwIiB5PSIwIiB3aWR0aD0iOSIgaGVpZ2h0PSIyMCIgeG9mZnNldD0iLTMiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI0IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDciIHg9IjE5NiIgeT0iMCIgd2lkdGg9IjEyIiBoZWlnaHQ9IjE3IiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjkiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEwOCIgeD0iMjMyIiB5PSIwIiB3aWR0aD0iOCIgaGVpZ2h0PSIxNyIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI0IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMDkiIHg9Ijg5IiB5PSI1NSIgd2lkdGg9IjE3IiBoZWlnaHQ9IjEzIiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjE0IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTAiIHg9IjE5MiIgeT0iNTIiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTEiIHg9IjIwNSIgeT0iNTIiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTIiIHg9IjIxNSIgeT0iMzUiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxNiIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI5IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTMiIHg9IjAiIHk9IjU4IiB3aWR0aD0iMTIiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE0IiB4PSIzNyIgeT0iNzIiIHdpZHRoPSIxMCIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTEiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI2IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMTUiIHg9IjEzIiB5PSI3NSIgd2lkdGg9IjExIiBoZWlnaHQ9IjEzIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjciIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjExNiIgeD0iNjEiIHk9IjU1IiB3aWR0aD0iMTAiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI0IiB4YWR2YW5jZT0iNiIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE3IiB4PSIxNTMiIHk9IjU0IiB3aWR0aD0iMTIiIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0xIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE4IiB4PSIxMjUiIHk9IjU0IiB3aWR0aD0iMTMiIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTE5IiB4PSIxMDciIHk9IjU1IiB3aWR0aD0iMTciIGhlaWdodD0iMTMiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iMTMiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyMCIgeD0iMTM5IiB5PSI1NCIgd2lkdGg9IjEzIiBoZWlnaHQ9IjEzIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iNyIgeGFkdmFuY2U9IjgiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyMSIgeD0iNTYiIHk9IjM4IiB3aWR0aD0iMTMiIGhlaWdodD0iMTYiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI3IiB4YWR2YW5jZT0iOCIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgICA8Y2hhciBpZD0iMTIyIiB4PSIyNSIgeT0iNzMiIHdpZHRoPSIxMSIgaGVpZ2h0PSIxMyIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjciIHhhZHZhbmNlPSI3IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMjMiIHg9IjcwIiB5PSIwIiB3aWR0aD0iOSIgaGVpZ2h0PSIyMCIgeG9mZnNldD0iLTIiIHlvZmZzZXQ9IjMiIHhhZHZhbmNlPSI1IiBwYWdlPSIwIiBjaG5sPSIxNSIgLz4KICAgIDxjaGFyIGlkPSIxMjQiIHg9IjAiIHk9IjAiIHdpZHRoPSI2IiBoZWlnaHQ9IjIyIiB4b2Zmc2V0PSItMSIgeW9mZnNldD0iMiIgeGFkdmFuY2U9IjQiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyNSIgeD0iODAiIHk9IjAiIHdpZHRoPSI5IiBoZWlnaHQ9IjIwIiB4b2Zmc2V0PSItMiIgeW9mZnNldD0iMyIgeGFkdmFuY2U9IjUiIHBhZ2U9IjAiIGNobmw9IjE1IiAvPgogICAgPGNoYXIgaWQ9IjEyNiIgeD0iMTMzIiB5PSI2OCIgd2lkdGg9IjEyIiBoZWlnaHQ9IjgiIHhvZmZzZXQ9Ii0yIiB5b2Zmc2V0PSI4IiB4YWR2YW5jZT0iOSIgcGFnZT0iMCIgY2hubD0iMTUiIC8+CiAgPC9jaGFycz4KICA8a2VybmluZ3MgY291bnQ9IjEwNiI+CiAgICA8a2VybmluZyBmaXJzdD0iMTIzIiBzZWNvbmQ9IjEwNiIgYW1vdW50PSIxIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjEyMSIgc2Vjb25kPSI0NiIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzNCIgc2Vjb25kPSI0NCIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzNCIgc2Vjb25kPSI0NiIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzNCIgc2Vjb25kPSI2NSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzNCIgc2Vjb25kPSI3NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIxMjEiIHNlY29uZD0iNDQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTE5IiBzZWNvbmQ9IjQ2IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjExOSIgc2Vjb25kPSI0NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIxMTgiIHNlY29uZD0iNDYiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTE4IiBzZWNvbmQ9IjQ0IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjExNCIgc2Vjb25kPSI3NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIxMTQiIHNlY29uZD0iNDYiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTE0IiBzZWNvbmQ9IjQ0IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjExMiIgc2Vjb25kPSI4OSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIxMTIiIHNlY29uZD0iODQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTExIiBzZWNvbmQ9Ijg5IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjExMSIgc2Vjb25kPSI4NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIxMDciIHNlY29uZD0iNDUiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTAyIiBzZWNvbmQ9Ijg2IiBhbW91bnQ9IjEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iMTAyIiBzZWNvbmQ9IjQ2IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjEwMiIgc2Vjb25kPSI0NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5OCIgc2Vjb25kPSI4OSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5OCIgc2Vjb25kPSI4NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5MiIgc2Vjb25kPSIxMDYiIGFtb3VudD0iMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5MiIgc2Vjb25kPSI4OSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5MiIgc2Vjb25kPSI4NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI5MSIgc2Vjb25kPSIxMDYiIGFtb3VudD0iMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI4OSIgc2Vjb25kPSIxMjIiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iMTE1IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg5IiBzZWNvbmQ9IjExMyIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI4OSIgc2Vjb25kPSIxMTEiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iMTAzIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg5IiBzZWNvbmQ9IjEwMSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzOSIgc2Vjb25kPSI0NCIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzOSIgc2Vjb25kPSI0NiIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzOSIgc2Vjb25kPSI2NSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSIzOSIgc2Vjb25kPSI3NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI4OSIgc2Vjb25kPSIxMDAiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iOTkiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iOTciIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iNzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iNDciIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iNDYiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iNDUiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODkiIHNlY29uZD0iNDQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODciIHNlY29uZD0iNzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODYiIHNlY29uZD0iNzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODYiIHNlY29uZD0iNDYiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODYiIHNlY29uZD0iNDQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODUiIHNlY29uZD0iNzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODQiIHNlY29uZD0iMTIyIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjExNSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI4NCIgc2Vjb25kPSIxMTMiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODQiIHNlY29uZD0iMTExIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjEwMyIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI4NCIgc2Vjb25kPSIxMDEiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iODQiIHNlY29uZD0iMTAwIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9Ijk5IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9Ijk3IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9Ijc0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjQ3IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjQ2IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjQ1IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijg0IiBzZWNvbmQ9IjQ0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjgwIiBzZWNvbmQ9IjkwIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjgwIiBzZWNvbmQ9Ijc0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQwIiBzZWNvbmQ9IjEwNiIgYW1vdW50PSIxIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9IjM0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9IjM5IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9IjQyIiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9Ijg0IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjgwIiBzZWNvbmQ9IjQ3IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9Ijg2IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjgwIiBzZWNvbmQ9IjQ2IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9Ijg5IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjgwIiBzZWNvbmQ9IjQ0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijc2IiBzZWNvbmQ9IjkyIiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijc2IiBzZWNvbmQ9Ijg5IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijc2IiBzZWNvbmQ9Ijg3IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijc2IiBzZWNvbmQ9Ijg2IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9Ijc2IiBzZWNvbmQ9Ijg0IiBhbW91bnQ9Ii0yIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ0IiBzZWNvbmQ9IjExNiIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NCIgc2Vjb25kPSIxMTgiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzYiIHNlY29uZD0iNDIiIGFtb3VudD0iLTIiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzYiIHNlY29uZD0iMzkiIGFtb3VudD0iLTIiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzYiIHNlY29uZD0iMzQiIGFtb3VudD0iLTIiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzAiIHNlY29uZD0iNzQiIGFtb3VudD0iLTIiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzAiIHNlY29uZD0iNDciIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzAiIHNlY29uZD0iNDYiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNzAiIHNlY29uZD0iNDQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNjUiIHNlY29uZD0iODQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNjUiIHNlY29uZD0iNDIiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNjUiIHNlY29uZD0iMzkiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNjUiIHNlY29uZD0iMzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNDciIHNlY29uZD0iNzQiIGFtb3VudD0iLTEiIC8+CiAgICA8a2VybmluZyBmaXJzdD0iNDYiIHNlY29uZD0iMTE4IiBhbW91bnQ9Ii0xIiAvPgogICAgPGtlcm5pbmcgZmlyc3Q9IjQ2IiBzZWNvbmQ9IjExNiIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSI4OSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSI4NiIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSI4NCIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSI0MiIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSIzOSIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NiIgc2Vjb25kPSIzNCIgYW1vdW50PSItMiIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NSIgc2Vjb25kPSI4OSIgYW1vdW50PSItMSIgLz4KICAgIDxrZXJuaW5nIGZpcnN0PSI0NSIgc2Vjb25kPSI4NCIgYW1vdW50PSItMSIgLz4KICA8L2tlcm5pbmdzPgo8L2ZvbnQ+Cg"},{ name : "spine/character_json", data : "eyJza2VsZXRvbiI6eyJoYXNoIjoiRFhRcjgwUEZUS2siLCJzcGluZSI6IjQuMC42NCJ9LCJib25lcyI6W3sibmFtZSI6InJvb3QifV0sImFuaW1hdGlvbnMiOnsiYXR0YWNrIjp7ImJvbmVzIjp7InJvb3QiOnsidHJhbnNsYXRlIjpbe30seyJ0aW1lIjowLjA2NjcsIngiOi01NS43OH0seyJ0aW1lIjowLjEzMzMsIngiOjkxLjh9LHsidGltZSI6MC42NjY3fV19fX19fQ"}];
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
Achievement.LOCKED = 0;
Achievement.UNLOCKED = 1;
seedyrng_Xorshift128Plus.PARAMETER_A = 23;
seedyrng_Xorshift128Plus.PARAMETER_B = 17;
seedyrng_Xorshift128Plus.PARAMETER_C = 26;
seedyrng_Xorshift128Plus.SEED_1 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(842650776,685298713);
	$r = this1;
	return $r;
}(this));
Generation.random = new seedyrng_Random();
BattleConstants.DEBUFF = -1;
BattleConstants.DEATHBLOOD_LIFERATIO_VALUE = 10;
BattleConstants.DEATHBLOOD_LIFE_VALUE = 10;
BattleConstants.PRIZE_EQUIP = 0;
BattleConstants.PRIZE_XP = 1;
BattleConstants.PRIZE_ARCANIA = 2;
BattleConstants.PIERCING = "Piercing";
BattleConstants.SAFEGUARD = "Safeguard";
BattleConstants.FIREDAMAGE = "fire-damage";
BattleConstants.THUNDERDAMAGE = "thunder-damage";
BattleConstants.ICEDAMAGE = "ice-damage";
BattleConstants.damageLastTurn = "damage-last-turn";
BattleConstants.counterAttack = "Counterattack";
BattleConstants.ATTACK = "Attack";
BattleConstants.DEFENSE = "Defense";
BattleConstants.MAGICATTACK = "MagicAttack";
BattleConstants.MAGICDEFENSE = "MagicDefense";
BattleConstants.MAGICAL = "Mystic";
BattleConstants.MPMax = "MPMax";
BattleConstants.LIFE = "Life";
BattleConstants.DEATHBLOOD = "Deathblood";
BattleConstants.DATAEVENT_CHANGEAREA = "changearea";
BattleConstants.DATAEVENT_REGIONUNLOCK = "regionunlock";
BattleConstants.CURRENCY_TIME = "currency_time";
BattleConstants.EQUIPMENT_VIEW_ID_PART = "equipmentbutton_";
BattleConstants.EQUIPMENT_TAB_ID = "tabequip";
BattleManager.NORMAL_ENEMY_VIEW = 1;
BattleManager.BOSS_ENEMY_VIEW = 2;
BattleManager.NUMBER_OF_EQUIPMENT_SETS = 5;
Buttons.buttons = new Buttons();
CrossTarget.latestSave = "nothing";
DefaultButtons.UP = 0;
DefaultButtons.RIGHT = 1;
DefaultButtons.DOWN = 2;
DefaultButtons.LEFT = 3;
DefaultButtons.CONFIRM = 4;
DefaultButtons.CANCEL = 5;
DefaultButtons.ACTION1 = 6;
DefaultButtons.ACTION2 = 7;
DefaultButtons.TABRIGHT = 8;
DefaultButtons.TABLEFT = 9;
DefaultButtons.TABRIGHTB = 10;
DefaultButtons.TABLEFTB = 11;
DirectionUtils.VERTICAL_DIRECTION = [Direction.NORTH,Direction.SOUTH];
GRIArcaniaBattleManagerIntegrator.COIN_ID = "reiscoin";
GRIArcaniaBattleManagerIntegrator.arcaniaToBattleManagerStat = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["playerattack"] = "Attack";
	_g.h["playerdefense"] = "Defense";
	_g.h["playerspeed"] = "Speed";
	_g.h["playermagicattack"] = BattleConstants.MAGICATTACK;
	_g.h["playerlife"] = "LifeMax";
	$r = _g;
	return $r;
}(this));
GRIView.COLOR_BLACK = 0;
GRIView.COLOR_ACTIVE_BLUE = 11004149;
GRIView.COLOR_ACTIVE_RED = 13245982;
GRIView.COLOR_BACKGROUND = 988450;
GRIView.COLOR_BACKGROUND_GRAY = 1779241;
GRIView.COLOR_BAR_XP = 1322844;
GRIView.COLOR_BAR_TIME = 10963070;
GRIView.COLOR_OUTLINE = 3824248;
GRIView.COLOR_TAB = 10390166;
GRIView.COLOR_TAG_HOVER = GRIView.COLOR_ACTIVE_BLUE;
GRIView.COLOR_DISABLED_BUTTON = 5854292;
GRIView.COLOR_BUFF = 38655;
GRIView.COLOR_DEBUFF = 10298857;
GRIView.COLOR_TEXT_NORMAL = 13815507;
GRIView.COLOR_TEXT_HEADER = 2188254;
GRIView.COLOR_TEXT_ACTION = 11049133;
GRIView.COLOR_TEXT_ACTION_BATTLE = 6065597;
GRIView.COLOR_TEXT_ACTION_HOVER = 10995404;
GRIView.COLOR_ACTIVE_PINK = GRIView.COLOR_TEXT_ACTION;
GRIView.COLOR_ACTIVE_PINK2 = GRIView.COLOR_TEXT_ACTION_HOVER;
GRIView.LAYER_BACKGROUND = 0;
GRIView.LAYER_DEFAULT = 1;
GRIView.LAYER_EFFECT = 3;
GRIView.LAYER_HOVER = 4;
GRIView.LAYER_DIALOG = 5;
GRIView.TEXT_MESSAGEBOSS = "Hard Area Cleared!\nYour stats permanently increased!\n\n";
GRIView.ARCHETYPE_SIMPLE = "simple";
GRIView.ARCHETYPE_TEXT_ACTION = "actiontext";
GRIView.ARCHETYPE_SIMPLE_MEDIUM = "simplemedium";
GRIView.ARCHETYPE_SIMPLE_LARGE = "simplelarge";
GRIView.ARCHETYPE_SIMPLE_TIMID = "simpletimid";
GRIView.ARCHETYPE_IMPORTANT_TIMID = "importanttimid";
GRIView.ARCHETYPE_HEADER = "header";
GRIView.ARCHETYPE_HEADER_LARGE = "header";
GRIView.ARCHETYPE_HEADER_HOVER = "header";
GRIView.ARCHETYPE_HEADER_TIMID = "headertimid";
GRIView.ARCHETYPE_HEADER_MESSAGE = "headermessage";
GRIView.ARCHETYPE_HEADER_STAT = "statheader";
GRIView.ARCHETYPE_TEXT_STORYSPEAKER = GRIView.ARCHETYPE_HEADER;
GRIView.ARCHETYPE_TEXT_STORYMESSAGE = GRIView.ARCHETYPE_IMPORTANT_TIMID;
GRIView.ARCHETYPE_TEXT_ENEMYNAME = GRIView.ARCHETYPE_SIMPLE_TIMID;
GRIView.ARCHETYPE_BAR_TIMID = "bar_timid";
GRIView.ARCHETYPE_BAR_MINI = "bar_mini";
GRIView.ARCHETYPE_BAR_XP2 = "bar_xp2";
GRIView.ARCHETYPE_BAR_TIME = "bar_time";
GRIView.ARCHETYPE_BAR_POINT = "bar_timid2";
GRIView.ARCHETYPE_BG_DEFAULT = "background";
GRIView.ARCHETYPE_BG_SIMPLE = "backgroundsimple";
GRIView.ARCHETYPE_BUTTON_SMALL = "buttonsmall";
GRIView.ARCHETYPE_BUTTON_WITH_ICON_16 = "buttonicon16";
GRIView.ARCHETYPE_BUTTON_MEDIUM = "buttonmedium";
GRIView.ARCHETYPE_BUTTON_SMALL_LABEL = "buttonsmall_label";
GRIView.ARCHETYPE_BUTTON_FEEDBACK_LABEL = "button_feedback_label";
GRIView.ARCHETYPE_BUTTON_TAB = "buttontab";
GRIView.ARCHETYPE_BUTTON_REGION = GRIView.ARCHETYPE_BUTTON_SMALL_LABEL;
GRIView.ARCHETYPE_BUTTON_BATTLE = "battlebutton";
GRIView.ARCHETYPE_BUTTON_BATTLE_SKILL = "skillbutton";
GRIView.DATA_HERO_ICON = "hero-icon-click";
GRIView.SPRITE_BLUEGRAD = Sprite.create("bluegradient",32,32);
GRIView.SPRITE_PINKGRAD = Sprite.create("pinkgradient",32,32);
GRIView.SPRITE_GREENGRAD = Sprite.create("greengradient",32,32);
GRIView.LAYOUT_HOVER = "generichover";
GRIView.LAYOUT_HOVER_ACTOR = "actorstathover";
GRIView.LAYOUT_MAIN_BATTLE_BUTTON = "mainbuttongroup";
GRIView.LAYOUT_SUB_BATTLE_BUTTON = "subbuttons";
GRIView.LAYOUT_LOWER_MISC_BUTTON = "lowermiscbutton";
GRIView.LAYOUT_SET = "setbuttongroup";
GRIView.TAG_HOVER = new Tag();
GRIView.TAG_HOVER_ACTOR = new Tag();
GRIView.TAG_BATTLE_BUTTON = new Tag();
GRIView.TAG_TAB_BUTTON = new Tag();
GRIView.tagTabBattle = new Tag();
GRIView.tagTabEquip = new Tag();
GRIView.tagTabRegion = new Tag();
GRIView.tagTabTitle = new Tag();
GRIView.tagTabMemory = new Tag();
GRIView.tagTabCharacter = new Tag();
GRIView.tagTabVillage = new Tag();
GRIView.idTabBattle = "tab_battle";
GRIView.idTabEquip = "tabequip";
GRIView.idTabRegion = "tab_region";
GRIView.idTabTitle = "tab_title";
GRIView.idTabMemory = "tab_memory";
GRIView.idTabCharacter = "tab_character";
GRIView.idTabVillage = "tab_village";
GRIView.DIALOG_TAG = new Tag();
arcania_logic_ArcaniaModel.SPOTLIGHT_ACTION_LOSSES_AND_GAINS = 1;
arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST = 2;
arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST_UNPAYABLE = 3;
arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST = 4;
arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST_UNPAYABLE = 5;
arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RESULT = 6;
arcania_logic_ArcaniaModel.REUSABLE_CONDITION_TYPE = "arcania_condition";
arcania_logic_ArcaniaModel.resourceTypeConfiguration = [new arcania_logic_ResourceTypeConfiguration("Action"),new arcania_logic_ResourceTypeConfiguration("Resource"),new arcania_logic_ResourceTypeConfiguration("Event",false,true)];
GRIArcaniaConstants.COLOR_SPOTLIGHT_RESULT = GRIView.COLOR_BUFF;
GRIArcaniaConstants.COLOR_SPOTLIGHT_COST = GRIView.COLOR_DEBUFF;
GRIArcaniaConstants.COLOR_SPOTLIGHT_COST_UNPAY = GRIView.COLOR_ACTIVE_RED;
GRIArcaniaConstants.SPOTLIGHT_TO_COLOR = (function($this) {
	var $r;
	var _g = new haxe_ds_IntMap();
	_g.h[arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST] = GRIArcaniaConstants.COLOR_SPOTLIGHT_COST;
	_g.h[arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST] = GRIArcaniaConstants.COLOR_SPOTLIGHT_COST;
	_g.h[arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_COST_UNPAYABLE] = GRIArcaniaConstants.COLOR_SPOTLIGHT_COST_UNPAY;
	_g.h[arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RUNNING_COST_UNPAYABLE] = GRIArcaniaConstants.COLOR_SPOTLIGHT_COST_UNPAY;
	_g.h[arcania_logic_ArcaniaModel.SPOTLIGHT_ME_AS_RESULT] = GRIArcaniaConstants.COLOR_SPOTLIGHT_RESULT;
	$r = _g;
	return $r;
}(this));
GRIArcaniaJson.skills = "[\r\n    {\r\n        \"id\": \"spiritology\",\r\n        \"name\": \"Ritualism\",\r\n        \"cost\": {\r\n            \"esoterism\":15\r\n        },\r\n        \"need\": \"playerlevel>25\",\r\n        \"require\": \"comprehendpaje\",\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":5,\r\n            \"esoterism.max\":5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunology\",\r\n        \"name\": \"Lunology\",\r\n        \"cost\": {\r\n            \"esoterism\":10,\r\n            \"riteres1\":5\r\n        },\r\n        \"need\": \"playerlevel>30\",\r\n        \"require\": \"ritualsahi1\",\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":2,\r\n            \"lunarres1.max\":5,\r\n            \"lunarres2.max\":3,\r\n            \"lunarres3.max\":1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"selling\",\r\n        \"name\": \"Commerce\",\r\n        \"Description\": \"The art of trading\",\r\n        \"require\": \"buymarketnotes\",\r\n        \"cost\": {\r\n            \"mental\":20,\r\n            \"stamina\": 5,\r\n            \"creativity\": 20\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"coin.max\": 5\r\n        }\r\n    }\r\n]";
GRIArcaniaJson.actions = "[\r\n    {\r\n        \"id\": \"sitdown\",\r\n        \"name\": \"Sit down\",\r\n        \"desc\": \"Lay down your butt in the grass\",\r\n        \"perpetual\": true,\r\n        \"effect\": {\r\n            \"stamina\": 3,\r\n            \"mental\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"pickflowers\",\r\n        \"name\": \"Pick up flower\",\r\n        \"desc\": \"There are some flowers growing nearby. I think they are Snapdragons?\\n\\n (You can hold the button press to repeat)\",\r\n        \"cost\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"flower\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"imagine\",\r\n        \"name\": \"Imagine\",\r\n        \"desc\": \"Think up adventures, what ifs, the craziest ideas\",\r\n        \"run\": {\r\n            \"mental\": 3\r\n        },\r\n        \"effect\": {\r\n            \"creativity\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\": \"commune\",\r\n        \"name\": \"Commune\",\r\n        \"desc\": \"Open your ears to Brazil, so that it may open to you\",\r\n        \"run\": {\r\n            \"mental\": 2\r\n        },\r\n        \"effect\": {\r\n            \"esoterism\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"flowersahi\"\r\n    },\r\n    {\r\n        \"id\": \"riteres1gen\",\r\n        \"name\": \"Hope to the Gods\",\r\n        \"desc\": \"Hope for a... Better future?\",\r\n        \"duration\": 5,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres1\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"riteres2gen\",\r\n        \"name\": \"Trust in what is mystic\",\r\n        \"desc\": \"First, you must trust to be trusted\",\r\n        \"duration\": 15,\r\n        \"cost\": {\r\n            \"riteres1\":3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres2\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"riteres3gen\",\r\n        \"name\": \"Pray for the rituals\",\r\n        \"desc\": \"Through prayer, comes faith\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"riteres2\":4\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres3\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"thinkflower\",\r\n        \"name\": \"Dwell on flowers\",\r\n        \"desc\": \"What can you possibly do with a flower?\",\r\n        \"max\": 1,\r\n        \"duration\": 20,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"cost\": {\r\n            \"creativity\": 8,\r\n            \"esoterism\": 7\r\n        },\r\n        \"require\": \"creativity>3\"\r\n    },\r\n    {\r\n        \"id\": \"embedflower\",\r\n        \"name\": \"Embed flower\",\r\n        \"desc\": \"Bring the flower back to the Gods\",\r\n        \"perpetual\": true,\r\n        \"duration\": 7,\r\n        \"cost\": {\r\n            \"flower\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"mysticflower\": 1\r\n        },\r\n        \"require\": \"thinkflower\"\r\n    },\r\n    {\r\n        \"id\": \"embedlunarflower\",\r\n        \"name\": \"Ascend flowers\",\r\n        \"desc\": \"Combine multiple flowers into one\",\r\n        \"perpetual\": true,\r\n        \"duration\": 120,\r\n        \"cost\": {\r\n            \"flower\": 220,\r\n            \"mysticflower\": 80,\r\n            \"lunarres1\":3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarflower\": 1\r\n        },\r\n        \"require\": \"lunarres1\"\r\n    },\r\n    {\r\n        \"id\": \"readmerchantbook\",\r\n        \"name\": \"Read [Life of Antonio Rodriges]\",\r\n        \"desc\": \"Let's hope you will know a little bit more about commerce after this\",\r\n        \"duration\": 400,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"selling-level.max\": 1\r\n        },\r\n        \"max\": 1,\r\n        \"require\": \"buymerchantbook\"\r\n    },\r\n    {\r\n        \"id\": \"readlunarbook\",\r\n        \"name\": \"Read a chapter of [Secrets of the Moon]\",\r\n        \"desc\": \"People have been obssessed with the bright light up in the sky\",\r\n        \"duration\": 400,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"lunology-level.max\": 1\r\n        },\r\n        \"max\": 2,\r\n        \"require\": \"buylunarbook\"\r\n    },\r\n    {\r\n        \"id\": \"sellflower\",\r\n        \"name\": \"Sell flowers\",\r\n        \"desc\": \"Just one for 1 gil. Wait, no.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 10,\r\n        \"cost\": {\r\n            \"flower\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 1\r\n        },\r\n        \"require\": \"selling-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"sellbottle\",\r\n        \"name\": \"Sell bottle\",\r\n        \"desc\": \"A bit hard to find a buyer for an old bottle\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"bottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 1,\r\n            \"flower\": 3\r\n        },\r\n        \"require\": \"selling-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"sellmysticflower\",\r\n        \"name\": \"Sell mystic flower\",\r\n        \"desc\": \"Who doesn't want to buy shining magic flowers? They look beautiful on the dining table.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 3,\r\n        \"cost\": {\r\n            \"mysticflower\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 2\r\n        },\r\n        \"require\": \"selling-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"sellmysticbottle\",\r\n        \"name\": \"Sell mystic bottle\",\r\n        \"desc\": \"Some parents buy it to amaze their children. Some Tayra interested in Paje rituals may also be interested.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 3,\r\n        \"cost\": {\r\n            \"mysticbottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 5\r\n        },\r\n        \"require\": \"selling-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"embedbottle\",\r\n        \"name\": \"Embed bottle\",\r\n        \"desc\": \"Breath a faint of life into what is lifeless\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"bottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"mysticbottle\": 1\r\n        },\r\n        \"require\": \"mysticflower>7\"\r\n    },\r\n    {\r\n        \"id\": \"embedstone\",\r\n        \"name\": \"Embed stone\",\r\n        \"desc\": \"Bring the stone back to the Gods\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"copperstone\": 1,\r\n            \"mysticflower\": 20,\r\n            \"esoterism\": 10,\r\n            \"riteres1\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 3,\r\n            \"stamina\": 3,\r\n            \"esoterism\": 2\r\n        },\r\n        \"result\": {\r\n            \"mysticstone\": 1\r\n        },\r\n        \"require\": \"spiritology-level>1\",\r\n        \"need\": \"copperstone\"\r\n    },\r\n    {\r\n        \"id\": \"throwflowers\",\r\n        \"name\": \"Flowers to the wind\",\r\n        \"desc\": \"Throw out some flowers into the wind\",\r\n        \"max\": 1,\r\n        \"duration\": 5,\r\n        \"require\": \"flower>5\",\r\n        \"cost\": {\r\n            \"flower\": 12\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"esotericdreams\",\r\n        \"name\": \"Esoteric Dreams\",\r\n        \"desc\": \"Sleep and dream of the unknown\",\r\n        \"max\": 1,\r\n        \"require\": \"mysticflower>7\",\r\n        \"cost\": {\r\n            \"mysticflower\": 8,\r\n            \"esoterism\": 20\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"duration\": 90,\r\n        \"mod\": {\r\n            \"mental.max\": 15,\r\n            \"esoterism.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"contemplatearea\",\r\n        \"name\": \"Place to contemplate\",\r\n        \"desc\": \"Put some flowers here, some there. Perfect place to think.\",\r\n        \"max\": 1,\r\n        \"duration\": 12,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"require\": \"throwflowers\",\r\n        \"cost\": {\r\n            \"flower\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"giveflowersoldman\",\r\n        \"name\": \"Give Flowers\",\r\n        \"desc\": \"Give the old man some flowers. Maybe he will smile.\",\r\n        \"max\": 1,\r\n        \"duration\": 5,\r\n        \"require\": \"throwflowers\",\r\n        \"cost\": {\r\n            \"flower\": 12\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"makemoonstone\",\r\n        \"name\": \"Make a Moon Stone\",\r\n        \"desc\": \"If you focus all your energy on this stone...\",\r\n        \"max\": 1,\r\n        \"duration\": 2000,\r\n        \"require\": \"mysticstone\",\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"cost\": {\r\n            \"esoterism\": 15,\r\n            \"mysticstone\": 1,\r\n            \"lunarres1\": 10,\r\n            \"darkleaf\": 10\r\n        },\r\n        \"result\": {\r\n            \"playerattack\":15,\r\n            \"playermagicattack\":25,\r\n            \"playermagicdefense\":15\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":10,\r\n            \"riteres1.max\":10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualtigerstatue\",\r\n        \"name\": \"Ritual of Baipu Tuvy\",\r\n        \"desc\": \"Use the statue of the blue tiger to channel a ritual\",\r\n        \"max\": 1,\r\n        \"duration\": 2000,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"require\": \"spiritology-level>3\",\r\n        \"need\": \"buytigerstatue\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"lunarres1\": 10,\r\n            \"riteres2\": 10,\r\n            \"darkleaf\": 15\r\n        },\r\n        \"result\": {\r\n            \"playerlife\":10,\r\n            \"playerdefense\":10,\r\n            \"playerspeed\":5\r\n        },\r\n        \"mod\": {\r\n            \"riteres1.max\":10,\r\n            \"riteres2.max\":5,\r\n            \"riteres3.max\":5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"flowersahi\",\r\n        \"name\": \"Deity Flowers\",\r\n        \"desc\": \"Offer flowers to Sahi, Goddess of the Cursed Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 15,\r\n        \"require\": \"flower>= 15\",\r\n        \"cost\": {\r\n            \"flower\": 30\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi1\",\r\n        \"name\": \"Mind to Sahi\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 30,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"flowersahi\",\r\n        \"need\": \"playerlevel>=5\",\r\n        \"cost\": {\r\n            \"esoterism\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi2\",\r\n        \"name\": \"Mind to Sahi II\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 40,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"mindsahi1\",\r\n        \"need\": \"playerlevel>=20\",\r\n        \"cost\": {\r\n            \"esoterism\": 30\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 2,\r\n            \"sahilife.max\": 4,\r\n            \"sahishield.max\": 2\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi3\",\r\n        \"name\": \"Mind to Sahi III\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 360,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=50\",\r\n        \"cost\": {\r\n            \"esoterism\": 90\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 3,\r\n            \"sahilife.max\": 5,\r\n            \"sahishield.max\": 3,\r\n            \"sahimagic.max\": 3,\r\n            \"sahimagicshield.max\": 3,\r\n            \"sahispeed.max\": 3,\r\n            \"highesoterism.max\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahiflesh\",\r\n        \"name\": \"Lunar Flesh\",\r\n        \"desc\": \"Attain the body of the Lunars\",\r\n        \"max\": 1,\r\n        \"duration\": 90,\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=21\",\r\n        \"cost\": {\r\n            \"esoterism\": 35,\r\n            \"flower\": 40\r\n        },\r\n        \"mod\": {\r\n            \"sahilife.max\": 4,\r\n            \"sahishield.max\": 3,\r\n            \"sahispeed.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi1\",\r\n        \"name\": \"Ritual for Sahi I\",\r\n        \"desc\": \"A novice ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 120,\r\n        \"require\": \"spiritology-level>0\",\r\n        \"need\": \"mindsahi2\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"flower\": 30,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 1,\r\n            \"sahispirit.max\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi2\",\r\n        \"name\": \"Ritual for Sahi II\",\r\n        \"desc\": \"An apprentice-type ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 400,\r\n        \"require\": \"spiritology-level>1\",\r\n        \"need\": \"mindsahi2\",\r\n        \"cost\": {\r\n            \"esoterism\": 70,\r\n            \"flower\": 70,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 3,\r\n            \"sahispirit.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi3\",\r\n        \"name\": \"Ritual for Sahi III\",\r\n        \"desc\": \"A flegling ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 700,\r\n        \"require\": \"spiritology-level>2\",\r\n        \"need\": \"mindsahi3\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"flower\": 30,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 8,\r\n            \"sahispirit.max\": 8\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahispirit\",\r\n        \"name\": \"Lunar Spirit\",\r\n        \"desc\": \"Attain the psyche of the Lunars\",\r\n        \"max\": 1,\r\n        \"duration\": 90,\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=22\",\r\n        \"cost\": {\r\n            \"esoterism\": 40,\r\n            \"flower\": 30\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 3,\r\n            \"sahimagic.max\": 3,\r\n            \"sahimagicshield.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"highesoterism\",\r\n        \"name\": \"Obscure Mind\",\r\n        \"desc\": \"Open your eyes to that which is arcane\",\r\n        \"max\": 3,\r\n        \"require\": \"esoterism>25\",\r\n        \"duration\": 50,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"flower\": 35,\r\n            \"mental\": 30\r\n        },\r\n        \"mod\": {\r\n            \"esoterism.max\": 25\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"godbibelot\",\r\n        \"name\": \"Mystic Bibelot\",\r\n        \"desc\": \"A small ornament for the old Gods\",\r\n        \"max\": 3,\r\n        \"require\": \"esoterism>=5\",\r\n        \"duration\": 30,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"cost\": {\r\n            \"flower\": 45,\r\n            \"esoterism\": 10,\r\n            \"creativity\": 15\r\n        },\r\n        \"mod\": {\r\n            \"esoterism.max\": 8\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahiattack\",\r\n        \"name\": \"Aggressive Moon\",\r\n        \"desc\": \"Let the aggressive face of the Moon become your face\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"mindsahi1\",\r\n        \"cost\": {\r\n            \"esoterism\": 15,\r\n            \"flower\": 10\r\n        },\r\n        \"result\": {\r\n            \"playerattack\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahimagic\",\r\n        \"name\": \"Magical Moon\",\r\n        \"desc\": \"The mysticism of the moon\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"sahispirit\",\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 15\r\n        },\r\n        \"result\": {\r\n            \"playermagicattack\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahimagicshield\",\r\n        \"name\": \"Solid Moon\",\r\n        \"desc\": \"The moon can shield you from the flames of the sun\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"sahispirit\",\r\n        \"cost\": {\r\n            \"esoterism\": 18,\r\n            \"flower\": 18\r\n        },\r\n        \"result\": {\r\n            \"playermagicdefense\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahispeed\",\r\n        \"name\": \"Moon Hare\",\r\n        \"desc\": \"The Lusitani say there is a rabbit in the moon\",\r\n        \"max\": 2,\r\n        \"require\": \"sahiflesh\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"esoterism\": 35,\r\n            \"flower\": 20\r\n        },\r\n        \"result\": {\r\n            \"playerspeed\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahilife\",\r\n        \"name\": \"Nurturing Moon\",\r\n        \"desc\": \"The moon reflects the nurturing light of the sun\",\r\n        \"max\": 4,\r\n        \"require\": \"mindsahi1\",\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 35\r\n        },\r\n        \"result\": {\r\n            \"playerlife\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahishield\",\r\n        \"name\": \"Guardian Moon\",\r\n        \"desc\": \"In the night, the moonlight is your only guardian\",\r\n        \"max\": 2,\r\n        \"require\": \"sahilife\",\r\n        \"duration\": 25,\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 50\r\n        },\r\n        \"result\": {\r\n            \"playerdefense\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buybottle\",\r\n        \"name\": \"Trade for a bottle\",\r\n        \"desc\": \"The old man is carrying a large amount of bottles... Why?\",\r\n        \"require\": \"giveflowersoldman\",\r\n        \"cost\": {\r\n            \"flower\": 9\r\n        },\r\n        \"result\": {\r\n            \"bottle\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buycandle\",\r\n        \"name\": \"Buy candle\",\r\n        \"desc\": \"For the nights\",\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 5\r\n        },\r\n        \"result\": {\r\n            \"candle\": 1\r\n        }\r\n    },  \r\n    {\r\n        \"id\": \"buyvase\",\r\n        \"name\": \"Flower vase\",\r\n        \"desc\": \"Flowers for a vase, vase for flowers.\",\r\n        \"max\": 2,\r\n        \"require\": \"giveflowersoldman\",\r\n        \"cost\": {\r\n            \"flower\": 20\r\n        },\r\n        \"mod\": {\r\n            \"flower.max\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mysticcandle\",\r\n        \"name\": \"Mystic candle\",\r\n        \"desc\": \"Embed a candle with the power of the unknown\",\r\n        \"require\": \"candle\",\r\n        \"duration\":120,\r\n        \"cost\": {\r\n            \"candle\": 1,\r\n            \"esoterism\": 250\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.rate\": 60\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buyvasecoin\",\r\n        \"name\": \"Commercial flower vase\",\r\n        \"desc\": \"It's not as beautiful as the other one, but it seems to work better\",\r\n        \"max\": 3,\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"mod\": {\r\n            \"flower.max\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buybottlebox\",\r\n        \"name\": \"Buy box for bottles\",\r\n        \"desc\": \"The box comes empty though.\",\r\n        \"max\": 5,\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"mod\": {\r\n            \"bottle.max\": 5,\r\n            \"mysticbottle.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buystone\",\r\n        \"name\": \"Buy Copper Stone\",\r\n        \"desc\": \"What use is there for this, anyways\",\r\n        \"require\": \"selling-level>0\",\r\n        \"cost\": {\r\n            \"coin\": 6\r\n        },\r\n        \"result\": {\r\n            \"copperstone\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"autosellnormalon\",\r\n        \"name\": \"Auto sell common loot\",\r\n        \"desc\": \"Automatically sells any equipment you get that doesn't have magical properties\",\r\n        \"require\": \"selling-level>2\",\r\n        \"result\": {\r\n            \"autosellnormal\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"autosellnormaloff\",\r\n        \"name\": \"Stop auto selling\",\r\n        \"desc\": \"Disable auto selling\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"autosellnormal\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buyleaf\",\r\n        \"name\": \"Buy Alocasia Leaf\",\r\n        \"desc\": \"Buy a mysterious black leaf\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 25\r\n        },\r\n        \"result\": {\r\n            \"darkleaf\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buymerchantbook\",\r\n        \"name\": \"Buy [Life of Antonio Rodrigues]\",\r\n        \"desc\": \"A book on the life of a famous merchant\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 70\r\n        },\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"buylunarbook\",\r\n        \"name\": \"Buy [Secrets of the Moon]\",\r\n        \"desc\": \"A book on the mysteries of the moon\",\r\n        \"require\": \"selling-level>3\",\r\n        \"cost\": {\r\n            \"coin\": 70\r\n        },\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"buywallet\",\r\n        \"name\": \"Buy Wallet\",\r\n        \"desc\": \"A hand-made wallet, using tree vines. Not the best, but does the job.\",\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"max\": 2,\r\n        \"mod\": {\r\n            \"coin.max\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buypurse\",\r\n        \"name\": \"Buy bag\",\r\n        \"desc\": \"A hand-made bag, using thinly cut vines.\",\r\n        \"require\": \"coin>20\",\r\n        \"cost\": {\r\n            \"coin\": 30\r\n        },\r\n        \"max\": 2,\r\n        \"mod\": {\r\n            \"coin.max\": 25\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buytigerstatue\",\r\n        \"name\": \"Buy Statue of Baipu Tuvy\",\r\n        \"desc\": \"A small statue of the blue tiger\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 60\r\n        },\r\n        \"max\": 1,\r\n        \"result\": {\r\n            \"playerattack\": 2\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"clearmist\",\r\n        \"name\": \"Clear the Mist\",\r\n        \"desc\": \"Focus everything you got into making the mist go away\",\r\n        \"require\": \"playerlevel>5\",\r\n        \"need\": \"playerlevel>25\",\r\n        \"duration\": 300,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"mysticflower\": 25\r\n        },\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"clearmist2\",\r\n        \"name\": \"Clear the Mist II\",\r\n        \"desc\": \"Focus everything you got into making the mist go away\",\r\n        \"require\": \"clearmist\",\r\n        \"need\": \"playerlevel>45\",\r\n        \"duration\": 300,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"mysticflower\": 25\r\n        },\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploreoldtown\",\r\n        \"name\": \"Explore abandoned village\",\r\n        \"desc\": \"Deep through the forest, beyond the mist, you can see an abandoned village\",\r\n        \"require\": \"clearmist2\",\r\n        \"duration\": 120,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploredeadoca\",\r\n        \"name\": \"Explore the dead oca\",\r\n        \"desc\": \"Ocas are the houses built by the Taira, the indigenous people of Brazil. This oca, no longer seems to have anyone living here. There is something sinister in the atmosphere...\",\r\n        \"require\": \"exploreoldtown\",\r\n        \"duration\": 20,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 4,\r\n            \"mental\": 4\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"talkpaje\",\r\n        \"name\": \"Talk to the Paje\",\r\n        \"desc\": \"There was a Paje inside the abandoned oca. Is he looking over the dead here...?\",\r\n        \"require\": \"exploredeadoca\",\r\n        \"duration\": 10,\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"comprehendpaje\",\r\n        \"name\": \"Comprehend the Paje\",\r\n        \"desc\": \"You can't understand much of what he says... Maybe if I could talk to him beyond words?\",\r\n        \"require\": \"talkpaje\",\r\n        \"cost\":{\r\n            \"mental\": 5,\r\n            \"esoterism\": 25\r\n        },\r\n        \"duration\": 60,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 2,\r\n            \"mental\": 4,\r\n            \"esoterism\": 3\r\n        },\r\n        \"mod\":{\r\n            \"mental.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"explorecity\",\r\n        \"name\": \"Explore the town\",\r\n        \"desc\": \"When the mist dissipates, you can see a calm town\",\r\n        \"require\": \"clearmist\",\r\n        \"duration\": 120,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"helpvillager\",\r\n        \"name\": \"Help out a villager\",\r\n        \"desc\": \"A fairly old man is carrying packages a bit beyond himself\",\r\n        \"require\": \"clearmist\",\r\n        \"duration\": 180,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 3\r\n        },\r\n        \"result\": {\r\n            \"playerattack\": 2,\r\n            \"coin\": 4\r\n        },\r\n        \"mod\": {\r\n            \"stamina.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploremarket\",\r\n        \"name\": \"Explore the market\",\r\n        \"desc\": \"You found the town market while exploring\",\r\n        \"require\": \"explorecity\",\r\n        \"duration\": 300,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buymarketnotes\",\r\n        \"name\": \"Buy merchant notes\",\r\n        \"desc\": \"A shady merchant says he can sells you some of his notes on commerce. For a steepy price. Being able to learn from it, though, depends on you.\",\r\n        \"require\": \"exploremarket\",\r\n        \"max\": 1,\r\n        \"cost\": {\r\n            \"flower\": 50,\r\n            \"mysticbottle\": 3,\r\n            \"mysticflower\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"helpkid\",\r\n        \"name\": \"Help out a kid\",\r\n        \"desc\": \"A kid is cutting some plants. I guess it is his job?\",\r\n        \"require\": \"explorecity\",\r\n        \"max\": 1,\r\n        \"duration\": 200,\r\n        \"run\": {\r\n            \"stamina\": 2\r\n        },\r\n        \"result\": {\r\n            \"coin\": 5,\r\n            \"playerlife\": 3\r\n        },\r\n        \"mod\": {\r\n            \"stamina.max\": 2\r\n        }\r\n    }\r\n]";
GRIArcaniaJson.actionsLunar = "[\r\n    {\r\n        \"id\": \"lunarres1gen\",\r\n        \"name\": \"Sense the moon\",\r\n        \"desc\": \"Doesn't have to be during the night\",\r\n        \"duration\": 25,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"lunarres2gen\",\r\n        \"name\": \"Feel the moon\",\r\n        \"desc\": \"Is it the moon in the sky, or the moon in...\",\r\n        \"duration\": 120,\r\n        \"cost\": {\r\n            \"lunarres1\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres2\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"lunarres3gen\",\r\n        \"name\": \"Be the moon\",\r\n        \"desc\": \"Forget about being yourself\",\r\n        \"duration\": 150,\r\n        \"cost\": {\r\n            \"lunarres1\": 10,\r\n            \"lunarres2\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"lunarmax1\",\r\n        \"name\": \"Moonwatching\",\r\n        \"desc\": \"There is beauty to be seen\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"lunarres1\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 3,\r\n            \"esoterism\": 3\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15\r\n        },\r\n        \"require\": \"lunology-level>1\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax2\",\r\n        \"name\": \"Moongazing\",\r\n        \"desc\": \"There is beauty to be seen\",\r\n        \"duration\": 90,\r\n        \"cost\" : {\r\n            \"lunarres2\": 3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\":10,\r\n            \"lunarres2\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15,\r\n            \"lunarres2.max\": 30,\r\n            \"lunarres3.max\": 1\r\n        },\r\n        \"need\": \"lunology-level>1\",\r\n        \"require\": \"lunarmax1>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax3\",\r\n        \"name\": \"Moonwishing\",\r\n        \"desc\": \"Will it come true?\",\r\n        \"duration\": 150,\r\n        \"cost\" : {\r\n            \"lunarres3\": 3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":2\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15,\r\n            \"lunarres2.max\": 10,\r\n            \"lunarres3.max\": 10,\r\n            \"lunarmax2.max\": 1\r\n            \r\n        },\r\n        \"need\": \"lunology-level>2\",\r\n        \"require\": \"lunarmax2>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax4\",\r\n        \"name\": \"Moonbathing\",\r\n        \"desc\": \"Take off your clothes and let your whole body feel the moon\",\r\n        \"duration\": 250,\r\n        \"cost\" : {\r\n            \"lunarres1\": 50,\r\n            \"lunarres2\": 40,\r\n            \"lunarres3\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 100,\r\n            \"lunarres2.max\": 100,\r\n            \"lunarres3.max\": 100,\r\n            \"lunarmax3.max\": 3\r\n            \r\n        },\r\n        \"need\": \"lunology-level>3\",\r\n        \"require\": \"lunarmax3>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax5\",\r\n        \"name\": \"Moonadoring\",\r\n        \"desc\": \"Develop deeper affection for the moon\",\r\n        \"duration\": 300,\r\n        \"cost\" : {\r\n            \"lunarres1\": 60,\r\n            \"lunarres2\": 50,\r\n            \"lunarres3\": 20\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":10\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 500,\r\n            \"lunarres2.max\": 500,\r\n            \"lunarres3.max\": 500,\r\n            \"lunarmax4.max\": 3\r\n            \r\n        },\r\n        \"need\": \"lunology-level>4\",\r\n        \"require\": \"lunarmax4>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarcandle\",\r\n        \"name\": \"Lunar candle\",\r\n        \"desc\": \"Embed a candle with the light of the moon\",\r\n        \"require\": \"lunology-level>2\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 1,\r\n            \"lunarres1\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"lunarres1.rate\": 100\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunarcandelabra\",\r\n        \"name\": \"Lunar candelabra\",\r\n        \"desc\": \"embed a candelabra with the light of the moon \",\r\n        \"require\": \"lunology-level>3\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 5,\r\n            \"lunarres1\": 100,\r\n            \"lunarres2\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {   \r\n            \"lunarres2.rate\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunarchandeler\",\r\n        \"name\": \"Lunar chandeler\",\r\n        \"desc\": \"embed a chandeler with the light of the moon \",\r\n        \"require\": \"lunology-level>3\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 10,\r\n            \"lunarres1\": 100,\r\n            \"lunarres2\": 100,\r\n            \"lunarres3\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"lunarres3.rate\": 1\r\n        }\r\n    }\r\n]";
GRIArcaniaJson.proceduralactions = "[\r\n    {\r\n        \"id\": \"ritualluar\",\r\n        \"name\": \"Ritual do Luar\",\r\n        \"desc\": \"Ritual of the Moonlight. There are 27 levels to the ritual, each stronger than the last.\",\r\n        \"max\": 27,\r\n        \"require\": \"spiritology-level>1\",\r\n        \"proceduralduration\": {\r\n            \"initial\": 60,\r\n            \"add\": 60\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"proceduralresult\": {\r\n            \"playerlife\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 0\r\n            },\r\n            \"playerattack\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 1\r\n            },\r\n            \"playerdefense\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            }\r\n        },\r\n        \"proceduralcost\": {\r\n            \"esoterism\": {\r\n                \"initial\": 5,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres1\": {\r\n                \"initial\": 1,\r\n                \"growth\": 1.16\r\n            },\r\n            \"riteres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 4,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.08\r\n            },\r\n            \"lunarres1\": {\r\n                \"initial\": 1,\r\n                \"delay\": 1,\r\n                \"growth\": 1.4\r\n            },\r\n            \"lunarres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 5,\r\n                \"growth\": 1.48\r\n            },\r\n            \"lunarres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.5\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"solenidadelua\",\r\n        \"name\": \"Solenidade da Lua\",\r\n        \"desc\": \"Ceremony of the Moonlight. There are 27 levels to the ceremony, each stronger than the last.\",\r\n        \"max\": 27,\r\n        \"require\": \"spiritology-level>2\",\r\n        \"proceduralduration\": {\r\n            \"initial\": 60,\r\n            \"add\": 60\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"proceduralresult\": {\r\n            \"playermagicattack\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 1\r\n            },\r\n            \"playermagicdefense\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            },\r\n            \"playerspeed\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            }\r\n        },\r\n        \"proceduralcost\": {\r\n            \"esoterism\": {\r\n                \"initial\": 5,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres1\": {\r\n                \"initial\": 1,\r\n                \"growth\": 1.16\r\n            },\r\n            \"riteres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 4,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.08\r\n            },\r\n            \"lunarres1\": {\r\n                \"initial\": 1,\r\n                \"delay\": 1,\r\n                \"growth\": 1.4\r\n            },\r\n            \"lunarres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 5,\r\n                \"growth\": 1.48\r\n            },\r\n            \"lunarres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.5\r\n            }\r\n        }\r\n    }\r\n]";
GRIArcaniaJson.resources = "[\r\n    {\r\n        \"id\" : \"reiscoin\",\r\n        \"name\": \"Reis Coin\",\r\n        \"desc\": \"A coin made up of copper. Currency used in the Brazilian Empire.\",\r\n        \"max\": 200,\r\n        \"initial\" : 0,\r\n        \"require\": \"reiscoin\"\r\n    },\r\n\r\n    {\r\n        \"id\" : \"stamina\",\r\n        \"name\": \"Stamina\",\r\n        \"desc\": \"The ability to sustain effort\",\r\n        \"max\": 45,\r\n        \"initial\" : 0\r\n    },\r\n    {\r\n        \"id\" : \"flower\",\r\n        \"desc\": \"Possibly a subspecies of Snapdragon.\\nUnlike Snapdragons found in the Lusitani empire, this one is blue\",\r\n        \"name\": \"Flower\",\r\n        \"max\": 15\r\n    },\r\n    {\r\n        \"id\" : \"candle\",\r\n        \"desc\": \"Can keep a small flame going\",\r\n        \"name\": \"Candle\",\r\n        \"require\": \"candle\",\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"max\": 20\r\n    },\r\n    {\r\n        \"id\" : \"mysticflower\",\r\n        \"desc\": \"The snapdragon goes from blue to purple. Sometimes, it shines during the night.\",\r\n        \"name\": \"Mystic Flower\",\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"require\": \"mysticflower>0\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarflower\",\r\n        \"desc\": \"The snapdragon goes from purple to white. Those who can afford it might use it in place of bonfires\",\r\n        \"name\": \"Lunar Flower\",\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.max\": 2,\r\n            \"esoterism.rate\": 50\r\n        },\r\n        \"require\": \"lunarflower\"\r\n    },\r\n    {\r\n        \"id\" : \"mysticstone\",\r\n        \"desc\": \"You can no longer tell this stone is made of copper. It looks like something out of this world.\",\r\n        \"name\": \"Mystic Stone\",\r\n        \"max\": 3,\r\n        \"mod\": {\r\n            \"esoterism.max\": 20,\r\n            \"riteres1.max\": 15\r\n        },\r\n        \"require\": \"mysticstone\"\r\n    },\r\n    {\r\n        \"id\" : \"mental\",\r\n        \"name\": \"Mental\",\r\n        \"desc\": \"The resistence of the mind\",\r\n        \"max\": 30,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\" : \"creativity\",\r\n        \"name\": \"Creativity\",\r\n        \"desc\": \"Elasticity of thought\",\r\n        \"max\": 30,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\" : \"coin\",\r\n        \"name\": \"Peso Coin\",\r\n        \"desc\": \"A coin made up of silver. Cannot be used in the Brazilian Empire.\",\r\n        \"max\": 10,\r\n        \"initial\" : 0,\r\n        \"require\": \"coin\"\r\n    },\r\n    {\r\n        \"id\" : \"darkleaf\",\r\n        \"name\": \"Alocasia Leaf\",\r\n        \"desc\": \"A black leaf from the Alocasia Plumbea tree. They are expensive, but useful in rituals.\",\r\n        \"max\": 10,\r\n        \"initial\" : 0,\r\n        \"require\": \"darkleaf\"\r\n    },\r\n    {\r\n        \"id\" : \"copperstone\",\r\n        \"name\": \"Copper Stone\",\r\n        \"desc\": \"A stone made up of copper. Some Paje use it to channel the spirits\",\r\n        \"max\": 5,\r\n        \"initial\" : 0,\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"require\": \"copperstone\"\r\n    },\r\n    {\r\n        \"id\" : \"bottle\",\r\n        \"name\": \"Bottle\",\r\n        \"desc\": \"Old and foggy\",\r\n        \"max\": 5,\r\n        \"mod\": {\r\n            \"flower.max\": 5\r\n        },\r\n        \"require\": \"buybottle\"\r\n    },\r\n    {\r\n        \"id\" : \"mysticbottle\",\r\n        \"name\": \"Mystic Bottle\",\r\n        \"desc\": \"There is a weird fog bottled up\",\r\n        \"max\": 5,\r\n        \"mod\": {\r\n            \"flower.max\": 2,\r\n            \"mysticflower.max\": 3,\r\n            \"esoterism.max\": 2\r\n        },\r\n        \"require\": \"mysticbottle\"\r\n    },\r\n    \r\n    {\r\n        \"id\" : \"esoterism\",\r\n        \"name\": \"Esoterism\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 30,\r\n        \"require\": \"flowersahi\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres1\",\r\n        \"name\": \"Rite hope\",\r\n        \"desc\": \"Hope the ritual will go well\",\r\n        \"max\": 15,\r\n        \"require\": \"spiritology-level\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres2\",\r\n        \"name\": \"Rite trust\",\r\n        \"desc\": \"Trust in the workings of the Gods\",\r\n        \"max\": 10,\r\n        \"require\": \"spiritology-level>1\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres3\",\r\n        \"name\": \"Rite faith\",\r\n        \"desc\": \"Faith in the pagan arts\",\r\n        \"max\": 5,\r\n        \"require\": \"spiritology-level>2\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres4\",\r\n        \"name\": \"Rite belief\",\r\n        \"desc\": \"Belief in bigger strenghts and powers\",\r\n        \"max\": 3,\r\n        \"require\": \"spiritology-level>5\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres1\",\r\n        \"name\": \"Lunar energy\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 20,\r\n        \"require\": \"lunology-level\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres2\",\r\n        \"name\": \"Lunar power\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 10,\r\n        \"require\": \"lunology-level>1\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres3\",\r\n        \"name\": \"Lunar force\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 3,\r\n        \"require\": \"lunology-level>2\"\r\n    },\r\n    {\r\n        \"id\" : \"autosellnormal\",\r\n        \"name\": \"Auto selling normal\",\r\n        \"desc\": \"You are auto selling normal items that drop from enemies. Excludes skill sets.\",\r\n        \"max\": 1,\r\n        \"require\": \"autosellnormal\"\r\n    },\r\n    {\r\n        \"id\" : \"playerlevel\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>1\",\r\n        \"max\": -1,\r\n        \"initial\": 99999\r\n    },\r\n    {\r\n        \"id\" : \"playerlevelLAGRIMA\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>999999\",\r\n        \"max\": -1,\r\n        \"initial\": 0\r\n    },\r\n    {\r\n        \"id\" : \"playerlevelAMAZONIA\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>999999\",\r\n        \"max\": -1,\r\n        \"initial\": 99999\r\n    },\r\n    {\r\n        \"id\" : \"playerattack\",\r\n        \"name\": \"Attack Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerattack\"\r\n    },\r\n    {\r\n        \"id\" : \"playerspeed\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"name\": \"Speed Bonus\",\r\n        \"require\": \"playerspeed\"\r\n    },\r\n    {\r\n        \"id\" : \"playermagicattack\",\r\n        \"name\": \"Magic Attack Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playermagicattack\"\r\n    },\r\n    {\r\n        \"id\" : \"playermagicdefense\",\r\n        \"name\": \"Magic Defense Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playermagicdefense\"\r\n    },\r\n    {\r\n        \"id\" : \"playerdefense\",\r\n        \"name\": \"Defense Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerdefense\"\r\n    },\r\n    {\r\n        \"id\" : \"playerlife\",\r\n        \"name\": \"Life Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerlife\"\r\n    }\r\n]";
GRIArcaniaJson.events = "\r\n    [\r\n        {\r\n            \"id\": \"story_beggining\",\r\n            \"name\": \"I open my eyes\",\r\n            \"desc\": \"I feel exhausted and fog is everywhere\",\r\n            \"locked\": false\r\n        },\r\n        {\r\n            \"id\": \"story_fog\",\r\n            \"name\": \"The fog recedes\",\r\n            \"desc\": \"I can see an aged man, sitting by the grass\",\r\n            \"require\": \"throwflowers\"\r\n        },\r\n        {\r\n            \"id\": \"story_feelsahi\",\r\n            \"name\": \"I can feel Sahi \",\r\n            \"desc\": \"My patroness God.\\n We are not exactly best friends, but I take what I can get.\",\r\n            \"require\": \"flowersahi\"\r\n        },\r\n        {\r\n            \"id\": \"story_oldmantalk\",\r\n            \"name\": \"The old man talks to me\",\r\n            \"desc\": \"Telling me about the Gods\",\r\n            \"require\": \"giveflowersoldman\"\r\n        },\r\n        {\r\n            \"id\": \"sahi_mind1\",\r\n            \"name\": \"Sahi invades my mind\",\r\n            \"desc\": \"Overwriting my senses\",\r\n            \"require\": \"mindsahi1\"\r\n        }\r\n    ]\r\n    ";
GRIArcaniaTags.EXPLORATION_MENU = new arcania_logic_TagPointer("exploration",0);
GRIArcaniaTags.TAG_MAP = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["exploration"] = GRIArcaniaTags.EXPLORATION_MENU;
	$r = _g;
	return $r;
}(this));
GRIArcaniaView.LAYOUT_ACTION = "arcania_actions";
GRIArcaniaView.LAYOUT_RESOURCES = "arcania_resources";
GRIArcaniaView.LAYOUT_LOG = "arcania_log";
GRIArcaniaView.TAG_TAB_ARCANIA = new Tag();
GRIArcaniaView.DATA_ACTIONPRESS = "arcania_action";
GRIArcaniaViewLog.LAYOUT_LOG = "arcania_log";
GRIButtons.FEEDBACK_BUTTON = 100;
GRIButtons.SKILL_BUTTON_1 = 101;
GRIButtons.SKILL_BUTTON_2 = 102;
GRIButtons.SKILL_BUTTON_3 = 103;
GRIButtons.SKILL_BUTTON_4 = 104;
GRIButtons.SKILL_BUTTON_5 = 105;
GRIButtons.SKILL_BUTTON_6 = 106;
GRIButtons.SKILL_BUTTON_7 = 107;
GRIConfiguration.MINIMUM_WIDTH = 900;
GRIConfiguration.MINIMUM_HEIGHT = 480;
GRIConfigurer.DIMENSION_ID_LAGRIMA = "LAGRIMA";
GRIConfigurer.DIMENSION_ID_AMAZONIA = "AMAZONIA";
autogen_GriPngs.achiev_a1 = Sprite.create("achiev_a1",64,64);
autogen_GriPngs.achiev_a2 = Sprite.create("achiev_a2",64,64);
autogen_GriPngs.achiev_a3 = Sprite.create("achiev_a3",64,64);
autogen_GriPngs.achiev_e3 = Sprite.create("achiev_e3",64,64);
autogen_GriPngs.arrowdown = Sprite.create("arrowdown",15,22);
autogen_GriPngs.arrowleft = Sprite.create("arrowleft",25,13);
autogen_GriPngs.arrowlefttriple = Sprite.create("arrowlefttriple",30,13);
autogen_GriPngs.arrowrepeat = Sprite.create("arrowrepeat",20,17);
autogen_GriPngs.achiev_e1 = Sprite.create("achiev_e1",64,64);
autogen_GriPngs.arrowup = Sprite.create("arrowup",15,22);
autogen_GriPngs.achiev_e2 = Sprite.create("achiev_e2",64,64);
autogen_GriPngs.arrowrepeatauto = Sprite.create("arrowrepeatauto",19,17);
autogen_GriPngs.back_desert = Sprite.create("back_desert",187,125);
autogen_GriPngs.back_fields = Sprite.create("back_fields",384,216);
autogen_GriPngs.back_forest = Sprite.create("back_forest",384,216);
autogen_GriPngs.back_firecavevolcano = Sprite.create("back_firecavevolcano",384,216);
autogen_GriPngs.back_mountains = Sprite.create("back_mountains",160,120);
autogen_GriPngs.back_inside = Sprite.create("back_inside",360,268);
autogen_GriPngs.blood_1 = Sprite.create("blood_1",128,128);
autogen_GriPngs.back_streets = Sprite.create("back_streets",200,150);
autogen_GriPngs.back_seaside = Sprite.create("back_seaside",384,216);
autogen_GriPngs.blood_2 = Sprite.create("blood_2",128,128);
autogen_GriPngs.battlebutton = Sprite.create("battlebutton",32,32);
autogen_GriPngs.blood_3 = Sprite.create("blood_3",128,128);
autogen_GriPngs.blood_4 = Sprite.create("blood_4",128,128);
autogen_GriPngs.blood_5 = Sprite.create("blood_5",128,128);
autogen_GriPngs.blood_6 = Sprite.create("blood_6",128,128);
autogen_GriPngs.bluegradient = Sprite.create("bluegradient",32,32);
autogen_GriPngs.blood_7 = Sprite.create("blood_7",128,128);
autogen_GriPngs.boot = Sprite.create("boot",21,15);
autogen_GriPngs.back_thunder = Sprite.create("back_thunder",500,408);
autogen_GriPngs.button9a = Sprite.create("button9a",32,32);
autogen_GriPngs.back_cave = Sprite.create("back_cave",384,216);
autogen_GriPngs.buttonback = Sprite.create("buttonback",32,32);
autogen_GriPngs.buttonback_h = Sprite.create("buttonback_h",32,32);
autogen_GriPngs.buttonback_h_disabled = Sprite.create("buttonback_h_disabled",32,32);
autogen_GriPngs.back_snowmountain = Sprite.create("back_snowmountain",160,120);
autogen_GriPngs.buttonselec9a = Sprite.create("buttonselec9a",32,32);
autogen_GriPngs.boss = Sprite.create("boss",512,512);
autogen_GriPngs.bossb = Sprite.create("bossb",512,512);
autogen_GriPngs.buttonkey = Sprite.create("buttonkey",32,32);
autogen_GriPngs.cursor = Sprite.create("cursor",23,23);
autogen_GriPngs.cid_story = Sprite.create("cid_story",512,512);
autogen_GriPngs.dialog9a = Sprite.create("dialog9a",372,94);
autogen_GriPngs.dark_background = Sprite.create("dark_background",693,141);
autogen_GriPngs.circle = Sprite.create("circle",11,11);
autogen_GriPngs.ef_slash_0 = Sprite.create("ef_slash_0",132,83);
autogen_GriPngs.discord = Sprite.create("discord",91,31);
autogen_GriPngs.ef_slash_1 = Sprite.create("ef_slash_1",132,83);
autogen_GriPngs.discordbig = Sprite.create("discordbig",800,272);
autogen_GriPngs.ef_slash_2 = Sprite.create("ef_slash_2",132,83);
autogen_GriPngs.ef_slash_4 = Sprite.create("ef_slash_4",132,83);
autogen_GriPngs.ef_slash_3 = Sprite.create("ef_slash_3",132,83);
autogen_GriPngs.ef_slash_5 = Sprite.create("ef_slash_5",132,83);
autogen_GriPngs.discordb = Sprite.create("discordb",91,31);
autogen_GriPngs.ef_slash_6 = Sprite.create("ef_slash_6",132,83);
autogen_GriPngs.enemy_adamanstoise = Sprite.create("enemy_adamanstoise",262,170);
autogen_GriPngs.enemy_blueflan = Sprite.create("enemy_blueflan",86,54);
autogen_GriPngs.enemyicon = Sprite.create("enemyicon",512,512);
autogen_GriPngs.enemy_bluetiger = Sprite.create("enemy_bluetiger",83,68);
autogen_GriPngs.enemy_buffwitch = Sprite.create("enemy_buffwitch",44,77);
autogen_GriPngs.enemy_dog = Sprite.create("enemy_dog",69,67);
autogen_GriPngs.enemy_Cactuar = Sprite.create("enemy_Cactuar",140,89);
autogen_GriPngs.enemy_elftoad = Sprite.create("enemy_elftoad",61,37);
autogen_GriPngs.enemy_giant = Sprite.create("enemy_giant",172,144);
autogen_GriPngs.downshadow = Sprite.create("downshadow",32,32);
autogen_GriPngs.enemy_goblin = Sprite.create("enemy_goblin",53,55);
autogen_GriPngs.enemy_hamedomonk = Sprite.create("enemy_hamedomonk",59,97);
autogen_GriPngs.enemy_nutkin = Sprite.create("enemy_nutkin",35,29);
autogen_GriPngs.enemy_mysticelf = Sprite.create("enemy_mysticelf",49,60);
autogen_GriPngs.enemy_reaper = Sprite.create("enemy_reaper",67,52);
autogen_GriPngs.enemy_pumpkinstar = Sprite.create("enemy_pumpkinstar",194,118);
autogen_GriPngs.enemy_tonberry = Sprite.create("enemy_tonberry",53,62);
autogen_GriPngs.enemy_straycat = Sprite.create("enemy_straycat",45,44);
autogen_GriPngs.enemy_turtle = Sprite.create("enemy_turtle",46,46);
autogen_GriPngs.enemy_troll = Sprite.create("enemy_troll",172,122);
autogen_GriPngs.enemy_witchkiller = Sprite.create("enemy_witchkiller",69,69);
autogen_GriPngs.enemy_witchhunter = Sprite.create("enemy_witchhunter",87,86);
autogen_GriPngs.e_AuroraRing = Sprite.create("e_AuroraRing",128,128);
autogen_GriPngs.enemy_wolf = Sprite.create("enemy_wolf",80,60);
autogen_GriPngs.e_Burst_1 = Sprite.create("e_Burst_1",256,256);
autogen_GriPngs.e_Fog2001 = Sprite.create("e_Fog2001",128,128);
autogen_GriPngs.e_check = Sprite.create("e_check",256,193);
autogen_GriPngs.e_SaintArrow = Sprite.create("e_SaintArrow",64,128);
autogen_GriPngs.e_slash = Sprite.create("e_slash",256,255);
autogen_GriPngs.e_Spark001 = Sprite.create("e_Spark001",128,128);
autogen_GriPngs.enemy_yellowflan = Sprite.create("enemy_yellowflan",91,60);
autogen_GriPngs.font10 = Sprite.create("font10",512,512);
autogen_GriPngs.e_whitecircle_line = Sprite.create("e_whitecircle_line",256,256);
autogen_GriPngs.font12_0 = Sprite.create("font12_0",256,256);
autogen_GriPngs.font16_0 = Sprite.create("font16_0",256,256);
autogen_GriPngs.font14_0 = Sprite.create("font14_0",256,256);
autogen_GriPngs.font20 = Sprite.create("font20",512,512);
autogen_GriPngs.fxFire01 = Sprite.create("fxFire01",96,144);
autogen_GriPngs.fxBuff = Sprite.create("fxBuff",1547,119);
autogen_GriPngs.enemy_giantrat = Sprite.create("enemy_giantrat",106,36);
autogen_GriPngs.enemy_redflan = Sprite.create("enemy_redflan",64,57);
autogen_GriPngs.fxDebuff = Sprite.create("fxDebuff",2048,128);
autogen_GriPngs.fxFire02 = Sprite.create("fxFire02",96,144);
autogen_GriPngs.fxFire03 = Sprite.create("fxFire03",96,144);
autogen_GriPngs.fxFire05 = Sprite.create("fxFire05",96,144);
autogen_GriPngs.fxFire06 = Sprite.create("fxFire06",96,144);
autogen_GriPngs.fxFire04 = Sprite.create("fxFire04",96,144);
autogen_GriPngs.fxFire10 = Sprite.create("fxFire10",96,144);
autogen_GriPngs.fxFire11 = Sprite.create("fxFire11",96,144);
autogen_GriPngs.fxFire08 = Sprite.create("fxFire08",96,144);
autogen_GriPngs.fxFire12 = Sprite.create("fxFire12",96,144);
autogen_GriPngs.fxFire09 = Sprite.create("fxFire09",96,144);
autogen_GriPngs.fxFire07 = Sprite.create("fxFire07",96,144);
autogen_GriPngs.gearrepeat = Sprite.create("gearrepeat",27,16);
autogen_GriPngs.fxHeal = Sprite.create("fxHeal",512,512);
autogen_GriPngs.greengradient = Sprite.create("greengradient",32,32);
autogen_GriPngs.fxIce = Sprite.create("fxIce",1280,128);
autogen_GriPngs.fxThunder = Sprite.create("fxThunder",960,624);
autogen_GriPngs.heroicon = Sprite.create("heroicon",512,512);
autogen_GriPngs.hero_attackA = Sprite.create("hero_attackA",96,96);
autogen_GriPngs.hero_attackB = Sprite.create("hero_attackB",96,96);
autogen_GriPngs.hero_attackD = Sprite.create("hero_attackD",96,96);
autogen_GriPngs.hero_attackC = Sprite.create("hero_attackC",96,112);
autogen_GriPngs.hero_run2 = Sprite.create("hero_run2",62,64);
autogen_GriPngs.hero_run1 = Sprite.create("hero_run1",62,64);
autogen_GriPngs.hero_dying2 = Sprite.create("hero_dying2",64,64);
autogen_GriPngs.hero_run3 = Sprite.create("hero_run3",62,64);
autogen_GriPngs.hero_run4 = Sprite.create("hero_run4",62,64);
autogen_GriPngs.hero_sleep = Sprite.create("hero_sleep",94,94);
autogen_GriPngs.hero_spell2 = Sprite.create("hero_spell2",96,96);
autogen_GriPngs.hero_sleep2 = Sprite.create("hero_sleep2",94,94);
autogen_GriPngs.hero_stillB = Sprite.create("hero_stillB",64,64);
autogen_GriPngs.iconBlood = Sprite.create("iconBlood",18,18);
autogen_GriPngs.hero_still = Sprite.create("hero_still",64,64);
autogen_GriPngs.iconAttack = Sprite.create("iconAttack",18,18);
autogen_GriPngs.iconBloodthirst = Sprite.create("iconBloodthirst",18,18);
autogen_GriPngs.hero_stillD = Sprite.create("hero_stillD",64,64);
autogen_GriPngs.hero_stillC = Sprite.create("hero_stillC",64,64);
autogen_GriPngs.iconDeathblood = Sprite.create("iconDeathblood",18,18);
autogen_GriPngs.iconCounter = Sprite.create("iconCounter",18,18);
autogen_GriPngs.iconDefense = Sprite.create("iconDefense",18,18);
autogen_GriPngs.iconLifeMax = Sprite.create("iconLifeMax",18,18);
autogen_GriPngs.iconfiredamage = Sprite.create("iconfiredamage",16,16);
autogen_GriPngs.iconMagicAttack = Sprite.create("iconMagicAttack",18,18);
autogen_GriPngs.iconModLocke = Sprite.create("iconModLocke",18,18);
autogen_GriPngs.iconModLulu = Sprite.create("iconModLulu",18,18);
autogen_GriPngs.iconicedamage = Sprite.create("iconicedamage",16,16);
autogen_GriPngs.iconModThick = Sprite.create("iconModThick",18,18);
autogen_GriPngs.iconModTranquil = Sprite.create("iconModTranquil",18,18);
autogen_GriPngs.iconModVivi = Sprite.create("iconModVivi",18,18);
autogen_GriPngs.iconMagicDefense = Sprite.create("iconMagicDefense",18,18);
autogen_GriPngs.iconModRage = Sprite.create("iconModRage",18,18);
autogen_GriPngs.iconModVincent = Sprite.create("iconModVincent",18,18);
autogen_GriPngs.iconMystic = Sprite.create("iconMystic",18,18);
autogen_GriPngs.iconSkillSet = Sprite.create("iconSkillSet",32,32);
autogen_GriPngs.iconPiercing = Sprite.create("iconPiercing",18,18);
autogen_GriPngs.iconModAuron = Sprite.create("iconModAuron",18,18);
autogen_GriPngs.iconSpeed = Sprite.create("iconSpeed",18,18);
autogen_GriPngs.iconMPMax = Sprite.create("iconMPMax",18,18);
autogen_GriPngs.iconSafeguard = Sprite.create("iconSafeguard",18,18);
autogen_GriPngs.iconVeteran = Sprite.create("iconVeteran",18,18);
autogen_GriPngs.iconWFirerod = Sprite.create("iconWFirerod",32,32);
autogen_GriPngs.iconWBastardSword = Sprite.create("iconWBastardSword",38,38);
autogen_GriPngs.iconWBroadSword = Sprite.create("iconWBroadSword",38,38);
autogen_GriPngs.iconthunderdamage = Sprite.create("iconthunderdamage",16,16);
autogen_GriPngs.iconWIcerod = Sprite.create("iconWIcerod",32,32);
autogen_GriPngs.iconWIcewall = Sprite.create("iconWIcewall",32,32);
autogen_GriPngs.iconWDagger = Sprite.create("iconWDagger",38,38);
autogen_GriPngs.iconWPlate = Sprite.create("iconWPlate",32,32);
autogen_GriPngs.iconWFlamedge = Sprite.create("iconWFlamedge",38,38);
autogen_GriPngs.iconWHeavySword = Sprite.create("iconWHeavySword",38,38);
autogen_GriPngs.iconWRobe = Sprite.create("iconWRobe",32,32);
autogen_GriPngs.iconWShirt = Sprite.create("iconWShirt",32,32);
autogen_GriPngs.iconWThunderod = Sprite.create("iconWThunderod",32,32);
autogen_GriPngs.iconWTreetrunk = Sprite.create("iconWTreetrunk",32,32);
autogen_GriPngs.iconWTunic = Sprite.create("iconWTunic",32,32);
autogen_GriPngs.iconWVest = Sprite.create("iconWVest",32,32);
autogen_GriPngs.icon_gold = Sprite.create("icon_gold",16,16);
autogen_GriPngs.iconWWoodSword = Sprite.create("iconWWoodSword",38,38);
autogen_GriPngs.iracema_story = Sprite.create("iracema_story",512,512);
autogen_GriPngs.iconWThunderbolt = Sprite.create("iconWThunderbolt",32,32);
autogen_GriPngs.isabelicon = Sprite.create("isabelicon",512,512);
autogen_GriPngs.lato13 = Sprite.create("lato13",512,512);
autogen_GriPngs.lato16 = Sprite.create("lato16",512,512);
autogen_GriPngs.leaf = Sprite.create("leaf",21,21);
autogen_GriPngs.lock = Sprite.create("lock",30,30);
autogen_GriPngs.lock_shake = Sprite.create("lock_shake",1792,256);
autogen_GriPngs.lock_explosion = Sprite.create("lock_explosion",3072,256);
autogen_GriPngs.isabel_story = Sprite.create("isabel_story",512,512);
autogen_GriPngs.lato15 = Sprite.create("lato15",512,512);
autogen_GriPngs.logo = Sprite.create("logo",420,360);
autogen_GriPngs.loot_bag = Sprite.create("loot_bag",32,32);
autogen_GriPngs.notification_message = Sprite.create("notification_message",324,55);
autogen_GriPngs.lato17 = Sprite.create("lato17",512,512);
autogen_GriPngs.main_story = Sprite.create("main_story",512,512);
autogen_GriPngs.pinkgradient = Sprite.create("pinkgradient",32,32);
autogen_GriPngs.purpleback = Sprite.create("purpleback",44,39);
autogen_GriPngs.number_test = Sprite.create("number_test",21,14);
autogen_GriPngs.hero_dying1 = Sprite.create("hero_dying1",64,64);
autogen_GriPngs.marino_story = Sprite.create("marino_story",512,512);
autogen_GriPngs.purplegradient = Sprite.create("purplegradient",32,32);
autogen_GriPngs.mom_story = Sprite.create("mom_story",512,512);
autogen_GriPngs.shield = Sprite.create("shield",15,15);
autogen_GriPngs.pedroiv_story = Sprite.create("pedroiv_story",512,512);
autogen_GriPngs.skillSbloodlust = Sprite.create("skillSbloodlust",100,100);
autogen_GriPngs.skillSarmorbreak = Sprite.create("skillSarmorbreak",60,60);
autogen_GriPngs.skillSattackbreak = Sprite.create("skillSattackbreak",110,110);
autogen_GriPngs.skillSfogan = Sprite.create("skillSfogan",78,78);
autogen_GriPngs.skillSbloodycut = Sprite.create("skillSbloodycut",78,78);
autogen_GriPngs.skillScure = Sprite.create("skillScure",100,100);
autogen_GriPngs.skillSdespell = Sprite.create("skillSdespell",80,80);
autogen_GriPngs.skillSfogo = Sprite.create("skillSfogo",80,80);
autogen_GriPngs.skillSfoganzan = Sprite.create("skillSfoganzan",80,80);
autogen_GriPngs.skillSgelan = Sprite.create("skillSgelan",78,78);
autogen_GriPngs.skillSgelo = Sprite.create("skillSgelo",78,78);
autogen_GriPngs.skillSgelanzan = Sprite.create("skillSgelanzan",80,80);
autogen_GriPngs.skillShaste = Sprite.create("skillShaste",90,90);
autogen_GriPngs.skillSlightslash = Sprite.create("skillSlightslash",78,78);
autogen_GriPngs.skillSheavyslash = Sprite.create("skillSheavyslash",78,78);
autogen_GriPngs.skillSmagick = Sprite.create("skillSmagick",78,78);
autogen_GriPngs.skillSnoblesse = Sprite.create("skillSnoblesse",78,78);
autogen_GriPngs.skillSraian = Sprite.create("skillSraian",80,80);
autogen_GriPngs.skillSraianzan = Sprite.create("skillSraianzan",80,80);
autogen_GriPngs.skillSraio = Sprite.create("skillSraio",80,80);
autogen_GriPngs.skillSprotect = Sprite.create("skillSprotect",90,90);
autogen_GriPngs.skillSregen = Sprite.create("skillSregen",100,100);
autogen_GriPngs.skillSshell = Sprite.create("skillSshell",90,90);
autogen_GriPngs.skull = Sprite.create("skull",18,20);
autogen_GriPngs.skillSsharpen = Sprite.create("skillSsharpen",84,84);
autogen_GriPngs.slotempty1 = Sprite.create("slotempty1",32,32);
autogen_GriPngs.slotempty2 = Sprite.create("slotempty2",38,38);
autogen_GriPngs.skillSslash = Sprite.create("skillSslash",78,78);
autogen_GriPngs.skillStrevas = Sprite.create("skillStrevas",100,100);
autogen_GriPngs.swordwithshadow = Sprite.create("swordwithshadow",38,38);
autogen_GriPngs.tabback = Sprite.create("tabback",32,32);
autogen_GriPngs.steam = Sprite.create("steam",81,24);
autogen_GriPngs.Unnamed_0 = Sprite.create("Unnamed_0",256,256);
autogen_GriPngs.Steamlogo = Sprite.create("Steamlogo",275,83);
autogen_GriPngs.whitediamond = Sprite.create("whitediamond",15,15);
autogen_GriPngs.whitedot = Sprite.create("whitedot",1,1);
autogen_GriPngs.whitep = Sprite.create("whitep",1,1);
autogen_GriPngs.whitecircle = Sprite.create("whitecircle",512,512);
autogen_GriPngs.vitor_story = Sprite.create("vitor_story",512,512);
autogen_GriPngs.voawon12 = Sprite.create("voawon12",512,512);
autogen_GriPngs.allSprites = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["achiev_a1"] = autogen_GriPngs.achiev_a1;
	_g.h["achiev_a2"] = autogen_GriPngs.achiev_a2;
	_g.h["achiev_a3"] = autogen_GriPngs.achiev_a3;
	_g.h["achiev_e3"] = autogen_GriPngs.achiev_e3;
	_g.h["arrowdown"] = autogen_GriPngs.arrowdown;
	_g.h["arrowleft"] = autogen_GriPngs.arrowleft;
	_g.h["arrowlefttriple"] = autogen_GriPngs.arrowlefttriple;
	_g.h["arrowrepeat"] = autogen_GriPngs.arrowrepeat;
	_g.h["achiev_e1"] = autogen_GriPngs.achiev_e1;
	_g.h["arrowup"] = autogen_GriPngs.arrowup;
	_g.h["achiev_e2"] = autogen_GriPngs.achiev_e2;
	_g.h["arrowrepeatauto"] = autogen_GriPngs.arrowrepeatauto;
	_g.h["back_desert"] = autogen_GriPngs.back_desert;
	_g.h["back_fields"] = autogen_GriPngs.back_fields;
	_g.h["back_forest"] = autogen_GriPngs.back_forest;
	_g.h["back_firecavevolcano"] = autogen_GriPngs.back_firecavevolcano;
	_g.h["back_mountains"] = autogen_GriPngs.back_mountains;
	_g.h["back_inside"] = autogen_GriPngs.back_inside;
	_g.h["blood_1"] = autogen_GriPngs.blood_1;
	_g.h["back_streets"] = autogen_GriPngs.back_streets;
	_g.h["back_seaside"] = autogen_GriPngs.back_seaside;
	_g.h["blood_2"] = autogen_GriPngs.blood_2;
	_g.h["battlebutton"] = autogen_GriPngs.battlebutton;
	_g.h["blood_3"] = autogen_GriPngs.blood_3;
	_g.h["blood_4"] = autogen_GriPngs.blood_4;
	_g.h["blood_5"] = autogen_GriPngs.blood_5;
	_g.h["blood_6"] = autogen_GriPngs.blood_6;
	_g.h["bluegradient"] = autogen_GriPngs.bluegradient;
	_g.h["blood_7"] = autogen_GriPngs.blood_7;
	_g.h["boot"] = autogen_GriPngs.boot;
	_g.h["back_thunder"] = autogen_GriPngs.back_thunder;
	_g.h["button9a"] = autogen_GriPngs.button9a;
	_g.h["back_cave"] = autogen_GriPngs.back_cave;
	_g.h["buttonback"] = autogen_GriPngs.buttonback;
	_g.h["buttonback_h"] = autogen_GriPngs.buttonback_h;
	_g.h["buttonback_h_disabled"] = autogen_GriPngs.buttonback_h_disabled;
	_g.h["back_snowmountain"] = autogen_GriPngs.back_snowmountain;
	_g.h["buttonselec9a"] = autogen_GriPngs.buttonselec9a;
	_g.h["boss"] = autogen_GriPngs.boss;
	_g.h["bossb"] = autogen_GriPngs.bossb;
	_g.h["buttonkey"] = autogen_GriPngs.buttonkey;
	_g.h["cursor"] = autogen_GriPngs.cursor;
	_g.h["cid_story"] = autogen_GriPngs.cid_story;
	_g.h["dialog9a"] = autogen_GriPngs.dialog9a;
	_g.h["dark_background"] = autogen_GriPngs.dark_background;
	_g.h["circle"] = autogen_GriPngs.circle;
	_g.h["ef_slash_0"] = autogen_GriPngs.ef_slash_0;
	_g.h["discord"] = autogen_GriPngs.discord;
	_g.h["ef_slash_1"] = autogen_GriPngs.ef_slash_1;
	_g.h["discordbig"] = autogen_GriPngs.discordbig;
	_g.h["ef_slash_2"] = autogen_GriPngs.ef_slash_2;
	_g.h["ef_slash_4"] = autogen_GriPngs.ef_slash_4;
	_g.h["ef_slash_3"] = autogen_GriPngs.ef_slash_3;
	_g.h["ef_slash_5"] = autogen_GriPngs.ef_slash_5;
	_g.h["discordb"] = autogen_GriPngs.discordb;
	_g.h["ef_slash_6"] = autogen_GriPngs.ef_slash_6;
	_g.h["enemy_adamanstoise"] = autogen_GriPngs.enemy_adamanstoise;
	_g.h["enemy_blueflan"] = autogen_GriPngs.enemy_blueflan;
	_g.h["enemyicon"] = autogen_GriPngs.enemyicon;
	_g.h["enemy_bluetiger"] = autogen_GriPngs.enemy_bluetiger;
	_g.h["enemy_buffwitch"] = autogen_GriPngs.enemy_buffwitch;
	_g.h["enemy_dog"] = autogen_GriPngs.enemy_dog;
	_g.h["enemy_Cactuar"] = autogen_GriPngs.enemy_Cactuar;
	_g.h["enemy_elftoad"] = autogen_GriPngs.enemy_elftoad;
	_g.h["enemy_giant"] = autogen_GriPngs.enemy_giant;
	_g.h["downshadow"] = autogen_GriPngs.downshadow;
	_g.h["enemy_goblin"] = autogen_GriPngs.enemy_goblin;
	_g.h["enemy_hamedomonk"] = autogen_GriPngs.enemy_hamedomonk;
	_g.h["enemy_nutkin"] = autogen_GriPngs.enemy_nutkin;
	_g.h["enemy_mysticelf"] = autogen_GriPngs.enemy_mysticelf;
	_g.h["enemy_reaper"] = autogen_GriPngs.enemy_reaper;
	_g.h["enemy_pumpkinstar"] = autogen_GriPngs.enemy_pumpkinstar;
	_g.h["enemy_tonberry"] = autogen_GriPngs.enemy_tonberry;
	_g.h["enemy_straycat"] = autogen_GriPngs.enemy_straycat;
	_g.h["enemy_turtle"] = autogen_GriPngs.enemy_turtle;
	_g.h["enemy_troll"] = autogen_GriPngs.enemy_troll;
	_g.h["enemy_witchkiller"] = autogen_GriPngs.enemy_witchkiller;
	_g.h["enemy_witchhunter"] = autogen_GriPngs.enemy_witchhunter;
	_g.h["e_AuroraRing"] = autogen_GriPngs.e_AuroraRing;
	_g.h["enemy_wolf"] = autogen_GriPngs.enemy_wolf;
	_g.h["e_Burst_1"] = autogen_GriPngs.e_Burst_1;
	_g.h["e_Fog2001"] = autogen_GriPngs.e_Fog2001;
	_g.h["e_check"] = autogen_GriPngs.e_check;
	_g.h["e_SaintArrow"] = autogen_GriPngs.e_SaintArrow;
	_g.h["e_slash"] = autogen_GriPngs.e_slash;
	_g.h["e_Spark001"] = autogen_GriPngs.e_Spark001;
	_g.h["enemy_yellowflan"] = autogen_GriPngs.enemy_yellowflan;
	_g.h["font10"] = autogen_GriPngs.font10;
	_g.h["e_whitecircle_line"] = autogen_GriPngs.e_whitecircle_line;
	_g.h["font12_0"] = autogen_GriPngs.font12_0;
	_g.h["font16_0"] = autogen_GriPngs.font16_0;
	_g.h["font14_0"] = autogen_GriPngs.font14_0;
	_g.h["font20"] = autogen_GriPngs.font20;
	_g.h["fxFire01"] = autogen_GriPngs.fxFire01;
	_g.h["fxBuff"] = autogen_GriPngs.fxBuff;
	_g.h["enemy_giantrat"] = autogen_GriPngs.enemy_giantrat;
	_g.h["enemy_redflan"] = autogen_GriPngs.enemy_redflan;
	_g.h["fxDebuff"] = autogen_GriPngs.fxDebuff;
	_g.h["fxFire02"] = autogen_GriPngs.fxFire02;
	_g.h["fxFire03"] = autogen_GriPngs.fxFire03;
	_g.h["fxFire05"] = autogen_GriPngs.fxFire05;
	_g.h["fxFire06"] = autogen_GriPngs.fxFire06;
	_g.h["fxFire04"] = autogen_GriPngs.fxFire04;
	_g.h["fxFire10"] = autogen_GriPngs.fxFire10;
	_g.h["fxFire11"] = autogen_GriPngs.fxFire11;
	_g.h["fxFire08"] = autogen_GriPngs.fxFire08;
	_g.h["fxFire12"] = autogen_GriPngs.fxFire12;
	_g.h["fxFire09"] = autogen_GriPngs.fxFire09;
	_g.h["fxFire07"] = autogen_GriPngs.fxFire07;
	_g.h["gearrepeat"] = autogen_GriPngs.gearrepeat;
	_g.h["fxHeal"] = autogen_GriPngs.fxHeal;
	_g.h["greengradient"] = autogen_GriPngs.greengradient;
	_g.h["fxIce"] = autogen_GriPngs.fxIce;
	_g.h["fxThunder"] = autogen_GriPngs.fxThunder;
	_g.h["heroicon"] = autogen_GriPngs.heroicon;
	_g.h["hero_attackA"] = autogen_GriPngs.hero_attackA;
	_g.h["hero_attackB"] = autogen_GriPngs.hero_attackB;
	_g.h["hero_attackD"] = autogen_GriPngs.hero_attackD;
	_g.h["hero_attackC"] = autogen_GriPngs.hero_attackC;
	_g.h["hero_run2"] = autogen_GriPngs.hero_run2;
	_g.h["hero_run1"] = autogen_GriPngs.hero_run1;
	_g.h["hero_dying2"] = autogen_GriPngs.hero_dying2;
	_g.h["hero_run3"] = autogen_GriPngs.hero_run3;
	_g.h["hero_run4"] = autogen_GriPngs.hero_run4;
	_g.h["hero_sleep"] = autogen_GriPngs.hero_sleep;
	_g.h["hero_spell2"] = autogen_GriPngs.hero_spell2;
	_g.h["hero_sleep2"] = autogen_GriPngs.hero_sleep2;
	_g.h["hero_stillB"] = autogen_GriPngs.hero_stillB;
	_g.h["iconBlood"] = autogen_GriPngs.iconBlood;
	_g.h["hero_still"] = autogen_GriPngs.hero_still;
	_g.h["iconAttack"] = autogen_GriPngs.iconAttack;
	_g.h["iconBloodthirst"] = autogen_GriPngs.iconBloodthirst;
	_g.h["hero_stillD"] = autogen_GriPngs.hero_stillD;
	_g.h["hero_stillC"] = autogen_GriPngs.hero_stillC;
	_g.h["iconDeathblood"] = autogen_GriPngs.iconDeathblood;
	_g.h["iconCounter"] = autogen_GriPngs.iconCounter;
	_g.h["iconDefense"] = autogen_GriPngs.iconDefense;
	_g.h["iconLifeMax"] = autogen_GriPngs.iconLifeMax;
	_g.h["iconfiredamage"] = autogen_GriPngs.iconfiredamage;
	_g.h["iconMagicAttack"] = autogen_GriPngs.iconMagicAttack;
	_g.h["iconModLocke"] = autogen_GriPngs.iconModLocke;
	_g.h["iconModLulu"] = autogen_GriPngs.iconModLulu;
	_g.h["iconicedamage"] = autogen_GriPngs.iconicedamage;
	_g.h["iconModThick"] = autogen_GriPngs.iconModThick;
	_g.h["iconModTranquil"] = autogen_GriPngs.iconModTranquil;
	_g.h["iconModVivi"] = autogen_GriPngs.iconModVivi;
	_g.h["iconMagicDefense"] = autogen_GriPngs.iconMagicDefense;
	_g.h["iconModRage"] = autogen_GriPngs.iconModRage;
	_g.h["iconModVincent"] = autogen_GriPngs.iconModVincent;
	_g.h["iconMystic"] = autogen_GriPngs.iconMystic;
	_g.h["iconSkillSet"] = autogen_GriPngs.iconSkillSet;
	_g.h["iconPiercing"] = autogen_GriPngs.iconPiercing;
	_g.h["iconModAuron"] = autogen_GriPngs.iconModAuron;
	_g.h["iconSpeed"] = autogen_GriPngs.iconSpeed;
	_g.h["iconMPMax"] = autogen_GriPngs.iconMPMax;
	_g.h["iconSafeguard"] = autogen_GriPngs.iconSafeguard;
	_g.h["iconVeteran"] = autogen_GriPngs.iconVeteran;
	_g.h["iconWFirerod"] = autogen_GriPngs.iconWFirerod;
	_g.h["iconWBastardSword"] = autogen_GriPngs.iconWBastardSword;
	_g.h["iconWBroadSword"] = autogen_GriPngs.iconWBroadSword;
	_g.h["iconthunderdamage"] = autogen_GriPngs.iconthunderdamage;
	_g.h["iconWIcerod"] = autogen_GriPngs.iconWIcerod;
	_g.h["iconWIcewall"] = autogen_GriPngs.iconWIcewall;
	_g.h["iconWDagger"] = autogen_GriPngs.iconWDagger;
	_g.h["iconWPlate"] = autogen_GriPngs.iconWPlate;
	_g.h["iconWFlamedge"] = autogen_GriPngs.iconWFlamedge;
	_g.h["iconWHeavySword"] = autogen_GriPngs.iconWHeavySword;
	_g.h["iconWRobe"] = autogen_GriPngs.iconWRobe;
	_g.h["iconWShirt"] = autogen_GriPngs.iconWShirt;
	_g.h["iconWThunderod"] = autogen_GriPngs.iconWThunderod;
	_g.h["iconWTreetrunk"] = autogen_GriPngs.iconWTreetrunk;
	_g.h["iconWTunic"] = autogen_GriPngs.iconWTunic;
	_g.h["iconWVest"] = autogen_GriPngs.iconWVest;
	_g.h["icon_gold"] = autogen_GriPngs.icon_gold;
	_g.h["iconWWoodSword"] = autogen_GriPngs.iconWWoodSword;
	_g.h["iracema_story"] = autogen_GriPngs.iracema_story;
	_g.h["iconWThunderbolt"] = autogen_GriPngs.iconWThunderbolt;
	_g.h["isabelicon"] = autogen_GriPngs.isabelicon;
	_g.h["lato13"] = autogen_GriPngs.lato13;
	_g.h["lato16"] = autogen_GriPngs.lato16;
	_g.h["leaf"] = autogen_GriPngs.leaf;
	_g.h["lock"] = autogen_GriPngs.lock;
	_g.h["lock_shake"] = autogen_GriPngs.lock_shake;
	_g.h["lock_explosion"] = autogen_GriPngs.lock_explosion;
	_g.h["isabel_story"] = autogen_GriPngs.isabel_story;
	_g.h["lato15"] = autogen_GriPngs.lato15;
	_g.h["logo"] = autogen_GriPngs.logo;
	_g.h["loot_bag"] = autogen_GriPngs.loot_bag;
	_g.h["notification_message"] = autogen_GriPngs.notification_message;
	_g.h["lato17"] = autogen_GriPngs.lato17;
	_g.h["main_story"] = autogen_GriPngs.main_story;
	_g.h["pinkgradient"] = autogen_GriPngs.pinkgradient;
	_g.h["purpleback"] = autogen_GriPngs.purpleback;
	_g.h["number_test"] = autogen_GriPngs.number_test;
	_g.h["hero_dying1"] = autogen_GriPngs.hero_dying1;
	_g.h["marino_story"] = autogen_GriPngs.marino_story;
	_g.h["purplegradient"] = autogen_GriPngs.purplegradient;
	_g.h["mom_story"] = autogen_GriPngs.mom_story;
	_g.h["shield"] = autogen_GriPngs.shield;
	_g.h["pedroiv_story"] = autogen_GriPngs.pedroiv_story;
	_g.h["skillSbloodlust"] = autogen_GriPngs.skillSbloodlust;
	_g.h["skillSarmorbreak"] = autogen_GriPngs.skillSarmorbreak;
	_g.h["skillSattackbreak"] = autogen_GriPngs.skillSattackbreak;
	_g.h["skillSfogan"] = autogen_GriPngs.skillSfogan;
	_g.h["skillSbloodycut"] = autogen_GriPngs.skillSbloodycut;
	_g.h["skillScure"] = autogen_GriPngs.skillScure;
	_g.h["skillSdespell"] = autogen_GriPngs.skillSdespell;
	_g.h["skillSfogo"] = autogen_GriPngs.skillSfogo;
	_g.h["skillSfoganzan"] = autogen_GriPngs.skillSfoganzan;
	_g.h["skillSgelan"] = autogen_GriPngs.skillSgelan;
	_g.h["skillSgelo"] = autogen_GriPngs.skillSgelo;
	_g.h["skillSgelanzan"] = autogen_GriPngs.skillSgelanzan;
	_g.h["skillShaste"] = autogen_GriPngs.skillShaste;
	_g.h["skillSlightslash"] = autogen_GriPngs.skillSlightslash;
	_g.h["skillSheavyslash"] = autogen_GriPngs.skillSheavyslash;
	_g.h["skillSmagick"] = autogen_GriPngs.skillSmagick;
	_g.h["skillSnoblesse"] = autogen_GriPngs.skillSnoblesse;
	_g.h["skillSraian"] = autogen_GriPngs.skillSraian;
	_g.h["skillSraianzan"] = autogen_GriPngs.skillSraianzan;
	_g.h["skillSraio"] = autogen_GriPngs.skillSraio;
	_g.h["skillSprotect"] = autogen_GriPngs.skillSprotect;
	_g.h["skillSregen"] = autogen_GriPngs.skillSregen;
	_g.h["skillSshell"] = autogen_GriPngs.skillSshell;
	_g.h["skull"] = autogen_GriPngs.skull;
	_g.h["skillSsharpen"] = autogen_GriPngs.skillSsharpen;
	_g.h["slotempty1"] = autogen_GriPngs.slotempty1;
	_g.h["slotempty2"] = autogen_GriPngs.slotempty2;
	_g.h["skillSslash"] = autogen_GriPngs.skillSslash;
	_g.h["skillStrevas"] = autogen_GriPngs.skillStrevas;
	_g.h["swordwithshadow"] = autogen_GriPngs.swordwithshadow;
	_g.h["tabback"] = autogen_GriPngs.tabback;
	_g.h["steam"] = autogen_GriPngs.steam;
	_g.h["Unnamed_0"] = autogen_GriPngs.Unnamed_0;
	_g.h["Steamlogo"] = autogen_GriPngs.Steamlogo;
	_g.h["whitediamond"] = autogen_GriPngs.whitediamond;
	_g.h["whitedot"] = autogen_GriPngs.whitedot;
	_g.h["whitep"] = autogen_GriPngs.whitep;
	_g.h["whitecircle"] = autogen_GriPngs.whitecircle;
	_g.h["vitor_story"] = autogen_GriPngs.vitor_story;
	_g.h["voawon12"] = autogen_GriPngs.voawon12;
	$r = _g;
	return $r;
}(this));
autogen_GriPngs.allSpriteFiles = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["achiev_a1"] = "achiev_a1.png";
	_g.h["achiev_a2"] = "achiev_a2.png";
	_g.h["achiev_a3"] = "achiev_a3.png";
	_g.h["achiev_e3"] = "achiev_e3.png";
	_g.h["arrowdown"] = "arrowdown.png";
	_g.h["arrowleft"] = "arrowleft.png";
	_g.h["arrowlefttriple"] = "arrowlefttriple.png";
	_g.h["arrowrepeat"] = "arrowrepeat.png";
	_g.h["achiev_e1"] = "achiev_e1.png";
	_g.h["arrowup"] = "arrowup.png";
	_g.h["achiev_e2"] = "achiev_e2.png";
	_g.h["arrowrepeatauto"] = "arrowrepeatauto.png";
	_g.h["back_desert"] = "back_desert.PNG";
	_g.h["back_fields"] = "back_fields.PNG";
	_g.h["back_forest"] = "back_forest.PNG";
	_g.h["back_firecavevolcano"] = "back_firecavevolcano.PNG";
	_g.h["back_mountains"] = "back_mountains.PNG";
	_g.h["back_inside"] = "back_inside.PNG";
	_g.h["blood_1"] = "blood_1.png";
	_g.h["back_streets"] = "back_streets.PNG";
	_g.h["back_seaside"] = "back_seaside.PNG";
	_g.h["blood_2"] = "blood_2.png";
	_g.h["battlebutton"] = "battlebutton.png";
	_g.h["blood_3"] = "blood_3.png";
	_g.h["blood_4"] = "blood_4.png";
	_g.h["blood_5"] = "blood_5.png";
	_g.h["blood_6"] = "blood_6.png";
	_g.h["bluegradient"] = "bluegradient.png";
	_g.h["blood_7"] = "blood_7.png";
	_g.h["boot"] = "boot.png";
	_g.h["back_thunder"] = "back_thunder.PNG";
	_g.h["button9a"] = "button9a.png";
	_g.h["back_cave"] = "back_cave.PNG";
	_g.h["buttonback"] = "buttonback.png";
	_g.h["buttonback_h"] = "buttonback_h.png";
	_g.h["buttonback_h_disabled"] = "buttonback_h_disabled.png";
	_g.h["back_snowmountain"] = "back_snowmountain.PNG";
	_g.h["buttonselec9a"] = "buttonselec9a.png";
	_g.h["boss"] = "boss.png";
	_g.h["bossb"] = "bossb.png";
	_g.h["buttonkey"] = "buttonkey.png";
	_g.h["cursor"] = "cursor.png";
	_g.h["cid_story"] = "cid_story.jpg";
	_g.h["dialog9a"] = "dialog9a.png";
	_g.h["dark_background"] = "dark_background.png";
	_g.h["circle"] = "circle.png";
	_g.h["ef_slash_0"] = "ef_slash_0.png";
	_g.h["discord"] = "discord.png";
	_g.h["ef_slash_1"] = "ef_slash_1.png";
	_g.h["discordbig"] = "discordbig.png";
	_g.h["ef_slash_2"] = "ef_slash_2.png";
	_g.h["ef_slash_4"] = "ef_slash_4.png";
	_g.h["ef_slash_3"] = "ef_slash_3.png";
	_g.h["ef_slash_5"] = "ef_slash_5.png";
	_g.h["discordb"] = "discordb.png";
	_g.h["ef_slash_6"] = "ef_slash_6.png";
	_g.h["enemy_adamanstoise"] = "enemy_adamanstoise.png";
	_g.h["enemy_blueflan"] = "enemy_blueflan.png";
	_g.h["enemyicon"] = "enemyicon.png";
	_g.h["enemy_bluetiger"] = "enemy_bluetiger.png";
	_g.h["enemy_buffwitch"] = "enemy_buffwitch.png";
	_g.h["enemy_dog"] = "enemy_dog.png";
	_g.h["enemy_Cactuar"] = "enemy_Cactuar.png";
	_g.h["enemy_elftoad"] = "enemy_elftoad.png";
	_g.h["enemy_giant"] = "enemy_giant.png";
	_g.h["downshadow"] = "downshadow.png";
	_g.h["enemy_goblin"] = "enemy_goblin.png";
	_g.h["enemy_hamedomonk"] = "enemy_hamedomonk.png";
	_g.h["enemy_nutkin"] = "enemy_nutkin.png";
	_g.h["enemy_mysticelf"] = "enemy_mysticelf.png";
	_g.h["enemy_reaper"] = "enemy_reaper.png";
	_g.h["enemy_pumpkinstar"] = "enemy_pumpkinstar.png";
	_g.h["enemy_tonberry"] = "enemy_tonberry.png";
	_g.h["enemy_straycat"] = "enemy_straycat.png";
	_g.h["enemy_turtle"] = "enemy_turtle.png";
	_g.h["enemy_troll"] = "enemy_troll.png";
	_g.h["enemy_witchkiller"] = "enemy_witchkiller.png";
	_g.h["enemy_witchhunter"] = "enemy_witchhunter.png";
	_g.h["e_AuroraRing"] = "e_AuroraRing.png";
	_g.h["enemy_wolf"] = "enemy_wolf.png";
	_g.h["e_Burst_1"] = "e_Burst_1.png";
	_g.h["e_Fog2001"] = "e_Fog2001.png";
	_g.h["e_check"] = "e_check.png";
	_g.h["e_SaintArrow"] = "e_SaintArrow.png";
	_g.h["e_slash"] = "e_slash.png";
	_g.h["e_Spark001"] = "e_Spark001.png";
	_g.h["enemy_yellowflan"] = "enemy_yellowflan.png";
	_g.h["font10"] = "font10.png";
	_g.h["e_whitecircle_line"] = "e_whitecircle_line.png";
	_g.h["font12_0"] = "font12_0.png";
	_g.h["font16_0"] = "font16_0.png";
	_g.h["font14_0"] = "font14_0.png";
	_g.h["font20"] = "font20.png";
	_g.h["fxFire01"] = "fxFire01.PNG";
	_g.h["fxBuff"] = "fxBuff.PNG";
	_g.h["enemy_giantrat"] = "enemy_giantrat.png";
	_g.h["enemy_redflan"] = "enemy_redflan.png";
	_g.h["fxDebuff"] = "fxDebuff.PNG";
	_g.h["fxFire02"] = "fxFire02.PNG";
	_g.h["fxFire03"] = "fxFire03.PNG";
	_g.h["fxFire05"] = "fxFire05.PNG";
	_g.h["fxFire06"] = "fxFire06.PNG";
	_g.h["fxFire04"] = "fxFire04.PNG";
	_g.h["fxFire10"] = "fxFire10.PNG";
	_g.h["fxFire11"] = "fxFire11.PNG";
	_g.h["fxFire08"] = "fxFire08.PNG";
	_g.h["fxFire12"] = "fxFire12.PNG";
	_g.h["fxFire09"] = "fxFire09.PNG";
	_g.h["fxFire07"] = "fxFire07.PNG";
	_g.h["gearrepeat"] = "gearrepeat.png";
	_g.h["fxHeal"] = "fxHeal.PNG";
	_g.h["greengradient"] = "greengradient.png";
	_g.h["fxIce"] = "fxIce.PNG";
	_g.h["fxThunder"] = "fxThunder.PNG";
	_g.h["heroicon"] = "heroicon.png";
	_g.h["hero_attackA"] = "hero_attackA.png";
	_g.h["hero_attackB"] = "hero_attackB.png";
	_g.h["hero_attackD"] = "hero_attackD.png";
	_g.h["hero_attackC"] = "hero_attackC.png";
	_g.h["hero_run2"] = "hero_run2.png";
	_g.h["hero_run1"] = "hero_run1.png";
	_g.h["hero_dying2"] = "hero_dying2.png";
	_g.h["hero_run3"] = "hero_run3.png";
	_g.h["hero_run4"] = "hero_run4.png";
	_g.h["hero_sleep"] = "hero_sleep.png";
	_g.h["hero_spell2"] = "hero_spell2.png";
	_g.h["hero_sleep2"] = "hero_sleep2.png";
	_g.h["hero_stillB"] = "hero_stillB.png";
	_g.h["iconBlood"] = "iconBlood.png";
	_g.h["hero_still"] = "hero_still.png";
	_g.h["iconAttack"] = "iconAttack.png";
	_g.h["iconBloodthirst"] = "iconBloodthirst.png";
	_g.h["hero_stillD"] = "hero_stillD.png";
	_g.h["hero_stillC"] = "hero_stillC.png";
	_g.h["iconDeathblood"] = "iconDeathblood.png";
	_g.h["iconCounter"] = "iconCounter.png";
	_g.h["iconDefense"] = "iconDefense.png";
	_g.h["iconLifeMax"] = "iconLifeMax.png";
	_g.h["iconfiredamage"] = "iconfiredamage.png";
	_g.h["iconMagicAttack"] = "iconMagicAttack.png";
	_g.h["iconModLocke"] = "iconModLocke.png";
	_g.h["iconModLulu"] = "iconModLulu.png";
	_g.h["iconicedamage"] = "iconicedamage.png";
	_g.h["iconModThick"] = "iconModThick.png";
	_g.h["iconModTranquil"] = "iconModTranquil.png";
	_g.h["iconModVivi"] = "iconModVivi.png";
	_g.h["iconMagicDefense"] = "iconMagicDefense.png";
	_g.h["iconModRage"] = "iconModRage.png";
	_g.h["iconModVincent"] = "iconModVincent.png";
	_g.h["iconMystic"] = "iconMystic.png";
	_g.h["iconSkillSet"] = "iconSkillSet.png";
	_g.h["iconPiercing"] = "iconPiercing.png";
	_g.h["iconModAuron"] = "iconModAuron.png";
	_g.h["iconSpeed"] = "iconSpeed.png";
	_g.h["iconMPMax"] = "iconMPMax.png";
	_g.h["iconSafeguard"] = "iconSafeguard.png";
	_g.h["iconVeteran"] = "iconVeteran.png";
	_g.h["iconWFirerod"] = "iconWFirerod.png";
	_g.h["iconWBastardSword"] = "iconWBastardSword.png";
	_g.h["iconWBroadSword"] = "iconWBroadSword.png";
	_g.h["iconthunderdamage"] = "iconthunderdamage.png";
	_g.h["iconWIcerod"] = "iconWIcerod.png";
	_g.h["iconWIcewall"] = "iconWIcewall.png";
	_g.h["iconWDagger"] = "iconWDagger.png";
	_g.h["iconWPlate"] = "iconWPlate.png";
	_g.h["iconWFlamedge"] = "iconWFlamedge.png";
	_g.h["iconWHeavySword"] = "iconWHeavySword.png";
	_g.h["iconWRobe"] = "iconWRobe.png";
	_g.h["iconWShirt"] = "iconWShirt.png";
	_g.h["iconWThunderod"] = "iconWThunderod.png";
	_g.h["iconWTreetrunk"] = "iconWTreetrunk.png";
	_g.h["iconWTunic"] = "iconWTunic.png";
	_g.h["iconWVest"] = "iconWVest.png";
	_g.h["icon_gold"] = "icon_gold.png";
	_g.h["iconWWoodSword"] = "iconWWoodSword.png";
	_g.h["iracema_story"] = "iracema_story.jpeg";
	_g.h["iconWThunderbolt"] = "iconWThunderbolt.png";
	_g.h["isabelicon"] = "isabelicon.png";
	_g.h["lato13"] = "lato13.png";
	_g.h["lato16"] = "lato16.png";
	_g.h["leaf"] = "leaf.png";
	_g.h["lock"] = "lock.png";
	_g.h["lock_shake"] = "lock_shake.png";
	_g.h["lock_explosion"] = "lock_explosion.png";
	_g.h["isabel_story"] = "isabel_story.jpeg";
	_g.h["lato15"] = "lato15.png";
	_g.h["logo"] = "logo.png";
	_g.h["loot_bag"] = "loot_bag.png";
	_g.h["notification_message"] = "notification_message.png";
	_g.h["lato17"] = "lato17.png";
	_g.h["main_story"] = "main_story.jpg";
	_g.h["pinkgradient"] = "pinkgradient.png";
	_g.h["purpleback"] = "purpleback.png";
	_g.h["number_test"] = "number_test.png";
	_g.h["hero_dying1"] = "hero_dying1.png";
	_g.h["marino_story"] = "marino_story.jpeg";
	_g.h["purplegradient"] = "purplegradient.png";
	_g.h["mom_story"] = "mom_story.png";
	_g.h["shield"] = "shield.png";
	_g.h["pedroiv_story"] = "pedroiv_story.jpeg";
	_g.h["skillSbloodlust"] = "skillSbloodlust.png";
	_g.h["skillSarmorbreak"] = "skillSarmorbreak.png";
	_g.h["skillSattackbreak"] = "skillSattackbreak.png";
	_g.h["skillSfogan"] = "skillSfogan.png";
	_g.h["skillSbloodycut"] = "skillSbloodycut.png";
	_g.h["skillScure"] = "skillScure.png";
	_g.h["skillSdespell"] = "skillSdespell.png";
	_g.h["skillSfogo"] = "skillSfogo.png";
	_g.h["skillSfoganzan"] = "skillSfoganzan.png";
	_g.h["skillSgelan"] = "skillSgelan.png";
	_g.h["skillSgelo"] = "skillSgelo.png";
	_g.h["skillSgelanzan"] = "skillSgelanzan.png";
	_g.h["skillShaste"] = "skillShaste.png";
	_g.h["skillSlightslash"] = "skillSlightslash.png";
	_g.h["skillSheavyslash"] = "skillSheavyslash.png";
	_g.h["skillSmagick"] = "skillSmagick.png";
	_g.h["skillSnoblesse"] = "skillSnoblesse.png";
	_g.h["skillSraian"] = "skillSraian.png";
	_g.h["skillSraianzan"] = "skillSraianzan.png";
	_g.h["skillSraio"] = "skillSraio.png";
	_g.h["skillSprotect"] = "skillSprotect.png";
	_g.h["skillSregen"] = "skillSregen.png";
	_g.h["skillSshell"] = "skillSshell.png";
	_g.h["skull"] = "skull.png";
	_g.h["skillSsharpen"] = "skillSsharpen.png";
	_g.h["slotempty1"] = "slotempty1.png";
	_g.h["slotempty2"] = "slotempty2.png";
	_g.h["skillSslash"] = "skillSslash.png";
	_g.h["skillStrevas"] = "skillStrevas.png";
	_g.h["swordwithshadow"] = "swordwithshadow.png";
	_g.h["tabback"] = "tabback.png";
	_g.h["steam"] = "steam.png";
	_g.h["Unnamed_0"] = "Unnamed_0.png";
	_g.h["Steamlogo"] = "Steamlogo.png";
	_g.h["whitediamond"] = "whitediamond.png";
	_g.h["whitedot"] = "whitedot.png";
	_g.h["whitep"] = "whitep.png";
	_g.h["whitecircle"] = "whitecircle.png";
	_g.h["vitor_story"] = "vitor_story.jpeg";
	_g.h["voawon12"] = "voawon12.png";
	$r = _g;
	return $r;
}(this));
GRIControl.key = "save data unstable";
GRIControl.keyBackup = "save backup";
GRIControl.PRIVACY_ACCEPTANCE_KEY = "privacymemory";
GRIControl.saveRate = 10000;
GRIControl.enemyLabels = [["Goblin","Dog","Giant","Turtle","Giant Rat","Stray Cat","Elf Toad","Nutkin","Troll","Blue Tiger"],["Wolf"],["Tonberry"],["Adamanstoise"],["Cactuar"],["Reaper"],["Witchhunter"],["Buff Witch"],["Witchkiller"],["Mystic Elf"],["Hamedo Monk"],["Red Flan"],["Blue Flan"],["Yellow Flan"],["Pumpkin Star"]];
GRIControl.lagrimaBackgrounds = [autogen_GriPngs.back_forest,autogen_GriPngs.back_streets,autogen_GriPngs.back_mountains,autogen_GriPngs.back_seaside,autogen_GriPngs.back_fields,autogen_GriPngs.back_firecavevolcano,autogen_GriPngs.back_snowmountain,autogen_GriPngs.back_thunder];
GRIControl.buffToExplanation = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["regen"] = "Slowly recovers HP";
	_g.h["enchant-fire"] = "Adds fire element and makes attacks magical";
	_g.h["protect"] = "Increases defense";
	_g.h["shell"] = "Increases magic defense";
	_g.h["haste"] = "Increases speed";
	_g.h["nap"] = "Resting to recover HP";
	_g.h["pierce"] = "Increases armor piercing power";
	_g.h["noblesse"] = "Increases damage as long as not hit";
	_g.h["bloodlust"] = "Increases the power of Blood";
	$r = _g;
	return $r;
}(this));
GRIControl.lagrimaAreaLabels = ["Forest","Streets","Mountain","Seaside","Wild Plains","Inactive Volcano","Snow Fields","Thunder Roads"];
GRIControlEquip.equipTypeNames = ["Weapon","Armor","Skill Set"];
GRIControlRegion.listStandard = 0;
GRIControlRegion.listDanger = 1;
GRIControlRegion.dataRegionB = "regionbutton";
GRIControlRegion.dataAreaB = "areabutton";
GRIControlTitle.CHARACTER_SELECTION_HAPPENED_KEY = "characterselectionhappened";
GRIEffects.tabs = [null,GRIView.tagTabTitle,GRIView.tagTabBattle,GRIView.tagTabCharacter,GRIView.tagTabEquip,GRIView.tagTabMemory,GRIView.tagTabRegion,GRIView.tagTabVillage];
GRIEquipFilterControl.LAYOUT_ID = "equip_filter_buttons";
GRIEquipFilterControl.DATAINPUT_CHANGEFILTER = "change_filter";
GRILayoutManual.LAYOUT_EXPLORATION_RESOURCES = "LAYOUT_EXPLORATION_RESOURCES";
GRISetView.SETVIEWTAG = new Tag();
GRISettingsControl.DEFAULT_MOUSE_WHEEL = 5;
GRISettingsControl.DEFAULT_MASTER_VOLUME = 50;
GRISettingsControl.DEFAULT_MUSIC_VOLUME = 100;
GRISettingsControl.DEFAULT_SFX_VOLUME = 100;
GRIViewTitle.LAYOUT_BUTTON_TITLE = "titlebuttons";
GRIViewTitle.LAYOUT_CHARACTER_SELECTION = "character_selection";
GRIViewTitle.TAG_TITLE_MAIN = new Tag();
GRIViewTitle.TAG_TITLE_ACCEPT = new Tag();
GRIViewTitle.TAG_TITLE_DIMENSION = new Tag();
GRIViewTitle.TAG_TITLE_LOGO = new Tag();
GRIViewTitle.TAG_TITLE_SETTINGS = new Tag();
GRIViewTitle.DATA_DISCORD = "discord";
GRIViewTitle.DATA_STEAM = "steam";
GRIViewTitle.DATA_START = "start";
GRIViewTitle.DATA_RESET = "reset";
GRIViewTitle.DATA_EXTERNALSAVE = "externalsave";
GRIViewTitle.DATA_EXIT = "quit";
GRIViewTitle.DATA_CONTINUE = "buttoncontinue";
GRIViewTitle.DATA_GOTOCHARACTER = "buttonfirststart";
GRIViewTitle.DATA_ROADMAP = "roadmap";
GRIViewTitle.DATA_ACCEPT = "accept";
GRIViewTitle.DATA_PRIVACYSEE = "privacysee";
GRISettingsView.LAYOUT_SETTINGS = GRIViewTitle.LAYOUT_BUTTON_TITLE;
GRISettingsView.DATA_INCREASE_MOUSE_WHEEL_SENSIBILITY = "wheelup";
GRISettingsView.DATA_DECREASE_MOUSE_WHEEL_SENSIBILITY = "wheeldown";
GRISettingsView.DATA_PIXEL_SCALING = "pixelscaling";
GRISettingsView.DATA_FULL_SCREEN = "fullscreen";
GRISettingsView.DATA_DEFAULT = "default_settings";
GRISettingsView.DATA_RETURN = "settings_return";
GRISettingsView.DATA_SETTINGSGO = "settings_go";
GRISettingsView.DATA_LANGUAGE = "language";
GRISettingsView.BUTTON_DATAS = [GRISettingsView.DATA_INCREASE_MOUSE_WHEEL_SENSIBILITY,GRISettingsView.DATA_DECREASE_MOUSE_WHEEL_SENSIBILITY,GRISettingsView.DATA_PIXEL_SCALING,GRISettingsView.DATA_DEFAULT,GRISettingsView.DATA_RETURN];
GRISettingsView.BUTTON_DATAS_INT = [0,0,0,0,0];
TurnOrderData.charaSprites = [Sprite.create("heroicon",512,512),Sprite.create("enemyicon",512,512),Sprite.create("boss",512,512),Sprite.create("bossb",512,512),Sprite.create("isabelicon",512,512)];
ActorViewLogic.ignoredStats = ["Life","MP","MPRecharge","MPRechargeCount","","SpeedCount","damage-last-turn"];
ActorViewLogic.AttributeExplanation = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["Attack"] = "Influences inflicted damage";
	_g.h["Defense"] = "Decreases incoming damage";
	_g.h["Speed"] = "Frequency of attacks";
	_g.h["Blood"] = "Increases damage, but loses life with each attack";
	_g.h["Bloodthirst"] = "Increases the effectiveness of blood";
	_g.h["Piercing"] = "Armor piercing power";
	_g.h["Life"] = "When it gets to 0, you need to recover";
	_g.h["LifeMax"] = "When it gets to 0, you need to recover";
	_g.h["Veteran"] = "Those who have been here since past times. Boosts damage percentually";
	_g.h["MPMax"] = "Skills consume this. Expend it all to start recovering.";
	_g.h["Safeguard"] = "Piercing protection";
	_g.h[BattleConstants.counterAttack] = "Strikes back when attacked. Flame uses your attack. Icicle your defense. Shock the damage you took. Attack is a non-elemental normal attack.";
	_g.h[BattleConstants.MAGICAL] = "Normal attacks are magic in nature";
	_g.h[BattleConstants.MAGICATTACK] = "Magic damage. Influences the damage of your magic skills like Gelo or Fogo";
	_g.h[BattleConstants.MAGICDEFENSE] = "Your defense against what is magic. Reduces damage of magical nature.";
	_g.h[BattleConstants.FIREDAMAGE] = "Higher than 100 means a weakness to the element. Lower than 100 means a resistance.";
	_g.h[BattleConstants.ICEDAMAGE] = "Higher than 100 means a weakness to the element. Lower than 100 means a resistance.";
	_g.h[BattleConstants.THUNDERDAMAGE] = "Higher than 100 means a weakness to the element. Lower than 100 means a resistance.";
	_g.h[BattleConstants.DEATHBLOOD] = "Increases your damage when your life is low";
	$r = _g;
	return $r;
}(this));
ActorViewLogic.attributeEmoticons = new EmoticonLibrary();
ActorViewLogic.attributeMetaData = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = new StatMetaInfo(["","Flame","Icicle","Shock","Attack"]);
		_g.h[BattleConstants.counterAttack] = value;
	}
	$r = _g;
	return $r;
}(this));
GRIViewCharacterTab.LAYOUT_ACHIEVEMENT = "layout_achievement";
GRIViewConstants.FONT_MAIN = "main";
CurrencyViewLogic.currencyToSprite = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = Sprite.create("whitep",1,1);
		_g.h["Lagrima"] = value;
	}
	{
		var value = Sprite.create("circle",11,11);
		_g.h["Lagrima Stone"] = value;
	}
	$r = _g;
	return $r;
}(this));
CurrencyViewLogic.visibleCurrencies = ["Lagrima","Lagrima Stone"];
GRIViewEquip.equipment_MaxInPage = 9999;
GRIViewEquip.equippedViewIdPart = "equippedbutton_";
GRIViewEquip.layoutIdEquip = "equipbutton";
GRIViewEquip.layoutIdEquipHover = "equiphover";
GRIViewEquip.tagIdEquipHover = new Tag();
GRIViewEquip.layoutIdEquipSets = "setequipbuttons";
GRIViewEquip.LAYOUT_EQUIP_BUTTON_MISC = "miscequipbuttons";
GRIViewEquip.TAG_EQUIPBUTTON_SPECIALWIDGET = new Tag();
GRIViewEquip.DATA_UPGRADE = "upgradebutton";
GRIViewEquip.DATA_SELL = "sellbutton";
GRIViewEquip.DATA_SELL_WORSE = "sellbutton_worse";
GRIViewEquip.DATA_EQUIP = "equipnmodebutton";
LittleBattleWidget.stateTexts = ["Recover","Combat","Idle","Rest"];
LittleBattleWidget.colors = [GRIView.COLOR_ACTIVE_BLUE,GRIView.COLOR_ACTIVE_RED,GRIView.COLOR_ACTIVE_BLUE,GRIView.COLOR_TEXT_NORMAL];
GRIViewMemoryTab.LAYOUT_MEMORY_BUTTONS = "memory_buttons";
GRIViewMemoryTab.DATA_START = "story_start";
GRIViewMemoryTab.DATA_RESTART = "story_restart";
GRIViewMemoryTab.DATA_RESUME = "story_resume";
GRIViewRegion.LAYOUT_REGION_REGIONS = "region_regions";
GRIViewRegion.LAYOUT_REGION_AREAS = "region_areas";
GRIViewRegion.LAYOUT_REGION_MONSTER = "region_enemy";
GRIViewRegion.LAYOUT_REGION_MONSTER_STAT = "region_enemy_stat";
GRIViewRegion.TAG_REGION_MONSTER_STAT = new Tag();
autogen_AllSfx.battle_sfx_area_clear = 0;
autogen_AllSfx.battle_sfx_change_area = 1;
autogen_AllSfx.battle_sfx_enemy_die = 2;
autogen_AllSfx.battle_sfx_enemy_get_hurt = 3;
autogen_AllSfx.battle_sfx_enemy_get_hurt_slash = 4;
autogen_AllSfx.battle_sfx_getgold = 5;
autogen_AllSfx.battle_sfx_get_loot = 6;
autogen_AllSfx.battle_sfx_hero_hurt = 7;
autogen_AllSfx.battle_sfx_hero_hurt_grunt = 8;
autogen_AllSfx.battle_sfx_recovery = 9;
autogen_AllSfx.battle_sfx_slash = 10;
autogen_AllSfx.battle_sfx_upgrade_weapom = 11;
autogen_AllSfx.equip_sfx_enhance = 12;
autogen_AllSfx.equip_sfx_equip = 13;
autogen_AllSfx.equip_sfx_sell = 14;
autogen_AllSfx.equip_sfx_sell_worse = 15;
autogen_AllSfx.misc_EXPLDsgn_Explosion_Impact_14 = 16;
autogen_AllSfx.misc_EXPLDsgn_Implode_15 = 17;
autogen_AllSfx.misc_LIQImpt_Goo_Splatter_09 = 18;
autogen_AllSfx.misc_sfx_padlok_appears = 19;
autogen_AllSfx.misc_sfx_padlok_explode = 20;
autogen_AllSfx.misc_sfx_ui_cancel = 21;
autogen_AllSfx.misc_sfx_ui_confirm = 22;
autogen_AllSfx.misc_sfx_ui_confirm_v2 = 23;
autogen_AllSfx.misc_sfx_ui_hover = 24;
autogen_AllSfx.misc_sfx_ui_hover_old = 25;
autogen_AllSfx.misc_sfx_ui_level_up = 26;
autogen_AllSfx.misc_sfx_ui_unlock_tab = 27;
autogen_AllSfx.skills_sfx_dark_slash = 28;
autogen_AllSfx.skills_sfx_skill_debuffer = 29;
autogen_AllSfx.skills_sfx_skill_fire = 30;
autogen_AllSfx.skills_sfx_skill_haste = 31;
autogen_AllSfx.skills_sfx_skill_heal = 32;
autogen_AllSfx.skills_sfx_skill_ice = 33;
autogen_AllSfx.skills_sfx_skill_priest = 34;
autogen_AllSfx.skills_sfx_skill_purple_slash = 35;
autogen_AllSfx.skills_sfx_skill_red_slash = 36;
autogen_AllSfx.skills_sfx_skill_thunder = 37;
autogen_AllSfx.story_sfx_Story_Advance = 38;
autogen_AllSfx._sfxFiles = ["battle/sfx_area_clear.wav","battle/sfx_change_area.wav","battle/sfx_enemy_die.wav","battle/sfx_enemy_get_hurt.wav","battle/sfx_enemy_get_hurt_slash.wav","battle/sfx_getgold.wav","battle/sfx_get_loot.wav","battle/sfx_hero_hurt.wav","battle/sfx_hero_hurt_grunt.wav","battle/sfx_recovery.wav","battle/sfx_slash.wav","battle/sfx_upgrade_weapom.wav","equip/sfx_enhance.wav","equip/sfx_equip.wav","equip/sfx_sell.wav","equip/sfx_sell_worse.wav","misc/EXPLDsgn_Explosion_Impact_14.wav","misc/EXPLDsgn_Implode_15.wav","misc/LIQImpt_Goo_Splatter_09.wav","misc/sfx_padlok_appears.wav","misc/sfx_padlok_explode.wav","misc/sfx_ui_cancel.wav","misc/sfx_ui_confirm.wav","misc/sfx_ui_confirm_v2.wav","misc/sfx_ui_hover.wav","misc/sfx_ui_hover_old.wav","misc/sfx_ui_level_up .wav","misc/sfx_ui_unlock_tab.wav","skills/sfx_dark_slash.wav","skills/sfx_skill_debuffer.wav","skills/sfx_skill_fire.wav","skills/sfx_skill_haste.wav","skills/sfx_skill_heal.wav","skills/sfx_skill_ice.wav","skills/sfx_skill_priest.wav","skills/sfx_skill_purple_slash.wav","skills/sfx_skill_red_slash.wav","skills/sfx_skill_thunder.wav","story/sfx_Story_Advance.wav"];
GRIViewSkill.SkillToExplanation = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["Fogo"] = "Deals fire damage";
	_g.h["Gelo"] = "Deals ice damage";
	_g.h["Raio"] = "Deals thunder damage";
	_g.h["Fogan"] = "Deals high fire damage";
	_g.h["Gelan"] = "Deals high ice damage";
	_g.h["Raian"] = "Deals high thunder damage";
	_g.h["Foganzan"] = "Deals higher fire damage";
	_g.h["Gelanzan"] = "Deals higher ice damage";
	_g.h["Raianzan"] = "Deals higher thunder damage";
	_g.h["DeSpell"] = "Removes enemy buffs";
	_g.h["Cure"] = "Heals wounds";
	_g.h["Haste"] = "Increases speed";
	_g.h["Bloodlust"] = "Increases the power of Blood";
	_g.h["Noblesse"] = "Increases damage as long as not hit";
	_g.h["Sharpen"] = "Increases armor piercing power";
	_g.h["Armor Break"] = "Decreases enemy defense";
	_g.h["Attack Break"] = "Decreases enemy attack";
	_g.h["Protect"] = "Increases defense";
	_g.h["Shell"] = "Increases magic defense";
	_g.h["Regen"] = "Slowly recovers HP";
	_g.h["Light Slash"] = "Deals light damage";
	_g.h["Slash"] = "Deals damage";
	_g.h["Heavy Slash"] = "Deals heavy damage";
	_g.h["Magick"] = "Increases magic attack";
	_g.h["Bloody Cut"] = "Deals damage";
	_g.h["Trevas"] = "Deals heavy damage";
	$r = _g;
	return $r;
}(this));
GRIViewSkill.SKILL_TO_ATTACK_ANIMATION = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["Fogo"] = "magic";
	_g.h["Gelo"] = "magic";
	_g.h["Raio"] = "magic";
	_g.h["Fogan"] = "magic";
	_g.h["Gelan"] = "magic";
	_g.h["Raian"] = "magic";
	_g.h["Foganzan"] = "magic";
	_g.h["Gelanzan"] = "magic";
	_g.h["Raianzan"] = "magic";
	_g.h["Light Slash"] = "attack2sp";
	_g.h["Slash"] = "attack3sp";
	_g.h["Bloody Cut"] = "attack3sp2";
	_g.h["Heavy Slash"] = "attack2sp2";
	_g.h["Trevas"] = "attackblack";
	$r = _g;
	return $r;
}(this));
GRIViewSkill.SKILL_TO_HIT_EFFECT_ANIMATION = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["Fogo"] = "fire";
	_g.h["Gelo"] = "ice";
	_g.h["Raio"] = "thunder";
	_g.h["Fogan"] = "fire";
	_g.h["Gelan"] = "ice";
	_g.h["Raian"] = "thunder";
	_g.h["Foganzan"] = "fire";
	_g.h["Gelanzan"] = "ice";
	_g.h["Raianzan"] = "thunder";
	$r = _g;
	return $r;
}(this));
GRIViewSkill.SKILL_TO_SFX = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["Fogo"] = autogen_AllSfx.skills_sfx_skill_fire;
	_g.h["Gelo"] = autogen_AllSfx.skills_sfx_skill_ice;
	_g.h["Raio"] = autogen_AllSfx.skills_sfx_skill_thunder;
	_g.h["Fogan"] = autogen_AllSfx.skills_sfx_skill_fire;
	_g.h["Gelan"] = autogen_AllSfx.skills_sfx_skill_ice;
	_g.h["Raian"] = autogen_AllSfx.skills_sfx_skill_thunder;
	_g.h["Foganzan"] = autogen_AllSfx.skills_sfx_skill_fire;
	_g.h["Gelanzan"] = autogen_AllSfx.skills_sfx_skill_ice;
	_g.h["Raianzan"] = autogen_AllSfx.skills_sfx_skill_thunder;
	_g.h["Light Slash"] = autogen_AllSfx.skills_sfx_skill_purple_slash;
	_g.h["Slash"] = autogen_AllSfx.skills_sfx_skill_purple_slash;
	_g.h["Bloody Cut"] = autogen_AllSfx.skills_sfx_skill_red_slash;
	_g.h["Heavy Slash"] = autogen_AllSfx.skills_sfx_skill_purple_slash;
	_g.h["Trevas"] = autogen_AllSfx.skills_sfx_dark_slash;
	$r = _g;
	return $r;
}(this));
GRIViewStory.LAYOUT_STORY = "story_main";
GRIViewStory.LAYOUT_BUTTON_A = "storybuttona";
GRIViewStory.LAYOUT_BUTTON_B = "storybuttonb";
GRIViewStory.DATA_BUTTON_ADVANCE = "storyadvance";
GRIViewStory.DATA_BUTTON_SKIP = "storyskip";
GRIViewStory.DATA_BUTTON_LATER = "storylater";
GRIViewStory.EVENT_STORY_START_NATURAL = "ev_storystartnatural";
GlobalData.VIS_INVISIBLE = 0;
GlobalData.VIS_UNSEEN = 1;
GlobalData.VIS_SEEN = 2;
GlobalData.VIS_SEEN_AND_GONE = 3;
GlobalData.STATE_ANIMATION_PLAY = 1;
GlobalData.STATE_ANIMATION_PAUSE = 2;
GlobalData.STATE_ANIMATION_STOP = 3;
GlobalData.IGNORE = -99999;
GlobalSetting.pauseUpdate = false;
GlobalSetting.pauseUpdate_FrameSkip = 0;
Mouse.mouse = new Mouse();
Keyboard.KEY_UP = 100000;
Keyboard.KEY_LEFT = 100001;
Keyboard.KEY_DOWN = 100002;
Keyboard.KEY_RIGHT = 100003;
Keyboard.KEY_ENTER = 100004;
Keyboard.KEY_SPACE = 100005;
Keyboard.KEY_ESCAPE = 100006;
Keyboard.KEY_TAB = 100007;
Keyboard.KEY_SHIFT = 100008;
Keyboard.JOY_BUTTON_1 = 100051;
Keyboard.JOY_BUTTON_2 = 100052;
Keyboard.JOY_BUTTON_3 = 100053;
Keyboard.JOY_BUTTON_4 = 100054;
Keyboard.JOY_BUTTON_L = 100055;
Keyboard.JOY_BUTTON_R = 100056;
Keyboard.JOY_BUTTON_R2 = 100057;
Keyboard.JOY_BUTTON_L2 = 100058;
Keyboard.JOY_BUTTON_D_UP = 100059;
Keyboard.JOY_BUTTON_D_LEFT = 100060;
Keyboard.JOY_BUTTON_D_DOWN = 100061;
Keyboard.JOY_BUTTON_D_RIGHT = 100062;
Keyboard.JOY_BUTTON_START = 100063;
Keyboard.JOY_BUTTON_SELECT = 100064;
Keyboard.keyboard = new Keyboard();
JsonStoryTypes.jsonwriterstory = new JsonWriter_$125();
JsonStoryTypes.jsonparserstory = new JsonParser_$137();
JsonStoryTypes.jsonparsercutscenes = new JsonParser_$142();
JsonMainTypes.jsonwriterwdata = new JsonWriter_$17();
JsonMainTypes.jsonparserwdata = new JsonParser_$17();
JsonMainTypes.jsonwritergeneral = new JsonWriter_$1();
JsonMainTypes.jsonparsergeneral = new JsonParser_$1();
JsonMainTypes.jsonwritervillageD = new JsonWriter_$91();
JsonMainTypes.jsonparservillageD = new JsonParser_$103();
JsonMainTypes.jsonwritervillageS = new JsonWriter_$103();
JsonMainTypes.jsonparservillageS = new JsonParser_$115();
JsonMainTypes.jsonWriterGeneralDimensions = new JsonWriter_$116();
JsonMainTypes.jsonReaderGeneralDimensions = new JsonParser_$128();
Local.mapOfValues = new haxe_ds_IntMap();
Local.language = 0;
LockSystem.STATE_LOCK = 0;
LockSystem.STATE_WANT_TO_UNLOCK = 1;
LockSystem.STATE_UNLOCK_ANIMATING = 2;
LockSystem.STATE_UNLOCK_DONE = 3;
NotificationsMessageAnimatedRetained.STATE_FREE = 0;
NotificationsMessageAnimatedRetained.STATE_FADING_IN = 1;
NotificationsMessageAnimatedRetained.STATE_KEEP = 2;
NotificationsMessageAnimatedRetained.STATE_FADING_OUT = 3;
PhaserRenderer.images = new haxe_ds_StringMap();
PhaserRenderer.z = 0;
Profiler.MULTIPLIER = 1000000;
Profiler.units = new haxe_ds_StringMap();
Profiler.accumulatedUnits = new haxe_ds_StringMap();
PrototypeItemMaker.itemType_Weapon = 0;
PrototypeItemMaker.itemType_Armor = 1;
GameEventTrigger.IGNORE = -99999;
Renderer.aux = new Rect(0,0,0,0);
Renderer.aux2 = new Rect(0,0,0,0);
Renderer.aux3 = new Rect(0,0,0,0);
Renderer.aux4 = new Rect(0,0,0,0);
Renderer.scaleInt = 1;
RetentionLogic.rollingRetentionDays = [1,2,3,7,15,30,60,90,120,365];
DropAndCollectConfiguration.DEFAULT_VALUE = new DropAndCollectConfiguration(100,600,200);
StoryControlLogic.TAG_MEMORY_BUTTON_SCREEN = new Tag();
StoryControlLogic.TAG_STORY_SCREEN = new Tag();
TalentModel.STUDY_COST_IN_TIME = 50;
TalentModel.BASE_STUDY_GET_XP = 25;
TalentModel.setConditions = [new BMCondition(BMConditionType.CURRENT_SET_NUMBER,0),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,1),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,2),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,3),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,4),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,5),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,6),new BMCondition(BMConditionType.CURRENT_SET_NUMBER,7)];
ArcaniaActionsForTC.actions = "[\r\n    {\r\n        \"id\": \"tc_get_money\",\r\n        \"name\": \"Look for coins\",\r\n        \"desc\": \"Some coins laying around here and there\",\r\n        \"result\": {\r\n            \"reiscoin\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"tc_upgrade_wallet\",\r\n        \"name\": \"Enchant wallet\",\r\n        \"desc\": \"A mysterious old paje, the Brazilian shaman, offers to enhance your wallet. For a price.\",\r\n        \"cost\": {\r\n            \"reiscoin\": 10\r\n        }, \r\n        \"mod\": {\r\n            \"reiscoin.exponential_max_multiply\": 2\r\n        }\r\n    }\r\n]";
Vector2.elementCount = 2;
XTextRender.auxLines = [];
BitmapText.spaceCharCode = HxOverrides.cca(" ",0);
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
animation_AnimatorConstants.KEY_X = 0;
animation_AnimatorConstants.KEY_Y = 1;
arcania_logic_LogicalOperatorString.map = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["&"] = arcania_logic_LogicalOperator.AND;
	_g.h["|"] = arcania_logic_LogicalOperator.OR;
	_g.h["^"] = arcania_logic_LogicalOperator.XOR;
	$r = _g;
	return $r;
}(this));
arcania_logic_RelationshipComparison.BIGGER = ">";
arcania_logic_RelationshipComparison.BIGGEREQUAL = ">=";
arcania_logic_RelationshipComparison.SMALLER = "<";
arcania_logic_RelationshipComparison.SMALLEREQUAL = "<=";
arcania_logic_RelationshipComparison.EQUAL = "==";
arcania_logic_RelationshipComparison.NOT = "!=";
arcania_logic_RelationshipComparison.comparisons = [arcania_logic_RelationshipComparison.BIGGEREQUAL,arcania_logic_RelationshipComparison.SMALLEREQUAL,arcania_logic_RelationshipComparison.BIGGER,arcania_logic_RelationshipComparison.SMALLER,arcania_logic_RelationshipComparison.EQUAL,arcania_logic_RelationshipComparison.NOT];
autogen_AllMusic.battle_battlechallenge = 0;
autogen_AllMusic.battle_battlechallengeb = 1;
autogen_AllMusic.battle_battletheme = 2;
autogen_AllMusic.battle_battlethemeb = 3;
autogen_AllMusic.battle_bosstheme = 4;
autogen_AllMusic.battle_bossthemeb = 5;
autogen_AllMusic.misc_title = 6;
autogen_AllMusic._musicFiles = ["battle/battlechallenge.mp3","battle/battlechallengeb.mp3","battle/battletheme.mp3","battle/battlethemeb.mp3","battle/bosstheme.mp3","battle/bossthemeb.mp3","misc/title.mp3"];
autogen_GriTxts.actions = "[\r\n    {\r\n        \"id\": \"sitdown\",\r\n        \"name\": \"Sit down\",\r\n        \"desc\": \"Lay down your butt in the grass\",\r\n        \"perpetual\": true,\r\n        \"effect\": {\r\n            \"stamina\": 3,\r\n            \"mental\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"pickflowers\",\r\n        \"name\": \"Pick up flower\",\r\n        \"desc\": \"There are some flowers growing nearby. I think they are Snapdragons?\\n\\n (You can hold the button press to repeat)\",\r\n        \"cost\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"flower\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"imagine\",\r\n        \"name\": \"Imagine\",\r\n        \"desc\": \"Think up adventures, what ifs, the craziest ideas\",\r\n        \"run\": {\r\n            \"mental\": 3\r\n        },\r\n        \"effect\": {\r\n            \"creativity\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\": \"commune\",\r\n        \"name\": \"Commune\",\r\n        \"desc\": \"Open your ears to Brazil, so that it may open to you\",\r\n        \"run\": {\r\n            \"mental\": 2\r\n        },\r\n        \"effect\": {\r\n            \"esoterism\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"flowersahi\"\r\n    },\r\n    {\r\n        \"id\": \"riteres1gen\",\r\n        \"name\": \"Hope to the Gods\",\r\n        \"desc\": \"Hope for a... Better future?\",\r\n        \"duration\": 5,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres1\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"riteres2gen\",\r\n        \"name\": \"Trust in what is mystic\",\r\n        \"desc\": \"First, you must trust to be trusted\",\r\n        \"duration\": 15,\r\n        \"cost\": {\r\n            \"riteres1\":3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres2\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"riteres3gen\",\r\n        \"name\": \"Pray for the rituals\",\r\n        \"desc\": \"Through prayer, comes faith\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"riteres2\":4\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"riteres3\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"spiritology-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"thinkflower\",\r\n        \"name\": \"Dwell on flowers\",\r\n        \"desc\": \"What can you possibly do with a flower?\",\r\n        \"max\": 1,\r\n        \"duration\": 20,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"cost\": {\r\n            \"creativity\": 8,\r\n            \"esoterism\": 7\r\n        },\r\n        \"require\": \"creativity>3\"\r\n    },\r\n    {\r\n        \"id\": \"embedflower\",\r\n        \"name\": \"Embed flower\",\r\n        \"desc\": \"Bring the flower back to the Gods\",\r\n        \"perpetual\": true,\r\n        \"duration\": 7,\r\n        \"cost\": {\r\n            \"flower\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"mysticflower\": 1\r\n        },\r\n        \"require\": \"thinkflower\"\r\n    },\r\n    {\r\n        \"id\": \"embedlunarflower\",\r\n        \"name\": \"Ascend flowers\",\r\n        \"desc\": \"Combine multiple flowers into one\",\r\n        \"perpetual\": true,\r\n        \"duration\": 120,\r\n        \"cost\": {\r\n            \"flower\": 220,\r\n            \"mysticflower\": 80,\r\n            \"lunarres1\":3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarflower\": 1\r\n        },\r\n        \"require\": \"lunarres1\"\r\n    },\r\n    {\r\n        \"id\": \"readmerchantbook\",\r\n        \"name\": \"Read [Life of Antonio Rodriges]\",\r\n        \"desc\": \"Let's hope you will know a little bit more about commerce after this\",\r\n        \"duration\": 400,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"selling-level.max\": 1\r\n        },\r\n        \"max\": 1,\r\n        \"require\": \"buymerchantbook\"\r\n    },\r\n    {\r\n        \"id\": \"readlunarbook\",\r\n        \"name\": \"Read a chapter of [Secrets of the Moon]\",\r\n        \"desc\": \"People have been obssessed with the bright light up in the sky\",\r\n        \"duration\": 400,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"lunology-level.max\": 1\r\n        },\r\n        \"max\": 2,\r\n        \"require\": \"buylunarbook\"\r\n    },\r\n    {\r\n        \"id\": \"sellflower\",\r\n        \"name\": \"Sell flowers\",\r\n        \"desc\": \"Just one for 1 gil. Wait, no.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 10,\r\n        \"cost\": {\r\n            \"flower\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 1\r\n        },\r\n        \"require\": \"selling-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"sellbottle\",\r\n        \"name\": \"Sell bottle\",\r\n        \"desc\": \"A bit hard to find a buyer for an old bottle\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"bottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 1,\r\n            \"flower\": 3\r\n        },\r\n        \"require\": \"selling-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"sellmysticflower\",\r\n        \"name\": \"Sell mystic flower\",\r\n        \"desc\": \"Who doesn't want to buy shining magic flowers? They look beautiful on the dining table.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 3,\r\n        \"cost\": {\r\n            \"mysticflower\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 2\r\n        },\r\n        \"require\": \"selling-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"sellmysticbottle\",\r\n        \"name\": \"Sell mystic bottle\",\r\n        \"desc\": \"Some parents buy it to amaze their children. Some Tayra interested in Paje rituals may also be interested.\",\r\n        \"perpetual\": true,\r\n        \"duration\": 3,\r\n        \"cost\": {\r\n            \"mysticbottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"result\": {\r\n            \"coin\": 5\r\n        },\r\n        \"require\": \"selling-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"embedbottle\",\r\n        \"name\": \"Embed bottle\",\r\n        \"desc\": \"Breath a faint of life into what is lifeless\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"bottle\": 1\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"mysticbottle\": 1\r\n        },\r\n        \"require\": \"mysticflower>7\"\r\n    },\r\n    {\r\n        \"id\": \"embedstone\",\r\n        \"name\": \"Embed stone\",\r\n        \"desc\": \"Bring the stone back to the Gods\",\r\n        \"perpetual\": true,\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"copperstone\": 1,\r\n            \"mysticflower\": 20,\r\n            \"esoterism\": 10,\r\n            \"riteres1\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 3,\r\n            \"stamina\": 3,\r\n            \"esoterism\": 2\r\n        },\r\n        \"result\": {\r\n            \"mysticstone\": 1\r\n        },\r\n        \"require\": \"spiritology-level>1\",\r\n        \"need\": \"copperstone\"\r\n    },\r\n    {\r\n        \"id\": \"throwflowers\",\r\n        \"name\": \"Flowers to the wind\",\r\n        \"desc\": \"Throw out some flowers into the wind\",\r\n        \"max\": 1,\r\n        \"duration\": 5,\r\n        \"require\": \"flower>5\",\r\n        \"cost\": {\r\n            \"flower\": 12\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"esotericdreams\",\r\n        \"name\": \"Esoteric Dreams\",\r\n        \"desc\": \"Sleep and dream of the unknown\",\r\n        \"max\": 1,\r\n        \"require\": \"mysticflower>7\",\r\n        \"cost\": {\r\n            \"mysticflower\": 8,\r\n            \"esoterism\": 20\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"duration\": 90,\r\n        \"mod\": {\r\n            \"mental.max\": 15,\r\n            \"esoterism.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"contemplatearea\",\r\n        \"name\": \"Place to contemplate\",\r\n        \"desc\": \"Put some flowers here, some there. Perfect place to think.\",\r\n        \"max\": 1,\r\n        \"duration\": 12,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"require\": \"throwflowers\",\r\n        \"cost\": {\r\n            \"flower\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"giveflowersoldman\",\r\n        \"name\": \"Give Flowers\",\r\n        \"desc\": \"Give the old man some flowers. Maybe he will smile.\",\r\n        \"max\": 1,\r\n        \"duration\": 5,\r\n        \"require\": \"throwflowers\",\r\n        \"cost\": {\r\n            \"flower\": 12\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"makemoonstone\",\r\n        \"name\": \"Make a Moon Stone\",\r\n        \"desc\": \"If you focus all your energy on this stone...\",\r\n        \"max\": 1,\r\n        \"duration\": 2000,\r\n        \"require\": \"mysticstone\",\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"stamina\": 1\r\n        },\r\n        \"cost\": {\r\n            \"esoterism\": 15,\r\n            \"mysticstone\": 1,\r\n            \"lunarres1\": 10,\r\n            \"darkleaf\": 10\r\n        },\r\n        \"result\": {\r\n            \"playerattack\":15,\r\n            \"playermagicattack\":25,\r\n            \"playermagicdefense\":15\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":10,\r\n            \"riteres1.max\":10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualtigerstatue\",\r\n        \"name\": \"Ritual of Baipu Tuvy\",\r\n        \"desc\": \"Use the statue of the blue tiger to channel a ritual\",\r\n        \"max\": 1,\r\n        \"duration\": 2000,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"require\": \"spiritology-level>3\",\r\n        \"need\": \"buytigerstatue\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"lunarres1\": 10,\r\n            \"riteres2\": 10,\r\n            \"darkleaf\": 15\r\n        },\r\n        \"result\": {\r\n            \"playerlife\":10,\r\n            \"playerdefense\":10,\r\n            \"playerspeed\":5\r\n        },\r\n        \"mod\": {\r\n            \"riteres1.max\":10,\r\n            \"riteres2.max\":5,\r\n            \"riteres3.max\":5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"flowersahi\",\r\n        \"name\": \"Deity Flowers\",\r\n        \"desc\": \"Offer flowers to Sahi, Goddess of the Cursed Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 15,\r\n        \"require\": \"flower>= 15\",\r\n        \"cost\": {\r\n            \"flower\": 30\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi1\",\r\n        \"name\": \"Mind to Sahi\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 30,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"flowersahi\",\r\n        \"need\": \"playerlevel>=5\",\r\n        \"cost\": {\r\n            \"esoterism\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi2\",\r\n        \"name\": \"Mind to Sahi II\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 40,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"mindsahi1\",\r\n        \"need\": \"playerlevel>=20\",\r\n        \"cost\": {\r\n            \"esoterism\": 30\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 2,\r\n            \"sahilife.max\": 4,\r\n            \"sahishield.max\": 2\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mindsahi3\",\r\n        \"name\": \"Mind to Sahi III\",\r\n        \"desc\": \"Let the Cursed Moon corrupt your senses\",\r\n        \"max\": 1,\r\n        \"duration\": 360,\r\n        \"run\": {\r\n            \"mental\": 1\r\n        },\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=50\",\r\n        \"cost\": {\r\n            \"esoterism\": 90\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 3,\r\n            \"sahilife.max\": 5,\r\n            \"sahishield.max\": 3,\r\n            \"sahimagic.max\": 3,\r\n            \"sahimagicshield.max\": 3,\r\n            \"sahispeed.max\": 3,\r\n            \"highesoterism.max\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahiflesh\",\r\n        \"name\": \"Lunar Flesh\",\r\n        \"desc\": \"Attain the body of the Lunars\",\r\n        \"max\": 1,\r\n        \"duration\": 90,\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=21\",\r\n        \"cost\": {\r\n            \"esoterism\": 35,\r\n            \"flower\": 40\r\n        },\r\n        \"mod\": {\r\n            \"sahilife.max\": 4,\r\n            \"sahishield.max\": 3,\r\n            \"sahispeed.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi1\",\r\n        \"name\": \"Ritual for Sahi I\",\r\n        \"desc\": \"A novice ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 120,\r\n        \"require\": \"spiritology-level>0\",\r\n        \"need\": \"mindsahi2\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"flower\": 30,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 1,\r\n            \"sahispirit.max\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi2\",\r\n        \"name\": \"Ritual for Sahi II\",\r\n        \"desc\": \"An apprentice-type ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 400,\r\n        \"require\": \"spiritology-level>1\",\r\n        \"need\": \"mindsahi2\",\r\n        \"cost\": {\r\n            \"esoterism\": 70,\r\n            \"flower\": 70,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 3,\r\n            \"sahispirit.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"ritualsahi3\",\r\n        \"name\": \"Ritual for Sahi III\",\r\n        \"desc\": \"A flegling ritual for the evil Goddess of the Moon\",\r\n        \"max\": 1,\r\n        \"duration\": 700,\r\n        \"require\": \"spiritology-level>2\",\r\n        \"need\": \"mindsahi3\",\r\n        \"cost\": {\r\n            \"esoterism\": 30,\r\n            \"flower\": 30,\r\n            \"riteres1\": 10\r\n        },\r\n        \"mod\": {\r\n            \"sahiflesh.max\": 8,\r\n            \"sahispirit.max\": 8\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahispirit\",\r\n        \"name\": \"Lunar Spirit\",\r\n        \"desc\": \"Attain the psyche of the Lunars\",\r\n        \"max\": 1,\r\n        \"duration\": 90,\r\n        \"require\": \"mindsahi2\",\r\n        \"need\": \"playerlevel>=22\",\r\n        \"cost\": {\r\n            \"esoterism\": 40,\r\n            \"flower\": 30\r\n        },\r\n        \"mod\": {\r\n            \"sahiattack.max\": 3,\r\n            \"sahimagic.max\": 3,\r\n            \"sahimagicshield.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"highesoterism\",\r\n        \"name\": \"Obscure Mind\",\r\n        \"desc\": \"Open your eyes to that which is arcane\",\r\n        \"max\": 3,\r\n        \"require\": \"esoterism>25\",\r\n        \"duration\": 50,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"flower\": 35,\r\n            \"mental\": 30\r\n        },\r\n        \"mod\": {\r\n            \"esoterism.max\": 25\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"godbibelot\",\r\n        \"name\": \"Mystic Bibelot\",\r\n        \"desc\": \"A small ornament for the old Gods\",\r\n        \"max\": 3,\r\n        \"require\": \"esoterism>=5\",\r\n        \"duration\": 30,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        },\r\n        \"cost\": {\r\n            \"flower\": 45,\r\n            \"esoterism\": 10,\r\n            \"creativity\": 15\r\n        },\r\n        \"mod\": {\r\n            \"esoterism.max\": 8\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahiattack\",\r\n        \"name\": \"Aggressive Moon\",\r\n        \"desc\": \"Let the aggressive face of the Moon become your face\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"mindsahi1\",\r\n        \"cost\": {\r\n            \"esoterism\": 15,\r\n            \"flower\": 10\r\n        },\r\n        \"result\": {\r\n            \"playerattack\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahimagic\",\r\n        \"name\": \"Magical Moon\",\r\n        \"desc\": \"The mysticism of the moon\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"sahispirit\",\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 15\r\n        },\r\n        \"result\": {\r\n            \"playermagicattack\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahimagicshield\",\r\n        \"name\": \"Solid Moon\",\r\n        \"desc\": \"The moon can shield you from the flames of the sun\",\r\n        \"max\": 2,\r\n        \"duration\": 30,\r\n        \"require\": \"sahispirit\",\r\n        \"cost\": {\r\n            \"esoterism\": 18,\r\n            \"flower\": 18\r\n        },\r\n        \"result\": {\r\n            \"playermagicdefense\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahispeed\",\r\n        \"name\": \"Moon Hare\",\r\n        \"desc\": \"The Lusitani say there is a rabbit in the moon\",\r\n        \"max\": 2,\r\n        \"require\": \"sahiflesh\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"esoterism\": 35,\r\n            \"flower\": 20\r\n        },\r\n        \"result\": {\r\n            \"playerspeed\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahilife\",\r\n        \"name\": \"Nurturing Moon\",\r\n        \"desc\": \"The moon reflects the nurturing light of the sun\",\r\n        \"max\": 4,\r\n        \"require\": \"mindsahi1\",\r\n        \"duration\": 20,\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 35\r\n        },\r\n        \"result\": {\r\n            \"playerlife\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"sahishield\",\r\n        \"name\": \"Guardian Moon\",\r\n        \"desc\": \"In the night, the moonlight is your only guardian\",\r\n        \"max\": 2,\r\n        \"require\": \"sahilife\",\r\n        \"duration\": 25,\r\n        \"cost\": {\r\n            \"esoterism\": 20,\r\n            \"flower\": 50\r\n        },\r\n        \"result\": {\r\n            \"playerdefense\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buybottle\",\r\n        \"name\": \"Trade for a bottle\",\r\n        \"desc\": \"The old man is carrying a large amount of bottles... Why?\",\r\n        \"require\": \"giveflowersoldman\",\r\n        \"cost\": {\r\n            \"flower\": 9\r\n        },\r\n        \"result\": {\r\n            \"bottle\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buycandle\",\r\n        \"name\": \"Buy candle\",\r\n        \"desc\": \"For the nights\",\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 5\r\n        },\r\n        \"result\": {\r\n            \"candle\": 1\r\n        }\r\n    },  \r\n    {\r\n        \"id\": \"buyvase\",\r\n        \"name\": \"Flower vase\",\r\n        \"desc\": \"Flowers for a vase, vase for flowers.\",\r\n        \"max\": 2,\r\n        \"require\": \"giveflowersoldman\",\r\n        \"cost\": {\r\n            \"flower\": 20\r\n        },\r\n        \"mod\": {\r\n            \"flower.max\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"mysticcandle\",\r\n        \"name\": \"Mystic candle\",\r\n        \"desc\": \"Embed a candle with the power of the unknown\",\r\n        \"require\": \"candle\",\r\n        \"duration\":120,\r\n        \"cost\": {\r\n            \"candle\": 1,\r\n            \"esoterism\": 250\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.rate\": 60\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buyvasecoin\",\r\n        \"name\": \"Commercial flower vase\",\r\n        \"desc\": \"It's not as beautiful as the other one, but it seems to work better\",\r\n        \"max\": 3,\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"mod\": {\r\n            \"flower.max\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buybottlebox\",\r\n        \"name\": \"Buy box for bottles\",\r\n        \"desc\": \"The box comes empty though.\",\r\n        \"max\": 5,\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"mod\": {\r\n            \"bottle.max\": 5,\r\n            \"mysticbottle.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buystone\",\r\n        \"name\": \"Buy Copper Stone\",\r\n        \"desc\": \"What use is there for this, anyways\",\r\n        \"require\": \"selling-level>0\",\r\n        \"cost\": {\r\n            \"coin\": 6\r\n        },\r\n        \"result\": {\r\n            \"copperstone\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"autosellnormalon\",\r\n        \"name\": \"Auto sell common loot\",\r\n        \"desc\": \"Automatically sells any equipment you get that doesn't have magical properties\",\r\n        \"require\": \"selling-level>2\",\r\n        \"result\": {\r\n            \"autosellnormal\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"autosellnormaloff\",\r\n        \"name\": \"Stop auto selling\",\r\n        \"desc\": \"Disable auto selling\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"autosellnormal\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buyleaf\",\r\n        \"name\": \"Buy Alocasia Leaf\",\r\n        \"desc\": \"Buy a mysterious black leaf\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 25\r\n        },\r\n        \"result\": {\r\n            \"darkleaf\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buymerchantbook\",\r\n        \"name\": \"Buy [Life of Antonio Rodrigues]\",\r\n        \"desc\": \"A book on the life of a famous merchant\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 70\r\n        },\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"buylunarbook\",\r\n        \"name\": \"Buy [Secrets of the Moon]\",\r\n        \"desc\": \"A book on the mysteries of the moon\",\r\n        \"require\": \"selling-level>3\",\r\n        \"cost\": {\r\n            \"coin\": 70\r\n        },\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"buywallet\",\r\n        \"name\": \"Buy Wallet\",\r\n        \"desc\": \"A hand-made wallet, using tree vines. Not the best, but does the job.\",\r\n        \"require\": \"selling-level>1\",\r\n        \"cost\": {\r\n            \"coin\": 10\r\n        },\r\n        \"max\": 2,\r\n        \"mod\": {\r\n            \"coin.max\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buypurse\",\r\n        \"name\": \"Buy bag\",\r\n        \"desc\": \"A hand-made bag, using thinly cut vines.\",\r\n        \"require\": \"coin>20\",\r\n        \"cost\": {\r\n            \"coin\": 30\r\n        },\r\n        \"max\": 2,\r\n        \"mod\": {\r\n            \"coin.max\": 25\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buytigerstatue\",\r\n        \"name\": \"Buy Statue of Baipu Tuvy\",\r\n        \"desc\": \"A small statue of the blue tiger\",\r\n        \"require\": \"selling-level>2\",\r\n        \"cost\": {\r\n            \"coin\": 60\r\n        },\r\n        \"max\": 1,\r\n        \"result\": {\r\n            \"playerattack\": 2\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"clearmist\",\r\n        \"name\": \"Clear the Mist\",\r\n        \"desc\": \"Focus everything you got into making the mist go away\",\r\n        \"require\": \"playerlevel>5\",\r\n        \"need\": \"playerlevel>25\",\r\n        \"duration\": 300,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"mysticflower\": 25\r\n        },\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"clearmist2\",\r\n        \"name\": \"Clear the Mist II\",\r\n        \"desc\": \"Focus everything you got into making the mist go away\",\r\n        \"require\": \"clearmist\",\r\n        \"need\": \"playerlevel>45\",\r\n        \"duration\": 300,\r\n        \"cost\": {\r\n            \"esoterism\": 50,\r\n            \"mysticflower\": 25\r\n        },\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploreoldtown\",\r\n        \"name\": \"Explore abandoned village\",\r\n        \"desc\": \"Deep through the forest, beyond the mist, you can see an abandoned village\",\r\n        \"require\": \"clearmist2\",\r\n        \"duration\": 120,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploredeadoca\",\r\n        \"name\": \"Explore the dead oca\",\r\n        \"desc\": \"Ocas are the houses built by the Taira, the indigenous people of Brazil. This oca, no longer seems to have anyone living here. There is something sinister in the atmosphere...\",\r\n        \"require\": \"exploreoldtown\",\r\n        \"duration\": 20,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 4,\r\n            \"mental\": 4\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"talkpaje\",\r\n        \"name\": \"Talk to the Paje\",\r\n        \"desc\": \"There was a Paje inside the abandoned oca. Is he looking over the dead here...?\",\r\n        \"require\": \"exploredeadoca\",\r\n        \"duration\": 10,\r\n        \"max\": 1\r\n    },\r\n    {\r\n        \"id\": \"comprehendpaje\",\r\n        \"name\": \"Comprehend the Paje\",\r\n        \"desc\": \"You can't understand much of what he says... Maybe if I could talk to him beyond words?\",\r\n        \"require\": \"talkpaje\",\r\n        \"cost\":{\r\n            \"mental\": 5,\r\n            \"esoterism\": 25\r\n        },\r\n        \"duration\": 60,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 2,\r\n            \"mental\": 4,\r\n            \"esoterism\": 3\r\n        },\r\n        \"mod\":{\r\n            \"mental.max\": 5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"explorecity\",\r\n        \"name\": \"Explore the town\",\r\n        \"desc\": \"When the mist dissipates, you can see a calm town\",\r\n        \"require\": \"clearmist\",\r\n        \"duration\": 120,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"helpvillager\",\r\n        \"name\": \"Help out a villager\",\r\n        \"desc\": \"A fairly old man is carrying packages a bit beyond himself\",\r\n        \"require\": \"clearmist\",\r\n        \"duration\": 180,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 3\r\n        },\r\n        \"result\": {\r\n            \"playerattack\": 2,\r\n            \"coin\": 4\r\n        },\r\n        \"mod\": {\r\n            \"stamina.max\": 3\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"exploremarket\",\r\n        \"name\": \"Explore the market\",\r\n        \"desc\": \"You found the town market while exploring\",\r\n        \"require\": \"explorecity\",\r\n        \"duration\": 300,\r\n        \"max\": 1,\r\n        \"run\": {\r\n            \"stamina\": 1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"buymarketnotes\",\r\n        \"name\": \"Buy merchant notes\",\r\n        \"desc\": \"A shady merchant says he can sells you some of his notes on commerce. For a steepy price. Being able to learn from it, though, depends on you.\",\r\n        \"require\": \"exploremarket\",\r\n        \"max\": 1,\r\n        \"cost\": {\r\n            \"flower\": 50,\r\n            \"mysticbottle\": 3,\r\n            \"mysticflower\": 15\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"helpkid\",\r\n        \"name\": \"Help out a kid\",\r\n        \"desc\": \"A kid is cutting some plants. I guess it is his job?\",\r\n        \"require\": \"explorecity\",\r\n        \"max\": 1,\r\n        \"duration\": 200,\r\n        \"run\": {\r\n            \"stamina\": 2\r\n        },\r\n        \"result\": {\r\n            \"coin\": 5,\r\n            \"playerlife\": 3\r\n        },\r\n        \"mod\": {\r\n            \"stamina.max\": 2\r\n        }\r\n    }\r\n]";
autogen_GriTxts.actions_lunar = "[\r\n    {\r\n        \"id\": \"lunarres1gen\",\r\n        \"name\": \"Sense the moon\",\r\n        \"desc\": \"Doesn't have to be during the night\",\r\n        \"duration\": 25,\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>0\"\r\n    },\r\n    {\r\n        \"id\": \"lunarres2gen\",\r\n        \"name\": \"Feel the moon\",\r\n        \"desc\": \"Is it the moon in the sky, or the moon in...\",\r\n        \"duration\": 120,\r\n        \"cost\": {\r\n            \"lunarres1\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres2\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>1\"\r\n    },\r\n    {\r\n        \"id\": \"lunarres3gen\",\r\n        \"name\": \"Be the moon\",\r\n        \"desc\": \"Forget about being yourself\",\r\n        \"duration\": 150,\r\n        \"cost\": {\r\n            \"lunarres1\": 10,\r\n            \"lunarres2\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\": 1\r\n        },\r\n        \"perpetual\": true,\r\n        \"require\": \"lunology-level>2\"\r\n    },\r\n    {\r\n        \"id\": \"lunarmax1\",\r\n        \"name\": \"Moonwatching\",\r\n        \"desc\": \"There is beauty to be seen\",\r\n        \"duration\": 30,\r\n        \"cost\": {\r\n            \"lunarres1\": 5\r\n        },\r\n        \"run\": {\r\n            \"mental\": 3,\r\n            \"esoterism\": 3\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15\r\n        },\r\n        \"require\": \"lunology-level>1\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax2\",\r\n        \"name\": \"Moongazing\",\r\n        \"desc\": \"There is beauty to be seen\",\r\n        \"duration\": 90,\r\n        \"cost\" : {\r\n            \"lunarres2\": 3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres1\":10,\r\n            \"lunarres2\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15,\r\n            \"lunarres2.max\": 30,\r\n            \"lunarres3.max\": 1\r\n        },\r\n        \"need\": \"lunology-level>1\",\r\n        \"require\": \"lunarmax1>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax3\",\r\n        \"name\": \"Moonwishing\",\r\n        \"desc\": \"Will it come true?\",\r\n        \"duration\": 150,\r\n        \"cost\" : {\r\n            \"lunarres3\": 3\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":2\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 15,\r\n            \"lunarres2.max\": 10,\r\n            \"lunarres3.max\": 10,\r\n            \"lunarmax2.max\": 1\r\n            \r\n        },\r\n        \"need\": \"lunology-level>2\",\r\n        \"require\": \"lunarmax2>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax4\",\r\n        \"name\": \"Moonbathing\",\r\n        \"desc\": \"Take off your clothes and let your whole body feel the moon\",\r\n        \"duration\": 250,\r\n        \"cost\" : {\r\n            \"lunarres1\": 50,\r\n            \"lunarres2\": 40,\r\n            \"lunarres3\": 10\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":5\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 100,\r\n            \"lunarres2.max\": 100,\r\n            \"lunarres3.max\": 100,\r\n            \"lunarmax3.max\": 3\r\n            \r\n        },\r\n        \"need\": \"lunology-level>3\",\r\n        \"require\": \"lunarmax3>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarmax5\",\r\n        \"name\": \"Moonadoring\",\r\n        \"desc\": \"Develop deeper affection for the moon\",\r\n        \"duration\": 300,\r\n        \"cost\" : {\r\n            \"lunarres1\": 60,\r\n            \"lunarres2\": 50,\r\n            \"lunarres3\": 20\r\n        },\r\n        \"run\": {\r\n            \"mental\": 1,\r\n            \"esoterism\": 1,\r\n            \"lunarres1\": 1\r\n        },\r\n        \"result\": {\r\n            \"lunarres3\":10\r\n        },\r\n        \"mod\": {\r\n            \"lunarres1.max\": 500,\r\n            \"lunarres2.max\": 500,\r\n            \"lunarres3.max\": 500,\r\n            \"lunarmax4.max\": 3\r\n            \r\n        },\r\n        \"need\": \"lunology-level>4\",\r\n        \"require\": \"lunarmax4>2\",\r\n        \"max\": 5\r\n    },\r\n    {\r\n        \"id\": \"lunarcandle\",\r\n        \"name\": \"Lunar candle\",\r\n        \"desc\": \"Embed a candle with the light of the moon\",\r\n        \"require\": \"lunology-level>2\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 1,\r\n            \"lunarres1\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"lunarres1.rate\": 100\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunarcandelabra\",\r\n        \"name\": \"Lunar candelabra\",\r\n        \"desc\": \"embed a candelabra with the light of the moon \",\r\n        \"require\": \"lunology-level>3\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 5,\r\n            \"lunarres1\": 100,\r\n            \"lunarres2\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {   \r\n            \"lunarres2.rate\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunarchandeler\",\r\n        \"name\": \"Lunar chandeler\",\r\n        \"desc\": \"embed a chandeler with the light of the moon \",\r\n        \"require\": \"lunology-level>3\",\r\n        \"duration\":100,\r\n        \"cost\": {\r\n            \"candle\": 10,\r\n            \"lunarres1\": 100,\r\n            \"lunarres2\": 100,\r\n            \"lunarres3\": 100\r\n        },\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"lunarres3.rate\": 1\r\n        }\r\n    }\r\n]";
autogen_GriTxts.actions_tc = "[\r\n    {\r\n        \"id\": \"tc_get_money\",\r\n        \"name\": \"Look for coins\",\r\n        \"desc\": \"Some coins laying around here and there\",\r\n        \"result\": {\r\n            \"reiscoin\": 10\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"tc_upgrade_wallet\",\r\n        \"name\": \"Enchant wallet\",\r\n        \"desc\": \"A mysterious old paje, the Brazilian shaman, offers to enhance your wallet. For a price.\",\r\n        \"cost\": {\r\n            \"reiscoin\": 10\r\n        }, \r\n        \"mod\": {\r\n            \"reiscoin.exponential_max_multiply\": 2\r\n        }\r\n    }\r\n]";
autogen_GriTxts.all_translations = "File,Context,English,\"Chinese Simplified\",German,Japanese,\"Portuguese, Brazilian\"\nlocal.csv,78077,Nap,Nap,Nap,Nap,ZzZ\nlocal.csv,78851375,Reset,Reset,Reset,Reset,Resetar\nlocal.csv,765995324,INVENTORY,INVENTORY,INVENTORY,INVENTORY,INVENTÁRIO\nlocal.csv,932088893,\"Change settings of the game\",\"Change settings of the game\",\"Change settings of the game\",\"Change settings of the game\",\"Alterar as configurações do jogo\"\nlocal.csv,1115549294,\"Lu has reached level {0}. You can now proceed.\",\"Lu has reached level {0}. You can now proceed.\",\"Lu has reached level {0}. You can now proceed.\",\"Lu has reached level {0}. You can now proceed.\",\"Lu atingiu o nível {0}. Agora você pode prosseguir.\"\nlocal.csv,1207049443,\"EQUIPMENT SLOTS\",\"EQUIPMENT SLOTS\",\"EQUIPMENT SLOTS\",\"EQUIPMENT SLOTS\",\"SLOTS DE EQUIPAMENTO\"\nlocal.csv,1379812394,Unknown,Unknown,Unknown,Unknown,Desconhecido\nlocal.csv,1982676184,Battle,Battle,Battle,Battle,Combate\nlocal.csv,3955356721,\"Become stronger.\",\"Become stronger.\",\"Become stronger.\",\"Become stronger.\",\"Torne-se mais forte.\"\nlocal.csv,-8588062028,\"Play as Isabel\",\"Play as Isabel\",\"Play as Isabel\",\"Play as Isabel\",\"Jogar como Isabel\"\nlocal.csv,16694507439,\"A woman who seeks out revenge and will do whatever it takes to get it done\",\"A woman who seeks out revenge and will do whatever it takes to get it done\",\"A woman who seeks out revenge and will do whatever it takes to get it done\",\"A woman who seeks out revenge and will do whatever it takes to get it done\",\"Uma mulher que procura a vingança e fará o que for preciso para obtê-la\"\nlocal.csv,7001379443,\"reach level {0} as Lu to proceed\",\"reach level {0} as Lu to proceed\",\"reach level {0} as Lu to proceed\",\"reach level {0} as Lu to proceed\",\"atinja o nível {0} como Lu para prosseguir\"\nlocal.csv,-6490884981,\"Play as Lu\",\"Play as Lu\",\"Play as Lu\",\"Play as Lu\",\"Jogar como Lu\"\nlocal.csv,-9078402861,\"An young girl who adventures across the Lagrima Continent\",\"An young girl who adventures across the Lagrima Continent\",\"An young girl who adventures across the Lagrima Continent\",\"An young girl who adventures across the Lagrima Continent\",\"Uma jovem garota que avança pelo continente de Lagrima\"\nlocal.csv,8836585628,\"Developed by Pedro Gabriel\\nFonteles Furtado\",\"Developed by Pedro Gabriel\\nFonteles Furtado\",\"Developed by Pedro Gabriel\\nFonteles Furtado\",\"Developed by Pedro Gabriel\\nFonteles Furtado\",\"Desenvolvido por Pedro Gabriel\\nFonteles Furtado\"\nlocal.csv,-3469692512,\"Mouse Wheel Sensibility Up\",\"Mouse Wheel Sensibility Up\",\"Mouse Wheel Sensibility Up\",\"Mouse Wheel Sensibility Up\",\"Sensibilidade da roda do mouse+\"\nlocal.csv,-1850529456,Return,Return,Return,Return,Voltar\nlocal.csv,-2795691965,Settings,Settings,Settings,Settings,Configurações\nlocal.csv,-1850928364,Region,Region,Region,Region,Regiões\nlocal.csv,-1214642834,Equipment,Equipment,Equipment,Equipment,Equipamento\nlocal.csv,-1993889503,Memory,Memory,Memory,Memory,Memórias\nlocal.csv,-5174446321,Achievement,Achievement,Achievement,Achievement,Conquistas\nlocal.csv,-99616829,\"EQUIPMENT SETS\",\"EQUIPMENT SETS\",\"EQUIPMENT SETS\",\"EQUIPMENT SETS\",CONJUNTO\nlocal.csv,-136564773,FILTERS,FILTERS,FILTERS,FILTERS,FILTROS\nlocal.csv,-2067043081,\"Level Up\",\"Level Up\",\"Level Up\",\"Level Up\",Nível+\n";
autogen_GriTxts.local = "\n78077|Nap|ZzZ\n78851375|Reset|Resetar\n765995324|INVENTORY\n932088893|Change settings of the game\n1115549294|Lu has reached level {0}. You can now proceed.\n1207049443|EQUIPMENT SLOTS\n1379812394|Unknown\n1982676184|Battle|Combate\n3955356721|Become stronger.\n-8588062028|Play as Isabel\n16694507439|A woman who seeks out revenge and will do whatever it takes to get it done\n7001379443|reach level {0} as Lu to proceed\n-6490884981|Play as Lu\n-9078402861|An young girl who adventures across the Lagrima Continent\n8836585628|Developed by Pedro Gabriel\\nFonteles Furtado\n-3469692512|Mouse Wheel Sensibility Up\n-1850529456|Return\n-2795691965|Settings\n-1850928364|Region\n-1214642834|Equipment\n-1993889503|Memory\n-5174446321|Achievement\n-99616829|EQUIPMENT SETS\n-136564773|FILTERS\n-2067043081|Level Up";
autogen_GriTxts.proceduralactions = "[\r\n    {\r\n        \"id\": \"ritualluar\",\r\n        \"name\": \"Ritual do Luar\",\r\n        \"desc\": \"Ritual of the Moonlight. There are 27 levels to the ritual, each stronger than the last.\",\r\n        \"max\": 27,\r\n        \"require\": \"spiritology-level>1\",\r\n        \"proceduralduration\": {\r\n            \"initial\": 60,\r\n            \"add\": 60\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"proceduralresult\": {\r\n            \"playerlife\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 0\r\n            },\r\n            \"playerattack\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 1\r\n            },\r\n            \"playerdefense\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            }\r\n        },\r\n        \"proceduralcost\": {\r\n            \"esoterism\": {\r\n                \"initial\": 5,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres1\": {\r\n                \"initial\": 1,\r\n                \"growth\": 1.16\r\n            },\r\n            \"riteres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 4,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.08\r\n            },\r\n            \"lunarres1\": {\r\n                \"initial\": 1,\r\n                \"delay\": 1,\r\n                \"growth\": 1.4\r\n            },\r\n            \"lunarres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 5,\r\n                \"growth\": 1.48\r\n            },\r\n            \"lunarres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.5\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"solenidadelua\",\r\n        \"name\": \"Solenidade da Lua\",\r\n        \"desc\": \"Ceremony of the Moonlight. There are 27 levels to the ceremony, each stronger than the last.\",\r\n        \"max\": 27,\r\n        \"require\": \"spiritology-level>2\",\r\n        \"proceduralduration\": {\r\n            \"initial\": 60,\r\n            \"add\": 60\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"proceduralresult\": {\r\n            \"playermagicattack\": {\r\n                \"initial\": 1,\r\n                \"add\": 2,\r\n                \"add_delay\": 1\r\n            },\r\n            \"playermagicdefense\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            },\r\n            \"playerspeed\": {\r\n                \"initial\": 1,\r\n                \"add\": 1,\r\n                \"add_delay\": 3\r\n            }\r\n        },\r\n        \"proceduralcost\": {\r\n            \"esoterism\": {\r\n                \"initial\": 5,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres1\": {\r\n                \"initial\": 1,\r\n                \"growth\": 1.16\r\n            },\r\n            \"riteres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 4,\r\n                \"growth\": 1.1\r\n            },\r\n            \"riteres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.08\r\n            },\r\n            \"lunarres1\": {\r\n                \"initial\": 1,\r\n                \"delay\": 1,\r\n                \"growth\": 1.4\r\n            },\r\n            \"lunarres2\": {\r\n                \"initial\": 1,\r\n                \"delay\": 5,\r\n                \"growth\": 1.48\r\n            },\r\n            \"lunarres3\": {\r\n                \"initial\": 1,\r\n                \"delay\": 7,\r\n                \"growth\": 1.5\r\n            }\r\n        }\r\n    }\r\n]";
autogen_GriTxts.resources = "[\r\n    {\r\n        \"id\" : \"reiscoin\",\r\n        \"name\": \"Reis Coin\",\r\n        \"desc\": \"A coin made up of copper. Currency used in the Brazilian Empire.\",\r\n        \"max\": 200,\r\n        \"initial\" : 0,\r\n        \"require\": \"reiscoin\"\r\n    },\r\n\r\n    {\r\n        \"id\" : \"stamina\",\r\n        \"name\": \"Stamina\",\r\n        \"desc\": \"The ability to sustain effort\",\r\n        \"max\": 45,\r\n        \"initial\" : 0\r\n    },\r\n    {\r\n        \"id\" : \"flower\",\r\n        \"desc\": \"Possibly a subspecies of Snapdragon.\\nUnlike Snapdragons found in the Lusitani empire, this one is blue\",\r\n        \"name\": \"Flower\",\r\n        \"max\": 15\r\n    },\r\n    {\r\n        \"id\" : \"candle\",\r\n        \"desc\": \"Can keep a small flame going\",\r\n        \"name\": \"Candle\",\r\n        \"require\": \"candle\",\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"max\": 20\r\n    },\r\n    {\r\n        \"id\" : \"mysticflower\",\r\n        \"desc\": \"The snapdragon goes from blue to purple. Sometimes, it shines during the night.\",\r\n        \"name\": \"Mystic Flower\",\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"require\": \"mysticflower>0\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarflower\",\r\n        \"desc\": \"The snapdragon goes from purple to white. Those who can afford it might use it in place of bonfires\",\r\n        \"name\": \"Lunar Flower\",\r\n        \"max\": 10,\r\n        \"mod\": {\r\n            \"esoterism.max\": 2,\r\n            \"esoterism.rate\": 50\r\n        },\r\n        \"require\": \"lunarflower\"\r\n    },\r\n    {\r\n        \"id\" : \"mysticstone\",\r\n        \"desc\": \"You can no longer tell this stone is made of copper. It looks like something out of this world.\",\r\n        \"name\": \"Mystic Stone\",\r\n        \"max\": 3,\r\n        \"mod\": {\r\n            \"esoterism.max\": 20,\r\n            \"riteres1.max\": 15\r\n        },\r\n        \"require\": \"mysticstone\"\r\n    },\r\n    {\r\n        \"id\" : \"mental\",\r\n        \"name\": \"Mental\",\r\n        \"desc\": \"The resistence of the mind\",\r\n        \"max\": 30,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\" : \"creativity\",\r\n        \"name\": \"Creativity\",\r\n        \"desc\": \"Elasticity of thought\",\r\n        \"max\": 30,\r\n        \"require\": \"contemplatearea\"\r\n    },\r\n    {\r\n        \"id\" : \"coin\",\r\n        \"name\": \"Peso Coin\",\r\n        \"desc\": \"A coin made up of silver. Cannot be used in the Brazilian Empire.\",\r\n        \"max\": 10,\r\n        \"initial\" : 0,\r\n        \"require\": \"coin\"\r\n    },\r\n    {\r\n        \"id\" : \"darkleaf\",\r\n        \"name\": \"Alocasia Leaf\",\r\n        \"desc\": \"A black leaf from the Alocasia Plumbea tree. They are expensive, but useful in rituals.\",\r\n        \"max\": 10,\r\n        \"initial\" : 0,\r\n        \"require\": \"darkleaf\"\r\n    },\r\n    {\r\n        \"id\" : \"copperstone\",\r\n        \"name\": \"Copper Stone\",\r\n        \"desc\": \"A stone made up of copper. Some Paje use it to channel the spirits\",\r\n        \"max\": 5,\r\n        \"initial\" : 0,\r\n        \"mod\": {\r\n            \"esoterism.max\": 1\r\n        },\r\n        \"require\": \"copperstone\"\r\n    },\r\n    {\r\n        \"id\" : \"bottle\",\r\n        \"name\": \"Bottle\",\r\n        \"desc\": \"Old and foggy\",\r\n        \"max\": 5,\r\n        \"mod\": {\r\n            \"flower.max\": 5\r\n        },\r\n        \"require\": \"buybottle\"\r\n    },\r\n    {\r\n        \"id\" : \"mysticbottle\",\r\n        \"name\": \"Mystic Bottle\",\r\n        \"desc\": \"There is a weird fog bottled up\",\r\n        \"max\": 5,\r\n        \"mod\": {\r\n            \"flower.max\": 2,\r\n            \"mysticflower.max\": 3,\r\n            \"esoterism.max\": 2\r\n        },\r\n        \"require\": \"mysticbottle\"\r\n    },\r\n    \r\n    {\r\n        \"id\" : \"esoterism\",\r\n        \"name\": \"Esoterism\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 30,\r\n        \"require\": \"flowersahi\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres1\",\r\n        \"name\": \"Rite hope\",\r\n        \"desc\": \"Hope the ritual will go well\",\r\n        \"max\": 15,\r\n        \"require\": \"spiritology-level\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres2\",\r\n        \"name\": \"Rite trust\",\r\n        \"desc\": \"Trust in the workings of the Gods\",\r\n        \"max\": 10,\r\n        \"require\": \"spiritology-level>1\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres3\",\r\n        \"name\": \"Rite faith\",\r\n        \"desc\": \"Faith in the pagan arts\",\r\n        \"max\": 5,\r\n        \"require\": \"spiritology-level>2\"\r\n    },\r\n    {\r\n        \"id\" : \"riteres4\",\r\n        \"name\": \"Rite belief\",\r\n        \"desc\": \"Belief in bigger strenghts and powers\",\r\n        \"max\": 3,\r\n        \"require\": \"spiritology-level>5\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres1\",\r\n        \"name\": \"Lunar energy\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 20,\r\n        \"require\": \"lunology-level\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres2\",\r\n        \"name\": \"Lunar power\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 10,\r\n        \"require\": \"lunology-level>1\"\r\n    },\r\n    {\r\n        \"id\" : \"lunarres3\",\r\n        \"name\": \"Lunar force\",\r\n        \"desc\": \"Obscure knowledge meant to a small number of people\",\r\n        \"max\": 3,\r\n        \"require\": \"lunology-level>2\"\r\n    },\r\n    {\r\n        \"id\" : \"autosellnormal\",\r\n        \"name\": \"Auto selling normal\",\r\n        \"desc\": \"You are auto selling normal items that drop from enemies. Excludes skill sets.\",\r\n        \"max\": 1,\r\n        \"require\": \"autosellnormal\"\r\n    },\r\n    {\r\n        \"id\" : \"playerlevel\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>1\",\r\n        \"max\": -1,\r\n        \"initial\": 99999\r\n    },\r\n    {\r\n        \"id\" : \"playerlevelLAGRIMA\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>999999\",\r\n        \"max\": -1,\r\n        \"initial\": 0\r\n    },\r\n    {\r\n        \"id\" : \"playerlevelAMAZONIA\",\r\n        \"name\": \"Level\",\r\n        \"require\": \"playerlevel>999999\",\r\n        \"max\": -1,\r\n        \"initial\": 99999\r\n    },\r\n    {\r\n        \"id\" : \"playerattack\",\r\n        \"name\": \"Attack Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerattack\"\r\n    },\r\n    {\r\n        \"id\" : \"playerspeed\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"name\": \"Speed Bonus\",\r\n        \"require\": \"playerspeed\"\r\n    },\r\n    {\r\n        \"id\" : \"playermagicattack\",\r\n        \"name\": \"Magic Attack Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playermagicattack\"\r\n    },\r\n    {\r\n        \"id\" : \"playermagicdefense\",\r\n        \"name\": \"Magic Defense Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playermagicdefense\"\r\n    },\r\n    {\r\n        \"id\" : \"playerdefense\",\r\n        \"name\": \"Defense Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerdefense\"\r\n    },\r\n    {\r\n        \"id\" : \"playerlife\",\r\n        \"name\": \"Life Bonus\",\r\n        \"desc\": \"Bonus to your stats\",\r\n        \"require\": \"playerlife\"\r\n    }\r\n]";
autogen_GriTxts.skills = "[\r\n    {\r\n        \"id\": \"spiritology\",\r\n        \"name\": \"Ritualism\",\r\n        \"cost\": {\r\n            \"esoterism\":15\r\n        },\r\n        \"need\": \"playerlevel>25\",\r\n        \"require\": \"comprehendpaje\",\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":5,\r\n            \"esoterism.max\":5\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"lunology\",\r\n        \"name\": \"Lunology\",\r\n        \"cost\": {\r\n            \"esoterism\":10,\r\n            \"riteres1\":5\r\n        },\r\n        \"need\": \"playerlevel>30\",\r\n        \"require\": \"ritualsahi1\",\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"mental.max\":2,\r\n            \"lunarres1.max\":5,\r\n            \"lunarres2.max\":3,\r\n            \"lunarres3.max\":1\r\n        }\r\n    },\r\n    {\r\n        \"id\": \"selling\",\r\n        \"name\": \"Commerce\",\r\n        \"Description\": \"The art of trading\",\r\n        \"require\": \"buymarketnotes\",\r\n        \"cost\": {\r\n            \"mental\":20,\r\n            \"stamina\": 5,\r\n            \"creativity\": 20\r\n        },\r\n        \"run\": {\r\n            \"stamina\": 1,\r\n            \"mental\": 1\r\n        },\r\n        \"mod\": {\r\n            \"coin.max\": 5\r\n        }\r\n    }\r\n]";
autogen_GriTxts.spine_blood = "{\"skeleton\":{\"hash\":\"s7zcwEV5eS4\",\"spine\":\"4.0.64\",\"x\":-64,\"y\":-64,\"width\":128,\"height\":128},\"bones\":[{\"name\":\"root\"},{\"name\":\"blood1\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"blood_1\",\"bone\":\"blood1\",\"attachment\":\"blood_1\"},{\"name\":\"blood_2\",\"bone\":\"blood1\",\"attachment\":\"blood_2\"},{\"name\":\"blood_3\",\"bone\":\"blood1\",\"attachment\":\"blood_3\"},{\"name\":\"blood_4\",\"bone\":\"blood1\",\"attachment\":\"blood_4\"},{\"name\":\"blood_5\",\"bone\":\"blood1\",\"attachment\":\"blood_5\"},{\"name\":\"blood_6\",\"bone\":\"blood1\",\"attachment\":\"blood_6\"},{\"name\":\"blood_7\",\"bone\":\"blood1\",\"attachment\":\"blood_7\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"blood_1\":{\"blood_1\":{\"width\":128,\"height\":128}},\"blood_2\":{\"blood_2\":{\"width\":128,\"height\":128}},\"blood_3\":{\"blood_3\":{\"width\":128,\"height\":128}},\"blood_4\":{\"blood_4\":{\"width\":128,\"height\":128}},\"blood_5\":{\"blood_5\":{\"width\":128,\"height\":128}},\"blood_6\":{\"blood_6\":{\"width\":128,\"height\":128}},\"blood_7\":{\"blood_7\":{\"width\":128,\"height\":128}}}}],\"animations\":{\"splatter\":{\"slots\":{\"blood_1\":{\"attachment\":[{\"time\":0.0667,\"name\":null}]},\"blood_2\":{\"attachment\":[{\"name\":null},{\"time\":0.0667,\"name\":\"blood_2\"},{\"time\":0.1333,\"name\":null}]},\"blood_3\":{\"attachment\":[{\"name\":null},{\"time\":0.1333,\"name\":\"blood_3\"},{\"time\":0.1667,\"name\":null}]},\"blood_4\":{\"attachment\":[{\"name\":null},{\"time\":0.1667,\"name\":\"blood_4\"},{\"time\":0.2,\"name\":null}]},\"blood_5\":{\"attachment\":[{\"name\":null},{\"time\":0.2,\"name\":\"blood_5\"},{\"time\":0.2333,\"name\":null}]},\"blood_6\":{\"attachment\":[{\"name\":null},{\"time\":0.2333,\"name\":\"blood_6\"},{\"time\":0.2667,\"name\":null}]},\"blood_7\":{\"attachment\":[{\"name\":null},{\"time\":0.2667,\"name\":\"blood_7\"},{\"time\":0.3,\"name\":null}]}}},\"splatterb\":{\"slots\":{\"blood_1\":{\"attachment\":[{\"name\":null}]},\"blood_2\":{\"attachment\":[{\"name\":null}]},\"blood_3\":{\"rgba\":[{\"color\":\"73174d30\",\"curve\":\"stepped\"},{\"time\":4.4333,\"color\":\"73174d30\"},{\"time\":4.6667,\"color\":\"73174d00\"}]},\"blood_4\":{\"attachment\":[{\"name\":null}]},\"blood_5\":{\"attachment\":[{\"name\":null}]},\"blood_6\":{\"attachment\":[{\"name\":null}]},\"blood_7\":{\"attachment\":[{\"name\":null}]}}},\"splatterc\":{\"slots\":{\"blood_1\":{\"attachment\":[{\"name\":null}]},\"blood_2\":{\"rgba\":[{\"color\":\"73174d29\",\"curve\":\"stepped\"},{\"time\":4.4333,\"color\":\"73174d29\"},{\"time\":4.6667,\"color\":\"73174d00\"}]},\"blood_3\":{\"rgba\":[{\"color\":\"73174d7e\",\"curve\":\"stepped\"},{\"time\":4.4333,\"color\":\"73174d7e\"},{\"time\":4.6667,\"color\":\"73174d00\"}],\"attachment\":[{\"name\":null}]},\"blood_4\":{\"attachment\":[{\"name\":null}]},\"blood_5\":{\"attachment\":[{\"name\":null}]},\"blood_6\":{\"attachment\":[{\"name\":null}]},\"blood_7\":{\"attachment\":[{\"name\":null}]}}},\"splatterd\":{\"slots\":{\"blood_1\":{\"attachment\":[{\"name\":null}]},\"blood_2\":{\"rgba\":[{\"color\":\"73174d7d\"}],\"attachment\":[{\"name\":null}]},\"blood_3\":{\"rgba\":[{\"color\":\"73174d7e\",\"curve\":\"stepped\"},{\"time\":4.4333,\"color\":\"73174d7e\"},{\"time\":4.6667,\"color\":\"73174d00\"}],\"attachment\":[{\"name\":null}]},\"blood_4\":{\"attachment\":[{\"name\":null}]},\"blood_5\":{\"rgba\":[{\"color\":\"73174d35\"},{\"time\":4.4333,\"color\":\"73174d7d\"},{\"time\":4.6667,\"color\":\"73174d00\"}]},\"blood_6\":{\"attachment\":[{\"name\":null}]},\"blood_7\":{\"attachment\":[{\"name\":null}]}}}}}";
autogen_GriTxts.spine_character = "{\"skeleton\":{\"hash\":\"5wM7ARUcVN0\",\"spine\":\"4.0.64\",\"x\":-50.52,\"y\":-48.14,\"width\":102.4,\"height\":102.4},\"bones\":[{\"name\":\"root\"},{\"name\":\"main\",\"parent\":\"root\"},{\"name\":\"metarender\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"character\",\"bone\":\"main\",\"attachment\":\"isabelicon\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"character\":{\"isabelicon\":{\"x\":0.68,\"y\":3.06,\"scaleX\":0.2,\"scaleY\":0.2,\"width\":512,\"height\":512}}}}],\"animations\":{\"appear\":{\"slots\":{\"character\":{\"rgba\":[{\"color\":\"ffffff00\"},{\"time\":0.1,\"color\":\"ffffffff\"}]}},\"bones\":{\"main\":{\"translate\":[{\"y\":8},{\"time\":0.1}]}}},\"attack\":{\"bones\":{\"main\":{\"translate\":[{},{\"time\":0.0667,\"x\":-55.78},{\"time\":0.1333,\"x\":91.8},{\"time\":0.6667}]}}},\"hit\":{\"slots\":{\"character\":{\"rgba\":[{\"color\":\"ff002eff\"},{\"time\":0.0333,\"color\":\"250d11ff\"},{\"time\":0.0667,\"color\":\"5c5052ff\"},{\"time\":0.1,\"color\":\"ff254aff\"},{\"time\":0.1333,\"color\":\"4f393cff\"},{\"time\":0.2,\"color\":\"ffffffff\"},{\"time\":0.2333,\"color\":\"250d11ff\"},{\"time\":0.2667,\"color\":\"5c5052ff\"},{\"time\":0.3,\"color\":\"ffffffff\"}]}},\"bones\":{\"metarender\":{\"translate\":[{\"x\":1,\"curve\":\"stepped\"},{\"time\":0.0333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.0667,\"x\":1,\"curve\":\"stepped\"},{\"time\":0.1,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.1333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.1667,\"curve\":\"stepped\"},{\"time\":0.2},{\"time\":0.2333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.2667,\"x\":1,\"curve\":\"stepped\"},{\"time\":0.3}]},\"main\":{\"translate\":[{\"x\":-0.74},{\"time\":0.0333,\"x\":2},{\"time\":0.0667,\"x\":-2},{\"time\":0.1,\"x\":2},{\"time\":0.1333,\"x\":-2},{\"time\":0.1667,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.2333,\"x\":2},{\"time\":0.2667,\"x\":-2},{\"time\":0.3}],\"scale\":[{\"time\":0.0333},{\"time\":0.0667,\"x\":1.2,\"y\":1.2},{\"time\":0.1}]}}},\"hit3\":{\"slots\":{\"character\":{\"rgba\":[{\"color\":\"ff002eff\"},{\"time\":0.0333,\"color\":\"250d11ff\"},{\"time\":0.0667,\"color\":\"5c5052ff\"},{\"time\":0.1,\"color\":\"ff254aff\"},{\"time\":0.1333,\"color\":\"4f393cff\"},{\"time\":0.2,\"color\":\"ffffffff\"},{\"time\":0.2333,\"color\":\"250d11ff\"},{\"time\":0.2667,\"color\":\"5c5052ff\"},{\"time\":0.3,\"color\":\"ffffffff\"}]}},\"bones\":{\"metarender\":{\"translate\":[{\"x\":1,\"curve\":\"stepped\"},{\"time\":0.0333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.0667,\"x\":1,\"curve\":\"stepped\"},{\"time\":0.1,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.1333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.1667,\"curve\":\"stepped\"},{\"time\":0.2},{\"time\":0.2333,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.2667,\"x\":1,\"curve\":\"stepped\"},{\"time\":0.3}]},\"main\":{\"translate\":[{\"x\":-0.74},{\"time\":0.0333,\"x\":2},{\"time\":0.0667,\"x\":-2},{\"time\":0.1,\"x\":2},{\"time\":0.1333,\"x\":-2},{\"time\":0.1667,\"x\":2,\"curve\":\"stepped\"},{\"time\":0.2333,\"x\":2},{\"time\":0.2667,\"x\":-2},{\"time\":0.3,\"curve\":[0.3,-151.25,0.306,-117.23,0.303,0,0.315,0]},{\"time\":0.3333,\"x\":-121.11,\"curve\":[0.415,-132.87,0.595,113.28,0.395,0,0.557,0]},{\"time\":0.6}],\"scale\":[{\"time\":0.0333},{\"time\":0.0667,\"x\":1.2,\"y\":1.2},{\"time\":0.1}]}}}}}";
autogen_GriTxts.spine_hero = "{\"skeleton\":{\"hash\":\"NtchFPFdnfg\",\"spine\":\"4.0.64\",\"x\":11.44,\"y\":-0.6,\"width\":128.07,\"height\":65.96},\"bones\":[{\"name\":\"root\"},{\"name\":\"main\",\"parent\":\"root\",\"y\":31},{\"name\":\"main2\",\"parent\":\"root\",\"y\":31},{\"name\":\"slash\",\"parent\":\"main2\",\"x\":33.53,\"y\":14.1},{\"name\":\"slash2\",\"parent\":\"main2\",\"x\":24.01,\"y\":31.63},{\"name\":\"shadow\",\"parent\":\"root\",\"x\":-4.19,\"y\":1.05,\"scaleX\":6.0731,\"scaleY\":0.3},{\"name\":\"slash_b\",\"parent\":\"main2\",\"x\":11.1,\"y\":12.95},{\"name\":\"slash_b2\",\"parent\":\"main2\",\"x\":30.7,\"y\":-19.6},{\"name\":\"slash_c\",\"parent\":\"main2\",\"x\":23.3,\"y\":10},{\"name\":\"slash_c2\",\"parent\":\"main2\",\"x\":12.58,\"y\":37},{\"name\":\"slash_d\",\"parent\":\"main2\",\"x\":10.36,\"y\":-7.03}],\"slots\":[{\"name\":\"circle\",\"bone\":\"shadow\",\"color\":\"08090cff\",\"attachment\":\"circle\"},{\"name\":\"ef_slash_0\",\"bone\":\"slash\"},{\"name\":\"ef_slash_1\",\"bone\":\"slash2\"},{\"name\":\"hero_still\",\"bone\":\"main\",\"attachment\":\"hero_still\"},{\"name\":\"hero_still@\",\"bone\":\"main2\"},{\"name\":\"hero_run1\",\"bone\":\"main\"},{\"name\":\"hero_run1@\",\"bone\":\"main2\"},{\"name\":\"hero_run2\",\"bone\":\"main\"},{\"name\":\"hero_run2@\",\"bone\":\"main2\"},{\"name\":\"hero_run3\",\"bone\":\"main\"},{\"name\":\"hero_run3@\",\"bone\":\"main2\"},{\"name\":\"hero_run4\",\"bone\":\"main\"},{\"name\":\"hero_run4@\",\"bone\":\"main2\"},{\"name\":\"hero_attackA\",\"bone\":\"main\"},{\"name\":\"hero_attackA@\",\"bone\":\"main2\"},{\"name\":\"hero_attackB\",\"bone\":\"main\"},{\"name\":\"hero_attackB@\",\"bone\":\"main2\"},{\"name\":\"hero_attackC\",\"bone\":\"main\"},{\"name\":\"hero_attackC@\",\"bone\":\"main2\"},{\"name\":\"hero_attackD\",\"bone\":\"main\"},{\"name\":\"hero_attackD@\",\"bone\":\"main2\"},{\"name\":\"hero_stillB\",\"bone\":\"main\"},{\"name\":\"hero_stillC\",\"bone\":\"main\"},{\"name\":\"hero_stillD\",\"bone\":\"main\"},{\"name\":\"hero_spell2\",\"bone\":\"main\"},{\"name\":\"hero_dying1\",\"bone\":\"main\"},{\"name\":\"hero_dying2\",\"bone\":\"main\"},{\"name\":\"hero_sleep2\",\"bone\":\"main\"},{\"name\":\"hero_sleep\",\"bone\":\"main\"},{\"name\":\"ef_slash_2\",\"bone\":\"slash_b\"},{\"name\":\"ef_slash_5\",\"bone\":\"slash_b2\"},{\"name\":\"ef_slash_3\",\"bone\":\"slash_c\"},{\"name\":\"ef_slash_4\",\"bone\":\"slash_c2\"},{\"name\":\"ef_slash_6\",\"bone\":\"slash_d\"},{\"name\":\"ef_slash_7\",\"bone\":\"slash\"},{\"name\":\"ef_slash_8\",\"bone\":\"root\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"circle\":{\"circle\":{\"width\":11,\"height\":11}},\"ef_slash_0\":{\"ef_slash_0\":{\"width\":132,\"height\":83}},\"ef_slash_1\":{\"ef_slash_1\":{\"width\":132,\"height\":83}},\"ef_slash_2\":{\"ef_slash_2\":{\"width\":132,\"height\":83}},\"ef_slash_3\":{\"ef_slash_3\":{\"width\":132,\"height\":83}},\"ef_slash_4\":{\"ef_slash_4\":{\"width\":132,\"height\":83}},\"ef_slash_5\":{\"ef_slash_5\":{\"width\":132,\"height\":83}},\"ef_slash_6\":{\"ef_slash_6\":{\"width\":132,\"height\":83}},\"hero_attackA\":{\"hero_attackA\":{\"width\":96,\"height\":96}},\"hero_attackA@\":{\"hero_attackA\":{\"width\":96,\"height\":96}},\"hero_attackB\":{\"hero_attackB\":{\"width\":96,\"height\":96}},\"hero_attackB@\":{\"hero_attackB\":{\"width\":96,\"height\":96}},\"hero_attackC\":{\"hero_attackC\":{\"width\":96,\"height\":112}},\"hero_attackC@\":{\"hero_attackC\":{\"width\":96,\"height\":112}},\"hero_attackD\":{\"hero_attackD\":{\"width\":96,\"height\":96}},\"hero_attackD@\":{\"hero_attackD\":{\"width\":96,\"height\":96}},\"hero_dying1\":{\"hero_dying1\":{\"width\":64,\"height\":64}},\"hero_dying2\":{\"hero_dying2\":{\"width\":64,\"height\":64}},\"hero_run1\":{\"hero_run1\":{\"width\":62,\"height\":64}},\"hero_run1@\":{\"hero_run1\":{\"width\":62,\"height\":64}},\"hero_run2\":{\"hero_run2\":{\"width\":62,\"height\":64}},\"hero_run2@\":{\"hero_run2\":{\"width\":62,\"height\":64}},\"hero_run3\":{\"hero_run3\":{\"width\":62,\"height\":64}},\"hero_run3@\":{\"hero_run3\":{\"width\":62,\"height\":64}},\"hero_run4\":{\"hero_run4\":{\"width\":62,\"height\":64}},\"hero_run4@\":{\"hero_run4\":{\"width\":62,\"height\":64}},\"hero_sleep\":{\"hero_sleep\":{\"width\":94,\"height\":94}},\"hero_sleep2\":{\"hero_sleep2\":{\"width\":94,\"height\":94}},\"hero_spell2\":{\"hero_spell2\":{\"width\":96,\"height\":96}},\"hero_still\":{\"hero_still\":{\"width\":64,\"height\":64}},\"hero_still@\":{\"hero_still\":{\"width\":64,\"height\":64}},\"hero_stillB\":{\"hero_stillB\":{\"width\":64,\"height\":64}},\"hero_stillC\":{\"hero_stillC\":{\"width\":64,\"height\":64}},\"hero_stillD\":{\"hero_stillD\":{\"width\":64,\"height\":64}}}}],\"animations\":{\"attack\":{\"slots\":{\"ef_slash_0\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ffffffff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_0\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_1\":{\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_1\"},{\"time\":0.3333,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}]},\"hero_attackB@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackB\"},{\"time\":0.4333,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":108.26,\"y\":1},{\"time\":0.4,\"x\":104.08,\"y\":1}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":110.3,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":110.3},{\"time\":0.3667,\"x\":103.57},{\"time\":0.4,\"x\":11.08},{\"time\":0.4667,\"x\":1.34}]}}},\"attack2\":{\"slots\":{\"ef_slash_2\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ffffffff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_2\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_5\":{\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_5\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackA\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":108.26,\"y\":1},{\"time\":0.4,\"x\":104.08,\"y\":1}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":110.3,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":110.3},{\"time\":0.3667,\"x\":103.57},{\"time\":0.4,\"x\":11.08},{\"time\":0.4667,\"x\":1.34}]}}},\"attack2sp\":{\"slots\":{\"ef_slash_2\":{\"rgba\":[{\"time\":0.0333,\"color\":\"ff9afeff\"},{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ff9afeff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"ff9afeff\",\"curve\":\"stepped\"},{\"time\":0.3,\"color\":\"ff9afeff\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_2\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_5\":{\"rgba\":[{\"time\":0.3,\"color\":\"ff9afeff\",\"curve\":\"stepped\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_5\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackA\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":108.26,\"y\":1},{\"time\":0.4,\"x\":104.08,\"y\":1}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":110.3,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":110.3},{\"time\":0.3667,\"x\":103.57},{\"time\":0.4,\"x\":11.08},{\"time\":0.4667,\"x\":1.34}]}}},\"attack2sp2\":{\"slots\":{\"ef_slash_2\":{\"rgba\":[{\"time\":0.0333,\"color\":\"ff9afeff\"},{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ff9afeff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"ff9afeff\",\"curve\":\"stepped\"},{\"time\":0.3,\"color\":\"ff9afeff\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_2\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_5\":{\"rgba\":[{\"time\":0.3,\"color\":\"ff9afeff\",\"curve\":\"stepped\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_5\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackA\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":108.26,\"y\":1},{\"time\":0.4,\"x\":104.08,\"y\":1}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":110.3,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":110.3},{\"time\":0.3667,\"x\":103.57},{\"time\":0.4,\"x\":11.08},{\"time\":0.4667,\"x\":1.34}]},\"slash_b\":{\"translate\":[{\"time\":0.0333,\"x\":-10.68,\"y\":3.77,\"curve\":\"stepped\"},{\"time\":0.3667,\"x\":-0.1,\"y\":0.05}],\"scale\":[{\"time\":0.0333,\"x\":2,\"y\":1.2,\"curve\":\"stepped\"},{\"time\":0.3667}]}}},\"attack3\":{\"slots\":{\"ef_slash_3\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ffffffff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_3\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_4\":{\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_4\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackC@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackC\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":152.38,\"y\":9.55},{\"time\":0.1,\"x\":160.73,\"y\":32.52,\"curve\":\"stepped\"},{\"time\":0.2667,\"x\":160.73,\"y\":32.52,\"curve\":[0.311,160.73,0.356,168.04,0.296,69.29,0.4,83.45]},{\"time\":0.4,\"x\":168.04,\"y\":26.25}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":144.17},{\"time\":0.3667,\"x\":153.98},{\"time\":0.4667,\"x\":11.08}],\"scale\":[{\"time\":0.0333,\"x\":0.494},{\"time\":0.3667,\"x\":0.329},{\"time\":0.4667,\"x\":1.103}]}}},\"attack3sp\":{\"slots\":{\"ef_slash_3\":{\"rgba\":[{\"time\":0.0333,\"color\":\"a0fffcff\"},{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"a0fffcff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"a0fffcff\",\"curve\":\"stepped\"},{\"time\":0.2667,\"color\":\"a0fffcff\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_3\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_4\":{\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_4\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackC@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackC\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":152.38,\"y\":9.55},{\"time\":0.1,\"x\":160.73,\"y\":32.52,\"curve\":\"stepped\"},{\"time\":0.2667,\"x\":160.73,\"y\":32.52,\"curve\":[0.311,160.73,0.356,168.04,0.296,69.29,0.4,83.45]},{\"time\":0.4,\"x\":168.04,\"y\":26.25}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":144.17},{\"time\":0.3667,\"x\":153.98},{\"time\":0.4667,\"x\":11.08}],\"scale\":[{\"time\":0.0333,\"x\":0.494},{\"time\":0.3667,\"x\":0.329},{\"time\":0.4667,\"x\":1.103}]},\"slash_c\":{\"translate\":[{\"time\":0.0333,\"x\":16.45,\"y\":-2.7,\"curve\":\"stepped\"},{\"time\":0.3667,\"x\":-0.3}],\"scale\":[{\"time\":0.0333,\"x\":1.5,\"y\":1.1,\"curve\":\"stepped\"},{\"time\":0.3667}]}}},\"attack3sp2\":{\"slots\":{\"ef_slash_3\":{\"rgba\":[{\"time\":0.0333,\"color\":\"ffffffff\"},{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"dd0000ff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"dd0000ff\",\"curve\":\"stepped\"},{\"time\":0.3667,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_3\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_4\":{\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_4\"},{\"time\":0.3667,\"name\":null}]},\"hero_attackC@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackC\"},{\"time\":0.4667,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":152.38,\"y\":9.55},{\"time\":0.1,\"x\":160.73,\"y\":32.52,\"curve\":\"stepped\"},{\"time\":0.2667,\"x\":160.73,\"y\":32.52,\"curve\":[0.311,160.73,0.356,168.04,0.296,69.29,0.4,83.45]},{\"time\":0.4,\"x\":168.04,\"y\":26.25}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":144.17},{\"time\":0.3667,\"x\":153.98},{\"time\":0.4667,\"x\":11.08}],\"scale\":[{\"time\":0.0333,\"x\":0.494},{\"time\":0.3667,\"x\":0.329},{\"time\":0.4667,\"x\":1.103}]},\"slash_c\":{\"translate\":[{\"time\":0.0333,\"x\":16.45,\"y\":-2.7,\"curve\":\"stepped\"},{\"time\":0.3667,\"x\":-0.3}],\"scale\":[{\"time\":0.0333,\"x\":1.5,\"y\":1.1,\"curve\":\"stepped\"},{\"time\":0.3667}]}}},\"attackblack\":{\"slots\":{\"ef_slash_0\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"27001aff\"},{\"time\":0.1333,\"color\":\"ff9d9dff\"},{\"time\":0.2,\"color\":\"27001aff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_0\"},{\"time\":0.3,\"name\":null}]},\"ef_slash_1\":{\"rgba\":[{\"time\":0.3,\"color\":\"4d0027ff\",\"curve\":\"stepped\"},{\"time\":0.3333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.3,\"name\":\"ef_slash_1\"},{\"time\":0.3333,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}]},\"hero_attackB@\":{\"rgba\":[{\"time\":0.4,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackB\"},{\"time\":0.4333,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.4,\"color\":\"87f7ffff\"},{\"time\":0.4333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.4,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":108.26,\"y\":1},{\"time\":0.4,\"x\":104.08,\"y\":1}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.4,\"x\":9.59},{\"time\":0.4333,\"x\":-8.12},{\"time\":0.4667}]},\"slash\":{\"translate\":[{\"time\":0.0333,\"x\":17.97,\"y\":-3,\"curve\":\"stepped\"},{\"time\":0.3}],\"scale\":[{\"time\":0.0333,\"x\":1.4,\"y\":1.1,\"curve\":\"stepped\"},{\"time\":0.3}]},\"shadow\":{\"translate\":[{\"x\":-6.28},{\"time\":0.0333,\"x\":110.3,\"curve\":\"stepped\"},{\"time\":0.3,\"x\":110.3},{\"time\":0.3667,\"x\":103.57},{\"time\":0.4,\"x\":11.08},{\"time\":0.4667,\"x\":1.34}]}}},\"attackfast\":{\"slots\":{\"ef_slash_0\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"ef_slash_0\"},{\"time\":0.1333,\"name\":null}]},\"ef_slash_1\":{\"attachment\":[{\"time\":0.1333,\"name\":\"ef_slash_1\"},{\"time\":0.2,\"name\":null}]},\"hero_attackA@\":{\"rgba\":[{\"time\":0.3,\"color\":\"1300ffff\"}]},\"hero_attackB@\":{\"rgba\":[{\"time\":0.3,\"color\":\"1300ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackB\"},{\"time\":0.3333,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.3,\"color\":\"87f7ffff\"},{\"time\":0.3333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0667,\"name\":null},{\"time\":0.3,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1.9},{\"time\":0.2667,\"x\":112.47,\"y\":1.55}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":47.33,\"y\":2.63},{\"time\":0.3}],\"scale\":[{\"time\":0.3667}]}}},\"attackfast2\":{\"slots\":{\"ef_slash_0\":{\"rgba\":[{\"time\":0.0667,\"color\":\"ffe6e6ff\"},{\"time\":0.1,\"color\":\"ffffffff\"}]},\"hero_attackA\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackA\"},{\"time\":0.1667,\"name\":null}]},\"hero_attackA@\":{\"attachment\":[{\"time\":0.0333,\"name\":\"hero_attackA\"}]},\"hero_still\":{\"rgba\":[{\"time\":0.0333,\"color\":\"0058ffff\"},{\"time\":0.3,\"color\":\"87f7ffff\"},{\"time\":0.3333,\"color\":\"ffffffff\"}],\"attachment\":[{\"time\":0.0333,\"name\":null},{\"time\":0.3,\"name\":\"hero_still\"}]}},\"bones\":{\"main2\":{\"translate\":[{\"time\":0.0333,\"x\":108.26,\"y\":1.9},{\"time\":0.2667,\"x\":112.47,\"y\":1.55}]},\"main\":{\"translate\":[{\"x\":-7.36},{\"time\":0.0333,\"x\":42.94,\"y\":2.63},{\"time\":0.1667,\"x\":109.8,\"y\":1.31},{\"time\":0.3}],\"scale\":[{},{\"time\":0.0333,\"x\":2.8},{\"time\":0.1667,\"curve\":\"stepped\"},{\"time\":0.3667}]}}},\"hit\":{\"slots\":{\"hero_run3\":{\"rgba\":[{\"color\":\"ff2a64ff\"},{\"time\":0.0333,\"color\":\"000000ff\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"000000ff\"},{\"time\":0.1,\"color\":\"ff2a64ff\"},{\"time\":0.1333,\"color\":\"000000ff\"},{\"time\":0.2,\"color\":\"ffffffff\"}],\"attachment\":[{\"name\":\"hero_run3\"},{\"time\":0.2,\"name\":null}]},\"hero_still\":{\"rgba\":[{\"color\":\"ff2a64ff\"},{\"time\":0.0333,\"color\":\"000000ff\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"000000ff\"},{\"time\":0.1,\"color\":\"ff2a64ff\"},{\"time\":0.1333,\"color\":\"000000ff\"},{\"time\":0.2,\"color\":\"ffffffff\"}],\"attachment\":[{\"name\":null},{\"time\":0.2,\"name\":\"hero_still\"}]}},\"bones\":{\"main\":{\"translate\":[{},{\"time\":0.0333,\"x\":0.85},{\"time\":0.0667,\"x\":-2.96},{\"time\":0.1,\"x\":0.85},{\"time\":0.1333,\"x\":-2.96},{\"time\":0.1667,\"x\":0.85},{\"time\":0.2,\"x\":-2.96}]},\"root\":{\"translate\":[{\"x\":-13.87,\"curve\":\"stepped\"},{\"time\":0.1667,\"x\":-13.87},{\"time\":0.2}]}}},\"hurt\":{\"slots\":{\"hero_dying1\":{\"attachment\":[{\"name\":\"hero_dying1\"},{\"time\":0.4667,\"name\":null}]},\"hero_dying2\":{\"attachment\":[{\"time\":0.4667,\"name\":\"hero_dying2\"},{\"time\":0.9333,\"name\":\"hero_dying2\"}]},\"hero_still\":{\"attachment\":[{\"name\":null}]}}},\"idle\":{\"slots\":{\"hero_still\":{\"attachment\":[{\"time\":0.1333,\"name\":null}]},\"hero_stillB\":{\"attachment\":[{\"time\":0.1333,\"name\":\"hero_stillB\"},{\"time\":0.2667,\"name\":null}]},\"hero_stillC\":{\"attachment\":[{\"time\":0.2667,\"name\":\"hero_stillC\"},{\"time\":0.4,\"name\":null}]},\"hero_stillD\":{\"attachment\":[{\"time\":0.4,\"name\":\"hero_stillD\"},{\"time\":0.5,\"name\":\"hero_stillD\"}]}}},\"idle2\":{\"bones\":{\"main\":{\"translate\":[{\"time\":0.0667,\"y\":-1,\"curve\":\"stepped\"},{\"time\":0.2333,\"y\":-1,\"curve\":\"stepped\"},{\"time\":0.2667}],\"scale\":[{\"curve\":\"stepped\"},{\"time\":0.0667,\"y\":0.96,\"curve\":\"stepped\"},{\"time\":0.2333,\"y\":0.96,\"curve\":\"stepped\"},{\"time\":0.2667,\"curve\":\"stepped\"},{\"time\":0.4333}]}}},\"magic\":{\"slots\":{\"hero_spell2\":{\"attachment\":[{\"time\":0.0333,\"name\":\"hero_spell2\"},{\"time\":0.3667,\"name\":null}]},\"hero_still\":{\"attachment\":[{\"time\":0.0333,\"name\":null},{\"time\":0.3667,\"name\":\"hero_still\"}]}},\"bones\":{\"main\":{\"translate\":[{\"curve\":[0.029,77.41,0.033,68.14,0.022,0,0.045,0]},{\"time\":0.0667,\"x\":68.5,\"curve\":[0.136,69.24,0.288,68.3,0.124,0,0.277,0]},{\"time\":0.3333,\"x\":68.3,\"curve\":[0.341,68.3,0.453,-93.74,0.389,0,0.444,0]},{\"time\":0.5}]},\"shadow\":{\"translate\":[{},{\"time\":0.0667,\"x\":68.7,\"curve\":\"stepped\"},{\"time\":0.3333,\"x\":68.7},{\"time\":0.5}]}}},\"sleep\":{\"slots\":{\"hero_sleep\":{\"attachment\":[{\"name\":\"hero_sleep\"},{\"time\":0.4667,\"name\":null}]},\"hero_sleep2\":{\"attachment\":[{\"time\":0.4667,\"name\":\"hero_sleep2\"},{\"time\":0.9333,\"name\":\"hero_sleep2\"}]},\"hero_still\":{\"attachment\":[{\"name\":null}]}}}}}";
autogen_GriTxts.spine_hit = "{\"skeleton\":{\"hash\":\"yy6O8vWOr18\",\"spine\":\"4.0.64\"},\"bones\":[{\"name\":\"root\"},{\"name\":\"center\",\"parent\":\"root\",\"length\":12},{\"name\":\"center2\",\"parent\":\"root\"},{\"name\":\"motion1\",\"parent\":\"root\"},{\"name\":\"center3\",\"parent\":\"root\"},{\"name\":\"center4\",\"parent\":\"root\",\"length\":12,\"y\":-1,\"scaleX\":1.1,\"scaleY\":0.99},{\"name\":\"motion2\",\"parent\":\"root\"},{\"name\":\"center5\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"whitecircle\",\"bone\":\"center2\"},{\"name\":\"e_slash\",\"bone\":\"center\"},{\"name\":\"e_slash@\",\"bone\":\"center4\"},{\"name\":\"e_AuroraRing\",\"bone\":\"center\"},{\"name\":\"e_AuroraRing@\",\"bone\":\"center4\"},{\"name\":\"e_SaintArrow\",\"bone\":\"motion1\"},{\"name\":\"e_Spark001\",\"bone\":\"center2\"},{\"name\":\"e_Fog2001\",\"bone\":\"center\"},{\"name\":\"e_Fog2001@\",\"bone\":\"center4\"},{\"name\":\"text:main16\",\"bone\":\"center3\"},{\"name\":\"e_Burst_1\",\"bone\":\"motion2\"},{\"name\":\"sps:fire\",\"bone\":\"center5\"},{\"name\":\"sps:ice\",\"bone\":\"center5\"},{\"name\":\"sps:thunder\",\"bone\":\"center5\"},{\"name\":\"sps:buff\",\"bone\":\"center5\"},{\"name\":\"sps:debuff\",\"bone\":\"center5\"},{\"name\":\"sps:heal\",\"bone\":\"center5\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"e_AuroraRing\":{\"e_AuroraRing\":{\"width\":128,\"height\":128}},\"e_AuroraRing@\":{\"e_AuroraRing\":{\"width\":128,\"height\":128}},\"e_Burst_1\":{\"e_Burst_1\":{\"width\":256,\"height\":256}},\"e_Fog2001\":{\"e_Fog2001\":{\"width\":128,\"height\":128}},\"e_Fog2001@\":{\"e_Fog2001\":{\"width\":128,\"height\":128}},\"e_SaintArrow\":{\"e_SaintArrow\":{\"width\":64,\"height\":128}},\"e_slash\":{\"e_slash\":{\"x\":-1.63,\"y\":3.36,\"width\":256,\"height\":255}},\"e_slash@\":{\"e_slash\":{\"x\":-1.63,\"y\":3.36,\"width\":256,\"height\":255}},\"e_Spark001\":{\"e_Spark001\":{\"width\":128,\"height\":128}},\"sps:buff\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"sps:debuff\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"sps:fire\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"sps:heal\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"sps:ice\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"sps:thunder\":{\"whitecircle\":{\"width\":512,\"height\":512}},\"text:main16\":{\"arrowup\":{\"width\":15,\"height\":22}},\"whitecircle\":{\"whitecircle\":{\"x\":1.47,\"y\":-1.28,\"width\":512,\"height\":512}}}}],\"events\":{\"tint\":{}},\"animations\":{\"fire\":{\"slots\":{\"sps:fire\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.4,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.4333}],\"shear\":[{},{\"time\":0.4,\"x\":1}]}}},\"hit_animation\":{\"slots\":{\"e_slash\":{\"rgb\":[{\"color\":\"ff1313\"}],\"alpha\":[{\"time\":0.1,\"value\":1},{\"time\":0.2333,\"value\":0}],\"attachment\":[{\"name\":\"e_slash\"},{\"time\":0.2333,\"name\":null}]},\"whitecircle\":{\"rgb\":[{\"color\":\"d8ffff\"},{\"time\":0.0333,\"color\":\"ca0808\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"ca0808\"},{\"time\":0.1,\"color\":\"d8ffff\"},{\"time\":0.1333,\"color\":\"ca0808\"}],\"alpha\":[{\"value\":1},{\"time\":0.0333,\"value\":0.2938},{\"time\":0.0667,\"value\":0.13849047},{\"time\":0.1,\"value\":1},{\"time\":0.1333,\"value\":0.4623},{\"time\":0.4,\"value\":0}]}},\"bones\":{\"center\":{\"scale\":[{\"x\":1.5,\"y\":1.5},{\"time\":0.0333,\"x\":2,\"y\":2},{\"time\":0.1,\"x\":0.8,\"y\":0.8},{\"time\":0.2333,\"x\":0,\"y\":0}]}}},\"hit_animation2\":{\"slots\":{\"e_slash\":{\"rgb\":[{\"color\":\"ff1313\"}],\"alpha\":[{\"time\":0.1,\"value\":1},{\"time\":0.2333,\"value\":0}],\"attachment\":[{\"name\":\"e_slash\"},{\"time\":0.2333,\"name\":null}]},\"whitecircle\":{\"rgb\":[{\"color\":\"d8ffff\"},{\"time\":0.0333,\"color\":\"ca0808\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"ca0808\"},{\"time\":0.1,\"color\":\"d8ffff\"},{\"time\":0.1333,\"color\":\"ca0808\"}],\"alpha\":[{\"value\":1},{\"time\":0.0333,\"value\":0.2938},{\"time\":0.0667,\"value\":0.13849047},{\"time\":0.1,\"value\":1},{\"time\":0.1333,\"value\":0.4623},{\"time\":0.4,\"value\":0}],\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.2333,\"name\":null},{\"time\":0.4,\"name\":\"whitecircle\"}]}},\"bones\":{\"center\":{\"scale\":[{\"x\":1.5,\"y\":1.5},{\"time\":0.0333,\"x\":2,\"y\":2},{\"time\":0.1,\"x\":0.8,\"y\":0.8},{\"time\":0.2333,\"x\":0,\"y\":0}]}}},\"hit_animation3\":{\"slots\":{\"e_AuroraRing@\":{\"rgba\":[{\"color\":\"4934fc48\"},{\"time\":0.1,\"color\":\"348cfcff\"},{\"time\":0.3333,\"color\":\"fc353500\"}],\"attachment\":[{\"name\":\"e_AuroraRing\"}]},\"e_Burst_1\":{\"rgba\":[{\"time\":0.2,\"color\":\"fafc78ff\"},{\"time\":0.3333,\"color\":\"fcc078ff\"}],\"attachment\":[{\"time\":0.2,\"name\":\"e_Burst_1\"},{\"time\":0.3333,\"name\":null}]},\"e_slash\":{\"rgb\":[{\"color\":\"ff1313\"}],\"alpha\":[{\"time\":0.1,\"value\":1},{\"time\":0.2333,\"value\":0}],\"attachment\":[{\"name\":\"e_slash\"},{\"time\":0.2333,\"name\":null}]},\"e_Spark001\":{\"rgba\":[{\"color\":\"f90000ff\"}],\"attachment\":[{\"time\":0.1,\"name\":\"e_Spark001\"}]},\"whitecircle\":{\"rgb\":[{\"color\":\"d8ffff\"},{\"time\":0.0333,\"color\":\"ca0808\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"ca0808\"},{\"time\":0.1,\"color\":\"d8ffff\"},{\"time\":0.1333,\"color\":\"ca0808\"}],\"alpha\":[{\"value\":1},{\"time\":0.0333,\"value\":0.2938},{\"time\":0.0667,\"value\":0.13849047},{\"time\":0.1,\"value\":1},{\"time\":0.1333,\"value\":0.4623}]}},\"bones\":{\"center2\":{\"scale\":[{\"time\":0.1},{\"time\":0.2,\"x\":8,\"y\":0}]},\"center\":{\"scale\":[{\"x\":1.5,\"y\":1.5},{\"time\":0.0333,\"x\":5.455,\"y\":6.061},{\"time\":0.1,\"x\":0.8,\"y\":0.8},{\"time\":0.2333,\"x\":0,\"y\":0}]},\"center4\":{\"scale\":[{\"x\":2.727,\"y\":3.03},{\"time\":0.1333,\"x\":0,\"y\":0},{\"time\":0.3333,\"x\":14.545,\"y\":16.162}]},\"motion2\":{\"translate\":[{\"time\":0.2},{\"time\":0.3333,\"y\":217.51}],\"scale\":[{\"time\":0.2,\"y\":0},{\"time\":0.3333,\"x\":0,\"y\":4}]}}},\"ice\":{\"slots\":{\"sps:ice\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.4,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.4333}],\"shear\":[{},{\"time\":0.4,\"x\":1}]}}},\"levelup_text\":{\"slots\":{\"e_Fog2001\":{\"rgb\":[{\"color\":\"17010c\"},{\"time\":0.1333,\"color\":\"3f2d36\"}],\"alpha\":[{\"value\":0.6109},{\"time\":0.3667,\"value\":1},{\"time\":0.5667,\"value\":0}],\"attachment\":[{\"name\":\"e_Fog2001\"}]},\"e_Spark001\":{\"rgb\":[{\"time\":0.1333,\"color\":\"630748\"}],\"alpha\":[{\"time\":0.1333,\"value\":0},{\"time\":0.4333,\"value\":1}],\"attachment\":[{\"time\":0.1333,\"name\":\"e_Spark001\"},{\"time\":2.6667,\"name\":null}]},\"text:main16\":{\"alpha\":[{\"time\":0.2667,\"value\":0},{\"time\":0.5,\"value\":1}],\"attachment\":[{\"time\":0.2667,\"name\":\"arrowup\"},{\"time\":2.6667,\"name\":null}]}},\"bones\":{\"center\":{\"scale\":[{\"y\":0.4},{\"time\":0.5667,\"x\":5,\"y\":2}]},\"center2\":{\"scale\":[{\"time\":0.1333},{\"time\":0.4333,\"x\":2},{\"time\":2.6667,\"x\":1.8,\"y\":0.8}]}}},\"level_up\":{\"slots\":{\"text:main16\":{\"rgba\":[{\"color\":\"ffffffff\"},{\"time\":0.0333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"46feeaff\"},{\"time\":0.1,\"color\":\"b345feff\"},{\"time\":0.1333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.1667,\"color\":\"46feeaff\"},{\"time\":0.2,\"color\":\"ffffffff\",\"curve\":\"stepped\"},{\"time\":0.3,\"color\":\"ffffffff\"},{\"time\":0.3333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.3667,\"color\":\"46feeaff\"},{\"time\":0.4,\"color\":\"b345feff\"},{\"time\":0.4333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.4667,\"color\":\"46feeaff\"},{\"time\":0.5,\"color\":\"ffffffff\",\"curve\":\"stepped\"},{\"time\":0.7,\"color\":\"ffffffff\"},{\"time\":0.7333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.7667,\"color\":\"46feeaff\"},{\"time\":0.8,\"color\":\"b345feff\"},{\"time\":0.8333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":0.8667,\"color\":\"46feeaff\"},{\"time\":0.9,\"color\":\"ffffffff\",\"curve\":\"stepped\"},{\"time\":1.0333,\"color\":\"ffffffff\"},{\"time\":1.0667,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.1,\"color\":\"46feeaff\"},{\"time\":1.1333,\"color\":\"b345feff\"},{\"time\":1.1667,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.2,\"color\":\"46feeaff\"},{\"time\":1.2333,\"color\":\"ffffffff\",\"curve\":\"stepped\"},{\"time\":1.4,\"color\":\"ffffffff\"},{\"time\":1.4333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.4667,\"color\":\"46feeaff\"},{\"time\":1.5,\"color\":\"b345feff\"},{\"time\":1.5333,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.5667,\"color\":\"46feeaff\"},{\"time\":1.6,\"color\":\"ffffffff\",\"curve\":\"stepped\"},{\"time\":1.7333,\"color\":\"ffffffff\"},{\"time\":1.7667,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.8,\"color\":\"46feeaff\"},{\"time\":1.8333,\"color\":\"b345feff\"},{\"time\":1.8667,\"color\":\"46feeaff\",\"curve\":\"stepped\"},{\"time\":1.9,\"color\":\"46feeaff\"},{\"time\":1.9333,\"color\":\"ffffffff\"}],\"attachment\":[{\"name\":\"arrowup\"},{\"time\":2.1333,\"name\":\"arrowup\"}]},\"whitecircle\":{\"rgb\":[{\"color\":\"d8ffff\"},{\"time\":0.0333,\"color\":\"15f076\",\"curve\":\"stepped\"},{\"time\":0.0667,\"color\":\"15f076\"},{\"time\":0.1,\"color\":\"1af5ff\"},{\"time\":0.1333,\"color\":\"d8ffff\"},{\"time\":0.1667,\"color\":\"15f076\",\"curve\":\"stepped\"},{\"time\":0.2,\"color\":\"15f076\"},{\"time\":0.2333,\"color\":\"1af5ff\"},{\"time\":0.2667,\"color\":\"ffffff\"}],\"alpha\":[{\"time\":0.0333,\"value\":1},{\"time\":0.0667,\"value\":0.13849047},{\"time\":0.1,\"value\":1,\"curve\":\"stepped\"},{\"time\":0.1667,\"value\":1},{\"time\":0.2,\"value\":0.13849047},{\"time\":0.2333,\"value\":1}],\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.2333,\"name\":null}]}},\"bones\":{\"center3\":{\"translate\":[{\"y\":29.61}]}}},\"level_upb\":{\"slots\":{\"e_AuroraRing\":{\"rgb\":[{\"time\":0.2333,\"color\":\"605cff\"},{\"time\":0.7333,\"color\":\"ffffff\"}],\"alpha\":[{\"time\":0.6333,\"value\":1},{\"time\":0.7333,\"value\":0.0011}],\"attachment\":[{\"time\":0.1667,\"name\":\"e_AuroraRing\"}]},\"e_SaintArrow\":{\"alpha\":[{\"time\":0.4667,\"value\":0.99978566},{\"time\":0.7333,\"value\":0}],\"attachment\":[{\"name\":\"e_SaintArrow\"}]},\"e_Spark001\":{\"rgb\":[{\"time\":0.3333,\"color\":\"ffffff\"},{\"time\":0.3667,\"color\":\"36acff\"},{\"time\":0.6,\"color\":\"ffffff\"},{\"time\":2.6667,\"color\":\"3af1b7\"}],\"alpha\":[{\"time\":0.2667,\"value\":1},{\"time\":0.3333,\"value\":0.97855157},{\"time\":0.5333,\"value\":1}],\"attachment\":[{\"time\":0.2,\"name\":\"e_Spark001\"},{\"time\":0.6,\"name\":null}]},\"whitecircle\":{\"alpha\":[{\"time\":0.8,\"value\":0},{\"time\":2.6667,\"value\":1}],\"rgb\":[{\"time\":0.8,\"color\":\"ffffff\"},{\"time\":1.8333,\"color\":\"4cfaa5\"},{\"time\":2.6667,\"color\":\"21baf5\"}],\"attachment\":[{\"time\":0.2,\"name\":\"whitecircle\"},{\"time\":0.2667,\"name\":null},{\"time\":0.8,\"name\":\"whitecircle\"}]}},\"bones\":{\"center\":{\"scale\":[{\"time\":0.2333,\"x\":0.1,\"y\":0.1},{\"time\":0.7333,\"x\":8.182,\"y\":9.091}]},\"motion1\":{\"translate\":[{\"y\":483.05},{\"time\":0.3333,\"y\":9.19}],\"scale\":[{\"y\":0.5},{\"time\":0.2,\"x\":2,\"y\":5},{\"time\":0.7333,\"x\":8,\"y\":5}]},\"center2\":{\"scale\":[{\"time\":0.2667,\"x\":0.3,\"y\":0.3},{\"time\":0.3333,\"x\":2.2,\"y\":2.2},{\"time\":0.3667,\"x\":2.5,\"y\":2.5},{\"time\":0.6,\"x\":3,\"y\":3},{\"time\":0.6667,\"x\":0.9,\"y\":0.9},{\"time\":2.6667,\"x\":0,\"y\":0}]}}},\"sps_buff\":{\"slots\":{\"sps:buff\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.9,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.9333}],\"shear\":[{},{\"time\":0.9,\"x\":1}]}}},\"sps_debuff\":{\"slots\":{\"sps:debuff\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.8667,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.9}],\"shear\":[{},{\"time\":0.8667,\"x\":1}]}}},\"sps_heal\":{\"slots\":{\"sps:heal\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.8667,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.9}],\"shear\":[{},{\"time\":0.8667,\"x\":1}]}}},\"thunder\":{\"slots\":{\"sps:thunder\":{\"attachment\":[{\"name\":\"whitecircle\"},{\"time\":0.4,\"name\":null}]}},\"bones\":{\"center5\":{\"scale\":[{\"time\":0.4333}],\"shear\":[{},{\"time\":0.4,\"x\":1}]}}}}}";
autogen_GriTxts.spine_text_box = "{\"skeleton\":{\"hash\":\"Y7XDbD8rF6c\",\"spine\":\"4.0.64\"},\"bones\":[{\"name\":\"root\"},{\"name\":\"box\",\"parent\":\"root\"},{\"name\":\"text\",\"parent\":\"root\"},{\"name\":\"circle\",\"parent\":\"root\"},{\"name\":\"vmark\",\"parent\":\"root\"},{\"name\":\"circle2\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"whitep\",\"bone\":\"box\"},{\"name\":\"e_whitecircle_line\",\"bone\":\"circle\"},{\"name\":\"e_whitecircle_line#\",\"bone\":\"circle2\"},{\"name\":\"e_check2\",\"bone\":\"vmark\",\"color\":\"030303ff\"},{\"name\":\"e_check\",\"bone\":\"vmark\"},{\"name\":\"text:main16\",\"bone\":\"text\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"e_check\":{\"e_check\":{\"x\":30.98,\"y\":19.61,\"scaleX\":0.5,\"scaleY\":0.5,\"width\":256,\"height\":193}},\"e_check2\":{\"e_check\":{\"x\":63.78,\"y\":49.68,\"scaleX\":0.8,\"scaleY\":0.8,\"width\":256,\"height\":193}},\"e_whitecircle_line\":{\"e_whitecircle_line\":{\"width\":256,\"height\":256}},\"e_whitecircle_line#\":{\"e_whitecircle_line\":{\"width\":256,\"height\":256}},\"text:main16\":{\"arrowup\":{\"x\":1.81,\"y\":0.5,\"width\":15,\"height\":22}},\"whitep\":{\"whitep\":{\"scaleX\":100,\"scaleY\":100,\"width\":1,\"height\":1}}}}],\"animations\":{\"clear_animation\":{\"slots\":{\"e_check\":{\"rgb\":[{\"time\":0.1667,\"color\":\"64fea4\"}],\"attachment\":[{\"time\":0.1667,\"name\":\"e_check\"},{\"time\":2.3333,\"name\":null}]},\"e_check2\":{\"rgb\":[{\"time\":0.1667,\"color\":\"353535\"}],\"alpha\":[{\"time\":0.1667,\"value\":0},{\"time\":0.3,\"value\":1,\"curve\":\"stepped\"},{\"time\":2,\"value\":1},{\"time\":2.3333,\"value\":0}],\"attachment\":[{\"time\":0.2667,\"name\":\"e_check\"},{\"time\":2.3333,\"name\":null}]},\"e_whitecircle_line\":{\"rgb\":[{\"time\":0.1,\"color\":\"64fea4\"}],\"alpha\":[{\"time\":0.1,\"value\":0},{\"time\":0.1667,\"value\":1}],\"attachment\":[{\"time\":0.1,\"name\":\"e_whitecircle_line\"},{\"time\":2.3333,\"name\":null}]},\"e_whitecircle_line#\":{\"rgba\":[{\"time\":0.3,\"color\":\"7bffe8ff\"},{\"time\":0.9,\"color\":\"7bffe800\"}],\"attachment\":[{\"time\":0.3,\"name\":\"e_whitecircle_line\"},{\"time\":0.9,\"name\":null}]},\"text:main16\":{\"rgba\":[{\"time\":0.3667,\"color\":\"ffffffff\"},{\"time\":2.3333,\"color\":\"62ffd9ff\"}],\"attachment\":[{\"time\":0.3667,\"name\":\"arrowup\"},{\"time\":2.3333,\"name\":null}]},\"whitep\":{\"rgb\":[{\"color\":\"353535\"}],\"alpha\":[{\"value\":0},{\"time\":0.1,\"value\":0.69729996}],\"attachment\":[{\"name\":\"whitep\"},{\"time\":2.3333,\"name\":null}]}},\"bones\":{\"box\":{\"translate\":[{\"x\":-100},{\"time\":0.1,\"y\":-21.44}],\"scale\":[{\"x\":0,\"y\":0},{\"time\":0.1,\"x\":1.2,\"y\":1.825}]},\"circle\":{\"scale\":[{\"x\":0.4,\"y\":0.4}]},\"vmark\":{\"translate\":[{\"time\":0.1667,\"x\":-127,\"y\":110},{\"time\":0.3,\"x\":-6.9,\"y\":-6.21}],\"scale\":[{\"time\":0.1667,\"x\":4,\"y\":4,\"curve\":[0.303,3.904,0.24,3.208,0.301,3.905,0.247,2.784]},{\"time\":0.3}]},\"text\":{\"translate\":[{\"time\":0.3667,\"y\":-80.34}]},\"circle2\":{\"scale\":[{\"time\":0.3,\"x\":0.4,\"y\":0.4},{\"time\":0.9,\"x\":12,\"y\":12}]}}}}}";
autogen_GriTxts.spine_text_effect = "{\"skeleton\":{\"hash\":\"aV31/QH6UV4\",\"spine\":\"4.0.64\",\"x\":-22,\"y\":-19.5,\"width\":44,\"height\":39},\"bones\":[{\"name\":\"root\"},{\"name\":\"text\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"background\",\"bone\":\"root\",\"attachment\":\"purpleback\"},{\"name\":\"number_test\",\"bone\":\"text\",\"attachment\":\"number_test\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"background\":{\"purpleback\":{\"width\":44,\"height\":39}},\"number_test\":{\"number_test\":{\"width\":21,\"height\":14}}}}],\"animations\":{\"down_slideleft\":{\"slots\":{\"background\":{\"attachment\":[{\"name\":null}]}},\"bones\":{\"text\":{\"translate\":[{\"y\":-53.45},{\"time\":1.5,\"x\":-8.71,\"y\":-53},{\"time\":1.6667,\"x\":-31.37,\"y\":-53}]}}},\"down_slideleft2\":{\"slots\":{\"background\":{\"attachment\":[{\"name\":null}]}},\"bones\":{\"text\":{\"translate\":[{\"y\":-53.45,\"curve\":\"stepped\"},{\"time\":1.7667,\"y\":-53.45},{\"time\":2.1667,\"x\":-1.74,\"y\":-53},{\"time\":2.3333,\"x\":-31.37,\"y\":-53}]}}},\"fadeupslow\":{\"slots\":{\"background\":{\"attachment\":[{\"name\":null}]},\"number_test\":{\"alpha\":[{\"time\":1.6333,\"value\":1},{\"time\":3,\"value\":0}]}},\"bones\":{\"root\":{\"translate\":[{\"curve\":[1,0,2,0,0.074,106.05,2,90]},{\"time\":3,\"y\":90}]}}},\"popin\":{\"slots\":{\"background\":{\"alpha\":[{\"value\":0},{\"time\":0.3333,\"value\":1,\"curve\":\"stepped\"},{\"time\":0.4,\"value\":1},{\"time\":0.6667,\"value\":0}]},\"number_test\":{\"rgba\":[{\"time\":0.4667,\"color\":\"ffffffff\"},{\"time\":0.6667,\"color\":\"ffffff00\"}]}},\"bones\":{\"text\":{\"translate\":[{},{\"time\":0.0333,\"y\":19.03},{\"time\":0.1333,\"y\":-14.66,\"curve\":\"stepped\"},{\"time\":0.2,\"y\":-14.66},{\"time\":0.2667,\"y\":6.55},{\"time\":0.3333}]}}},\"popinfast\":{\"bones\":{\"text\":{\"translate\":[{\"y\":-26.52},{\"time\":0.1333,\"curve\":\"stepped\"},{\"time\":0.6667}]}}}}}";
autogen_GriTxts.story = "[{\"actionLabel\": \"Wake up\",\"id\": \"A fine morning.\",\"messages\": [{\"body\": \"It's a fine morning. \",\"script\": null,\"speaker\": null},{\"body\": \"You head for the door, ready to go outside.\",\"script\": null,\"speaker\": null},{\"body\": \" You're going out today too? Where to?\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \" Kill some monsters, mom.\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" Why do I even ask, it is the same every day...\",\"script\": null,\"speaker\": \"Mom\"}],\"title\": \"A fine morning.\",\"visibilityScript\": null},{\"actionLabel\": \"I'm hungry...\",\"id\": \"Time for dinner\",\"messages\": [{\"body\": \"Your rumbling stomach made you decide to go back home.\",\"script\": null,\"speaker\": null},{\"body\": \" I'm back\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" Good, it's time for dinner.\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \" Hey mom...\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" What is wrong, dear?\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \" I'm leaving town\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" Hahahahaa, oh you...\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \" And I'm Mboi, God of Waterways!\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \" ...\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" C'mon, eat up.\",\"script\": null,\"speaker\": \"Mom\"},{\"body\": \"You go back to bed, unsatisfied with what your mom said.\",\"script\": null,\"speaker\": null}],\"title\": \"Time for dinner\",\"visibilityScript\": \" return global[\\\"maxarea\\\"] > 2; \"},{\"actionLabel\": \"How do I get stronger...\",\"id\": \"Become stronger\",\"messages\": [{\"body\": \"You stop moving and take a deep breath. \",\"script\": null,\"speaker\": null},{\"body\": \"You stare at your hands, which are stronger than ever.\",\"script\": null,\"speaker\": null},{\"body\": \"Yet, something concerns you.\",\"script\": null,\"speaker\": null},{\"body\": \" I feel like it becomes harder and harder to become stronger...\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \"A shady man approaches you.\",\"script\": null,\"speaker\": null},{\"body\": \" Hey kid.\",\"script\": null,\"speaker\": \"Man\"},{\"body\": \" Who are you?\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" Name's Cid. \",\"script\": null,\"speaker\": \"Man\"},{\"body\": \" I feel like I've seen that name before...\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" You wanna become stronger? Heh. Sometimes you gotta lose it all to reach a new height.\",\"script\": null,\"speaker\": \"Cid\"},{\"body\": \" Anyways, take this. It teaches you how to Soul Crush.\",\"script\": null,\"speaker\": \"Cid\"},{\"body\": \"He hands you an old scroll.\",\"script\": null,\"speaker\": null},{\"body\": \" I shouldn't really take things from strangers...\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" But oh well. I'll take a shot. Hope it doesn't get me killed.\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" You may not be able to do it now, but someday... Good luck, kid.\",\"script\": null,\"speaker\": \"Cid\"},{\"body\": \"---\",\"script\": null,\"speaker\": null},{\"body\": \"Soul Crush is now accessible. You need to be at a certain level to use it.\",\"script\": null,\"speaker\": null}],\"title\": \"Become stronger\",\"visibilityScript\": \" return global[\\\"herolevel\\\"] > 64; \"}]";
autogen_GriTxts.story_maina_last_ = "[{\"actionLabel\": null,\"id\": \"11_arrest\",\"messages\": [{\"body\": \" Princess! You are safe!!\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Victor, good of you to come. \",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"The princess looks at you, with serious, calm eyes.\",\"script\": null,\"speaker\": null},{\"body\": \" And you are?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Isabel, your highness.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Arrest Isabel, Victor.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" ...I'm sorry? You misunderstand, Princess, Isabel helped rescue you.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I am aware. But she is also a criminal.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" May I ask what my crimes are, your highness?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Royalty abduction and assassination of the Royal Guard.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"Isabel draws her weapon. Victor does the same and moves closer to the princess.\",\"script\": null,\"speaker\": null},{\"body\": \" I can kill you both without problem, you know?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You could. But what would you do next? Go back to the castle and report our deaths?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Or perhaps you would run away after killing us, becoming a wanted criminal.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Either way, Marino would lose his job and you don't want that, do you?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" You are way, way smarter than I thought, Princess. Bravo.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Well, if I get arrested, Marino would lose his job the same way, so... Might as well kill you both and keep my freedom.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Can someone explain me what is happening here...? Why would Isabel abduct the Princess and then help rescue her?\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" It is all Marino's plot. He plans to increase his influence over the kingdom.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" I guess he also wants to put his pawn, Isabel here, in a more advantageous position.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"The tension builds up in the room as Victor and Isabel stare at each other.\",\"script\": null,\"speaker\": null},{\"body\": \" Run Princess, I can at least save time.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Put down your sword, Victor. You are not arresting her. And Isabel won't fight you.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" I won't? Why?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" There is a way we can both get what we want. And more. \",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Why don't you listen to my offer? I'm sure it will be to your liking.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \".\",\"script\": null,\"speaker\": null},{\"body\": \".\",\"script\": null,\"speaker\": null},{\"body\": \".\",\"script\": null,\"speaker\": null}],\"title\": \"Arrest Isabel\",\"visibilityScript\": null}]";
autogen_GriTxts.story_maina_last_demo_ = "[{\"actionLabel\": null,\"id\": \"11_arrest\",\"messages\": [{\"body\": \" Princess! You are safe!!\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Victor, good of you to come. \",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"The princess looks at you, with serious, calm eyes.\",\"script\": null,\"speaker\": null},{\"body\": \" And you are?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Isabel, your highness.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Arrest Isabel, Victor.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" ...I'm sorry? You misunderstand, Princess, Isabel helped rescue you.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I am aware. But she is also a criminal.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" May I ask what my crimes are, your highness?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Royalty abduction and assassination of the Royal Guard.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"Isabel draws her weapon. Victor does the same and moves closer to the princess.\",\"script\": null,\"speaker\": null},{\"body\": \" I can kill you both without problem, you know?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You could. But what would you do next? Go back to the castle and report our deaths?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Or perhaps you would run away after killing us, becoming a wanted criminal.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Either way, Marino would lose his job and you don't want that, do you?\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" You are way, way smarter than I thought, Princess. Bravo.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Well, if I get arrested, Marino would lose his job the same way, so... Might as well kill you both and keep my freedom.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Can someone explain me what is happening here...? Why would Isabel abduct the Princess and then help rescue her?\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" It is all Marino's plot. He plans to increase his influence over the kingdom.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" I guess he also wants to put his pawn, Isabel here, in a more advantageous position.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \"The tension builds up in the room as Victor and Isabel stare at each other.\",\"script\": null,\"speaker\": null},{\"body\": \" Run Princess, I can at least save time.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Put down your sword, Victor. You are not arresting her. And Isabel won't fight you.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" I won't? Why?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" There is a way we can both get what we want. And more. \",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \" Why don't you listen to my offer? I'm sure it will be to your liking.\",\"script\": null,\"speaker\": \"Princess\"},{\"body\": \".\",\"script\": null,\"speaker\": null},{\"body\": \".\",\"script\": null,\"speaker\": null},{\"body\": \".\",\"script\": null,\"speaker\": null},{\"body\": \"To be continued in the next update.\",\"script\": null,\"speaker\": null}],\"title\": \"Arrest Isabel\",\"visibilityScript\": null}]";
autogen_GriTxts.story_mainb2_ = "[{\"actionLabel\": null,\"id\": \"298_saci\",\"messages\": [{\"body\": \" ...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Finally home!!\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Hey.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \"The forest spirit Saci appears into thin. \",\"script\": null,\"speaker\": null},{\"body\": \"Isabel makes a guess that his spying activities have given fruit.\",\"script\": null,\"speaker\": null},{\"body\": \" Oh. I assume you have some news for me.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I do... But first, if you could...\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \"Saci extends his pipe to Isabel. She uses her magic to light up the fire.\",\"script\": null,\"speaker\": null},{\"body\": \" Ahhh, I longed for this.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \"Saci looks deeply into the eyes of Isabel after sucking into the fire deeply.\",\"script\": null,\"speaker\": null},{\"body\": \" You won't believe me.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" The King and the Princess... I saw them kissing!! Incest!!\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" That's it?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I already know the kind of relationship they have.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Oh, you knew. Fine then. Let me tell you something else.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" Two days before, at night, Iracema brought up a peculiar topic (...)\",\"script\": null,\"speaker\": \"Saci\"}],\"title\": \"Incest\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"299_loyalty\",\"messages\": [{\"body\": \" We cannot lose this chance, dear. If we can use that 'creature' for our goals, you can get what you deserve.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You can give Brasil what it deserves!\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" That... Sounds attractive. But at the same time dangerous.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" What did you have in mind?\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Well, I was thinking about you naming her Knight of One.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Knight of One!? Don't be ridiculous!! That blue girl monster?\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" I know, it sounds absurd... But hear me out. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" With that power and responsability, we can have her steal the Fire Crystal from the Tayra.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" By doing that, we can expand your reach further... And soon the Thunder Crystal too, would be yours.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Hmm... That would be most desirable, desirable indeed.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" If you have all 3 crystals, your immortal life is guaranteed to be eternal.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" What would stop her from coming after me though? You know, with the power of a crystal, she could kill me.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" That is why you make her Knight of One. By making her feel prestige and recognition, you'll earn her loyalty.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" And, even if she did betray you, what can the Thunder Crystal do against your holy Ice Crystal?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" I see, I see... You think of everything.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \"Iracema kisses the king on his lips, deeply and passionately\",\"script\": null,\"speaker\": null},{\"body\": \" Every thought, every action of mine, I do out of love for You\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" To see you shine.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Very well then. But I will test her loyalty. If she is to become Knight of One, she must prove she is worthy and true.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Sure, my love. I'll leave that to you.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema Kisses the King one more and leaves the room.\",\"script\": null,\"speaker\": null},{\"body\": \" It will be quite an... Intense test of loyalty.  \",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Isabel, was it? I am sure she will enjoy it with every inch of her body.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" As will I, heh heh heh.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \"Heh heh heh heh heh...\",\"script\": null,\"speaker\": null},{\"body\": \"The laughter of the King echoes through the halls.\",\"script\": null,\"speaker\": null}],\"title\": \"Report from Saci\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"286_eyma\",\"messages\": [{\"body\": \"A tired Isabel throws herself in the bed.\",\"script\": null,\"speaker\": null},{\"body\": \" Less than six months. Could it be really true?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I can kill that king in less than six months?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" That would be my paradise. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" My ybymara eyma...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"That night Isabel slept with a smile on her face\",\"script\": null,\"speaker\": null}],\"title\": \"My ybymara eyma\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"287_morning\",\"messages\": [{\"body\": \"5 days pass.\",\"script\": null,\"speaker\": null},{\"body\": \"Isabel wanted to stay angry at Marino for withholding information, and yet\",\"script\": null,\"speaker\": null},{\"body\": \"she couldn't help but slowly let go of her animosity as they spend time together.\",\"script\": null,\"speaker\": null},{\"body\": \"...\",\"script\": null,\"speaker\": null},{\"body\": \" A letter came. For us.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" A letter...? Addressed to two people?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Take a look.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Isabel starts reading the letter\",\"script\": null,\"speaker\": null},{\"body\": \"> Isabel & Marino, hope you are well.\",\"script\": null,\"speaker\": null},{\"body\": \"> I, Iracema, Holy Princess of Brasil, invite both of you to Caxambu Waterfalls at this Wednesday. I would love to talk.\",\"script\": null,\"speaker\": null},{\"body\": \"> Hope to meet you there. \",\"script\": null,\"speaker\": null},{\"body\": \"> Wish you both the best,\",\"script\": null,\"speaker\": null},{\"body\": \"> Holy Princess Iracema\",\"script\": null,\"speaker\": null},{\"body\": \"Isabel looks at the letter with a serious expression.\",\"script\": null,\"speaker\": null},{\"body\": \" Caxambu Waterfalls. That place is hell.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Marino, you'll stay home. I'll go.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Isabel... Honestly, I wish we BOTH didn't go, but I can't stop you.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" However, I'll go with you. Who knows what she is planning.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" That place is damn dangerous, Marino! What if something happens to you?!\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I'm old already. I have lived my years.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Isabel slams the table\",\"script\": null,\"speaker\": null},{\"body\": \" Don't joke like that, you know I hate it when you do that.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Sorry... But I don't plan on dying. I have you to protect me.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Isabel looks at Marino angrily for a few seconds, until her expression meltdowns into a sigh.\",\"script\": null,\"speaker\": null},{\"body\": \" Fine. Whatever. We'll go together. But don't do any dangerous shit.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Aren't you the one always going into danger?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Marino, if I'm alone, there is no such a thing as danger. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Sure, sure. Let us get going then.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" But Isabel, I'll say it again.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Iracema is dangerous. Let us both be careful.\",\"script\": null,\"speaker\": \"Marino\"}],\"title\": \"The Next Morning\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"288_old\",\"messages\": [{\"body\": \" Just so you know, I don't trust Iracema either.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" That's good to hear.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" But I am not one to refuse gifts.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I don't need justification for the means. I just need to make ends meet.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You are too hasty, too obsessed, too reckless. Too naive.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" You are too slow, too patient, too careful. Too old.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Marino gives her a wry smile.\",\"script\": null,\"speaker\": null}],\"title\": \"Too old\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"289_immortal\",\"messages\": [{\"body\": \" Welcome, friends. Glad to see you both here.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema stares down at both Isabel and Marino, on top of a mountain.\",\"script\": null,\"speaker\": null},{\"body\": \" How did you even get here, 'princess'? This place is filled with monsters.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" This place is in the realm of Guaraci and Jaci. It cannot harm me.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You are friends with the Gods now, are you?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Iracema smiles.\",\"script\": null,\"speaker\": null},{\"body\": \" Pedro the IV is immortal. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Yeah, I know. The power of the crystal, right?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yes, the crystal of ice. The one his very father, Dom Pedro the III, took by force.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" He took if from your people, Isabel. The children of Sahi.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" My people, huh...? \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Iracema goes deeper, and Isabel follows in her direction, alongside Marino.\",\"script\": null,\"speaker\": null}],\"title\": \"Immortal\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"290_hero\",\"messages\": [{\"body\": \" Marino...\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" ...Yes?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" I suppose your plan is still to grow your influence in the Kingdom. Become closer to Dom Pedro IV,\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" ...Then, in secret, you plan to feed intel and resources to the Tayra.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Yes, my plan is to strengthen the Tayra. Have them destroy the current system. Construct a new Country, a new Brasil.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" A better place where Tayra, Children of Sahi and Lusitans can coexist without hate.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" To kill Dom Pedro IV, you plan to have the Tayra use their own crystal. By causing a war between ice and fire, you hope that the Tayra will pierce Pedro's heart.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Yes, that is pretty much the plan, right? To kill that disgusting old man.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" That is probably the safest bet to kill him. But it would take years, optimistically. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" But Isabel is here. Her power is tremendous.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Isabel, if you can steal the fire crystal, it won't be the Tayra who kill Pedro. It will be you.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You would be the one to cut him down. You would be ultimate hero among the Children of Sahi!\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema goes further ahead. Marino had a serious expression in his face.\",\"script\": null,\"speaker\": null},{\"body\": \" She's weird.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Surely, she is. But what do you mean now?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" \\\"Ultimate hero!\\\"\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Why does she think I want to become a hero?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Isabel shrugs and proceed, followed closely by Marino.\",\"script\": null,\"speaker\": null}],\"title\": \"Ultimate hero\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"291_safest\",\"messages\": [{\"body\": \"Isabel starts sweating.\",\"script\": null,\"speaker\": null},{\"body\": \" Something is off...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" What is it?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" I don't know, but I can't help but to feel as something terrifying is waiting for us... For me.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" How dangerous is it?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Probably enough to kill me.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" This is bad. Let's head back.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" If it wanted us dead, it would have killed us already...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I would tell you to stay here, but the safest place for you is next to me.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Let's keep going.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Safest place\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"292_guaraci\",\"messages\": [{\"body\": \" The... The sun dragon...\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"A magnificent dragon is far away, levitating higher than the mountains, towering over Marino and Isabel.\",\"script\": null,\"speaker\": null},{\"body\": \"Isabel's mouth opens as she stares into the dragon and she drops to her knees, breathing hard.\",\"script\": null,\"speaker\": null},{\"body\": \"Marino runs to her side.\",\"script\": null,\"speaker\": null},{\"body\": \" Isabel, Isabel, hey, calm down. Calm down.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" That's the sun dragon...? That's the scariest thing I have ever seen in my life. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...I can't feel what you feel, I don't know why it is so scary to you.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" But I don't feel enmity towards us. It should be safe.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" That's Guaraci's dragon, huh...?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" This is the closest I have felt the power of a God.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" We can head back, you know? She plans to get us killed!\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Isabel pushes Marino away and stands up, recovering herself.\",\"script\": null,\"speaker\": null},{\"body\": \" No, you are wrong. This is a test. She is trying to see what I am made of.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" The only way to go is forward, Marino.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Guaraci's Sun Dragon\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"293_lusitan\",\"messages\": [{\"body\": \"Isabel and Marino catch up to Iracema, albeit Iracema is still in a higher part of the mountain they cannot reach.\",\"script\": null,\"speaker\": null},{\"body\": \" Why do you think I want to be a hero, princess?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...Aren't you trying to kill the King to avenge your people? To bring the Children of Sahi to power?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Isabel lost herself in laughter, like a little girl.\",\"script\": null,\"speaker\": null},{\"body\": \" You really believe that? God.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" The only person I care about is Marino. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Everything else, Tayra, Children of Sahi, the Lusitans, the Gods. They can all die for all I care.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I would kill all of it if that is what it takes to kill that bastard. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You are... You are serious aren't you?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You are serious...\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema stared silently at Isabel for seconds that felt like an hour.\",\"script\": null,\"speaker\": null},{\"body\": \"Tears start rolling down the princess's face.\",\"script\": null,\"speaker\": null},{\"body\": \" Wh, why? Why am I crying?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"She cleans up her tears. Isabel is really confused.\",\"script\": null,\"speaker\": null},{\"body\": \" Okay, that was creepy. What is wrong with her?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Isabel realizes Marino is bit far from her.\",\"script\": null,\"speaker\": null},{\"body\": \" I can't proceed, Isabel. I'm afraid you will have to go by yourself.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" What...?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Lusitans cannot proceed. This place is deeply connected to the Brazilian Gods.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" But it is safe where he is. You can feel it too, can't you?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Yes, no hostile creatures can enter, no evil can harm it. That's the safest place for him to be.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Let's keep going, Isabel. The final stage is coming soon.\",\"script\": null,\"speaker\": \"Iracema\"}],\"title\": \"Lusitans cannot proceed\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"294_tiger\",\"messages\": [{\"body\": \"Sealing the Isabel's path to Iracema stands an enormous growling blue tiger, surrounded by other monsters.\",\"script\": null,\"speaker\": null},{\"body\": \" Guaraci won't send his dragon, but he does send a cat, huh.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Baipu Tuvy, was it? Come at me, blue tiger.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Blue tiger\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"295_marino\",\"messages\": [{\"body\": \" You did it. You are the real thing.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Tears start rolling down again when Iracema sees Isabel.\",\"script\": null,\"speaker\": null},{\"body\": \" Stop crying looking at me, you creep.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Isabel can't help but to put a hand behind Iracema's back, to calm her down.\",\"script\": null,\"speaker\": null},{\"body\": \" So you can be kind too, huh?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" I am glad I met you, Isabel. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" This is the first time I felt like someone could maybe...\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Understand me. Understand what I feel.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" What, you also hate everybody?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I do.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Isabel was taken back by her answer. Iracema then takes hold of Isabel's hand.\",\"script\": null,\"speaker\": null},{\"body\": \" I hate everyone. All of them.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema hugs Isabel.\",\"script\": null,\"speaker\": null},{\"body\": \" Wait, what, what are you doing?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Maybe you really are the one who can fulfill my wish, someday.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Hey, you said we would kill that shitty king first.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yes, of course. I am already making preparations.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Go home, now. Marino is waiting.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Suddenlly Iracema was engulfed in sadness.\",\"script\": null,\"speaker\": null},{\"body\": \" You are okay?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" What you and Marino have, your feelings. I think that is the only thing that makes us different, Iracema.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You really love him.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Isabel can't help but blush.\",\"script\": null,\"speaker\": null},{\"body\": \" Well, yeah. To me, he is my real father.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Iracema gives her a faint smile and they head separate ways.\",\"script\": null,\"speaker\": null}],\"title\": \"You and Marino\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"296_tired\",\"messages\": [{\"body\": \" You are safe, thank God!!\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" I'm exhausted... C'mon old man. Let's go home.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Exhausted\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"297_meal\",\"messages\": [{\"body\": \"Marino and Isabel arrive home and start cooking dinner.\",\"script\": null,\"speaker\": null},{\"body\": \" You are really bad at cutting vegetables, those carrots look hideous.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Oh, don't be ridiculous, it's all going into our stomaches anyways.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Marino smiles at her and they continue preparing the meal.\",\"script\": null,\"speaker\": null},{\"body\": \" Isabel... I am sorry. I wish I could have been a better tutor to you.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" You're talking about what I said today, huh?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yeah, I wish I could have taught you the beauty of human life. \",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" How important it is.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" C'mon Marino, you have to let it go.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" This is one thing we will never see eye to eye.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Let's not think about what sets us apart, but on what brings us together.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" And by that, I mean this hot pot. It's looking pretty good, huh?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Marino gives her a sad smile.\",\"script\": null,\"speaker\": null},{\"body\": \" You are a tough girl to raise, you know?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Really? I think you did a pretty good job.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I am as good as it gets.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"They share one peaceful meal together.\",\"script\": null,\"speaker\": null}],\"title\": \"Peaceful meal\",\"visibilityScript\": null}]";
autogen_GriTxts.story_mainb_ = "[{\"actionLabel\": null,\"id\": \"201_wayback\",\"messages\": [{\"body\": \" Princess, you told me to listen to your offer. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Call me Iracema, yes?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" I did. You are in a hurry? You don't trust me at all, do you?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Well, if your offer sucks I kinda have to kill both of you, I think.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Victor, leave us two.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Victor looked at the princess, worried. After she nodded, he knew he had no choice and left.\",\"script\": null,\"speaker\": null},{\"body\": \" You think... Hahaha. Tell me then. What is it that you really want?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Why are you working with Marino?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Because if things to according to Marino's crazy political plans, Dom Pedro IV will die.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" That's the only thing I care about, killing your daddy.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" That's it? That's all?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You want to kill him?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Isabel is surprised at the question.\",\"script\": null,\"speaker\": null},{\"body\": \" I will help you out. You will find I can be more effective than Marino.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" But he is your father... \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You are bluffing. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You think so...? I'll convince you. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema starts moving faster, to catch up with Victor. Isabel soon followed her.\",\"script\": null,\"speaker\": null}],\"title\": \"The Way Back\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"202_wayback2\",\"messages\": [{\"body\": \"The two girls catch up with Victor.\",\"script\": null,\"speaker\": null},{\"body\": \" Glad to see you are safe, princess.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Victor, tell her who I really am.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Victor looked at the princess for one second, and answered.\",\"script\": null,\"speaker\": null},{\"body\": \" You are Princess Iracema, \\\"the half Princess of hope\\\". Born half-Tayra, half-Lusitani, you represent peace in Brasil.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Darn it, Victor. Tell her the truth.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" ...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \"Victor does not look pleased at revealing important information, but he obeys his princess.\",\"script\": null,\"speaker\": null},{\"body\": \" Iracema is an important political figure in our country, who serves as a symbolic princess to unite the two races.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" So yes. I am a fake princess. Not even half-Lusitani. I am pure 100% Tayra.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Ho... Wow. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Isabel looks at both Iracema and Victor's face to make sure they are not lying.\",\"script\": null,\"speaker\": null},{\"body\": \" I am not the King's daughter. I am his mistress.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Princess!!! You cannot say such things in public! Or in private!\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \"Isabel laughs and looks at Iracema from feet to head.\",\"script\": null,\"speaker\": null},{\"body\": \" I see, I see... Okay, I guess I would gladly accept your help, \\\"Princess\\\".\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" What do you want in exchange?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" How about I tell you AFTER we kill the person you want to kill\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Oh, you are confident we can kill him... Okay then.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Iracema smiles confidently at Isabel, raising her eye brows. Victor, not knowing they want to kill the present King of Brasil, stares confusedly at both girls. \",\"script\": null,\"speaker\": null},{\"body\": \"The road continues.\",\"script\": null,\"speaker\": null}],\"title\": \"The Way Back (2)\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"203_back\",\"messages\": [{\"body\": \" Ohhh, finally back.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor looks at Isabel.\",\"script\": null,\"speaker\": null},{\"body\": \" I don't know if I should thank you for your assistance in rescuing the princess...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Or curse you for the capturing her in the first place.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Victor, listen to me. Forget what you heard.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Isabel did not kidnap me. She saved me. She is a hero.\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" You two have become comrades and you recognize her strength. \",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" Are we clear?\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \" ...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Yes, your grace.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" She can be pretty scary, huh?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yes, she can...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Sorry I lied to you, Victor.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Didn't mean for you to get tangled up in Marino's gambits.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor sighs.\",\"script\": null,\"speaker\": null},{\"body\": \" Yes, you did lie to me. But... You have a strange aura. \",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I can't help but to feel like you're actually a good person.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \"Victor smiles sadly and runs ahead to join the princess on the way to the castle.\",\"script\": null,\"speaker\": null},{\"body\": \" Me, a good person...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" If you really believe that, your future is bleak, Victor\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"We are back\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"204_reward\",\"messages\": [{\"body\": \" Father!!\",\"script\": null,\"speaker\": \"Iracema\"},{\"body\": \"Iracema runs off and hugs her father.\",\"script\": null,\"speaker\": null},{\"body\": \" My dear daughter... How my heart flies with you coming back to me.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \"Isabel kneels in front of the trone. \",\"script\": null,\"speaker\": null},{\"body\": \" You have done well, ahn...\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" You had a name, I think.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Isabel, your majesty.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Yes. You have done well, Isabel.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Name your reward.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Your majesty's gratitude is more than what I could ask for.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"The King scratches his beard and looks at the blue-haired child of Sahi.\",\"script\": null,\"speaker\": null},{\"body\": \"Something about the way he looked made both Marino and Isabel uncomfortable. \",\"script\": null,\"speaker\": null},{\"body\": \" Very well then. I will think of your reward later on. You may leave.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"}],\"title\": \"Name your reward\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"205_stopby\",\"messages\": [{\"body\": \" Wait... \",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" You did well. We will talk about this tonight, yes?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Ah, yeah, maybe. I have to stop by somewhere before going home.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Somewhere...?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Yeah. We will talk later, don't worry.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Stop by somewhere\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"206_saciperere\",\"messages\": [{\"body\": \"Isabel starts whispering in Tupi-guarani language, performing a magical ritual.\",\"script\": null,\"speaker\": null},{\"body\": \"A cloud of dust emerges from her magic powers.\",\"script\": null,\"speaker\": null},{\"body\": \" I think I did it... Did I?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Why, why, why. You are my new master?\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" Yes, I am. You are the prankster, Saci Perere, correct?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Indeed, indeed. Indeed!\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" You'll obey my every order and cause no harm against me, correct?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Saci is shorter than Isabel, but he levitates and hangs his arm in Isabel's shoulder.\",\"script\": null,\"speaker\": null},{\"body\": \" I would never hurt you.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" Fine then. I want you to spy on someone. Spying only, no pranks. Can you do that?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yes, yes. Who do I spy on, master?\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" if you follow the trail, you'll arrive in Petropolis, the Imperial City.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" In there, there is a palace, Palacio do Veran. In the palace, a princess.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You will spy on the princess. Remember anything odd she does or says. Any conversations you think are important.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Can you do that for me?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Yes, master.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" Good.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...What do you like, Saci? Anything you enjoy?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Like? \",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \"Saci produces a curious black pipe. \",\"script\": null,\"speaker\": null},{\"body\": \" Magic fire in the pipe, master. That, and fooling fools. No greater pleasure.\",\"script\": null,\"speaker\": \"Saci\"},{\"body\": \" I see... Very well, then. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Do this for me and you shall be rewarded.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Saci gives Isabel an eerie smile and disappears into thin air\",\"script\": null,\"speaker\": null}],\"title\": \"Saci Perere\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"207_dangerous\",\"messages\": [{\"body\": \" You're finally back.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Isabel smiles  and rolls her eyes\",\"script\": null,\"speaker\": null},{\"body\": \" Good night to you too.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" So things went well, did they? Anything unusual happened?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Yeah, things went well. But the princess knows that it was our plan.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" She knows you captured her...? How?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" I don't know. Maybe she imagined you planned the whole thing?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Or she saw me when I moved her from the box. I don't know.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Damn... How could you not notice if she saw you?!\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Oh, shut up, Marino.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You forgot to mention she is damn fake!\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You know...?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Yeah, no thanks to you. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Anyways, she won't say anything. The plan should go smoothly.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...I see.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"Marino suddenly gets silent, Isabel is surprised by that.\",\"script\": null,\"speaker\": null},{\"body\": \" Sorry I didn't tell you. I didn't want to put any unnecessary elements into the plan.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" It's fine... Anyways, I'm tired. Gonna go rest now.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Isabel...\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Be careful with Iracema. \",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" She is way more dangerous than she might seem.\",\"script\": null,\"speaker\": \"Marino\"}],\"title\": \"More Dangerous\",\"visibilityScript\": null}]";
autogen_GriTxts.story_main_ = "[{\"actionLabel\": null,\"id\": \"1_epilogue_start\",\"messages\": [{\"body\": \"The sun is setting. \",\"script\": null,\"speaker\": null},{\"body\": \"Not wanting to be late, you head out for the road.\",\"script\": null,\"speaker\": null}],\"title\": \"Start\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"2_golden_statue\",\"messages\": [{\"body\": \"You return home, a familiar man welcomes you.\",\"script\": null,\"speaker\": null},{\"body\": \" Hey, hope you didn't wait.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"The man smiles when he sees you.\",\"script\": null,\"speaker\": null},{\"body\": \" For a mischief-maker, you are good at keeping time.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" The meeting place is behind the church, right? St. Isabel.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"The man picks up a golden statue of a woman.\",\"script\": null,\"speaker\": null},{\"body\": \" Just get the package and give them the statue. \",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"The man gives you a severe look as you pick up the statue, almost angry.\",\"script\": null,\"speaker\": null},{\"body\": \" That statue is a beautiful work of art. Take good care of it.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" And do not cause trouble. Are we clear?\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"You nod assuringly and head out of the house.\",\"script\": null,\"speaker\": null}],\"title\": \"A golden statue\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"3_the_deal\",\"messages\": [{\"body\": \"In the back of the church three man in armor are waiting for you.\",\"script\": null,\"speaker\": null},{\"body\": \" You have the package?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"The man points his hand to a large wooden box.\",\"script\": null,\"speaker\": null},{\"body\": \" That thing is huge. How am I gonna carry that...?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You will use my personal carriage. The rider is a man of trust.\",\"script\": null,\"speaker\": \"Knight\"},{\"body\": \"You nod repeatedly, convinced.\",\"script\": null,\"speaker\": null},{\"body\": \"You take out the golden statue, for the man to see.\",\"script\": null,\"speaker\": null},{\"body\": \"The man nods at you and comes closer to take the statue.\",\"script\": null,\"speaker\": null},{\"body\": \"...\",\"script\": null,\"speaker\": null},{\"body\": \"...\",\"script\": null,\"speaker\": null},{\"body\": \"...\",\"script\": null,\"speaker\": null},{\"body\": \"5 days later.\",\"script\": null,\"speaker\": null},{\"body\": \"You wake up as the sun light hits your face.\",\"script\": null,\"speaker\": null},{\"body\": \"You were sleeping peacefully in your bed.\",\"script\": null,\"speaker\": null}],\"title\": \"The deal\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"5_the_court\",\"messages\": [{\"body\": \"You walk into the courtroom.\",\"script\": null,\"speaker\": null},{\"body\": \" This is Isabel. There is no one better suited for the job, your majesty.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"The King, Dom Pedro IV, looks at you with a mix of disgust and distrust.\",\"script\": null,\"speaker\": null},{\"body\": \" Marino, are you sure we can trust this... Creature?\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" She IS human, your majesty. The Children of Sahi may be mystical, but they are as human as I am.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" ...Isabel. I do not trust you or your kind. But I trust Marino. \",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" I want you to hear my request. My daughter has been captured.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Rescue her. And make no mistake, I strive to be fair.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Complete this job and you'll be rewarded accordingly.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" It would be my honor, your majesty. I'll do whatever it takes to save our royal princess.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"The King looked surprised at your words.\",\"script\": null,\"speaker\": null},{\"body\": \" She has manners. You have raised her well, Marino. \",\"script\": null,\"speaker\": \"Dom Pedro IV\"},{\"body\": \" Go to the east gate and ask for Victor. He will tell you what you need to know.\",\"script\": null,\"speaker\": \"Dom Pedro IV\"}],\"title\": \"The Court\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"6_victor\",\"messages\": [{\"body\": \" You must be Isabel. I'm Victor of the Royal Guard. \",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \"The man does not seen happy to meet you.\",\"script\": null,\"speaker\": null},{\"body\": \" The princess is believed to be held at San Marcelo Fort. I will accompany you.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Pleasure to meet you, sir Victor.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Who captured the princess? Are they asking for ransom?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You do not need to know. \",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" ...Listen, Victor. We want the same thing.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" To save the princess.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...Apologies. They believe it was the leader of the Royal Guard who captured her.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Oh... Guess we'll know when we get there. Let's go.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Victor of the Royal Guard\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"7_first_time\",\"messages\": [{\"body\": \"Victor of the Royal Guard does not seem to stop staring at you.\",\"script\": null,\"speaker\": null},{\"body\": \" First time seeing a child of Sahi?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Ah, my apologies. Did not mean to stare. \",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Yes, it is. The blue is a beautiful color.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" You don't think of us as monsters?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I am a knight, it is not for me to think or not think such things.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Speaking as Victor, the man, I would say we have little to gain and a lot to lose from labeling who is human and who is not.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Lovely thoughts, Victor. Keep them to your heart.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" But best not to voice them. Unless you are ready to fight for a cause which doesn't really concern you.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"You and Victor continue on the road.\",\"script\": null,\"speaker\": null}],\"title\": \"First time\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"8_royal_guard\",\"messages\": [{\"body\": \" If you don't care that about my hair color, then why do you look angry?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" This duty should have been given to the members of the Royal Guard. \",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" They could have even sent me alone. It is my duty to protect the princess.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" You are not necessary, and yet...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I see. They suspect the Royal Guard is involved, so that is why I was called.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" There is no way any member of the Royal Guard is involved in this.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" The enemy plans to spread distrust and hurt our honor.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" You, Isabel, has become a stain of dirt in our name.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" ...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I agree with you. I don't think the Royal Guard is behind this either.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor looks surprised at your words. \",\"script\": null,\"speaker\": null},{\"body\": \" Let us hurry. The faster we can save the princess and find out who the real enemy is, the faster the Royal Guard name can be cleaned.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Royal Guard Honor\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"4_breakfast\",\"messages\": [{\"body\": \"You cook eggs while Marino makes orange tea.\",\"script\": null,\"speaker\": null},{\"body\": \"You both sit down for breakfast.\",\"script\": null,\"speaker\": null},{\"body\": \" The tea tastes weird today. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Sorry, couldn't sleep well last night. Must have screwed it up...\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" Worried about the plan? \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...Yes. As should be you. Repeat the plan.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" We meet the King. He asks me to rescue the princess. I rescue the princess. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I become a hero. Visconde Marino becomes Conde Marino, a nice promotion. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Am I missing anything?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Perfect. Except for what you did 5 days ago.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \" I made your plan even better. You should thank me.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" You did, but at the cost of blood. Unnecessary.\",\"script\": null,\"speaker\": \"Marino\"},{\"body\": \"The room becomes silent as you both finish your meal.\",\"script\": null,\"speaker\": null},{\"body\": \" Let us go. Don't wanna keep the King waiting.\",\"script\": null,\"speaker\": \"Isabel\"}],\"title\": \"Breakfast\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"9_troll\",\"messages\": [{\"body\": \"A troll stands in the gates of the Fort San Marcelo. \",\"script\": null,\"speaker\": null},{\"body\": \" Stand back, Victor. I'll handle him. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor looks disappointed at himself, but nods, leaving the battle to you.\",\"script\": null,\"speaker\": null}],\"title\": \"The Troll\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"10_strength\",\"messages\": [{\"body\": \" I have heard the children of Sahi were strong, but didn't know it was such power.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I wish I had such strength...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Be careful with what you wish for. It comes at a cost. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" You also don't think the Royal Guard is behind the abduction of the princess?\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" I don't. Something else is at work here. More sinister.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor smiles at you and nods.\",\"script\": null,\"speaker\": null},{\"body\": \" I feel the same.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \"You both look over to Fort San Marcelo.\",\"script\": null,\"speaker\": null},{\"body\": \" Let us hurry!\",\"script\": null,\"speaker\": \"Victor\"}],\"title\": \"The strength of the Children of Sahi\",\"visibilityScript\": null},{\"actionLabel\": null,\"id\": \"8a_lu_lock\",\"messages\": [{\"body\": \"You and Victor decide to spend the night at a local farm.\",\"script\": null,\"speaker\": null},{\"body\": \" It is really admirable of them to allow us to stay the night.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Well, you're pretty attractive. I think the owner might like you.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" ...You mock me, Isabel.\",\"script\": null,\"speaker\": \"Victor\"},{\"body\": \" Do I? Regardless, I think they let us stay also because you're part of the Royal Guard.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" The people really love the guard.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"Victor smiles and nods.\",\"script\": null,\"speaker\": null},{\"body\": \" Anyways, I'm gonna go to bed. Good night.\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"They part ways and Isabel arrives at the bed in the farm. Soon she is in deep sleep.\",\"script\": null,\"speaker\": null},{\"body\": \"Until she wakes up in front of a door.\",\"script\": null,\"speaker\": null},{\"body\": \" What the...? Again...?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \"It apppears it's not the first time this has happened.\",\"script\": null,\"speaker\": null},{\"body\": \" Lu? Are you there? Can you hear me?\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Oh, Isabel!! Glad to hear from you, how are you?!\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \"Isabel is communicating through telepathy with someone who is not there.\",\"script\": null,\"speaker\": null},{\"body\": \" I am stuck in a dream again. \",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" Oh, the Gods must really hate you.\",\"script\": null,\"speaker\": \"Lu\"},{\"body\": \" Just wish I knew which God it is...\",\"script\": null,\"speaker\": \"Isabel\"},{\"body\": \" I'll try to get you out, not sure if I have enough power though.\",\"script\": null,\"speaker\": \"Lu\"}],\"title\": \"A Dream\",\"visibilityScript\": null}]";
autogen_GriTxts.text_effect = "{\"skeleton\":{\"hash\":\"PzcAYx62AqM\",\"spine\":\"4.0.64\",\"x\":-22,\"y\":-19.5,\"width\":44,\"height\":39},\"bones\":[{\"name\":\"root\"},{\"name\":\"text\",\"parent\":\"root\"}],\"slots\":[{\"name\":\"background\",\"bone\":\"root\",\"attachment\":\"purpleback\"},{\"name\":\"number_test\",\"bone\":\"text\",\"attachment\":\"number_test\"}],\"skins\":[{\"name\":\"default\",\"attachments\":{\"background\":{\"purpleback\":{\"width\":44,\"height\":39}},\"number_test\":{\"number_test\":{\"width\":21,\"height\":14}}}}],\"animations\":{\"down_slideleft\":{\"slots\":{\"background\":{\"attachment\":[{\"name\":null}]}},\"bones\":{\"text\":{\"translate\":[{\"y\":-53.45},{\"time\":1.5,\"x\":-8.71,\"y\":-53},{\"time\":1.6667,\"x\":-31.37,\"y\":-53}]}}},\"down_slideleft2\":{\"slots\":{\"background\":{\"attachment\":[{\"name\":null}]}},\"bones\":{\"text\":{\"translate\":[{\"y\":-53.45,\"curve\":\"stepped\"},{\"time\":1.7667,\"y\":-53.45},{\"time\":2.1667,\"x\":-1.74,\"y\":-53},{\"time\":2.3333,\"x\":-31.37,\"y\":-53}]}}},\"popin\":{\"bones\":{\"text\":{\"translate\":[{},{\"time\":0.0333,\"y\":19.03},{\"time\":0.1333,\"y\":-14.66,\"curve\":\"stepped\"},{\"time\":0.2,\"y\":-14.66},{\"time\":0.2667,\"y\":6.55},{\"time\":0.3333,\"curve\":\"stepped\"},{\"time\":0.6667}]}}},\"popinfast\":{\"bones\":{\"text\":{\"translate\":[{\"y\":-26.52},{\"time\":0.1333,\"curve\":\"stepped\"},{\"time\":0.6667}]}}}}}";
autogen_GriTxts.allTexts = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["actions"] = autogen_GriTxts.actions;
	_g.h["actions_lunar"] = autogen_GriTxts.actions_lunar;
	_g.h["actions_tc"] = autogen_GriTxts.actions_tc;
	_g.h["all_translations"] = autogen_GriTxts.all_translations;
	_g.h["local"] = autogen_GriTxts.local;
	_g.h["proceduralactions"] = autogen_GriTxts.proceduralactions;
	_g.h["resources"] = autogen_GriTxts.resources;
	_g.h["skills"] = autogen_GriTxts.skills;
	_g.h["spine_blood"] = autogen_GriTxts.spine_blood;
	_g.h["spine_character"] = autogen_GriTxts.spine_character;
	_g.h["spine_hero"] = autogen_GriTxts.spine_hero;
	_g.h["spine_hit"] = autogen_GriTxts.spine_hit;
	_g.h["spine_text_box"] = autogen_GriTxts.spine_text_box;
	_g.h["spine_text_effect"] = autogen_GriTxts.spine_text_effect;
	_g.h["story"] = autogen_GriTxts.story;
	_g.h["story_maina_last_"] = autogen_GriTxts.story_maina_last_;
	_g.h["story_maina_last_demo_"] = autogen_GriTxts.story_maina_last_demo_;
	_g.h["story_mainb2_"] = autogen_GriTxts.story_mainb2_;
	_g.h["story_mainb_"] = autogen_GriTxts.story_mainb_;
	_g.h["story_main_"] = autogen_GriTxts.story_main_;
	_g.h["text_effect"] = autogen_GriTxts.text_effect;
	$r = _g;
	return $r;
}(this));
autogen_LayoutIdsGen.MAINBUTTONGROUP = "mainbuttongroup";
autogen_LayoutIdsGen.NEOBATTLE_XP = "neobattle_xp";
autogen_LayoutIdsGen.NEOLOWER_BUTTONS = "neolower_buttons";
autogen_LayoutIdsGen.NEOBATTLE_BUTTONS = "neobattle_buttons";
autogen_LayoutIdsGen.NEOMP = "neomp";
autogen_LayoutIdsGen.NEOSET_BUTTONS = "neoset_buttons";
autogen_LayoutIdsGen.LOWERMISCBUTTON = "lowermiscbutton";
autogen_LayoutIdsGen.SETBUTTONGROUP = "setbuttongroup";
autogen_LayoutIdsGen.TURNORDER = "turnorder";
autogen_LayoutIdsGen.LOWERBUTTONS = "lowerbuttons";
autogen_LayoutIdsGen.DIALOGBUTTON = "dialogbutton";
autogen_LayoutIdsGen.EQUIPBUTTON = "equipbutton";
autogen_LayoutIdsGen.TABBUTTON = "tabbutton";
autogen_LayoutIdsGen.EQUIPPEDBUTTONS = "equippedbuttons";
autogen_LayoutIdsGen.MISCEQUIPBUTTONS = "miscequipbuttons";
autogen_LayoutIdsGen.SETEQUIPBUTTONS = "setequipbuttons";
autogen_LayoutIdsGen.EQUIP_FILTER_BUTTONS = "equip_filter_buttons";
autogen_LayoutIdsGen.LOG = "log";
autogen_LayoutIdsGen.EQUIPACTORVIEW = "equipactorview";
autogen_LayoutIdsGen.ACTORSTATHOVER = "actorstathover";
autogen_LayoutIdsGen.EQUIPCURRENCYVIEW = "equipcurrencyview";
autogen_LayoutIdsGen.EQUIPHOVER = "equiphover";
autogen_LayoutIdsGen.GENERICHOVER = "generichover";
autogen_LayoutIdsGen.TITLEBUTTONS = "titlebuttons";
autogen_LayoutIdsGen.TITLELOGO = "titlelogo";
autogen_LayoutIdsGen.AREA = "area";
autogen_LayoutIdsGen.SUBBUTTONS = "subbuttons";
autogen_LayoutIdsGen.REGION_REGIONS = "region_regions";
autogen_LayoutIdsGen.REGION_AREAS = "region_areas";
autogen_LayoutIdsGen.REGION_ENEMY = "region_enemy";
autogen_LayoutIdsGen.REGION_ENEMY_STAT = "region_enemy_stat";
autogen_LayoutIdsGen.BATTLE_ENEMY_STAT = "battle_enemy_stat";
autogen_LayoutIdsGen.BATTLE_HERO_STAT = "battle_hero_stat";
autogen_LayoutIdsGen.MEMORY_BUTTONS = "memory_buttons";
autogen_LayoutIdsGen.STORY_MAIN = "story_main";
autogen_LayoutIdsGen.STORYBUTTONA = "storybuttona";
autogen_LayoutIdsGen.STORYBUTTONB = "storybuttonb";
autogen_LayoutIdsGen.LAYOUT_LITTLE = "layout_little";
autogen_LayoutIdsGen.LAYOUT_ACHIEVEMENT = "layout_achievement";
autogen_LayoutIdsGen.ARCANIA_RESOURCES = "arcania_resources";
autogen_LayoutIdsGen.ARCANIA_ACTIONS = "arcania_actions";
autogen_LayoutIdsGen.ARCANIA_LOG = "arcania_log";
autogen_LayoutIdsGen.TALENT_SET_WIDGETS = "talent_set_widgets";
autogen_LayoutIdsGen.CHARACTER_SELECTION = "character_selection";
gribattle_BattleActorsView.BATTLE_HP_BAR_TAG = [new Tag(),new Tag()];
gribattle_BattleActorsView.ACTOR_VIEWS_TAG = [new Tag(),new Tag()];
gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_TAG = [new Tag(),new Tag()];
gribattle_BattleActorsView.ACTOR_VIEWS_BATTLE_LAYOUT = ["battle_hero_stat","battle_enemy_stat"];
gribattle_BattleActorsView.HP_BAR_LENGTH = 250;
gribattle_BattleActorsView.HP_BAR_Y_POSITION = 77;
gribattle_BattleControlEventProcess.damageEffectEnemyTimer_duration = 300;
gribattle_BattleControlEventProcess.static_attack_aux = 0;
gribattle_BattleMainView.XP_LAYOUT = "neobattle_xp";
gribattle_BattleMainView.LOWERBUTTON_LAYOUT = "neolower_buttons";
gribattle_BattleMainView.HERO_ELEMENT_ID = "hero_element";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
hscript_Parser.p1 = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
seedyrng_Seedy.instance = seedyrng_Seedy.newInstance();
spine_CurveTimeline.LINEAR = 0;
spine_CurveTimeline.STEPPED = 1;
spine_CurveTimeline.BEZIER = 2;
spine_CurveTimeline.BEZIER_SIZE = 18;
spine_CurveTimeline1.ENTRIES = 2;
spine_CurveTimeline1.VALUE = 1;
spine_CurveTimeline1.LINEAR = 0;
spine_CurveTimeline1.STEPPED = 1;
spine_CurveTimeline1.BEZIER = 2;
spine_CurveTimeline1.BEZIER_SIZE = 18;
spine_CurveTimeline2.ENTRIES = 3;
spine_CurveTimeline2.VALUE1 = 1;
spine_CurveTimeline2.VALUE2 = 2;
spine_CurveTimeline2.LINEAR = 0;
spine_CurveTimeline2.STEPPED = 1;
spine_CurveTimeline2.BEZIER = 2;
spine_CurveTimeline2.BEZIER_SIZE = 18;
spine_RotateTimeline.ENTRIES = 2;
spine_RotateTimeline.VALUE = 1;
spine_RotateTimeline.LINEAR = 0;
spine_RotateTimeline.STEPPED = 1;
spine_RotateTimeline.BEZIER = 2;
spine_RotateTimeline.BEZIER_SIZE = 18;
spine_TranslateTimeline.ENTRIES = 3;
spine_TranslateTimeline.VALUE1 = 1;
spine_TranslateTimeline.VALUE2 = 2;
spine_TranslateTimeline.LINEAR = 0;
spine_TranslateTimeline.STEPPED = 1;
spine_TranslateTimeline.BEZIER = 2;
spine_TranslateTimeline.BEZIER_SIZE = 18;
spine_TranslateXTimeline.ENTRIES = 2;
spine_TranslateXTimeline.VALUE = 1;
spine_TranslateXTimeline.LINEAR = 0;
spine_TranslateXTimeline.STEPPED = 1;
spine_TranslateXTimeline.BEZIER = 2;
spine_TranslateXTimeline.BEZIER_SIZE = 18;
spine_TranslateYTimeline.ENTRIES = 2;
spine_TranslateYTimeline.VALUE = 1;
spine_TranslateYTimeline.LINEAR = 0;
spine_TranslateYTimeline.STEPPED = 1;
spine_TranslateYTimeline.BEZIER = 2;
spine_TranslateYTimeline.BEZIER_SIZE = 18;
spine_ScaleTimeline.ENTRIES = 3;
spine_ScaleTimeline.VALUE1 = 1;
spine_ScaleTimeline.VALUE2 = 2;
spine_ScaleTimeline.LINEAR = 0;
spine_ScaleTimeline.STEPPED = 1;
spine_ScaleTimeline.BEZIER = 2;
spine_ScaleTimeline.BEZIER_SIZE = 18;
spine_ScaleXTimeline.ENTRIES = 2;
spine_ScaleXTimeline.VALUE = 1;
spine_ScaleXTimeline.LINEAR = 0;
spine_ScaleXTimeline.STEPPED = 1;
spine_ScaleXTimeline.BEZIER = 2;
spine_ScaleXTimeline.BEZIER_SIZE = 18;
spine_ScaleYTimeline.ENTRIES = 2;
spine_ScaleYTimeline.VALUE = 1;
spine_ScaleYTimeline.LINEAR = 0;
spine_ScaleYTimeline.STEPPED = 1;
spine_ScaleYTimeline.BEZIER = 2;
spine_ScaleYTimeline.BEZIER_SIZE = 18;
spine_ShearTimeline.ENTRIES = 3;
spine_ShearTimeline.VALUE1 = 1;
spine_ShearTimeline.VALUE2 = 2;
spine_ShearTimeline.LINEAR = 0;
spine_ShearTimeline.STEPPED = 1;
spine_ShearTimeline.BEZIER = 2;
spine_ShearTimeline.BEZIER_SIZE = 18;
spine_ShearXTimeline.ENTRIES = 2;
spine_ShearXTimeline.VALUE = 1;
spine_ShearXTimeline.LINEAR = 0;
spine_ShearXTimeline.STEPPED = 1;
spine_ShearXTimeline.BEZIER = 2;
spine_ShearXTimeline.BEZIER_SIZE = 18;
spine_ShearYTimeline.ENTRIES = 2;
spine_ShearYTimeline.VALUE = 1;
spine_ShearYTimeline.LINEAR = 0;
spine_ShearYTimeline.STEPPED = 1;
spine_ShearYTimeline.BEZIER = 2;
spine_ShearYTimeline.BEZIER_SIZE = 18;
spine_RGBATimeline.ENTRIES = 5;
spine_RGBATimeline.R = 1;
spine_RGBATimeline.G = 2;
spine_RGBATimeline.B = 3;
spine_RGBATimeline.A = 4;
spine_RGBATimeline.LINEAR = 0;
spine_RGBATimeline.STEPPED = 1;
spine_RGBATimeline.BEZIER = 2;
spine_RGBATimeline.BEZIER_SIZE = 18;
spine_RGBTimeline.ENTRIES = 4;
spine_RGBTimeline.R = 1;
spine_RGBTimeline.G = 2;
spine_RGBTimeline.B = 3;
spine_RGBTimeline.LINEAR = 0;
spine_RGBTimeline.STEPPED = 1;
spine_RGBTimeline.BEZIER = 2;
spine_RGBTimeline.BEZIER_SIZE = 18;
spine_AlphaTimeline.ENTRIES = 2;
spine_AlphaTimeline.VALUE = 1;
spine_AlphaTimeline.LINEAR = 0;
spine_AlphaTimeline.STEPPED = 1;
spine_AlphaTimeline.BEZIER = 2;
spine_AlphaTimeline.BEZIER_SIZE = 18;
spine_RGBA2Timeline.ENTRIES = 8;
spine_RGBA2Timeline.R = 1;
spine_RGBA2Timeline.G = 2;
spine_RGBA2Timeline.B = 3;
spine_RGBA2Timeline.A = 4;
spine_RGBA2Timeline.R2 = 5;
spine_RGBA2Timeline.G2 = 6;
spine_RGBA2Timeline.B2 = 7;
spine_RGBA2Timeline.LINEAR = 0;
spine_RGBA2Timeline.STEPPED = 1;
spine_RGBA2Timeline.BEZIER = 2;
spine_RGBA2Timeline.BEZIER_SIZE = 18;
spine_RGB2Timeline.ENTRIES = 7;
spine_RGB2Timeline.R = 1;
spine_RGB2Timeline.G = 2;
spine_RGB2Timeline.B = 3;
spine_RGB2Timeline.R2 = 4;
spine_RGB2Timeline.G2 = 5;
spine_RGB2Timeline.B2 = 6;
spine_RGB2Timeline.LINEAR = 0;
spine_RGB2Timeline.STEPPED = 1;
spine_RGB2Timeline.BEZIER = 2;
spine_RGB2Timeline.BEZIER_SIZE = 18;
spine_DeformTimeline.LINEAR = 0;
spine_DeformTimeline.STEPPED = 1;
spine_DeformTimeline.BEZIER = 2;
spine_DeformTimeline.BEZIER_SIZE = 18;
spine_EventTimeline.propertyIds = ["12"];
spine_DrawOrderTimeline.propertyIds = ["13"];
spine_IkConstraintTimeline.ENTRIES = 6;
spine_IkConstraintTimeline.MIX = 1;
spine_IkConstraintTimeline.SOFTNESS = 2;
spine_IkConstraintTimeline.BEND_DIRECTION = 3;
spine_IkConstraintTimeline.COMPRESS = 4;
spine_IkConstraintTimeline.STRETCH = 5;
spine_IkConstraintTimeline.LINEAR = 0;
spine_IkConstraintTimeline.STEPPED = 1;
spine_IkConstraintTimeline.BEZIER = 2;
spine_IkConstraintTimeline.BEZIER_SIZE = 18;
spine_TransformConstraintTimeline.ENTRIES = 7;
spine_TransformConstraintTimeline.ROTATE = 1;
spine_TransformConstraintTimeline.X = 2;
spine_TransformConstraintTimeline.Y = 3;
spine_TransformConstraintTimeline.SCALEX = 4;
spine_TransformConstraintTimeline.SCALEY = 5;
spine_TransformConstraintTimeline.SHEARY = 6;
spine_TransformConstraintTimeline.LINEAR = 0;
spine_TransformConstraintTimeline.STEPPED = 1;
spine_TransformConstraintTimeline.BEZIER = 2;
spine_TransformConstraintTimeline.BEZIER_SIZE = 18;
spine_PathConstraintPositionTimeline.ENTRIES = 2;
spine_PathConstraintPositionTimeline.VALUE = 1;
spine_PathConstraintPositionTimeline.LINEAR = 0;
spine_PathConstraintPositionTimeline.STEPPED = 1;
spine_PathConstraintPositionTimeline.BEZIER = 2;
spine_PathConstraintPositionTimeline.BEZIER_SIZE = 18;
spine_PathConstraintSpacingTimeline.ENTRIES = 2;
spine_PathConstraintSpacingTimeline.VALUE = 1;
spine_PathConstraintSpacingTimeline.LINEAR = 0;
spine_PathConstraintSpacingTimeline.STEPPED = 1;
spine_PathConstraintSpacingTimeline.BEZIER = 2;
spine_PathConstraintSpacingTimeline.BEZIER_SIZE = 18;
spine_PathConstraintMixTimeline.ENTRIES = 4;
spine_PathConstraintMixTimeline.ROTATE = 1;
spine_PathConstraintMixTimeline.X = 2;
spine_PathConstraintMixTimeline.Y = 3;
spine_PathConstraintMixTimeline.LINEAR = 0;
spine_PathConstraintMixTimeline.STEPPED = 1;
spine_PathConstraintMixTimeline.BEZIER = 2;
spine_PathConstraintMixTimeline.BEZIER_SIZE = 18;
spine_MixBlend_$enum.setup_value = 0;
spine_MixBlend_$enum.first_value = 1;
spine_MixBlend_$enum.replace_value = 2;
spine_MixBlend_$enum.add_value = 3;
spine_MixBlend_$enum.setup_name = "setup";
spine_MixBlend_$enum.first_name = "first";
spine_MixBlend_$enum.replace_name = "replace";
spine_MixBlend_$enum.add_name = "add";
spine_MixDirection_$enum.directionIn_value = 0;
spine_MixDirection_$enum.directionOut_value = 1;
spine_MixDirection_$enum.directionIn_name = "directionIn";
spine_MixDirection_$enum.directionOut_name = "directionOut";
spine_Property_$enum.rotate_value = 0;
spine_Property_$enum.x_value = 1;
spine_Property_$enum.y_value = 2;
spine_Property_$enum.scaleX_value = 3;
spine_Property_$enum.scaleY_value = 4;
spine_Property_$enum.shearX_value = 5;
spine_Property_$enum.shearY_value = 6;
spine_Property_$enum.rgb_value = 7;
spine_Property_$enum.alpha_value = 8;
spine_Property_$enum.rgb2_value = 9;
spine_Property_$enum.attachment_value = 10;
spine_Property_$enum.deform_value = 11;
spine_Property_$enum.event_value = 12;
spine_Property_$enum.drawOrder_value = 13;
spine_Property_$enum.ikConstraint_value = 14;
spine_Property_$enum.transformConstraint_value = 15;
spine_Property_$enum.pathConstraintPosition_value = 16;
spine_Property_$enum.pathConstraintSpacing_value = 17;
spine_Property_$enum.pathConstraintMix_value = 18;
spine_Property_$enum.rotate_name = "rotate";
spine_Property_$enum.x_name = "x";
spine_Property_$enum.y_name = "y";
spine_Property_$enum.scaleX_name = "scaleX";
spine_Property_$enum.scaleY_name = "scaleY";
spine_Property_$enum.shearX_name = "shearX";
spine_Property_$enum.shearY_name = "shearY";
spine_Property_$enum.rgb_name = "rgb";
spine_Property_$enum.alpha_name = "alpha";
spine_Property_$enum.rgb2_name = "rgb2";
spine_Property_$enum.attachment_name = "attachment";
spine_Property_$enum.deform_name = "deform";
spine_Property_$enum.event_name = "event";
spine_Property_$enum.drawOrder_name = "drawOrder";
spine_Property_$enum.ikConstraint_name = "ikConstraint";
spine_Property_$enum.transformConstraint_name = "transformConstraint";
spine_Property_$enum.pathConstraintPosition_name = "pathConstraintPosition";
spine_Property_$enum.pathConstraintSpacing_name = "pathConstraintSpacing";
spine_Property_$enum.pathConstraintMix_name = "pathConstraintMix";
spine_support_error_Error.DEFAULT_TO_STRING = "Error";
spine_AnimationState.emptyAnimation = (function($this) {
	var $r;
	var this1 = [];
	$r = new spine_Animation("<empty>",this1,0);
	return $r;
}(this));
spine_AnimationState.SUBSEQUENT = 0;
spine_AnimationState.FIRST = 1;
spine_AnimationState.HOLD_SUBSEQUENT = 2;
spine_AnimationState.HOLD_FIRST = 3;
spine_AnimationState.HOLD_MIX = 4;
spine_AnimationState.SETUP = 1;
spine_AnimationState.CURRENT = 2;
spine_EventType_$enum.start_value = 0;
spine_EventType_$enum.interrupt_value = 1;
spine_EventType_$enum.end_value = 2;
spine_EventType_$enum.dispose_value = 3;
spine_EventType_$enum.complete_value = 4;
spine_EventType_$enum.event_value = 5;
spine_EventType_$enum.start_name = "start";
spine_EventType_$enum.interrupt_name = "interrupt";
spine_EventType_$enum.end_name = "end";
spine_EventType_$enum.dispose_name = "dispose";
spine_EventType_$enum.complete_name = "complete";
spine_EventType_$enum.event_name = "event";
spine_BlendMode_$enum.normal_value = 0;
spine_BlendMode_$enum.additive_value = 1;
spine_BlendMode_$enum.multiply_value = 2;
spine_BlendMode_$enum.screen_value = 3;
spine_BlendMode_$enum.normal_name = "normal";
spine_BlendMode_$enum.additive_name = "additive";
spine_BlendMode_$enum.multiply_name = "multiply";
spine_BlendMode_$enum.screen_name = "screen";
spine_TransformMode_$enum.normal_value = 0;
spine_TransformMode_$enum.onlyTranslation_value = 1;
spine_TransformMode_$enum.noRotationOrReflection_value = 2;
spine_TransformMode_$enum.noScale_value = 3;
spine_TransformMode_$enum.noScaleOrReflection_value = 4;
spine_TransformMode_$enum.normal_name = "normal";
spine_TransformMode_$enum.onlyTranslation_name = "onlyTranslation";
spine_TransformMode_$enum.noRotationOrReflection_name = "noRotationOrReflection";
spine_TransformMode_$enum.noScale_name = "noScale";
spine_TransformMode_$enum.noScaleOrReflection_name = "noScaleOrReflection";
spine_PathConstraint.NONE = -1;
spine_PathConstraint.BEFORE = -2;
spine_PathConstraint.AFTER = -3;
spine_PathConstraint.epsilon = 0.00001;
spine_PositionMode_$enum.fixed_value = 0;
spine_PositionMode_$enum.percent_value = 1;
spine_PositionMode_$enum.fixed_name = "fixed";
spine_PositionMode_$enum.percent_name = "percent";
spine_SpacingMode_$enum.length_value = 0;
spine_SpacingMode_$enum.fixed_value = 1;
spine_SpacingMode_$enum.percent_value = 2;
spine_SpacingMode_$enum.proportional_value = 3;
spine_SpacingMode_$enum.length_name = "length";
spine_SpacingMode_$enum.fixed_name = "fixed";
spine_SpacingMode_$enum.percent_name = "percent";
spine_SpacingMode_$enum.proportional_name = "proportional";
spine_RotateMode_$enum.tangent_value = 0;
spine_RotateMode_$enum.chain_value = 1;
spine_RotateMode_$enum.chainScale_value = 2;
spine_RotateMode_$enum.tangent_name = "tangent";
spine_RotateMode_$enum.chain_name = "chain";
spine_RotateMode_$enum.chainScale_name = "chainScale";
spine_attachments_AtlasAttachmentLoader.__meta__ = { obj : { SuppressWarnings : ["javadoc"]}};
spine_attachments_AttachmentType_$enum.region_value = 0;
spine_attachments_AttachmentType_$enum.boundingbox_value = 1;
spine_attachments_AttachmentType_$enum.mesh_value = 2;
spine_attachments_AttachmentType_$enum.linkedmesh_value = 3;
spine_attachments_AttachmentType_$enum.path_value = 4;
spine_attachments_AttachmentType_$enum.point_value = 5;
spine_attachments_AttachmentType_$enum.clipping_value = 6;
spine_attachments_AttachmentType_$enum.region_name = "region";
spine_attachments_AttachmentType_$enum.boundingbox_name = "boundingbox";
spine_attachments_AttachmentType_$enum.mesh_name = "mesh";
spine_attachments_AttachmentType_$enum.linkedmesh_name = "linkedmesh";
spine_attachments_AttachmentType_$enum.path_name = "path";
spine_attachments_AttachmentType_$enum.point_name = "point";
spine_attachments_AttachmentType_$enum.clipping_name = "clipping";
spine_attachments_VertexAttachment.nextID = 0;
spine_attachments_RegionAttachment.BLX = 0;
spine_attachments_RegionAttachment.BLY = 1;
spine_attachments_RegionAttachment.ULX = 2;
spine_attachments_RegionAttachment.ULY = 3;
spine_attachments_RegionAttachment.URX = 4;
spine_attachments_RegionAttachment.URY = 5;
spine_attachments_RegionAttachment.BRX = 6;
spine_attachments_RegionAttachment.BRY = 7;
spine_support_graphics_Color.CLEAR = new spine_support_graphics_Color(0,0,0,0);
spine_support_graphics_Color.BLACK = new spine_support_graphics_Color(0,0,0,1);
spine_support_graphics_Color.WHITE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 1.;
	_this.b = 1.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.LIGHT_GRAY = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.74901960784313726;
	_this.g = 0.74901960784313726;
	_this.b = 0.74901960784313726;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.GRAY = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.49803921568627452;
	_this.g = 0.49803921568627452;
	_this.b = 0.49803921568627452;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.DARK_GRAY = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.24705882352941178;
	_this.g = 0.24705882352941178;
	_this.b = 0.24705882352941178;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.BLUE = new spine_support_graphics_Color(0,0,1,1);
spine_support_graphics_Color.NAVY = new spine_support_graphics_Color(0,0,0.5,1);
spine_support_graphics_Color.ROYAL = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.25490196078431371;
	_this.g = 0.41176470588235292;
	_this.b = 0.88235294117647056;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.SLATE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.4392156862745098;
	_this.g = 0.50196078431372548;
	_this.b = 0.56470588235294117;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.SKY = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.52941176470588236;
	_this.g = 0.807843137254902;
	_this.b = 0.92156862745098034;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.CYAN = new spine_support_graphics_Color(0,1,1,1);
spine_support_graphics_Color.TEAL = new spine_support_graphics_Color(0,0.5,0.5,1);
spine_support_graphics_Color.GREEN = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.;
	_this.g = 1.;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.CHARTREUSE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.49803921568627452;
	_this.g = 1.;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.LIME = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.19607843137254902;
	_this.g = 0.803921568627451;
	_this.b = 0.19607843137254902;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.FOREST = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.13333333333333333;
	_this.g = 0.54509803921568623;
	_this.b = 0.13333333333333333;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.OLIVE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.41960784313725491;
	_this.g = 0.55686274509803924;
	_this.b = 0.13725490196078433;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.YELLOW = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 1.;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.GOLD = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.84313725490196079;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.GOLDENROD = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.85490196078431369;
	_this.g = 0.6470588235294118;
	_this.b = 0.12549019607843137;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.ORANGE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.6470588235294118;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.BROWN = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.54509803921568623;
	_this.g = 0.27058823529411763;
	_this.b = 0.074509803921568626;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.TAN = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.82352941176470584;
	_this.g = 0.70588235294117652;
	_this.b = 0.5490196078431373;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.FIREBRICK = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.69803921568627447;
	_this.g = 0.13333333333333333;
	_this.b = 0.13333333333333333;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.RED = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.;
	_this.b = 0.;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.SCARLET = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.20392156862745098;
	_this.b = 0.10980392156862745;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.CORAL = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.49803921568627452;
	_this.b = 0.31372549019607843;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.SALMON = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.98039215686274506;
	_this.g = 0.50196078431372548;
	_this.b = 0.44705882352941179;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.PINK = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 1.;
	_this.g = 0.41176470588235292;
	_this.b = 0.70588235294117652;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.MAGENTA = new spine_support_graphics_Color(1,0,1,1);
spine_support_graphics_Color.PURPLE = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.62745098039215685;
	_this.g = 0.12549019607843137;
	_this.b = 0.94117647058823528;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.VIOLET = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.93333333333333335;
	_this.g = 0.50980392156862742;
	_this.b = 0.93333333333333335;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_Color.MAROON = (function($this) {
	var $r;
	var _this = new spine_support_graphics_Color();
	_this.r = 0.69019607843137254;
	_this.g = 0.18823529411764706;
	_this.b = 0.37647058823529411;
	_this.a = 1.;
	$r = _this;
	return $r;
}(this));
spine_support_graphics_TextureWrap.mirroredRepeat = new spine_support_graphics_TextureWrap(0,"mirroredRepeat");
spine_support_graphics_TextureWrap.clampToEdge = new spine_support_graphics_TextureWrap(1,"clampToEdge");
spine_support_graphics_TextureWrap.repeat = new spine_support_graphics_TextureWrap(2,"repeat");
spine_support_math_MathUtils.degRad = Math.PI / 180.0;
spine_support_math_MathUtils.radDeg = 180.0 / Math.PI;
spine_support_math_Matrix3.M00 = 0;
spine_support_math_Matrix3.M01 = 3;
spine_support_math_Matrix3.M02 = 6;
spine_support_math_Matrix3.M10 = 1;
spine_support_math_Matrix3.M11 = 4;
spine_support_math_Matrix3.M12 = 7;
spine_support_math_Matrix3.M20 = 2;
spine_support_math_Matrix3.M21 = 5;
spine_support_math_Matrix3.M22 = 8;
spine_support_utils_AttachmentSet._keys = [];
spine_utils_SpineUtils.PI = 3.1415927;
spine_utils_SpineUtils.PI2 = 6.2831854;
spine_utils_SpineUtils.radiansToDegrees = 57.295778666661661;
spine_utils_SpineUtils.radDeg = spine_utils_SpineUtils.radiansToDegrees;
spine_utils_SpineUtils.degreesToRadians = 0.017453292777777778;
spine_utils_SpineUtils.degRad = spine_utils_SpineUtils.degreesToRadians;
triple_$choice_$gri_Constants.OPTION_TYPE_FIGHT = "fight";
triple_$choice_$gri_Constants.OPTION_TYPE_EQUIPMENT_UPGRADE = "upgrade";
triple_$choice_$gri_Constants.OPTION_TYPE_FREE_COIN = "freecoin";
triple_$choice_$gri_Constants.OPTION_TYPE_WALLET_UPGRADE = "upgradewallet";
triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_NONE = 0;
triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_XP = 1;
triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_MONEY = 2;
triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_ITEM = 3;
triple_$choice_$gri_GRIAreaControl.BATTLE_BONUS_TYPE_ITEM_MAGIC = 4;
triple_$choice_$gri_GRIAreaControl.buffBonusTexts = [null,"                     xp+","                   coin+","               item chance+","    rare item chance+"];
triple_$choice_$gri_GRIAreaView.DATA_EXPLORE = "data_explore";
triple_$choice_$gri_GRIAreaView.DATA_AUTO_EXPLORE = "data_explore_auto";
triple_$choice_$gri_GRIAreaView.TAG_EXPLORATION_BUTTON = new Tag();
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
